{
  "openapi": "3.0.1",
  "info": {
    "title": "RentalWorks  Utilities API v1",
    "version": "v1"
  },
  "paths": {
    "/appimage/getimages": {
      "get": {
        "tags": [
          "AppImage"
        ],
        "parameters": [
          {
            "name": "uniqueid1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uniqueid2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uniqueid3",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rectype",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uniqueid1int",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FwStandard.Models.FwAppImageModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/appimage/getimage": {
      "get": {
        "tags": [
          "AppImage"
        ],
        "parameters": [
          {
            "name": "appimageid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thumbnail",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "download",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FwStandard.Models.FwAppImageModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/appimage/getimagefor": {
      "get": {
        "tags": [
          "AppImage"
        ],
        "parameters": [
          {
            "name": "thumbnail",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "uniqueid1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uniqueid2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uniqueid3",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uniqueid1int",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "download",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FwStandard.Models.FwAppImageModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/appimage/repositionimage": {
      "post": {
        "tags": [
          "AppImage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Controllers.SharedControls.AppImage.AppImageController_RepositionAsyncRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/appimage": {
      "post": {
        "tags": [
          "AppImage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Controllers.SharedControls.AppImage.AppImageController_AddAsyncRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppImage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Controllers.SharedControls.AppImage.AppImageController_DeleteAsyncRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/appimage/email": {
      "post": {
        "tags": [
          "AppImage"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwAppImageLogic_EmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/browseactiveviewfields/browse": {
      "post": {
        "tags": [
          "BrowseActiveViewFields"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/browseactiveviewfields/exportexcelxlsx": {
      "post": {
        "tags": [
          "BrowseActiveViewFields"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/browseactiveviewfields": {
      "get": {
        "tags": [
          "BrowseActiveViewFields"
        ],
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.UtilitiesControls.BrowseActiveViewFields.BrowseActiveViewFieldsLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BrowseActiveViewFields"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.BrowseActiveViewFields.BrowseActiveViewFields"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.BrowseActiveViewFields.BrowseActiveViewFields"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/browseactiveviewfields/{id}": {
      "get": {
        "tags": [
          "BrowseActiveViewFields"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.BrowseActiveViewFields.BrowseActiveViewFields"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "BrowseActiveViewFields"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.BrowseActiveViewFields.BrowseActiveViewFields"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.BrowseActiveViewFields.BrowseActiveViewFields"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BrowseActiveViewFields"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/changeicodeutility/changeicode": {
      "post": {
        "tags": [
          "ChangeICodeUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Inventory.Inventory.ChangeICodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Inventory.Inventory.ChangeICodeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/changeicodeutility/validaterentalinventory/browse": {
      "post": {
        "tags": [
          "ChangeICodeUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/changeicodeutility/validatesalesinventory/browse": {
      "post": {
        "tags": [
          "ChangeICodeUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/changeicodeutility/validateitem/browse": {
      "post": {
        "tags": [
          "ChangeICodeUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/changeofficewarehouse/validateofficelocation/browse": {
      "post": {
        "tags": [
          "ChangeOfficeWarehouse"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/changeofficewarehouse/validatewarehouselocation/browse": {
      "post": {
        "tags": [
          "ChangeOfficeWarehouse"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/changeofficewarehouse/validatedepartment/browse": {
      "post": {
        "tags": [
          "ChangeOfficeWarehouse"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/changeorderstatus/changestatus": {
      "post": {
        "tags": [
          "ChangeOrderStatus"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Agent.Order.ChangeOrderStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Agent.Order.ChangeOrderStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/changeorderstatus/validateorder/browse": {
      "post": {
        "tags": [
          "ChangeOrderStatus"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/currencymissing/browse": {
      "post": {
        "tags": [
          "CurrencyMissing"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/currencymissing/exportexcelxlsx": {
      "post": {
        "tags": [
          "CurrencyMissing"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/currencymissingutility/applyproposedcurrencies": {
      "post": {
        "tags": [
          "CurrencyMissingUtility"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/WebApi.Modules.Utilities.CurrencyMissingUtility.ApplyProposedCurrenciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.CurrencyMissingUtility.ApplyProposedCurrenciesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/dashboard/loadwidgetbyname/{widgetapiname}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "widgetApiName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataPoints",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "warehouseId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "departmentId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateBehaviorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateField",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "stacked",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Settings.WidgetSettings.Widget.Widget"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/dashboardsettings/{id}": {
      "get": {
        "tags": [
          "DashboardSettings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.DashboardSettings.DashboardSettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DashboardSettings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.DashboardSettings.DashboardSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.DashboardSettings.DashboardSettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/dashboardsettings": {
      "post": {
        "tags": [
          "DashboardSettings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.DashboardSettings.DashboardSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.DashboardSettings.DashboardSettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/datefunctions/adddays": {
      "get": {
        "tags": [
          "DateFunctions"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Days",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/datefunctions/addmonths": {
      "get": {
        "tags": [
          "DateFunctions"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Months",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/datefunctions/numberofmonths": {
      "get": {
        "tags": [
          "DateFunctions"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/download/{filename}": {
      "get": {
        "tags": [
          "Download"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "downloadasfilename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorylocationitem/browse": {
      "post": {
        "tags": [
          "InventoryLocationItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorylocationitem/exportexcelxlsx": {
      "post": {
        "tags": [
          "InventoryLocationItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorylocationitem": {
      "get": {
        "tags": [
          "InventoryLocationItem"
        ],
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryLocationItem.InventoryLocationItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorylocationitem/{id}": {
      "get": {
        "tags": [
          "InventoryLocationItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryLocationItem.InventoryLocationItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryLocationItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryLocationItem.InventoryLocationItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryLocationItem.InventoryLocationItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorylocationitem/many": {
      "post": {
        "tags": [
          "InventoryLocationItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryLocationItem.InventoryLocationItem"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ActionResult_WebApi.Modules.Utilities.InventoryLocationItem.InventoryLocationItemLogic"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorymerge/browse": {
      "post": {
        "tags": [
          "InventoryMerge"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorymerge/exportexcelxlsx": {
      "post": {
        "tags": [
          "InventoryMerge"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorymerge/{id}": {
      "get": {
        "tags": [
          "InventoryMerge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryMerge.InventoryMerge"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryMerge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryMerge.InventoryMerge"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryMerge.InventoryMerge"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryMerge"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorymerge": {
      "post": {
        "tags": [
          "InventoryMerge"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryMerge.InventoryMerge"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryMerge.InventoryMerge"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorymerge/validateitem/browse": {
      "post": {
        "tags": [
          "InventoryMerge"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorymergeutility/mergeinventory": {
      "post": {
        "tags": [
          "InventoryMergeUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryMergeUtility.MergeInventoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Logic.TSpStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchasesession/browse": {
      "post": {
        "tags": [
          "InventoryPurchaseSession"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchasesession/exportexcelxlsx": {
      "post": {
        "tags": [
          "InventoryPurchaseSession"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchasesession/{id}": {
      "delete": {
        "tags": [
          "InventoryPurchaseSession"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/startsession": {
      "post": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.StartInventoryPurchaseSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.StartInventoryPurchaseSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/updatesession": {
      "post": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.UpdateInventoryPurchaseSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.UpdateInventoryPurchaseSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/assignbarcodes": {
      "post": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseAssignBarCodesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseAssignBarCodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/completesession": {
      "post": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseCompleteSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseCompleteSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/lookupwarehouse": {
      "get": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "summary": "Lookup Warehouses.",
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Settings.WarehouseSettings.Warehouse.WarehouseLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/lookupinventoryitem/warehouse/{warehouseid}": {
      "get": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "summary": "Lookup Inventory Items",
        "parameters": [
          {
            "name": "warehouseid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Inventory.RentalInventory.RentalInventoryLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/lookupvendor": {
      "get": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "summary": "Lookup Vendors",
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Agent.Vendor.VendorLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/lookupmanufacturer": {
      "get": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "summary": "Lookup Manufacturers.",
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Agent.Vendor.VendorLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/lookupcountry": {
      "get": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "summary": "Lookup Vendors and Manufacturers.",
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Settings.AddressSettings.Country.CountryLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/lookupcurrency": {
      "get": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "summary": "Lookup Currencies.",
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Settings.CurrencySettings.Currency.CurrencyLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/items/browse": {
      "post": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/items/exportexcelxlsx": {
      "post": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/items": {
      "get": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItemLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/items/{id}": {
      "get": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorypurchaseutility/items/many": {
      "post": {
        "tags": [
          "InventoryPurchaseUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItem"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ActionResult_WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItemLogic"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventoryretireutility/retireinventory": {
      "post": {
        "tags": [
          "InventoryRetireUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Inventory.Inventory.RetireInventoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Inventory.Inventory.RetireInventoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventoryretireutility/validateinventory/browse": {
      "post": {
        "tags": [
          "InventoryRetireUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventoryretireutility/validateitem/browse": {
      "post": {
        "tags": [
          "InventoryRetireUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventoryretireutility/validateconsignoragreement/browse": {
      "post": {
        "tags": [
          "InventoryRetireUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventorysequenceutility/donothing": {
      "post": {
        "tags": [
          "InventorySequenceUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventoryunretireutility/unretireinventory": {
      "post": {
        "tags": [
          "InventoryUnretireUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Inventory.Inventory.UnretireInventoryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Inventory.Inventory.RetireInventoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventoryunretireutility/validateinventory/browse": {
      "post": {
        "tags": [
          "InventoryUnretireUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/inventoryunretireutility/validateitem/browse": {
      "post": {
        "tags": [
          "InventoryUnretireUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/invoiceprocessbatch/createbatch": {
      "post": {
        "tags": [
          "InvoiceProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.InvoiceProcessBatch.InvoiceProcessBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.InvoiceProcessBatch.InvoiceProcessBatchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/invoiceprocessbatch/browse": {
      "post": {
        "tags": [
          "InvoiceProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/invoiceprocessbatch/exportexcelxlsx": {
      "post": {
        "tags": [
          "InvoiceProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/invoiceprocessbatch/validatebatch/browse": {
      "post": {
        "tags": [
          "InvoiceProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/startsession": {
      "post": {
        "tags": [
          "Migrate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.Migrate.StartMigrateSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.Migrate.StartMigrateSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/updateitem": {
      "post": {
        "tags": [
          "Migrate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.Migrate.UpdateMigrateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.Migrate.UpdateMigrateItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/selectall": {
      "post": {
        "tags": [
          "Migrate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.Migrate.SelectAllNoneMigrateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.Migrate.SelectAllNoneMigrateItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/selectnone": {
      "post": {
        "tags": [
          "Migrate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.Migrate.SelectAllNoneMigrateItemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.Migrate.SelectAllNoneMigrateItemResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/completesession2": {
      "post": {
        "tags": [
          "Migrate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.Migrate.CompleteMigrateSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.Migrate.CompleteMigrateSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/legend": {
      "get": {
        "tags": [
          "Migrate"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/validatedeal/browse": {
      "post": {
        "tags": [
          "Migrate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/validatedepartment/browse": {
      "post": {
        "tags": [
          "Migrate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/validatecreatenewdeal/browse": {
      "post": {
        "tags": [
          "Migrate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrate/validateratetype/browse": {
      "post": {
        "tags": [
          "Migrate"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrateitem/browse": {
      "post": {
        "tags": [
          "MigrateItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/migrateitem/exportexcelxlsx": {
      "post": {
        "tags": [
          "MigrateItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/onlineordertracking/browse": {
      "post": {
        "tags": [
          "OnlineOrderTracking"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/onlineordertracking/exportexcelxlsx": {
      "post": {
        "tags": [
          "OnlineOrderTracking"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/onlineordertracking": {
      "get": {
        "tags": [
          "OnlineOrderTracking"
        ],
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Utilities.OnlineOrderTracking.OnlineOrderTrackingLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "OnlineOrderTracking"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.OnlineOrderTracking.OnlineOrderTracking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.OnlineOrderTracking.OnlineOrderTracking"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/onlineordertracking/{id}": {
      "get": {
        "tags": [
          "OnlineOrderTracking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.OnlineOrderTracking.OnlineOrderTracking"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "OnlineOrderTracking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.OnlineOrderTracking.OnlineOrderTracking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.OnlineOrderTracking.OnlineOrderTracking"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OnlineOrderTracking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/onlineordertrackingexport/export": {
      "post": {
        "tags": [
          "OnlineOrderTrackingExport"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Exports.OnlineOrderTrackingExport.OnlineOrderTrackingExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Exports.OnlineOrderTrackingExport.OnlineOrderTrackingExportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/onlineordertrackingexport/emptyobject": {
      "get": {
        "tags": [
          "OnlineOrderTrackingExport"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/orderexport/export": {
      "post": {
        "tags": [
          "OrderExport"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Exports.OrderExport.OrderExportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Exports.OrderExport.OrderExportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/orderexport/emptyobject": {
      "get": {
        "tags": [
          "OrderExport"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/orderlocationschedule/scheduledata": {
      "post": {
        "tags": [
          "OrderLocationSchedule"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.OrderLocationSchedule.OrderLocationScheduleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.OrderLocationSchedule.OrderLocationScheduleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/orderlocationschedule/validateofficelocation/browse": {
      "post": {
        "tags": [
          "OrderLocationSchedule"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/progressmeter/{id}": {
      "get": {
        "tags": [
          "ProgressMeter"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.ProgressMeter.ProgressMeter"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/quikactivity/calendardata": {
      "post": {
        "tags": [
          "QuikActivity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.QuikActivity.QuikActivityFunc_QuikActivityCalendarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.QuikActivity.QuikActivityFunc_TQuikActivityCalendarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/quikactivity/populate": {
      "post": {
        "tags": [
          "QuikActivity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.QuikActivity.QuikActivityFunc_PopulateQuikActivityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.QuikActivity.QuikActivityFunc_PopulateQuikActivityResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/quikactivity/browse": {
      "post": {
        "tags": [
          "QuikActivity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/quikactivity/exportexcelxlsx": {
      "post": {
        "tags": [
          "QuikActivity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/quikactivity/{id}": {
      "put": {
        "tags": [
          "QuikActivity"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.QuikActivity.QuikActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.QuikActivity.QuikActivity"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/quikactivity/validatewarehouse/browse": {
      "post": {
        "tags": [
          "QuikActivity"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/quikactivitysettings/browse": {
      "post": {
        "tags": [
          "QuikActivitySettings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/quikactivitysettings/exportexcelxlsx": {
      "post": {
        "tags": [
          "QuikActivitySettings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/quikactivitysettings": {
      "get": {
        "tags": [
          "QuikActivitySettings"
        ],
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.UtilitiesControls.QuikActivitySettings.QuikActivitySettingsLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "QuikActivitySettings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.QuikActivitySettings.QuikActivitySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.QuikActivitySettings.QuikActivitySettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/quikactivitysettings/{id}": {
      "get": {
        "tags": [
          "QuikActivitySettings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.QuikActivitySettings.QuikActivitySettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "QuikActivitySettings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.QuikActivitySettings.QuikActivitySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.QuikActivitySettings.QuikActivitySettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QuikActivitySettings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdatebatch/browse": {
      "post": {
        "tags": [
          "RateUpdateBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdatebatch/exportexcelxlsx": {
      "post": {
        "tags": [
          "RateUpdateBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdatebatch": {
      "get": {
        "tags": [
          "RateUpdateBatch"
        ],
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Utilities.RateUpdateBatch.RateUpdateBatchLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdatebatch/{id}": {
      "get": {
        "tags": [
          "RateUpdateBatch"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateBatch.RateUpdateBatch"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdatebatchitem/browse": {
      "post": {
        "tags": [
          "RateUpdateBatchItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdatebatchitem/exportexcelxlsx": {
      "post": {
        "tags": [
          "RateUpdateBatchItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdatebatchitem": {
      "get": {
        "tags": [
          "RateUpdateBatchItem"
        ],
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Utilities.RateUpdateBatchItem.RateUpdateBatchItemLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdatebatchitem/{id}": {
      "get": {
        "tags": [
          "RateUpdateBatchItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateBatchItem.RateUpdateBatchItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateitem/legend": {
      "get": {
        "tags": [
          "RateUpdateItem"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateitem/browse": {
      "post": {
        "tags": [
          "RateUpdateItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateitem/exportexcelxlsx": {
      "post": {
        "tags": [
          "RateUpdateItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateitem": {
      "get": {
        "tags": [
          "RateUpdateItem"
        ],
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItemLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateitem/{id}": {
      "get": {
        "tags": [
          "RateUpdateItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RateUpdateItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateitem/many": {
      "post": {
        "tags": [
          "RateUpdateItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItem"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ActionResult_WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItemLogic"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateutility/apply": {
      "post": {
        "tags": [
          "RateUpdateUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Inventory.Inventory.ApplyPendingRateUpdateModificationsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Inventory.Inventory.ApplyPendingRateUpdateModificationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateutility/validatewarehouse/browse": {
      "post": {
        "tags": [
          "RateUpdateUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateutility/validateinventorytype/browse": {
      "post": {
        "tags": [
          "RateUpdateUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateutility/validatecategory/browse": {
      "post": {
        "tags": [
          "RateUpdateUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateutility/validatesubcategory/browse": {
      "post": {
        "tags": [
          "RateUpdateUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateutility/validateinventory/browse": {
      "post": {
        "tags": [
          "RateUpdateUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateutility/validateunit/browse": {
      "post": {
        "tags": [
          "RateUpdateUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateutility/validatemanufacturer/browse": {
      "post": {
        "tags": [
          "RateUpdateUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/rateupdateutility/validatecurrency/browse": {
      "post": {
        "tags": [
          "RateUpdateUtility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/receiptprocessbatch/createbatch": {
      "post": {
        "tags": [
          "ReceiptProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.ReceiptProcessBatch.ReceiptProcessBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.ReceiptProcessBatch.ReceiptProcessBatchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/receiptprocessbatch/browse": {
      "post": {
        "tags": [
          "ReceiptProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/receiptprocessbatch/exportexcelxlsx": {
      "post": {
        "tags": [
          "ReceiptProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/receiptprocessbatch/validatebatch/browse": {
      "post": {
        "tags": [
          "ReceiptProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/securitysettings/{controlid}": {
      "get": {
        "tags": [
          "SecuritySettings"
        ],
        "parameters": [
          {
            "name": "controlid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Modules.Administrator.SecuritySettings.SecuritySettingsLoader"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/securitysettings/{id}": {
      "put": {
        "tags": [
          "SecuritySettings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Modules.Administrator.SecuritySettings.SecuritySettingsLoader"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/unretired/browse": {
      "post": {
        "tags": [
          "Unretired"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/unretired/exportexcelxlsx": {
      "post": {
        "tags": [
          "Unretired"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/userprofile/{id}": {
      "get": {
        "tags": [
          "UserProfile"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.UserProfile.UserProfile"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserProfile"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.UserProfile.UserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.UserProfile.UserProfile"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/userprofile": {
      "post": {
        "tags": [
          "UserProfile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.UserProfile.UserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.UserProfile.UserProfile"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/utilityfunctions/newsessionid": {
      "get": {
        "tags": [
          "UtilityFunctions"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.UtilityFunctions.NewSessionIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/utilityfunctions/sendmail": {
      "post": {
        "tags": [
          "UtilityFunctions"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cc",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/vendorinvoiceprocessbatch/createbatch": {
      "post": {
        "tags": [
          "VendorInvoiceProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Utilities.VendorInvoiceProcessBatch.VendorInvoiceProcessBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Utilities.VendorInvoiceProcessBatch.VendorInvoiceProcessBatchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/vendorinvoiceprocessbatch/browse": {
      "post": {
        "tags": [
          "VendorInvoiceProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/vendorinvoiceprocessbatch/exportexcelxlsx": {
      "post": {
        "tags": [
          "VendorInvoiceProcessBatch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FwCore.Api.Swashbuckle.BadRequestResponse": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult": {
        "type": "object",
        "properties": {
          "downloadUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.BusinessLogic.FwAppImageLogic_EmailRequest": {
        "required": [
          "AppImageIds",
          "From",
          "To"
        ],
        "type": "object",
        "properties": {
          "From": {
            "type": "string"
          },
          "To": {
            "type": "string"
          },
          "CC": {
            "type": "string",
            "nullable": true
          },
          "Subject": {
            "type": "string",
            "nullable": true
          },
          "Body": {
            "type": "string",
            "nullable": true
          },
          "ShowImagesInBody": {
            "type": "boolean"
          },
          "AppImageIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "DataType": {
            "$ref": "#/components/schemas/FwStandard.SqlServer.FwDataTypes"
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Data.FwCustomValue": {
        "type": "object",
        "properties": {
          "FieldName": {
            "type": "string",
            "nullable": true
          },
          "FieldValue": {
            "type": "string",
            "nullable": true
          },
          "FieldType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Data.FwDefaultAttribute": {
        "type": "object",
        "properties": {
          "FieldName": {
            "type": "string",
            "nullable": true
          },
          "AttributeName": {
            "type": "string",
            "nullable": true
          },
          "DefaultValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.BrowseRequest": {
        "type": "object",
        "properties": {
          "miscfields": {
            "nullable": true
          },
          "module": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "nullable": true
          },
          "orderby": {
            "type": "string",
            "nullable": true
          },
          "orderbydirection": {
            "type": "string",
            "nullable": true
          },
          "top": {
            "type": "integer",
            "format": "int32"
          },
          "pageno": {
            "type": "integer",
            "format": "int32"
          },
          "pagesize": {
            "type": "integer",
            "format": "int32"
          },
          "searchfieldoperators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchfields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchfieldvalues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchfieldtypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchseparators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchcondition": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchconjunctions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchgroupings": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "uniqueids": {
            "nullable": true
          },
          "boundids": {
            "nullable": true
          },
          "filterfields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "activeview": {
            "type": "string",
            "nullable": true
          },
          "emptyobject": {
            "type": "boolean"
          },
          "forexcel": {
            "type": "boolean"
          },
          "includeallcolumns": {
            "type": "boolean"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Models.CheckBoxListItem"
            },
            "nullable": true
          },
          "totalfields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "activeviewfields": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": "{\r\n  \"miscfields\": {},\r\n  \"module\": \"\",\r\n  \"options\": {},\r\n  \"orderby\": \"\",\r\n  \"orderbydirection\": \"\",\r\n  \"top\": 0,\r\n  \"pageno\": 1,\r\n  \"pagesize\": 15,\r\n  \"searchfieldoperators\": [],\r\n  \"searchfields\": [],\r\n  \"searchfieldvalues\": [],\r\n  \"searchfieldtypes\": [],\r\n  \"searchseparators\": [],\r\n  \"searchcondition\": [],\r\n  \"searchconjunctions\": [],\r\n  \"searchgroupings\": [],\r\n  \"uniqueids\": {},\r\n  \"boundids\": {},\r\n  \"filterfields\": {},\r\n  \"activeview\": \"\",\r\n  \"emptyobject\": false,\r\n  \"forexcel\": false,\r\n  \"includeallcolumns\": false,\r\n  \"fields\": [],\r\n  \"totalfields\": [],\r\n  \"activeviewfields\": {}\r\n}"
      },
      "FwStandard.Models.CheckBoxListItem": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "selected": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwApiException": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Message": {
            "type": "string"
          },
          "StackTrace": {
            "type": "string"
          }
        }
      },
      "FwStandard.Models.FwAppImageModel": {
        "type": "object",
        "properties": {
          "AppImageId": {
            "type": "string",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Extension": {
            "type": "string",
            "nullable": true
          },
          "MimeType": {
            "type": "string",
            "nullable": true
          },
          "Width": {
            "type": "integer",
            "format": "int32"
          },
          "Height": {
            "type": "integer",
            "format": "int32"
          },
          "RecType": {
            "type": "string",
            "nullable": true
          },
          "FileDownloadName": {
            "type": "string",
            "nullable": true
          },
          "OrderBy": {
            "type": "integer",
            "format": "int32"
          },
          "Image": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryFilter": {
        "required": [
          "Field",
          "Op"
        ],
        "type": "object",
        "properties": {
          "Field": {
            "type": "string",
            "description": "The DataField name to filter on."
          },
          "Op": {
            "type": "string",
            "description": "Comparison operator: = (equals), <> (not equals)"
          },
          "Value": {
            "type": "string",
            "description": "The value of the DataField to filter on.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Agent.Vendor.VendorLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Agent.Vendor.Vendor"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Inventory.RentalInventory.RentalInventoryLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Inventory.RentalInventory.RentalInventory"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Settings.AddressSettings.Country.CountryLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Settings.AddressSettings.Country.Country"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Settings.CurrencySettings.Currency.CurrencyLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Settings.CurrencySettings.Currency.Currency"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Settings.WarehouseSettings.Warehouse.WarehouseLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Settings.WarehouseSettings.Warehouse.Warehouse"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItemLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItem"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Utilities.OnlineOrderTracking.OnlineOrderTrackingLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Utilities.OnlineOrderTracking.OnlineOrderTracking"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Utilities.RateUpdateBatch.RateUpdateBatchLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateBatch.RateUpdateBatch"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Utilities.RateUpdateBatchItem.RateUpdateBatchItemLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateBatchItem.RateUpdateBatchItem"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItemLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItem"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.UtilitiesControls.BrowseActiveViewFields.BrowseActiveViewFieldsLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.BrowseActiveViewFields.BrowseActiveViewFields"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.UtilitiesControls.QuikActivitySettings.QuikActivitySettingsLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.UtilitiesControls.QuikActivitySettings.QuikActivitySettings"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Modules.Administrator.SecuritySettings.SecuritySettingsLoader": {
        "type": "object",
        "properties": {
          "requireminlengthpassword": {
            "type": "string",
            "nullable": true
          },
          "hubspotaccesstoken": {
            "type": "string",
            "nullable": true
          },
          "hubspotrefreshtoken": {
            "type": "string",
            "nullable": true
          },
          "minlengthpassword": {
            "type": "integer",
            "format": "int32"
          },
          "requiredigitinpassword": {
            "type": "string",
            "nullable": true
          },
          "requiresymbolinpassword": {
            "type": "string",
            "nullable": true
          },
          "autologoutuser": {
            "type": "string",
            "nullable": true
          },
          "autologoutminutes": {
            "type": "integer",
            "format": "int32"
          },
          "lockuserafterfailedattempts": {
            "type": "string",
            "nullable": true
          },
          "lockuserafterfailedattemptsnumber": {
            "type": "integer",
            "format": "int32"
          },
          "epochlastsynced": {
            "type": "integer",
            "format": "int64"
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.SqlServer.FwDataTypes": {
        "enum": [
          "Text",
          "NonTrimmableText",
          "Date",
          "Time",
          "DateTime",
          "DateTimeOffset",
          "Decimal",
          "DecimalStringNoTrailingZeros",
          "DecimalString1Digit",
          "DecimalString2Digits",
          "DecimalString3Digits",
          "DecimalString4Digits",
          "DecimalString8Digits",
          "Boolean",
          "CurrencyString",
          "CurrencyStringNoDollarSign",
          "CurrencyStringNoDollarSignNoDecimalPlaces",
          "PhoneUS",
          "ZipcodeUS",
          "PercentageWholeNumber",
          "Percentage2Digits",
          "Percentage4Digits",
          "OleToHtmlColor",
          "Integer",
          "JpgDataUrl",
          "UTCDateTime"
        ],
        "type": "string"
      },
      "FwStandard.SqlServer.FwJsonDataTable": {
        "type": "object",
        "properties": {
          "ColumnIndex": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "Totals": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "Columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTableColumn"
            },
            "nullable": true
          },
          "Rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { }
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalPages": {
            "type": "integer",
            "format": "int32"
          },
          "TotalRows": {
            "type": "integer",
            "format": "int32"
          },
          "DateFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ColumnNameByIndex": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.SqlServer.FwJsonDataTableColumn": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "DataField": {
            "type": "string",
            "nullable": true
          },
          "DataType": {
            "$ref": "#/components/schemas/FwStandard.SqlServer.FwDataTypes"
          },
          "IsUniqueId": {
            "type": "boolean"
          },
          "IsVisible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.ActionResult": {
        "type": "object",
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.ActionResult_WebApi.Modules.Utilities.InventoryLocationItem.InventoryLocationItemLogic": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ActionResult"
          },
          "Value": {
            "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryLocationItem.InventoryLocationItem"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.ActionResult_WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItemLogic": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ActionResult"
          },
          "Value": {
            "$ref": "#/components/schemas/WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItem"
          }
        },
        "additionalProperties": false
      },
      "Microsoft.AspNetCore.Mvc.ActionResult_WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItemLogic": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ActionResult"
          },
          "Value": {
            "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItem"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Controllers.SharedControls.AppImage.AppImageController_AddAsyncRequest": {
        "type": "object",
        "properties": {
          "Uniqueid1": {
            "type": "string",
            "nullable": true
          },
          "Uniqueid2": {
            "type": "string",
            "nullable": true
          },
          "Uniqueid3": {
            "type": "string",
            "nullable": true
          },
          "UniqueId1Int": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Extension": {
            "type": "string",
            "nullable": true
          },
          "RecType": {
            "type": "string",
            "nullable": true
          },
          "ImageDataUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Controllers.SharedControls.AppImage.AppImageController_DeleteAsyncRequest": {
        "type": "object",
        "properties": {
          "AppImageId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Controllers.SharedControls.AppImage.AppImageController_RepositionAsyncRequest": {
        "type": "object",
        "properties": {
          "AppImageId": {
            "type": "string",
            "nullable": true
          },
          "OrderBy": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Logic.TSpStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Agent.Order.ChangeOrderStatusRequest": {
        "type": "object",
        "properties": {
          "OrderId": {
            "type": "string",
            "nullable": true
          },
          "NewStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Agent.Order.ChangeOrderStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Agent.Vendor.Vendor": {
        "type": "object",
        "properties": {
          "VendorId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "Vendor": {
            "maxLength": 100,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "VendorDisplayName": {
            "maxLength": 100,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "VendorNameType": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "VendorNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "FederalIdNumber": {
            "maxLength": 25,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "OfficeLocationId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "OfficeLocation": {
            "type": "string",
            "nullable": true
          },
          "Salutation": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "FirstName": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "MiddleInitial": {
            "maxLength": 1,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "LastName": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Address1": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Address2": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "City": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "State": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CountryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "nullable": true
          },
          "CountryCodeIsoAlpha2": {
            "type": "string",
            "nullable": true
          },
          "CountryCodePhone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ZipCode": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "VendorClassId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "VendorClass": {
            "type": "string",
            "nullable": true
          },
          "Phone": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Fax": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "PhoneTollFree": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "OtherPhone": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "WebAddress": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Email": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ActiveDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "InactiveDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "SubRent": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "SubSales": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "SubMisc": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "SubLabor": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "SubVehicle": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "Repair": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "RentalInventory": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "SalesPartsInventory": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "Manufacturer": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "Freight": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "Insurance": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "Consignment": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "VendorColor": {
            "type": "string",
            "nullable": true
          },
          "DefaultSubRentDaysPerWeek": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 5, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "DefaultSubRentDiscountPercent": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 5, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "DefaultSubSaleDiscountPercent": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 5, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "DefaultRate": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "BillingCycleId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "BillingCycle": {
            "type": "string",
            "nullable": true
          },
          "PaymentTermsId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "PaymentTerms": {
            "type": "string",
            "nullable": true
          },
          "AccountNumber": {
            "maxLength": 25,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DefaultPoClassificationId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DefaultPoClassification": {
            "type": "string",
            "nullable": true
          },
          "OrganizationTypeId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "OrganizationType": {
            "type": "string",
            "nullable": true
          },
          "MultipleCurrencies": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DefaultCurrencyId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DefaultCurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "DefaultCurrency": {
            "type": "string",
            "nullable": true
          },
          "DefaultCurrencySymbol": {
            "type": "string",
            "nullable": true
          },
          "RemitAttention1": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RemitAttention2": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RemitAddress1": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RemitAddress2": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RemitCity": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RemitState": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RemitCountryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RemitCountry": {
            "type": "string",
            "nullable": true
          },
          "RemitCountryCodeIsoAlpha2": {
            "type": "string",
            "nullable": true
          },
          "RemitCountryCodePhone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "RemitZipCode": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RemitPayeeNo": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ExternalId": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AutomaticallyAdjustContractDates": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ShippingTrackingLink": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DefaultOutgoingDeliveryType": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DefaultIncomingDeliveryType": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CustomerId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Customer": {
            "type": "string",
            "nullable": true
          },
          "InputDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "LastModifiedDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "PrimaryContactId": {
            "type": "string",
            "nullable": true
          },
          "PrimaryContact": {
            "type": "string",
            "nullable": true
          },
          "PrimaryContactPhone": {
            "type": "string",
            "nullable": true
          },
          "PrimaryContactExtension": {
            "type": "string",
            "nullable": true
          },
          "Inactive": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Exports.OnlineOrderTrackingExport.OnlineOrderTrackingExportRequest": {
        "type": "object",
        "properties": {
          "FromDate": {
            "type": "string",
            "format": "date-time"
          },
          "ToDate": {
            "type": "string",
            "format": "date-time"
          },
          "IncludeOrdersWithoutTracking": {
            "type": "boolean",
            "nullable": true
          },
          "DataExportFormatId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Exports.OnlineOrderTrackingExport.OnlineOrderTrackingExportResponse": {
        "type": "object",
        "properties": {
          "BatchId": {
            "type": "string",
            "nullable": true
          },
          "BatchNumber": {
            "type": "string",
            "nullable": true
          },
          "downloadUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Exports.OrderExport.OrderExportRequest": {
        "type": "object",
        "properties": {
          "FromDate": {
            "type": "string",
            "format": "date-time"
          },
          "ToDate": {
            "type": "string",
            "format": "date-time"
          },
          "DataExportFormatId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Exports.OrderExport.OrderExportResponse": {
        "type": "object",
        "properties": {
          "BatchId": {
            "type": "string",
            "nullable": true
          },
          "BatchNumber": {
            "type": "string",
            "nullable": true
          },
          "downloadUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Inventory.Inventory.ApplyPendingRateUpdateModificationsRequest": {
        "type": "object",
        "properties": {
          "RateUpdateBatchName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Inventory.Inventory.ApplyPendingRateUpdateModificationsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "RateUpdateBatch": {
            "$ref": "#/components/schemas/WebApi.Modules.Utilities.RateUpdateBatch.RateUpdateBatch"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Inventory.Inventory.ChangeICodeRequest": {
        "type": "object",
        "properties": {
          "ItemId": {
            "type": "string",
            "nullable": true
          },
          "InventoryId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Inventory.Inventory.ChangeICodeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Inventory.Inventory.RetireInventoryRequest": {
        "type": "object",
        "properties": {
          "InventoryId": {
            "type": "string",
            "nullable": true
          },
          "WarehouseId": {
            "type": "string",
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "nullable": true
          },
          "RetiredReasonId": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ChangeICode": {
            "type": "boolean",
            "nullable": true
          },
          "ConsignorId": {
            "type": "string",
            "nullable": true
          },
          "ConsignorAgreementId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Inventory.Inventory.RetireInventoryResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "RetiredId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Inventory.Inventory.UnretireInventoryRequest": {
        "type": "object",
        "properties": {
          "RetiredId": {
            "type": "string",
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "nullable": true
          },
          "UnretiredReasonId": {
            "type": "string",
            "nullable": true
          },
          "Notes": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Inventory.RentalInventory.RentalInventory": {
        "type": "object",
        "properties": {
          "ExcludeFromReturnOnAsset": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "IsFixedAsset": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "MultiAssignRFIDs": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "MinimumDaysPerWeek": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "SetOpeningId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "SetOpening": {
            "type": "string",
            "nullable": true
          },
          "WallTypeId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "WallType": {
            "type": "string",
            "nullable": true
          },
          "SetSurfaceId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "SetSurface": {
            "type": "string",
            "nullable": true
          },
          "WallWidthFt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "WallWidthIn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "WallHeightFt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "WallHeightIn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "WallLengthFt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "WallLengthIn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "TreatConsignedQtyAsOwned": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DailyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "WeeklyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Week2Rate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Week3Rate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Week4Rate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "MonthlyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "UnitValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ReplacementCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "SourceId": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "InventoryId": {
            "type": "string",
            "nullable": true
          },
          "InventoryTypeId": {
            "type": "string",
            "nullable": true
          },
          "InventoryType": {
            "type": "string",
            "nullable": true
          },
          "AvailableFrom": {
            "maxLength": 3,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "TrackedBy": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ConfirmTrackedBy": {
            "type": "string",
            "nullable": true
          },
          "Rank": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ManufacturerPartNumber": {
            "maxLength": 40,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ManufacturerId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Manufacturer": {
            "type": "string",
            "nullable": true
          },
          "ManufacturerUrl": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ExcludeImageFromQuoteOrderPrint": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "NoAvailabilityCheck": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AvailabilityManuallyResolveConflicts": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "SendAvailabilityAlert": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrimaryDimensionUniqueId": {
            "type": "string",
            "nullable": true
          },
          "DefaultImperialMetric": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "PrimaryDimensionDescription": {
            "type": "string",
            "nullable": true
          },
          "PrimaryDimensionShipWeightLbs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionShipWeightOz": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionWeightInCaseLbs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionWeightInCaseOz": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionWidthFt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionWidthIn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionHeightFt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionHeightIn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionLengthFt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionLengthIn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionShipWeightKg": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionShipWeightG": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionWeightInCaseKg": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionWeightInCaseG": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionWidthM": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionWidthCm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionHeightM": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionHeightCm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionLengthM": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PrimaryDimensionLengthCm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "HasSecondaryDimensions": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "SecondaryDimensionUniqueId": {
            "type": "string",
            "nullable": true
          },
          "SecondaryDimensionDescription": {
            "type": "string",
            "nullable": true
          },
          "SecondaryDimensionShipWeightLbs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionShipWeightOz": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionWeightInCaseLbs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionWeightInCaseOz": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionWidthFt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionWidthIn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionHeightFt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionHeightIn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionLengthFt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionLengthIn": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionShipWeightKg": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionShipWeightG": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionWeightInCaseKg": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionWeightInCaseG": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionWidthM": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionWidthCm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionHeightM": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionHeightCm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionLengthM": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SecondaryDimensionLengthCm": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CountryOfOriginId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CountryOfOrigin": {
            "type": "string",
            "nullable": true
          },
          "DisplayInSummaryModeWhenRateIsZero": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "QcRequired": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "QcTime": {
            "maxLength": 5,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CopyAttributesAsNote": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "TrackAssetUsage": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "TrackLampUsage": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "TrackStrikes": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "TrackCandles": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "LampCount": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "MinimumFootCandles": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "TrackSoftware": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "SoftwareVersion": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "SoftwareEffectiveDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "WarehouseSpecificPackage": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "CompletePackagePrice": {
            "type": "string",
            "nullable": true
          },
          "KitPackagePrice": {
            "type": "string",
            "nullable": true
          },
          "SeparatePackageOnQuoteOrder": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ContainerId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ContainerScannableInventoryId": {
            "type": "string",
            "nullable": true
          },
          "ContainerScannableICode": {
            "type": "string",
            "nullable": true
          },
          "ContainerScannableDescription": {
            "type": "string",
            "nullable": true
          },
          "AutomaticallyRebuildContainerAtCheckIn": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AutomaticallyRebuildContainerAtTransferIn": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ContainerStagingRule": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ExcludeContainedItemsFromAvailability": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "UseContainerNumber": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ContainerPackingListBehavior": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "InventoryTypeIsWardrobe": {
            "type": "boolean",
            "nullable": true
          },
          "InventoryTypeIsSets": {
            "type": "boolean",
            "nullable": true
          },
          "PatternId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Pattern": {
            "type": "string",
            "nullable": true
          },
          "PeriodId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Period": {
            "type": "string",
            "nullable": true
          },
          "MaterialId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Material": {
            "type": "string",
            "nullable": true
          },
          "GenderId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Gender": {
            "type": "string",
            "nullable": true
          },
          "LabelId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Label": {
            "type": "string",
            "nullable": true
          },
          "WardrobeSize": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "WardrobePieceCount": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "Dyed": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "WardrobeSourceId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "WardrobeSource": {
            "type": "string",
            "nullable": true
          },
          "WardrobeCareId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "WardrobeCare": {
            "type": "string",
            "nullable": true
          },
          "CleaningFeeAmount": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 12, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "WardrobeDetailedDescription": {
            "type": "string",
            "nullable": true
          },
          "WebDetailedDescription": {
            "type": "string",
            "nullable": true
          },
          "TechnicalNotes": {
            "type": "string",
            "nullable": true
          },
          "OverrideSystemDefaultRevenueAllocationBehavior": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AllocateRevenueForAccessories": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PackageRevenueCalculationFormula": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "IsHazardousMaterial": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DescriptionWithAkas": {
            "type": "string",
            "nullable": true
          },
          "CostCalculation": {
            "maxLength": 15,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "QuantityIn": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "QuantityStaged": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "QuantityOut": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "QuantityInContainer": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "QuantityInRepair": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "QuantityInTransit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "QuantityOnTruck": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "TotalQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "AisleLocation": {
            "type": "string",
            "nullable": true
          },
          "ShelfLocation": {
            "type": "string",
            "nullable": true
          },
          "Taxable": {
            "type": "boolean",
            "nullable": true
          },
          "DateOfLastPhysicalInventory": {
            "type": "string",
            "nullable": true
          },
          "HasImage": {
            "type": "boolean",
            "nullable": true
          },
          "ICode": {
            "maxLength": 12,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Description": {
            "maxLength": 100,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AvailFor": {
            "maxLength": 3,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "CategoryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Category": {
            "type": "string",
            "nullable": true
          },
          "SubCategoryCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SubCategoryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "SubCategory": {
            "type": "string",
            "nullable": true
          },
          "Classification": {
            "maxLength": 2,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ClassificationDescription": {
            "type": "string",
            "nullable": true
          },
          "ClassificationColor": {
            "type": "string",
            "nullable": true
          },
          "UnitId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Unit": {
            "type": "string",
            "nullable": true
          },
          "UnitType": {
            "type": "string",
            "nullable": true
          },
          "NonDiscountable": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "OverrideProfitAndLossCategory": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ProfitAndLossCategoryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ProfitAndLossCategory": {
            "type": "string",
            "nullable": true
          },
          "AutoCopyNotesToQuoteOrder": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "Note": {
            "type": "string",
            "nullable": true
          },
          "PrintNoteOnInContract": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnOutContract": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnReceiveContract": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnReturnContract": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnInvoice": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnOrder": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnPickList": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnPO": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnQuote": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnReturnList": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnPoReceiveList": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PrintNoteOnPoReturnList": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AssetAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AssetAccountNo": {
            "type": "string",
            "nullable": true
          },
          "AssetAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "IncomeAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "IncomeAccountNo": {
            "type": "string",
            "nullable": true
          },
          "IncomeAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "SubIncomeAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "SubIncomeAccountNo": {
            "type": "string",
            "nullable": true
          },
          "SubIncomeAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "ConsignmentIncomeAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ConsignmentIncomeAccountNo": {
            "type": "string",
            "nullable": true
          },
          "ConsignmentIncomeAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "LdIncomeAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "LdIncomeAccountNo": {
            "type": "string",
            "nullable": true
          },
          "LdIncomeAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "EquipmentSaleIncomeAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "EquipmentSaleIncomeAccountNo": {
            "type": "string",
            "nullable": true
          },
          "EquipmentSaleIncomeAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "ExpenseAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ExpenseAccountNo": {
            "type": "string",
            "nullable": true
          },
          "ExpenseAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "CostOfGoodsSoldExpenseAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CostOfGoodsSoldExpenseAccountNo": {
            "type": "string",
            "nullable": true
          },
          "CostOfGoodsSoldExpenseAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "CostOfGoodsRentedExpenseAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CostOfGoodsRentedExpenseAccountNo": {
            "type": "string",
            "nullable": true
          },
          "CostOfGoodsRentedExpenseAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "DepreciationExpenseAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DepreciationExpenseAccountNo": {
            "type": "string",
            "nullable": true
          },
          "DepreciationExpenseAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "AccumulatedDepreciationExpenseAccountId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AccumulatedDepreciationExpenseAccountNo": {
            "type": "string",
            "nullable": true
          },
          "AccumulatedDepreciationExpenseAccountDescription": {
            "type": "string",
            "nullable": true
          },
          "OriginalShowId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "InputDate": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "InputByUsersId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Category2": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Class2": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "StockClass": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Inactive": {
            "maxLength": 3,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "ManifestShippingContainer": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ManifestStandAloneItem": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.AddressSettings.Country.Country": {
        "type": "object",
        "properties": {
          "CountryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "Country": {
            "maxLength": 120,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "CountryISOName": {
            "maxLength": 120,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "CountryCodeISOAlpha2": {
            "maxLength": 2,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "CountryCodeISOAlpha3": {
            "maxLength": 3,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "CountryCodeISONumeric": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "CountryCodePhone": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "FlagImage": {
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "Metric": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "CurrencyId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "nullable": true
          },
          "CurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "Inactive": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.AvailableWidget.AvailableWidget": {
        "type": "object",
        "properties": {
          "WidgetId": {
            "type": "string",
            "nullable": true
          },
          "Widget": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "text": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.CurrencySettings.Currency.Currency": {
        "type": "object",
        "properties": {
          "CurrencyId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "Currency": {
            "maxLength": 100,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "CurrencyISOName": {
            "maxLength": 100,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "CurrencyCode": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "CurrencySymbol": {
            "maxLength": 1,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "DownloadExchangeRates": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "Inactive": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.WarehouseSettings.Warehouse.Warehouse": {
        "type": "object",
        "properties": {
          "WarehouseId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "Warehouse": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "WarehouseCode": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "TaxOptionId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "TaxOption": {
            "type": "string",
            "nullable": true
          },
          "TaxCountry": {
            "type": "string",
            "nullable": true
          },
          "TaxRule": {
            "type": "string",
            "nullable": true
          },
          "RentalTaxRate1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "RentalTaxRate2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "RentalExempt": {
            "type": "boolean",
            "nullable": true
          },
          "SalesTaxRate1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "SalesTaxRate2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "SalesExempt": {
            "type": "boolean",
            "nullable": true
          },
          "LaborTaxRate1": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "LaborTaxRate2": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "LaborExempt": {
            "type": "boolean",
            "nullable": true
          },
          "Attention": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Address1": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Address2": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "City": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ZipCode": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "State": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CountryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "nullable": true
          },
          "CountryCodeIsoAlpha2": {
            "type": "string",
            "nullable": true
          },
          "CountryCodePhone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Phone": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Fax": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AssignBarCodesBy": {
            "maxLength": 1,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "SalesMarkupPercent": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 6, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "PartsMarkupPercent": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 6, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "MarkupSales": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "MarkupParts": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "IncludeFreightInSalesCost": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "IncludeFreightInPartsCost": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ReceiveVendorBarCodes": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AllowNegativeInventory": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DefaultDeliveryType": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ExchangedItemsRepairByDefault": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "StagingCompleteComponents": {
            "maxLength": 6,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CheckInSortBy": {
            "maxLength": 1,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DefaultPackageTruckScheduleMethod": {
            "maxLength": 5,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "StageQuantityAccessories": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PromptForCheckOutExceptions": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PromptForCheckInExceptions": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DeleteAssetLocationOnOut": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DeleteAssetConditionOnOut": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "StagingShowCheckedInHoldingItems": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PoDeliveryType": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AvailabilityCacheDays": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "AvailabilityPreserveConflicts": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DefaultRepairDays": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "QuikLocateDefaultDeliveryType": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RepairBillableOrderAgentFrom": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ReturnListPrintInQuantity": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ReturnListPrintOutQuantity": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AvailabilityIncludePurchaseOrders": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AvailabilityPurchaseOrderLateDays": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "RegionId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Region": {
            "type": "string",
            "nullable": true
          },
          "Color": {
            "type": "string",
            "description": "Format: OleToHtmlColor",
            "nullable": true
          },
          "AvailabilityLateDays": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "UseBarCodeLabelDesigner": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "InventoryLabelDesignId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "InventoryLabelDesign": {
            "type": "string",
            "nullable": true
          },
          "ItemLabelDesignId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ItemLabelDesign": {
            "type": "string",
            "nullable": true
          },
          "DataWarehouseExcludeFromROA": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AvailabilityLateHours": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "AvailabilityStartHour": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "AvailabilityStopHour": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "IncludeTaxInAssetValue": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ProductionExchangeAvailabilityPercent": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "ProductionexchangeEnabled": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ProductionExchangeWarehouseCode": {
            "maxLength": 4,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Week4RatePercent": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 5, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "GlSuffix": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RequireScanVendorBarCodeOnReturn": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "GlPrefix": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "InternalDealId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "InternalDeal": {
            "type": "string",
            "nullable": true
          },
          "InternalVendorId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "InternalVendor": {
            "type": "string",
            "nullable": true
          },
          "CalculateOnPoAfterApproved": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "TransferDefaultReturnToWarehouse": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AvailabilityCalculateInBackground": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "QuikLocateCannotTransfer": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "QuikLocateDefaultRequiredDate": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "QuikLocateRequiredDaysBefore": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "CalculateDefaultRentalRates": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "RentalDailyRatePercentOfReplacementCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 7, Decimal places: 4",
            "format": "double",
            "nullable": true
          },
          "RentalWeeklyRateMultipleOfDailyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 7, Decimal places: 4",
            "format": "double",
            "nullable": true
          },
          "CheckInEnableScanningToAisleShelf": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "CurrencyId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "CurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "nullable": true
          },
          "RentalBarCodeRangeId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RentalBarCodeRange": {
            "type": "string",
            "nullable": true
          },
          "RentalFixedAssetBarCodeRangeId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RentalFixedAssetBarCodeRange": {
            "type": "string",
            "nullable": true
          },
          "SalesBarCodeRangeId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "SalesBarCodeRange": {
            "type": "string",
            "nullable": true
          },
          "AutoUpdateUnitValueOnReceivingHigherCostItem": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "MarkupReplacementCost": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ReplacementCostMarkupPercent": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 5, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "AvailabilityHourlyDays": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "TransferAvailabilityDays": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "SalesRestockPercent": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 9, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "AvailabilityExcludeConsigned": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AvailabilityRequireConsignedReserved": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AvailabilityEnableQcDelay": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AvailabilityQcDelayExcludeWeekend": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AvailabilityQcDelayExcludeHoliday": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "AvailabilityQcDelayIndefinite": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DefaultNoChargePrintItemsAddedToOrderAtStaging": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "QuikReceiptEnable": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "StorageContainerCheckInEnable": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "StorageContainerStagingEnable": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "StorageContainerRescanRequired": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "QuikReceiptTermsConditionsId": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "QuikReceiptTermsConditions": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DisableSubstituteNote": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DaysToExpireSuspendedSessions": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "Inactive": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "OfficeLocationIds": {
            "type": "string",
            "nullable": true
          },
          "OfficeLocations": {
            "type": "string",
            "nullable": true
          },
          "CopyRates": {
            "type": "boolean",
            "nullable": true
          },
          "CopyFromWarehouseId": {
            "type": "string",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.WidgetSettings.Widget.Widget": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "warehouseId": {
            "type": "string",
            "nullable": true
          },
          "departmentId": {
            "type": "string",
            "nullable": true
          },
          "locationCodes": {
            "type": "string",
            "nullable": true
          },
          "locations": {
            "type": "string",
            "nullable": true
          },
          "dateBehaviorId": {
            "type": "string",
            "nullable": true
          },
          "dateField": {
            "type": "string",
            "nullable": true
          },
          "fromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/WebApi.Modules.Settings.WidgetSettings.Widget.WidgetData"
          },
          "options": {
            "$ref": "#/components/schemas/WebApi.Modules.Settings.WidgetSettings.Widget.WidgetOptions"
          },
          "dataPoints": {
            "type": "integer",
            "format": "int32"
          },
          "apiName": {
            "type": "string",
            "nullable": true
          },
          "procedureName": {
            "type": "string",
            "nullable": true
          },
          "counterFieldName": {
            "type": "string",
            "nullable": true
          },
          "label1FieldName": {
            "type": "string",
            "nullable": true
          },
          "label2FieldName": {
            "type": "string",
            "nullable": true
          },
          "backgroundColorFieldName": {
            "type": "string",
            "nullable": true
          },
          "borderColorFieldName": {
            "type": "string",
            "nullable": true
          },
          "opacity": {
            "type": "number",
            "format": "double"
          },
          "stacked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.WidgetSettings.Widget.WidgetAxis": {
        "type": "object",
        "properties": {
          "ticks": {
            "$ref": "#/components/schemas/WebApi.Modules.Settings.WidgetSettings.Widget.WidgetAxisTicks"
          },
          "stacked": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.WidgetSettings.Widget.WidgetAxisTicks": {
        "type": "object",
        "properties": {
          "beginAtZero": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.WidgetSettings.Widget.WidgetData": {
        "type": "object",
        "properties": {
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "datasets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Settings.WidgetSettings.Widget.WidgetDataSet"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.WidgetSettings.Widget.WidgetDataSet": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "backgroundColor": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "borderColor": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "borderWidth": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.WidgetSettings.Widget.WidgetLegend": {
        "type": "object",
        "properties": {
          "display": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.WidgetSettings.Widget.WidgetOptions": {
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/components/schemas/WebApi.Modules.Settings.WidgetSettings.Widget.WidgetTitle"
          },
          "legend": {
            "$ref": "#/components/schemas/WebApi.Modules.Settings.WidgetSettings.Widget.WidgetLegend"
          },
          "scales": {
            "$ref": "#/components/schemas/WebApi.Modules.Settings.WidgetSettings.Widget.WidgetScales"
          },
          "responsive": {
            "type": "boolean"
          },
          "maintainAspectRatio": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.WidgetSettings.Widget.WidgetScales": {
        "type": "object",
        "properties": {
          "xAxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Settings.WidgetSettings.Widget.WidgetAxis"
            },
            "nullable": true
          },
          "yAxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Settings.WidgetSettings.Widget.WidgetAxis"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Settings.WidgetSettings.Widget.WidgetTitle": {
        "type": "object",
        "properties": {
          "fontSize": {
            "type": "integer",
            "format": "int32"
          },
          "display": {
            "type": "boolean"
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.CurrencyMissingUtility.ApplyProposedCurrenciesRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.CurrencyMissingUtility.ApplyProposedCurrenciesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.DashboardSettings.DashboardSettings": {
        "type": "object",
        "properties": {
          "UserId": {
            "type": "string",
            "nullable": true
          },
          "WidgetsPerRow": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AvailableWidgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Settings.AvailableWidget.AvailableWidget"
            },
            "nullable": true
          },
          "UserWidgets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Utilities.DashboardSettings.DashboardSettingsLogic_UserDashboardSetting"
            },
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.DashboardSettings.DashboardSettingsLogic_UserDashboardSetting": {
        "type": "object",
        "properties": {
          "userWidgetId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "selected": {
            "type": "boolean",
            "nullable": true
          },
          "apiname": {
            "type": "string",
            "nullable": true
          },
          "modulename": {
            "type": "string",
            "nullable": true
          },
          "clickpath": {
            "type": "string",
            "nullable": true
          },
          "defaulttype": {
            "type": "string",
            "nullable": true
          },
          "widgettype": {
            "type": "string",
            "nullable": true
          },
          "defaultDataPoints": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dataPoints": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "defaultAxisNumberFormatId": {
            "type": "string",
            "nullable": true
          },
          "defaultAxisNumberFormat": {
            "type": "string",
            "nullable": true
          },
          "defaultAxisNumberFormatMask": {
            "type": "string",
            "nullable": true
          },
          "axisNumberFormatId": {
            "type": "string",
            "nullable": true
          },
          "axisNumberFormat": {
            "type": "string",
            "nullable": true
          },
          "axisNumberFormatMask": {
            "type": "string",
            "nullable": true
          },
          "defaultDataNumberFormatId": {
            "type": "string",
            "nullable": true
          },
          "defaultDataNumberFormat": {
            "type": "string",
            "nullable": true
          },
          "defaultDataNumberFormatMask": {
            "type": "string",
            "nullable": true
          },
          "dataNumberFormatId": {
            "type": "string",
            "nullable": true
          },
          "dataNumberFormat": {
            "type": "string",
            "nullable": true
          },
          "dataNumberFormatMask": {
            "type": "string",
            "nullable": true
          },
          "defaultDateBehaviorId": {
            "type": "string",
            "nullable": true
          },
          "defaultDateBehavior": {
            "type": "string",
            "nullable": true
          },
          "dateBehaviorId": {
            "type": "string",
            "nullable": true
          },
          "dateBehavior": {
            "type": "string",
            "nullable": true
          },
          "dateFieldDisplayNames": {
            "type": "string",
            "nullable": true
          },
          "dateFields": {
            "type": "string",
            "nullable": true
          },
          "defaultDateField": {
            "type": "string",
            "nullable": true
          },
          "dateField": {
            "type": "string",
            "nullable": true
          },
          "defaultFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "defaultToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "officeLocationId": {
            "type": "string",
            "nullable": true
          },
          "officeLocation": {
            "type": "string",
            "nullable": true
          },
          "officeLocationCode": {
            "type": "string",
            "nullable": true
          },
          "defaultStacked": {
            "type": "boolean",
            "nullable": true
          },
          "stacked": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryLocationItem.InventoryLocationItem": {
        "type": "object",
        "properties": {
          "InventoryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "WarehouseId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "ICode": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "AvailableFor": {
            "type": "string",
            "nullable": true
          },
          "Rank": {
            "type": "string",
            "nullable": true
          },
          "CategoryId": {
            "type": "string",
            "nullable": true
          },
          "Category": {
            "type": "string",
            "nullable": true
          },
          "SubCategoryId": {
            "type": "string",
            "nullable": true
          },
          "SubCategory": {
            "type": "string",
            "nullable": true
          },
          "InventoryTypeId": {
            "type": "string",
            "nullable": true
          },
          "InventoryType": {
            "type": "string",
            "nullable": true
          },
          "WarehouseCode": {
            "type": "string",
            "nullable": true
          },
          "Warehouse": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "AisleLocation": {
            "maxLength": 4,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ShelfLocation": {
            "maxLength": 4,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryMerge.InventoryMerge": {
        "type": "object",
        "properties": {
          "InventoryMergeId": {
            "maxLength": 8,
            "type": "integer",
            "description": "Format: Integer, IsPrimaryKey: true",
            "format": "int32",
            "nullable": true
          },
          "SessionId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "FromInventoryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "FromICode": {
            "type": "string",
            "nullable": true
          },
          "FromDescription": {
            "type": "string",
            "nullable": true
          },
          "ToInventoryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ToICode": {
            "type": "string",
            "nullable": true
          },
          "ToDescription": {
            "type": "string",
            "nullable": true
          },
          "WarehouseId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Warehouse": {
            "type": "string",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryMergeUtility.MergeInventoryRequest": {
        "type": "object",
        "properties": {
          "SessionId": {
            "type": "string",
            "nullable": true
          },
          "MakeInactive": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseAssignBarCodesRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "SessionId": {
            "type": "string",
            "nullable": true
          },
          "InventoryId": {
            "type": "string",
            "nullable": true
          },
          "WarehouseId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseAssignBarCodesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseCompleteSessionRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "SessionId": {
            "type": "string",
            "nullable": true
          },
          "InventoryId": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          },
          "WarehouseId": {
            "type": "string",
            "nullable": true
          },
          "AisleLocation": {
            "type": "string",
            "nullable": true
          },
          "ShelfLocation": {
            "type": "string",
            "nullable": true
          },
          "ManufacturerVendorId": {
            "type": "string",
            "nullable": true
          },
          "ManufacturerModelNumber": {
            "type": "string",
            "nullable": true
          },
          "ManufacturerPartNumber": {
            "type": "string",
            "nullable": true
          },
          "CountryId": {
            "type": "string",
            "nullable": true
          },
          "WarrantyDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "WarrantyExpiration": {
            "type": "string",
            "nullable": true
          },
          "PurchaseVendorId": {
            "type": "string",
            "nullable": true
          },
          "OutsidePoNumber": {
            "type": "string",
            "nullable": true
          },
          "PurchaseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ReceiveDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "VendorPartNumber": {
            "type": "string",
            "nullable": true
          },
          "CurrencyId": {
            "type": "string",
            "nullable": true
          },
          "UnitCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "OriginalShowId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseCompleteSessionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "PurchaseId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ItemId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "QuantityAdded": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryPurchaseUtility.InventoryPurchaseItem": {
        "type": "object",
        "properties": {
          "InventoryPurchaseItemId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SessionId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "BarCode": {
            "maxLength": 40,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ManufactureDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "PrintQuantity": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "SerialNumber": {
            "maxLength": 40,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RfId": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "SerialNumberIsMixedCase": {
            "type": "boolean",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryPurchaseUtility.StartInventoryPurchaseSessionRequest": {
        "type": "object",
        "properties": {
          "InventoryId": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryPurchaseUtility.StartInventoryPurchaseSessionResponse": {
        "type": "object",
        "properties": {
          "SessionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryPurchaseUtility.UpdateInventoryPurchaseSessionRequest": {
        "type": "object",
        "properties": {
          "SessionId": {
            "type": "string",
            "nullable": true
          },
          "InventoryId": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InventoryPurchaseUtility.UpdateInventoryPurchaseSessionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InvoiceProcessBatch.InvoiceProcessBatch": {
        "type": "object",
        "properties": {
          "BatchId": {
            "type": "string",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "nullable": true
          },
          "BatchType": {
            "type": "string",
            "nullable": true
          },
          "DivisionCode": {
            "type": "string",
            "nullable": true
          },
          "BatchNumber": {
            "type": "string",
            "nullable": true
          },
          "BatchDate": {
            "type": "string",
            "nullable": true
          },
          "BatchTime": {
            "type": "string",
            "nullable": true
          },
          "BatchDateTime": {
            "type": "string",
            "nullable": true
          },
          "ExportDate": {
            "type": "string",
            "nullable": true
          },
          "Exported": {
            "type": "boolean",
            "nullable": true
          },
          "RecordCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InvoiceProcessBatch.InvoiceProcessBatchRequest": {
        "type": "object",
        "properties": {
          "LocationId": {
            "type": "string",
            "nullable": true
          },
          "AsOfDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.InvoiceProcessBatch.InvoiceProcessBatchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "Batch": {
            "$ref": "#/components/schemas/WebApi.Modules.Utilities.InvoiceProcessBatch.InvoiceProcessBatch"
          },
          "AutoProcessDepeletingDeposit": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.Migrate.CompleteMigrateSessionRequest": {
        "type": "object",
        "properties": {
          "SessionId": {
            "type": "string",
            "nullable": true
          },
          "MigrateToNewOrder": {
            "type": "boolean",
            "nullable": true
          },
          "NewOrderOfficeLocationId": {
            "type": "string",
            "nullable": true
          },
          "NewOrderWarehouseId": {
            "type": "string",
            "nullable": true
          },
          "NewOrderDealId": {
            "type": "string",
            "nullable": true
          },
          "NewOrderDepartmentId": {
            "type": "string",
            "nullable": true
          },
          "NewOrderOrderTypeId": {
            "type": "string",
            "nullable": true
          },
          "NewOrderDescription": {
            "type": "string",
            "nullable": true
          },
          "NewOrderRateType": {
            "type": "string",
            "nullable": true
          },
          "NewOrderFromDate": {
            "type": "string",
            "nullable": true
          },
          "NewOrderFromTime": {
            "type": "string",
            "nullable": true
          },
          "NewOrderToDate": {
            "type": "string",
            "nullable": true
          },
          "NewOrderToTime": {
            "type": "string",
            "nullable": true
          },
          "NewOrderBillingStopDate": {
            "type": "string",
            "nullable": true
          },
          "NewOrderPendingPO": {
            "type": "boolean",
            "nullable": true
          },
          "NewOrderFlatPO": {
            "type": "boolean",
            "nullable": true
          },
          "NewOrderPurchaseOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "NewOrderPurchaseOrderAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "MigrateToExistingOrder": {
            "type": "boolean",
            "nullable": true
          },
          "ExistingOrderId": {
            "type": "string",
            "nullable": true
          },
          "InventoryFulfillIncrement": {
            "type": "string",
            "nullable": true
          },
          "FulfillStrictPricingMatch": {
            "type": "boolean",
            "nullable": true
          },
          "CopyLineItemNotes": {
            "type": "boolean",
            "nullable": true
          },
          "CopyOrderNotes": {
            "type": "boolean",
            "nullable": true
          },
          "CopyRentalRates": {
            "type": "boolean",
            "nullable": true
          },
          "UpdateBillingStopDate": {
            "type": "boolean",
            "nullable": true
          },
          "BillingStopDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "OfficeLocationId": {
            "type": "string",
            "nullable": true
          },
          "WarehouseId": {
            "type": "string",
            "nullable": true
          },
          "ResponsiblePersonId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.Migrate.CompleteMigrateSessionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "ContractIds": {
            "type": "string",
            "nullable": true
          },
          "Contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Warehouse.Contract.Contract"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.Migrate.SelectAllNoneMigrateItemRequest": {
        "required": [
          "SessionId"
        ],
        "type": "object",
        "properties": {
          "SessionId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.Migrate.SelectAllNoneMigrateItemResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.Migrate.StartMigrateSessionRequest": {
        "type": "object",
        "properties": {
          "DealId": {
            "type": "string",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "nullable": true
          },
          "OrderIds": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.Migrate.StartMigrateSessionResponse": {
        "type": "object",
        "properties": {
          "SessionId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.Migrate.UpdateMigrateItemRequest": {
        "type": "object",
        "properties": {
          "SessionId": {
            "type": "string",
            "nullable": true
          },
          "OrderId": {
            "type": "string",
            "nullable": true
          },
          "OrderItemId": {
            "type": "string",
            "nullable": true
          },
          "BarCode": {
            "type": "string",
            "nullable": true
          },
          "Quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.Migrate.UpdateMigrateItemResponse": {
        "type": "object",
        "properties": {
          "NewQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.OnlineOrderTracking.OnlineOrderTracking": {
        "type": "object",
        "properties": {
          "DeliveryShipId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "OrderId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DeliveryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "OrderNumber": {
            "type": "string",
            "nullable": true
          },
          "OrderDate": {
            "type": "string",
            "nullable": true
          },
          "OrderDescription": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "nullable": true
          },
          "StatusDate": {
            "type": "string",
            "nullable": true
          },
          "DealId": {
            "type": "string",
            "nullable": true
          },
          "Deal": {
            "type": "string",
            "nullable": true
          },
          "DealNumber": {
            "type": "string",
            "nullable": true
          },
          "TrackingNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ShippingVendorId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ShippingVendor": {
            "type": "string",
            "nullable": true
          },
          "CarrierId": {
            "type": "string",
            "nullable": true
          },
          "Carrier": {
            "type": "string",
            "nullable": true
          },
          "OnlineOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.OrderLocationSchedule.OrderLocationScheduleEvent": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "backColor": {
            "type": "string",
            "nullable": true
          },
          "barColor": {
            "type": "string",
            "nullable": true
          },
          "textColor": {
            "type": "string",
            "nullable": true
          },
          "resource": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "orderType": {
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "type": "string",
            "nullable": true
          },
          "orderDescription": {
            "type": "string",
            "nullable": true
          },
          "orderLocation": {
            "type": "string",
            "nullable": true
          },
          "deal": {
            "type": "string",
            "nullable": true
          },
          "poNumber": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "orderBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.OrderLocationSchedule.OrderLocationScheduleRequest": {
        "type": "object",
        "properties": {
          "FromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "OfficeLocationId": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "nullable": true
          },
          "DealId": {
            "type": "string",
            "nullable": true
          },
          "ProjectId": {
            "type": "string",
            "nullable": true
          },
          "ProjectManagerId": {
            "type": "string",
            "nullable": true
          },
          "IncludeCompleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.OrderLocationSchedule.OrderLocationScheduleResource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "backColor": {
            "type": "string",
            "nullable": true
          },
          "orderBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.OrderLocationSchedule.OrderLocationScheduleResponse": {
        "type": "object",
        "properties": {
          "OrderLocationScheduleResources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Utilities.OrderLocationSchedule.OrderLocationScheduleResource"
            },
            "nullable": true
          },
          "OrderLocationScheduleEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Utilities.OrderLocationSchedule.OrderLocationScheduleEvent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.ProgressMeter.ProgressMeter": {
        "type": "object",
        "properties": {
          "SessionId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "Caption": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CurrentStep": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "TotalSteps": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "PercentComplete": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.QuikActivity.QuikActivity": {
        "type": "object",
        "properties": {
          "ActivityId": {
            "type": "integer",
            "description": "Format: Integer, IsPrimaryKey: true",
            "format": "int32",
            "nullable": true
          },
          "ActivityDate": {
            "type": "string",
            "nullable": true
          },
          "ActivityTime": {
            "type": "string",
            "nullable": true
          },
          "ActivityTypeId": {
            "type": "string",
            "description": "Format: Integer, Required: true",
            "nullable": true
          },
          "ActivityTypeDescription": {
            "type": "string",
            "nullable": true
          },
          "ActivityTypeColor": {
            "type": "string",
            "nullable": true
          },
          "ActivityTypeTextColor": {
            "type": "string",
            "nullable": true
          },
          "ActivityStatusId": {
            "type": "integer",
            "description": "Format: Integer, Required: true",
            "format": "int32",
            "nullable": true
          },
          "ActivityStatus": {
            "type": "string",
            "nullable": true
          },
          "ActivityStatusColor": {
            "type": "string",
            "nullable": true
          },
          "ActivityStatusTextColor": {
            "type": "string",
            "nullable": true
          },
          "OrderId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "OrderNumber": {
            "type": "string",
            "nullable": true
          },
          "OrderType": {
            "type": "string",
            "nullable": true
          },
          "OrderTypeController": {
            "type": "string",
            "nullable": true
          },
          "OrderDescription": {
            "type": "string",
            "nullable": true
          },
          "OrderLocation": {
            "type": "string",
            "nullable": true
          },
          "DealId": {
            "type": "string",
            "nullable": true
          },
          "Deal": {
            "type": "string",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "nullable": true
          },
          "Vendor": {
            "type": "string",
            "nullable": true
          },
          "InventoryId": {
            "type": "string",
            "nullable": true
          },
          "ICode": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "TotalQuantity": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "RemainingQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CompleteQuantity": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "CompletePercent": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 6, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "AssignedToUserId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AssignedToUserName": {
            "type": "string",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.QuikActivity.QuikActivityFunc_PopulateQuikActivityRequest": {
        "type": "object",
        "properties": {
          "FromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "OfficeLocationId": {
            "type": "string",
            "nullable": true
          },
          "WarehouseId": {
            "type": "string",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "nullable": true
          },
          "DealId": {
            "type": "string",
            "nullable": true
          },
          "ActivityTypeId": {
            "type": "string",
            "nullable": true
          },
          "AssignedToUserId": {
            "type": "string",
            "nullable": true
          },
          "IncludeCompleted": {
            "type": "boolean",
            "nullable": true
          },
          "Summary": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.QuikActivity.QuikActivityFunc_PopulateQuikActivityResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "SessionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.QuikActivity.QuikActivityFunc_QuikActivityCalendarEvent": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "backColor": {
            "type": "string",
            "nullable": true
          },
          "textColor": {
            "type": "string",
            "nullable": true
          },
          "activityType": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.QuikActivity.QuikActivityFunc_QuikActivityCalendarRequest": {
        "type": "object",
        "properties": {
          "FromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "OfficeLocationId": {
            "type": "string",
            "nullable": true
          },
          "WarehouseId": {
            "type": "string",
            "nullable": true
          },
          "DepartmentId": {
            "type": "string",
            "nullable": true
          },
          "DealId": {
            "type": "string",
            "nullable": true
          },
          "ActivityTypeId": {
            "type": "string",
            "nullable": true
          },
          "AssignedToUserId": {
            "type": "string",
            "nullable": true
          },
          "IncludeCompleted": {
            "type": "boolean",
            "nullable": true
          },
          "IncludeTimes": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.QuikActivity.QuikActivityFunc_TQuikActivityCalendarResponse": {
        "type": "object",
        "properties": {
          "SessionId": {
            "type": "string",
            "nullable": true
          },
          "QuikActivityCalendarEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Utilities.QuikActivity.QuikActivityFunc_QuikActivityCalendarEvent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.RateUpdateBatch.RateUpdateBatch": {
        "type": "object",
        "properties": {
          "RateUpdateBatchId": {
            "type": "integer",
            "description": "Format: Integer, IsPrimaryKey: true",
            "format": "int32",
            "nullable": true
          },
          "RateUpdateBatch": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "UsersId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "UserName": {
            "type": "string",
            "nullable": true
          },
          "Applied": {
            "type": "string",
            "description": "Format: Date",
            "format": "date-time",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.RateUpdateBatchItem.RateUpdateBatchItem": {
        "type": "object",
        "properties": {
          "RateUpdateBatchItemId": {
            "type": "integer",
            "description": "Format: Integer, IsPrimaryKey: true",
            "format": "int32",
            "nullable": true
          },
          "InventoryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ICode": {
            "type": "string",
            "nullable": true
          },
          "CurrencyId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "AvailableFor": {
            "type": "string",
            "nullable": true
          },
          "Rank": {
            "type": "boolean",
            "nullable": true
          },
          "Classification": {
            "type": "string",
            "nullable": true
          },
          "InventoryTypeId": {
            "type": "string",
            "nullable": true
          },
          "InventoryType": {
            "type": "string",
            "nullable": true
          },
          "CategoryId": {
            "type": "string",
            "nullable": true
          },
          "Category": {
            "type": "string",
            "nullable": true
          },
          "SubCategoryId": {
            "type": "string",
            "nullable": true
          },
          "SubCategory": {
            "type": "string",
            "nullable": true
          },
          "WarehouseId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "WarehouseCode": {
            "type": "string",
            "nullable": true
          },
          "Warehouse": {
            "type": "string",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "nullable": true
          },
          "Manufacturer": {
            "type": "string",
            "nullable": true
          },
          "UnitId": {
            "type": "string",
            "nullable": true
          },
          "PartNumber": {
            "type": "string",
            "nullable": true
          },
          "OldDefaultCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewDefaultCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldPrice": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewPrice": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldRetail": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewRetail": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldHourlyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewHourlyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldHourlyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewHourlyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldDailyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewDailyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldDailyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewDailyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldWeeklyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldWeek2Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldWeek3Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldWeek4Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldWeek5Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldWeeklyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeeklyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeek2Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeek3Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeek4Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeek5Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeeklyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldMonthlyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldMonthlyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldMaxDiscount": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 5, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewMonthlyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewMonthlyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewMaxDiscount": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 5, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "OldUnitValue": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewUnitValue": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldReplacementCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewReplacementCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "OldMinDaysPerWeek": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 6, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewMinDaysPerWeek": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 6, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "RateUpdateBatchId": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.RateUpdateItem.RateUpdateItem": {
        "type": "object",
        "properties": {
          "InventoryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "WarehouseId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "ICode": {
            "type": "string",
            "nullable": true
          },
          "WarehouseCode": {
            "type": "string",
            "nullable": true
          },
          "Warehouse": {
            "type": "string",
            "nullable": true
          },
          "AvailableFor": {
            "type": "string",
            "nullable": true
          },
          "Rank": {
            "type": "string",
            "nullable": true
          },
          "Classification": {
            "type": "string",
            "nullable": true
          },
          "InventoryTypeId": {
            "type": "string",
            "nullable": true
          },
          "InventoryType": {
            "type": "string",
            "nullable": true
          },
          "CategoryId": {
            "type": "string",
            "nullable": true
          },
          "Category": {
            "type": "string",
            "nullable": true
          },
          "SubCategoryId": {
            "type": "string",
            "nullable": true
          },
          "SubCategory": {
            "type": "string",
            "nullable": true
          },
          "UnitId": {
            "type": "string",
            "nullable": true
          },
          "PartNumber": {
            "type": "string",
            "nullable": true
          },
          "ManufacturerId": {
            "type": "string",
            "nullable": true
          },
          "Manufacturer": {
            "type": "string",
            "nullable": true
          },
          "Cost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "DefaultCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 12, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewDefaultCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 12, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "Price": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewPrice": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "HourlyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "DailyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "WeeklyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "MonthlyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewHourlyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewDailyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeeklyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewMonthlyRate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "Week2Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "Week3Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "Week4Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "Week5Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeek2Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeek3Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeek4Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "NewWeek5Rate": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 20, Decimal places: 8",
            "format": "double",
            "nullable": true
          },
          "MaxDiscount": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 5, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "NewMaxDiscount": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 5, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "HourlyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewHourlyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "DailyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewDailyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "WeeklyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewWeeklyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "MonthlyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewMonthlyCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "UnitValue": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 12, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewUnitValue": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 12, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "ReplacementCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 12, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewReplacementCost": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 12, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "Retail": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "NewRetail": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 11, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "MinDaysPerWeek": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 6, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "NewMinDaysPerWeek": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 6, Decimal places: 3",
            "format": "double",
            "nullable": true
          },
          "CurrencyId": {
            "type": "string",
            "nullable": true
          },
          "Currency": {
            "type": "string",
            "nullable": true
          },
          "CurrencySymbol": {
            "type": "string",
            "nullable": true
          },
          "CurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "IsForeignCurrency": {
            "type": "boolean",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.ReceiptProcessBatch.ReceiptProcessBatch": {
        "type": "object",
        "properties": {
          "BatchId": {
            "type": "string",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "nullable": true
          },
          "BatchType": {
            "type": "string",
            "nullable": true
          },
          "DivisionCode": {
            "type": "string",
            "nullable": true
          },
          "BatchNumber": {
            "type": "string",
            "nullable": true
          },
          "BatchDate": {
            "type": "string",
            "nullable": true
          },
          "BatchTime": {
            "type": "string",
            "nullable": true
          },
          "BatchDateTime": {
            "type": "string",
            "nullable": true
          },
          "ExportDate": {
            "type": "string",
            "nullable": true
          },
          "Exported": {
            "type": "boolean",
            "nullable": true
          },
          "RecordCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.ReceiptProcessBatch.ReceiptProcessBatchRequest": {
        "type": "object",
        "properties": {
          "OfficeLocationId": {
            "type": "string",
            "nullable": true
          },
          "FromDate": {
            "type": "string",
            "format": "date-time"
          },
          "ToDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.ReceiptProcessBatch.ReceiptProcessBatchResponse": {
        "type": "object",
        "properties": {
          "Batch": {
            "$ref": "#/components/schemas/WebApi.Modules.Utilities.ReceiptProcessBatch.ReceiptProcessBatch"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.UserProfile.UserProfile": {
        "type": "object",
        "properties": {
          "WebUserId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "UserName": {
            "type": "string",
            "nullable": true
          },
          "UserId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "LoginName": {
            "type": "string",
            "nullable": true
          },
          "BrowseDefaultRows": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "ApplicationTheme": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "HomeMenuGuid": {
            "maxLength": 100,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "HomeMenuPath": {
            "maxLength": 100,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "SuccessSoundId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "SuccessSound": {
            "type": "string",
            "nullable": true
          },
          "SuccessBase64Sound": {
            "type": "string",
            "nullable": true
          },
          "ErrorSoundId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ErrorSound": {
            "type": "string",
            "nullable": true
          },
          "ErrorBase64Sound": {
            "type": "string",
            "nullable": true
          },
          "NotificationSoundId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "NotificationSound": {
            "type": "string",
            "nullable": true
          },
          "NotificationBase64Sound": {
            "type": "string",
            "nullable": true
          },
          "FavoritesJson": {
            "type": "string",
            "nullable": true
          },
          "FirstDayOfWeek": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "SettingsNavigationMenuVisible": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ReportsNavigationMenuVisible": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "MainMenuPinned": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "WebAdministrator": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "QuikActivitySetting": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "EmailSignature": {
            "type": "string",
            "nullable": true
          },
          "NewPassword": {
            "type": "string",
            "nullable": true
          },
          "OldPassword": {
            "type": "string",
            "nullable": true
          },
          "Locale": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AvailabilityPreference": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AvailabilityAllWarehouses": {
            "maxLength": 1,
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "EmailApp": {
            "type": "string",
            "nullable": true
          },
          "AddRentalWorksUserSignature": {
            "type": "boolean",
            "nullable": true
          },
          "DateStamp": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: UTCDateTime, Total digits: 23, Decimal places: 3",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.VendorInvoiceProcessBatch.VendorInvoiceProcessBatch": {
        "type": "object",
        "properties": {
          "BatchId": {
            "type": "string",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "nullable": true
          },
          "BatchType": {
            "type": "string",
            "nullable": true
          },
          "DivisionCode": {
            "type": "string",
            "nullable": true
          },
          "BatchNumber": {
            "type": "string",
            "nullable": true
          },
          "BatchDate": {
            "type": "string",
            "nullable": true
          },
          "BatchTime": {
            "type": "string",
            "nullable": true
          },
          "BatchDateTime": {
            "type": "string",
            "nullable": true
          },
          "ExportDate": {
            "type": "string",
            "nullable": true
          },
          "Exported": {
            "type": "boolean",
            "nullable": true
          },
          "RecordCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.VendorInvoiceProcessBatch.VendorInvoiceProcessBatchRequest": {
        "type": "object",
        "properties": {
          "LocationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Utilities.VendorInvoiceProcessBatch.VendorInvoiceProcessBatchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "success": {
            "type": "boolean"
          },
          "msg": {
            "type": "string",
            "nullable": true
          },
          "Batch": {
            "$ref": "#/components/schemas/WebApi.Modules.Utilities.VendorInvoiceProcessBatch.VendorInvoiceProcessBatch"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.UtilitiesControls.BrowseActiveViewFields.BrowseActiveViewFields": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Format: Integer, IsPrimaryKey: true",
            "format": "int32",
            "nullable": true
          },
          "WebUserId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "OfficeLocationId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "ModuleName": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "ActiveViewFields": {
            "maxLength": 1000,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "ExportFields": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.UtilitiesControls.QuikActivitySettings.QuikActivitySettings": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Format: Integer, IsPrimaryKey: true",
            "format": "int32",
            "nullable": true
          },
          "WebUsersId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "Description": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "Settings": {
            "maxLength": 8000,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.UtilitiesControls.UtilityFunctions.NewSessionIdResponse": {
        "type": "object",
        "properties": {
          "SessionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Warehouse.Contract.Contract": {
        "type": "object",
        "properties": {
          "ContractId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "ContractNumber": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ContractType": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ContractDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "ContractTime": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "LocationId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "LocationCode": {
            "type": "string",
            "nullable": true
          },
          "Location": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "WarehouseId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "WarehouseCode": {
            "type": "string",
            "nullable": true
          },
          "Warehouse": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "nullable": true
          },
          "Customer": {
            "type": "string",
            "nullable": true
          },
          "DealId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Deal": {
            "type": "string",
            "nullable": true
          },
          "OrderId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "OrderNumber": {
            "type": "string",
            "nullable": true
          },
          "DepartmentId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Department": {
            "type": "string",
            "nullable": true
          },
          "PurchaseOrderId": {
            "type": "string",
            "nullable": true
          },
          "PurchaseOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "RequisitionNumber": {
            "type": "string",
            "nullable": true
          },
          "VendorId": {
            "type": "string",
            "nullable": true
          },
          "Vendor": {
            "type": "string",
            "nullable": true
          },
          "IsMigrated": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "Unassigned": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "NeedReconcile": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "PendingExchange": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "ExchangeContractId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Rental": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "Sales": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "Exchange": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "InputByUserId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "InputByUser": {
            "type": "string",
            "nullable": true
          },
          "DealInactive": {
            "type": "boolean",
            "nullable": true
          },
          "Truck": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "BillingDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "BillingDateChangeReason": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "LastBillingDateChangeReason": {
            "type": "string",
            "nullable": true
          },
          "BillingDateAdjusted": {
            "type": "boolean",
            "nullable": true
          },
          "HasVoId": {
            "type": "boolean",
            "nullable": true
          },
          "HasTransfer": {
            "type": "boolean",
            "nullable": true
          },
          "SessionId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "OrderDescription": {
            "type": "string",
            "nullable": true
          },
          "PoOrderDescription": {
            "type": "string",
            "nullable": true
          },
          "DeliveryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "DeliveryDeliveryType": {
            "type": "string",
            "nullable": true
          },
          "DeliveryRequiredDate": {
            "type": "string",
            "nullable": true
          },
          "DeliveryRequiredTime": {
            "type": "string",
            "nullable": true
          },
          "DeliveryTargetShipDate": {
            "type": "string",
            "nullable": true
          },
          "DeliveryTargetShipTime": {
            "type": "string",
            "nullable": true
          },
          "DeliveryDirection": {
            "type": "string",
            "nullable": true
          },
          "DeliveryAddressType": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromLocation": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromContact": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromContactPhone": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromAlternateContact": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromAlternateContactPhone": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromAttention": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromAddress1": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromAddress2": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromCity": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromState": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromZipCode": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromCountry": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromCountryCodeIsoAlpha2": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromCountryCodePhone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DeliveryFromCountryId": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFromCrossStreets": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToLocation": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToContact": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToContactPhone": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToAlternateContact": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToAlternateContactPhone": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToAttention": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToAddress1": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToAddress2": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToCity": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToState": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToZipCode": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToCountryId": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToCountry": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToCountryCodeIsoAlpha2": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToCountryCodePhone": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DeliveryToContactFax": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToCrossStreets": {
            "type": "string",
            "nullable": true
          },
          "DeliveryDeliveryNotes": {
            "type": "string",
            "nullable": true
          },
          "DeliveryCarrierId": {
            "type": "string",
            "nullable": true
          },
          "DeliveryCarrier": {
            "type": "string",
            "nullable": true
          },
          "DeliveryCarrierAccount": {
            "type": "string",
            "nullable": true
          },
          "DeliveryShipViaId": {
            "type": "string",
            "nullable": true
          },
          "DeliveryShipVia": {
            "type": "string",
            "nullable": true
          },
          "DeliveryInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "DeliveryVendorInvoiceId": {
            "type": "string",
            "nullable": true
          },
          "DeliveryEstimatedFreight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "DeliveryFreightInvoiceAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "DeliveryChargeType": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFreightTrackingNumber": {
            "type": "string",
            "nullable": true
          },
          "DeliveryFreightTrackingUrl": {
            "type": "string",
            "nullable": true
          },
          "DeliveryDropShip": {
            "type": "boolean",
            "nullable": true
          },
          "DeliveryPackageCode": {
            "type": "string",
            "nullable": true
          },
          "DeliveryBillPoFreightOnOrder": {
            "type": "boolean",
            "nullable": true
          },
          "DeliveryOnlineOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "DeliveryOnlineOrderStatus": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToVenue": {
            "type": "string",
            "nullable": true
          },
          "DeliveryToVenueId": {
            "type": "string",
            "nullable": true
          },
          "DeliveryDateStamp": {
            "type": "string",
            "nullable": true
          },
          "Note": {
            "maxLength": 8000,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "PrintNoteOnOrder": {
            "type": "boolean",
            "description": "Format: Boolean",
            "nullable": true
          },
          "TermsConditionsId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "QuikReceiptTermsConditionsId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "QuikReceiptTermsConditions": {
            "type": "string",
            "nullable": true
          },
          "TermsConditions": {
            "type": "string",
            "nullable": true
          },
          "ContainerId": {
            "type": "string",
            "nullable": true
          },
          "ContainerItemId": {
            "type": "string",
            "nullable": true
          },
          "ContainerDescription": {
            "type": "string",
            "nullable": true
          },
          "ContainerScannableBarCode": {
            "type": "string",
            "nullable": true
          },
          "ContainerScannableItemId": {
            "type": "string",
            "nullable": true
          },
          "ResponsiblePersonId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ResponsiblePerson": {
            "type": "string",
            "nullable": true
          },
          "ResponsiblePersonEmail": {
            "type": "string",
            "nullable": true
          },
          "ResponsiblePersonMobilePhone": {
            "type": "string",
            "nullable": true
          },
          "ResponsiblePersonOfficePhone": {
            "type": "string",
            "nullable": true
          },
          "ResponsiblePersonOfficeExtension": {
            "type": "string",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. (Don't add the prefix Bearer anymore).",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}