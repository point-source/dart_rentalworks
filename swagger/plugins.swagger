{
  "openapi": "3.0.1",
  "info": {
    "title": "RentalWorksPlugins API v1",
    "version": "v1"
  },
  "paths": {
    "/azureadplugin/loadadcontactgroups": {
      "post": {
        "tags": [
          "AzureADPlugin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.GetAzureADGroupsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.GetAzureADGroupsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/azureadplugin/importgroupcontacts": {
      "post": {
        "tags": [
          "AzureADPlugin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.Contacts_ImportGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.Contacts_ImportGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/azureadplugin/loadadusergroups": {
      "post": {
        "tags": [
          "AzureADPlugin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.GetAzureADGroupsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.GetAzureADGroupsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/azureadplugin/importgroupusers": {
      "post": {
        "tags": [
          "AzureADPlugin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.Users_ImportGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.Users_ImportGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/boxedupplugin/sign_up": {
      "post": {
        "tags": [
          "BoxedUpPlugin"
        ],
        "summary": "Call BoxedUp to signup for an account and provide a RentalWorks access token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.RwBoxedUpRequest_WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.StatusResponse_WebApi.Modules.Plugins.BoxedUp.RwBoxedUpTokenResponse_WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/boxedupplugin/update_access_token": {
      "post": {
        "tags": [
          "BoxedUpPlugin"
        ],
        "summary": "Call BoxedUp to update their RentalWorks access token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.RwBoxedUpRequest_WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.StatusResponse_WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/boxedupplugin/qa/user/3p/sign_up": {
      "post": {
        "tags": [
          "BoxedUpPlugin"
        ],
        "summary": "Mock service for testing BoxedUp's /user/3p/sign_up endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/boxedupplugin/qa/user/3p/update_access_token": {
      "post": {
        "tags": [
          "BoxedUpPlugin"
        ],
        "summary": "Mock service for testing BoxedUp's /user/3p/update_access_token endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/log": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Gets credit card transaction log records.",
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.CreditCardLogLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/log/browse": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Browse the credit card transaction log.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/log/exportexcelxlsx": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Return credit card transaction log as an excel spreadsheet.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/log/emptyobject": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get an empty credit card transaction log object.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/log/order/{orderid}/hasrecords": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Returns a boolean if an order has credit card transaction log records.",
        "parameters": [
          {
            "name": "OrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/preauthorization": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get credit card pre-authorizations.",
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.CreditCardPreAuthorizationLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Create a credit card pre-authorization record and do a credit card authorize transaction (unless there's an approval step).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPreAuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPreAuthorizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/preauthorization/browse": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Browse credit card pre-authorization records.",
        "parameters": [
          {
            "name": "OrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/preauthorization/exportexcelxlsx": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Export credit card pre-authorization records to excel.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/preauthorization/emptyobject": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get an empty credit card pre-authorization record.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/preauthorization/order/{orderid}/totalpreauthorizationamount": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get total of all credit card pre-authorization records for an order where status is APPROVED.",
        "parameters": [
          {
            "name": "OrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/preauthorization/order/{orderid}/haspreauthorizationrecords": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Returns a boolean if an order has any pre-authorization records (no status filter).",
        "parameters": [
          {
            "name": "OrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/preauthorization/order/{orderid}/capturepreauthorizations": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Capture pre-authorizations for an order and create depleting deposits.",
        "parameters": [
          {
            "name": "orderid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardCapturePreAuthorizationForOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardCapturePreAuthorizationForOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/preauthorization/{preauthorizationid}/capture": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Capture a pre-authorization and create a depleting deposit.",
        "parameters": [
          {
            "name": "preauthorizationid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardCapturePreAuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardCapturePreAuthorizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/preauthorization/{preauthorizationid}/updatestatus": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Approve a credit card pre-authorization.",
        "parameters": [
          {
            "name": "preauthorizationid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardUpdatePreAuthorizationStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardUpdatePreAuthorizationStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/preauthorization/{preauthorizationid}/void": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Void a credit card pre-authorization.",
        "parameters": [
          {
            "name": "preauthorizationid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardVoidPreAuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardVoidPreAuthorizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/profile/customer/{customerid}/account": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get customer credit card accounts.",
        "parameters": [
          {
            "name": "customerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Create/update a customer credit card account.",
        "parameters": [
          {
            "name": "customerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginCreateOrUpdateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginCreateOrUpdateAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/profile/customer/{customerid}/authorizedaccount": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get customer credit card accounts that have card on file permission from the customer.",
        "parameters": [
          {
            "name": "customerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/profile/customer/{customerid}/defaultaccount": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get customer default credit card account. Returns null if not found.",
        "parameters": [
          {
            "name": "customerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/profile/customer/{customerid}/account/{accountid}": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get customer credit card account.",
        "parameters": [
          {
            "name": "customerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Delete a customer credit card.",
        "parameters": [
          {
            "name": "customerid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginDeleteAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/profile/deal/{dealid}/account": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get deal credit card accounts.",
        "parameters": [
          {
            "name": "dealid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Create/update a deal credit card account.",
        "parameters": [
          {
            "name": "dealid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginCreateOrUpdateAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginCreateOrUpdateAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/profile/deal/{dealid}/authorizedaccount": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get deal credit card accounts that have card on file permission from the customer.",
        "parameters": [
          {
            "name": "dealid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/profile/deal/{dealid}/defaultaccount": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get deal default credit card account.",
        "parameters": [
          {
            "name": "dealid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/profile/deal/{dealid}/account/{accountid}": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get deal credit card account.",
        "parameters": [
          {
            "name": "dealid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.Account"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Delete a deal credit card account.",
        "parameters": [
          {
            "name": "dealid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginDeleteAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/deposit": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get credit card deposit records.",
        "parameters": [
          {
            "name": "pageno",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FwStandard.Models.FwQueryFilter"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.OrderDepositLogic"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Do a credit card authorize and capture transaction and create a depleting deposit receipt.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardOrderDepositRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardOrderDepositResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/deposit/browse": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Browse credit card deposit records.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTable"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/deposit/exportexcelxlsx": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Export credit card deposit records to excel.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FwStandard.Models.BrowseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/deposit/emptyobject": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get an empty credit card deposit record.",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/deposit/{receiptid}/refund": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Do a credit card refund against a depleting deposit.",
        "parameters": [
          {
            "name": "receiptid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardRefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/deposit/order/{orderid}/hasdepositrecords": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Returns a boolean used to toggle the View Deposits button on an Order.  The value is true when there is data to see.",
        "parameters": [
          {
            "name": "OrderId",
            "in": "path",
            "description": "Unique Identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/processcreditcardinfo/{orderid}": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Load order info for processing credit card payments.",
        "parameters": [
          {
            "name": "OrderId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.ProcessCreditCardInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/void/receipt/{receiptid}": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Voids a credit card payment receipt if the transaction has not been settled and the receipt has not been exported",
        "parameters": [
          {
            "name": "receiptid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginVoidReceiptRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginVoidResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/settings": {
      "get": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Get settings for interacting with the credit card api",
        "parameters": [
          {
            "name": "receiptid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginGetSettingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/cardpointe/gatewayapi/makepayment": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Pages.ActiveLink.CardPointePaymentPaymentActiveLink.AuthorizeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Pages.ActiveLink.CardPointePaymentPaymentActiveLink.MakePaymentAsyncResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/creditcardplugin/cardpointe/gatewayapi/sendauthorizeemail": {
      "post": {
        "tags": [
          "CreditCardPlugin"
        ],
        "summary": "Sends an email to a customer requesting them to input their credit card information, which is then used to create a credit card pre-authorization or a deposit, based on the Capture flag..",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebApi.Modules.Pages.ActiveLink.CardPointePaymentPaymentActiveLink.SendAuthorizEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.Pages.ActiveLink.CardPointePaymentPaymentActiveLink.SendPreAuthorizeEmailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/hubspotplugin/hashubspotrefreshtoken": {
      "post": {
        "tags": [
          "HubspotPlugin"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.AccountServices.HubSpot.GetHubSpotRefreshTokenBool"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    },
    "/hubspotplugin/deletehubspottokens": {
      "post": {
        "tags": [
          "HubspotPlugin"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebApi.Modules.AccountServices.HubSpot.DeleteHubSpotTokens"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwCore.Api.Swashbuckle.BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (jwt token is invalid)"
          },
          "403": {
            "description": "Forbidden (jwt token is valid, but you don't have permission)"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FwStandard.Models.FwApiException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FwCore.Api.Swashbuckle.BadRequestResponse": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "FwCore.Controllers.FwDataController_DoExportExcelXlsxExportFileAsyncResult": {
        "type": "object",
        "properties": {
          "downloadUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "DataType": {
            "$ref": "#/components/schemas/FwStandard.SqlServer.FwDataTypes"
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Data.FwCustomValue": {
        "type": "object",
        "properties": {
          "FieldName": {
            "type": "string",
            "nullable": true
          },
          "FieldValue": {
            "type": "string",
            "nullable": true
          },
          "FieldType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Data.FwDefaultAttribute": {
        "type": "object",
        "properties": {
          "FieldName": {
            "type": "string",
            "nullable": true
          },
          "AttributeName": {
            "type": "string",
            "nullable": true
          },
          "DefaultValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Data.FwTranslatedValue": {
        "type": "object",
        "properties": {
          "FieldName": {
            "type": "string",
            "nullable": true
          },
          "TranslatedValue": {
            "type": "string",
            "nullable": true
          },
          "UntranslatedValue": {
            "type": "string",
            "nullable": true
          },
          "IsTranslated": {
            "type": "boolean"
          },
          "UserIsTranslating": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.BrowseRequest": {
        "type": "object",
        "properties": {
          "miscfields": {
            "nullable": true
          },
          "module": {
            "type": "string",
            "nullable": true
          },
          "options": {
            "nullable": true
          },
          "orderby": {
            "type": "string",
            "nullable": true
          },
          "orderbydirection": {
            "type": "string",
            "nullable": true
          },
          "top": {
            "type": "integer",
            "format": "int32"
          },
          "pageno": {
            "type": "integer",
            "format": "int32"
          },
          "pagesize": {
            "type": "integer",
            "format": "int32"
          },
          "searchfieldoperators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchfields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchfieldvalues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchfieldtypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchseparators": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchcondition": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchconjunctions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "searchgroupings": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "uniqueids": {
            "nullable": true
          },
          "boundids": {
            "nullable": true
          },
          "filterfields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "activeview": {
            "type": "string",
            "nullable": true
          },
          "emptyobject": {
            "type": "boolean"
          },
          "forexcel": {
            "type": "boolean"
          },
          "includeallcolumns": {
            "type": "boolean"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Models.CheckBoxListItem"
            },
            "nullable": true
          },
          "totalfields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "activeviewfields": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "example": "{\r\n  \"miscfields\": {},\r\n  \"module\": \"\",\r\n  \"options\": {},\r\n  \"orderby\": \"\",\r\n  \"orderbydirection\": \"\",\r\n  \"top\": 0,\r\n  \"pageno\": 1,\r\n  \"pagesize\": 15,\r\n  \"searchfieldoperators\": [],\r\n  \"searchfields\": [],\r\n  \"searchfieldvalues\": [],\r\n  \"searchfieldtypes\": [],\r\n  \"searchseparators\": [],\r\n  \"searchcondition\": [],\r\n  \"searchconjunctions\": [],\r\n  \"searchgroupings\": [],\r\n  \"uniqueids\": {},\r\n  \"boundids\": {},\r\n  \"filterfields\": {},\r\n  \"activeview\": \"\",\r\n  \"emptyobject\": false,\r\n  \"forexcel\": false,\r\n  \"includeallcolumns\": false,\r\n  \"fields\": [],\r\n  \"totalfields\": [],\r\n  \"activeviewfields\": {}\r\n}"
      },
      "FwStandard.Models.CheckBoxListItem": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "selected": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwApiException": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer"
          },
          "Message": {
            "type": "string"
          },
          "StackTrace": {
            "type": "string"
          }
        }
      },
      "FwStandard.Models.FwQueryFilter": {
        "required": [
          "Field",
          "Op"
        ],
        "type": "object",
        "properties": {
          "Field": {
            "type": "string",
            "description": "The DataField name to filter on."
          },
          "Op": {
            "type": "string",
            "description": "Comparison operator: = (equals), <> (not equals)"
          },
          "Value": {
            "type": "string",
            "description": "The value of the DataField to filter on.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.Account": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.Account"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.CreditCardLogLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardLog"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.CreditCardPreAuthorizationLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPreAuthorization"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.Models.FwQueryResponse_WebApi.Modules.Plugins.CreditCard.OrderDepositLogic": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.OrderDeposit"
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalItems": {
            "type": "integer",
            "format": "int32"
          },
          "Sort": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.SqlServer.FwDataTypes": {
        "enum": [
          "Text",
          "NonTrimmableText",
          "Date",
          "Time",
          "DateTime",
          "DateTimeOffset",
          "CreditCardExpirationDate",
          "Decimal",
          "DecimalStringNoTrailingZeros",
          "DecimalString1Digit",
          "DecimalString2Digits",
          "DecimalString3Digits",
          "DecimalString4Digits",
          "DecimalString8Digits",
          "Boolean",
          "CurrencyString",
          "CurrencyStringNoDollarSign",
          "CurrencyStringNoDollarSignNoDecimalPlaces",
          "PhoneUS",
          "ZipcodeUS",
          "PercentageWholeNumber",
          "Percentage2Digits",
          "Percentage4Digits",
          "OleToHtmlColor",
          "Integer",
          "JpgDataUrl",
          "UTCDateTime"
        ],
        "type": "string"
      },
      "FwStandard.SqlServer.FwJsonDataTable": {
        "type": "object",
        "properties": {
          "ColumnIndex": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "Totals": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "nullable": true
          },
          "Columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.SqlServer.FwJsonDataTableColumn"
            },
            "nullable": true
          },
          "Rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": { }
            },
            "nullable": true
          },
          "PageNo": {
            "type": "integer",
            "format": "int32"
          },
          "PageSize": {
            "type": "integer",
            "format": "int32"
          },
          "TotalPages": {
            "type": "integer",
            "format": "int32"
          },
          "TotalRows": {
            "type": "integer",
            "format": "int32"
          },
          "DateFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ColumnNameByIndex": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Translation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwTranslatedValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FwStandard.SqlServer.FwJsonDataTableColumn": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "DataField": {
            "type": "string",
            "nullable": true
          },
          "DataType": {
            "$ref": "#/components/schemas/FwStandard.SqlServer.FwDataTypes"
          },
          "IsUniqueId": {
            "type": "boolean"
          },
          "IsVisible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.AccountServices.HubSpot.DeleteHubSpotTokens": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.AccountServices.HubSpot.GetHubSpotRefreshTokenBool": {
        "type": "object",
        "properties": {
          "hasRefreshToken": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Billing.Receipt.Receipt": {
        "type": "object",
        "properties": {
          "ReceiptId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, IsPrimaryKey: true",
            "nullable": true
          },
          "ReceiptDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "LocationId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "LocationCode": {
            "type": "string",
            "nullable": true
          },
          "Location": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Customer": {
            "type": "string",
            "nullable": true
          },
          "DealId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Deal": {
            "type": "string",
            "nullable": true
          },
          "PaymentBy": {
            "maxLength": 10,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CustomerDealId": {
            "type": "string",
            "nullable": true
          },
          "CustomerDeal": {
            "type": "string",
            "nullable": true
          },
          "PaymentTypeId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "PaymentType": {
            "type": "string",
            "nullable": true
          },
          "PaymentTypeType": {
            "type": "string",
            "nullable": true
          },
          "PaymentTypeExportPaymentMethod": {
            "type": "string",
            "nullable": true
          },
          "CheckNumber": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "PaymentAmount": {
            "type": "number",
            "description": "Format: Decimal, Total digits: 9, Decimal places: 2",
            "format": "double",
            "nullable": true
          },
          "AppliedById": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "AppliedBy": {
            "type": "string",
            "nullable": true
          },
          "ModifiedById": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ModifiedBy": {
            "type": "string",
            "nullable": true
          },
          "PaymentMemo": {
            "maxLength": 255,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RecType": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ChargeBatchId": {
            "type": "string",
            "nullable": true
          },
          "ChargeBatchNumber": {
            "type": "string",
            "nullable": true
          },
          "CurrencyId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text, Required: true",
            "nullable": true
          },
          "CurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "CurrencySymbol": {
            "type": "string",
            "nullable": true
          },
          "OfficeLocationDefaultCurrencyId": {
            "type": "string",
            "nullable": true
          },
          "OverPaymentId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "InvoiceDataList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Billing.Receipt.ReceiptInvoice"
            },
            "nullable": true
          },
          "CreditDataList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Billing.Receipt.ReceiptCredit"
            },
            "nullable": true
          },
          "CreateOverpayment": {
            "type": "boolean",
            "nullable": true
          },
          "CreateDepletingDeposit": {
            "type": "boolean",
            "nullable": true
          },
          "DealDepositId": {
            "type": "string",
            "nullable": true
          },
          "DealDepositCheckNumber": {
            "type": "string",
            "nullable": true
          },
          "CustomerDepositId": {
            "type": "string",
            "nullable": true
          },
          "CustomerDepositCheckNumber": {
            "type": "string",
            "nullable": true
          },
          "OrderId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "OrderDescription": {
            "type": "string",
            "nullable": true
          },
          "TransactionId": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "RefundingTransactionId": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CreditCardNumber": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CreditCardExpirationDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "CreditCardName": {
            "maxLength": 30,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CreditCardAccountId": {
            "type": "string",
            "nullable": true
          },
          "CreditCardPaymentMode": {
            "type": "string",
            "description": "'NEWCARD', 'SAVEDCARD', 'PINPAD' Only used for submitting new credit card receipts.\r\nNEWCARD - you are submitting a tokenized new credit card that was input manually.\r\nSAVEDCARD - you are paying with a saved credit card profile.\r\nPINPAD - Customer is inputing their card with a PINPad device",
            "nullable": true
          },
          "CreditCardPinPadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "NewCreditCardAccountToken": {
            "type": "string",
            "description": "The tokenized credit card number. Only used for submitting new credit card receipts.",
            "nullable": true
          },
          "NewCreditCardExpirationDate": {
            "type": "string",
            "description": "Credit card expiration date MM/YY. Only used for submitting new credit card receipts.",
            "nullable": true
          },
          "NewCreditCardCardholderName": {
            "type": "string",
            "description": "Card holder name. Only used for submitting new credit card receipts.",
            "nullable": true
          },
          "NewCreditCardSaveCreditCard": {
            "type": "boolean",
            "description": "A flag indicating whether to create a saved credit card profile. Only used for submitting new credit card receipts when CreditCardPaymentMode is 'NEWCARD'.",
            "nullable": true
          },
          "CreditCardDefaultAccount": {
            "type": "boolean",
            "nullable": true
          },
          "NewCreditCardAuthorizationOnFile": {
            "type": "boolean",
            "description": "A flag indicating that customer has given consent to use a saved credit card. Only used for submitting new credit card receipts when NewCreditCardSaveCreditCard is true.",
            "nullable": true
          },
          "NewCreditCardAddress": {
            "type": "string",
            "description": "Address for AVS check. Only used for submitting new credit card receipts.",
            "nullable": true
          },
          "NewCreditCardAddress2": {
            "type": "string",
            "description": "Address 2 for AVS check. Only used fwhenor submitting new credit card receipts.",
            "nullable": true
          },
          "NewCreditCardCity": {
            "type": "string",
            "description": "City for AVS check. (only used when submitting new credit card receipts)",
            "nullable": true
          },
          "NewCreditCardRegion": {
            "type": "string",
            "description": "Region/State for AVS check. Only used when submitting new credit card receipts.",
            "nullable": true
          },
          "NewCreditCardPostalCode": {
            "type": "string",
            "description": "Postal/Zip Code for AVS check. Only used when submitting new credit card receipts.",
            "nullable": true
          },
          "NewCreditCardCountryId": {
            "type": "string",
            "description": "A RentalWorks CountryId for AVS check. Only used when submitting new credit card receipts.",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "format": "date-time"
          },
          "RefundingReceiptId": {
            "type": "string",
            "nullable": true
          },
          "IsCreditCardReceiptVoided": {
            "type": "boolean"
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          },
          "_Translation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwTranslatedValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Billing.Receipt.ReceiptCredit": {
        "type": "object",
        "properties": {
          "CreditReceiptId": {
            "type": "string",
            "nullable": true
          },
          "CreditId": {
            "type": "string",
            "nullable": true
          },
          "CheckNumber": {
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "format": "double"
          },
          "RefundCreditCardTransactionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Billing.Receipt.ReceiptInvoice": {
        "type": "object",
        "properties": {
          "InvoiceReceiptId": {
            "type": "string",
            "nullable": true
          },
          "InvoiceId": {
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Pages.ActiveLink.CardPointePaymentPaymentActiveLink.AuthorizeRequest": {
        "required": [
          "Account",
          "ActiveLinkToken",
          "Capture",
          "CountryId",
          "ExpirationDate"
        ],
        "type": "object",
        "properties": {
          "ActiveLinkToken": {
            "type": "string",
            "description": "Token for the ActiveLink"
          },
          "Account": {
            "type": "string",
            "description": "Token for the CreditCard data"
          },
          "ExpirationDate": {
            "maxLength": 8,
            "type": "string",
            "description": "Card Expiration in either MMYY or YYYYMMDD format. Not required for eCheck (ACH) requests."
          },
          "Capture": {
            "type": "boolean"
          },
          "CountryId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Pages.ActiveLink.CardPointePaymentPaymentActiveLink.CardPointeActiveLinkToken": {
        "type": "object",
        "properties": {
          "OrderId": {
            "type": "string",
            "nullable": true
          },
          "AmountToPay": {
            "type": "number",
            "format": "double"
          },
          "Capture": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Pages.ActiveLink.CardPointePaymentPaymentActiveLink.MakePaymentAsyncResponse": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "string",
            "nullable": true
          },
          "StatusMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Pages.ActiveLink.CardPointePaymentPaymentActiveLink.SendAuthorizEmailRequest": {
        "required": [
          "ActiveLinkToken"
        ],
        "type": "object",
        "properties": {
          "ActiveLinkToken": {
            "$ref": "#/components/schemas/WebApi.Modules.Pages.ActiveLink.CardPointePaymentPaymentActiveLink.CardPointeActiveLinkToken"
          },
          "EmailFrom": {
            "type": "string",
            "nullable": true
          },
          "EmailTo": {
            "type": "string",
            "nullable": true
          },
          "EmailSubject": {
            "type": "string",
            "nullable": true
          },
          "EmailBody": {
            "type": "string",
            "nullable": true
          },
          "Capture": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Pages.ActiveLink.CardPointePaymentPaymentActiveLink.SendPreAuthorizeEmailResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean"
          },
          "Status": {
            "type": "string",
            "nullable": true
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.AzureAD.AzureADGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.AzureAD.ContactData": {
        "type": "object",
        "properties": {
          "ContactId": {
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "SourceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.AzureAD.Contacts_ImportGroupRequest": {
        "type": "object",
        "properties": {
          "AzureADGroupId": {
            "type": "string",
            "nullable": true
          },
          "ContactTitleId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.AzureAD.Contacts_ImportGroupResponse": {
        "type": "object",
        "properties": {
          "LastImported": {
            "type": "string",
            "nullable": true
          },
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.ContactData"
            },
            "nullable": true
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.AzureAD.GetAzureADGroupsRequest": {
        "type": "object",
        "properties": {
          "GroupSearch": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.AzureAD.GetAzureADGroupsResponse": {
        "type": "object",
        "properties": {
          "Groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.AzureADGroup"
            },
            "nullable": true
          },
          "TooManyResults": {
            "type": "boolean"
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.AzureAD.UserData": {
        "type": "object",
        "properties": {
          "UsersId": {
            "type": "string",
            "nullable": true
          },
          "FirstName": {
            "type": "string",
            "nullable": true
          },
          "LastName": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "SourceId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.AzureAD.Users_ImportGroupRequest": {
        "type": "object",
        "properties": {
          "AzureADGroupId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.AzureAD.Users_ImportGroupResponse": {
        "type": "object",
        "properties": {
          "Users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Plugins.AzureAD.UserData"
            },
            "nullable": true
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpRequest": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpUser"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponseUser"
          },
          "error": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponseUser": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "password_confirmation": {
            "type": "string",
            "nullable": true
          },
          "erp_integration": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponseUserErp"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponseUserErp": {
        "type": "object",
        "properties": {
          "integ_access_endpoint": {
            "type": "string",
            "nullable": true
          },
          "integ_access_token": {
            "type": "string",
            "nullable": true
          },
          "integ_source_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpUser": {
        "required": [
          "email",
          "erp_integration",
          "first_name",
          "last_name",
          "password",
          "password_confirmation",
          "username"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "password_confirmation": {
            "type": "string"
          },
          "erp_integration": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpUserErp"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpUserErp": {
        "required": [
          "integ_access_endpoint",
          "integ_access_token",
          "integ_source_id",
          "integ_user_id"
        ],
        "type": "object",
        "properties": {
          "integ_access_endpoint": {
            "type": "string"
          },
          "integ_access_token": {
            "type": "string"
          },
          "integ_source_id": {
            "type": "string"
          },
          "integ_user_id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenRequest": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenRequestUser"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenRequestUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "erp_integration": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenRequestUserErp"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenRequestUserErp": {
        "required": [
          "integ_access_endpoint",
          "integ_access_token",
          "integ_source_id",
          "integ_user_id"
        ],
        "type": "object",
        "properties": {
          "integ_access_endpoint": {
            "type": "string"
          },
          "integ_access_token": {
            "type": "string"
          },
          "integ_source_id": {
            "type": "string"
          },
          "integ_user_id": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenResponse": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "erp_integration": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenResponseErpIntegration"
          },
          "boxedup_endpoint": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenResponseErpIntegration": {
        "type": "object",
        "properties": {
          "integ_access_endpoint": {
            "type": "string",
            "nullable": true
          },
          "integ_access_token": {
            "type": "string",
            "nullable": true
          },
          "integ_source_id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.RwBoxedUpRequest_WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpRequest": {
        "required": [
          "BoxedUpBaseUrl",
          "BoxedUpRequest"
        ],
        "type": "object",
        "properties": {
          "BoxedUpBaseUrl": {
            "type": "string"
          },
          "BoxedUpRequest": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpRequest"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.RwBoxedUpRequest_WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenRequest": {
        "required": [
          "BoxedUpBaseUrl",
          "BoxedUpRequest"
        ],
        "type": "object",
        "properties": {
          "BoxedUpBaseUrl": {
            "type": "string"
          },
          "BoxedUpRequest": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenRequest"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.RwBoxedUpTokenResponse_WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponse": {
        "type": "object",
        "properties": {
          "RentalWorksAccessToken": {
            "type": "string",
            "nullable": true
          },
          "RentalWorksAccessTokenExpiration": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "BoxedUpResponse": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponse"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.StatusResponse_WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          },
          "TokenResponse": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.BoxedUpUpdateTokenResponse"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.BoxedUp.StatusResponse_WebApi.Modules.Plugins.BoxedUp.RwBoxedUpTokenResponse_WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          },
          "TokenResponse": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.BoxedUp.RwBoxedUpTokenResponse_WebApi.Modules.Plugins.BoxedUp.BoxedUpSignUpResponse"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.Account": {
        "type": "object",
        "properties": {
          "ProfileId": {
            "type": "string",
            "nullable": true
          },
          "AccountId": {
            "type": "string",
            "nullable": true
          },
          "Nickname": {
            "type": "string",
            "nullable": true
          },
          "CardType": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.ProcessCreditCardPaymentCardTypes"
          },
          "Expiration": {
            "type": "string",
            "nullable": true
          },
          "Last4Digits": {
            "type": "string",
            "nullable": true
          },
          "CardOnFilePermission": {
            "type": "boolean",
            "nullable": true
          },
          "DefaultAccount": {
            "type": "boolean",
            "nullable": true
          },
          "CardholderName": {
            "type": "string",
            "nullable": true
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Address2": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "type": "string",
            "nullable": true
          },
          "Region": {
            "type": "string",
            "nullable": true
          },
          "PostalCode": {
            "type": "string",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "nullable": true
          },
          "Token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardCapturePreAuthorizationForOrderRequest": {
        "required": [
          "OrderId"
        ],
        "type": "object",
        "properties": {
          "OrderId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardCapturePreAuthorizationForOrderResponse": {
        "type": "object",
        "properties": {
          "CapturePreAuthorizationResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginCaptureResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardCapturePreAuthorizationRequest": {
        "required": [
          "Amount",
          "CreditCardPreAuthorizationId"
        ],
        "type": "object",
        "properties": {
          "CreditCardPreAuthorizationId": {
            "type": "integer",
            "format": "int32"
          },
          "Amount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardCapturePreAuthorizationResponse": {
        "type": "object",
        "properties": {
          "PluginResponse": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginCaptureResponse"
          },
          "Success": {
            "type": "boolean"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginCaptureResponseStatusCodes"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardLog": {
        "type": "object",
        "properties": {
          "CreditCardLogId": {
            "type": "integer",
            "description": "Format: Text, IsPrimaryKey: true",
            "format": "int32"
          },
          "CreditCardPlugin": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "OrderId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "TransactionDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "HoldPeriod": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32"
          },
          "TransactionId": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "description": "Format: Decimal",
            "format": "double",
            "nullable": true
          },
          "TransactionType": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "PinPadCode": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ApiUrl": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ApiRequestMethod": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ApiRequestHeader": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ApiRequestBody": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ApiResponseStatusCode": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ApiResponseHeader": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ApiResponseBody": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ResponseSuccess": {
            "type": "boolean",
            "description": "Format: Boolean"
          },
          "ResponseStatus": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "ResponseStatusText": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          },
          "_Translation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwTranslatedValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardOrderDepositRequest": {
        "required": [
          "AmountToPay",
          "DealNumber",
          "OrderId",
          "PayWith"
        ],
        "type": "object",
        "properties": {
          "PayWith": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardOrderDepositRequest_PayWithTypes"
          },
          "OrderId": {
            "type": "string"
          },
          "AmountToPay": {
            "type": "number",
            "format": "double"
          },
          "CreditCardPinPadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DealNumber": {
            "type": "string"
          },
          "EmailFrom": {
            "type": "string",
            "nullable": true
          },
          "EmailTo": {
            "type": "string",
            "nullable": true
          },
          "EmailSubject": {
            "type": "string",
            "nullable": true
          },
          "EmailBody": {
            "type": "string",
            "nullable": true
          },
          "AccountId": {
            "type": "string",
            "description": "The AccountId of the CreditCard to Use",
            "nullable": true
          },
          "Account": {
            "type": "string",
            "description": "The tokenized card number or blank if this initiates a process to collect input from a PIN Pad.",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Required if passing Account",
            "nullable": true
          },
          "CardholderName": {
            "type": "string",
            "nullable": true
          },
          "CreditCardSource": {
            "type": "string",
            "description": "Save the credit card on either the 'CUSTOMER' or 'DEAL' record.",
            "nullable": true
          },
          "SaveCreditCard": {
            "type": "boolean"
          },
          "DefaultAccount": {
            "type": "boolean"
          },
          "AuthorizationOnFile": {
            "type": "boolean"
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Address2": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "type": "string",
            "nullable": true
          },
          "Region": {
            "type": "string",
            "nullable": true
          },
          "PostalCode": {
            "type": "string",
            "nullable": true
          },
          "CountryId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardOrderDepositRequest_PayWithTypes": {
        "enum": [
          "TOKENIZEDCARDNUMBER",
          "SAVEDCARD",
          "NEWCARD",
          "TRACKDATA",
          "EMAIL",
          "WEBPAY",
          "PINPAD"
        ],
        "type": "string"
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardOrderDepositResponse": {
        "type": "object",
        "properties": {
          "PluginResponse": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginAuthorizeResponse"
          },
          "Success": {
            "type": "boolean"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginAuthorizeResponseStatusCodes"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginAuthorizeResponse": {
        "required": [
          "Amount"
        ],
        "type": "object",
        "properties": {
          "PluginSpecificFields": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "format": "double"
          },
          "Receipt": {
            "$ref": "#/components/schemas/WebApi.Modules.Billing.Receipt.Receipt"
          },
          "Success": {
            "type": "boolean"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginAuthorizeResponseStatusCodes"
          },
          "CardType": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.ProcessCreditCardPaymentCardTypes"
          },
          "CardEntryMode": {
            "type": "string",
            "nullable": true
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          },
          "CreditCardName": {
            "type": "string",
            "nullable": true
          },
          "CreditCardNumber": {
            "type": "string",
            "nullable": true
          },
          "CreditCardExpirationDate": {
            "type": "string",
            "nullable": true
          },
          "TransactionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginAuthorizeResponseStatusCodes": {
        "enum": [
          "Pending",
          "Approved",
          "Retry",
          "Declined",
          "Error",
          "Sent"
        ],
        "type": "string"
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginCaptureResponse": {
        "type": "object",
        "properties": {
          "TransactionId": {
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "format": "double"
          },
          "Receipt": {
            "$ref": "#/components/schemas/WebApi.Modules.Billing.Receipt.Receipt"
          },
          "CardEntryMode": {
            "type": "string",
            "nullable": true
          },
          "CardType": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.ProcessCreditCardPaymentCardTypes"
          },
          "Success": {
            "type": "boolean"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginCaptureResponseStatusCodes"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginCaptureResponseStatusCodes": {
        "enum": [
          "Authorized",
          "Declined",
          "QueuedForCapture",
          "Voided",
          "ZeroAmount",
          "Unauthorized",
          "BadRequest",
          "Error",
          "InternalServerError"
        ],
        "type": "string"
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginCreateOrUpdateAccountRequest": {
        "type": "object",
        "properties": {
          "AccountId": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "Profile": {
            "maxLength": 23,
            "type": "string",
            "description": "20-digit profile ID and (optional) 3-digit account ID string in the format <profile id>/<account id>, required to update an existing profile.",
            "nullable": true
          },
          "IsDefaultAccount": {
            "type": "boolean",
            "description": "\"Y\" to assign as default account",
            "nullable": true
          },
          "ProfileUpdate": {
            "type": "boolean",
            "description": "\"Y\" to update profile data with non-empty request data only as opposed to full profile replacement including empty values",
            "nullable": true
          },
          "CardOnFilePermission": {
            "type": "boolean",
            "description": "Optionally specifies whether or not the cardholder provided consent to store their payment details in a profile.\r\nSpecify one of the following values:\r\nY - The cardholder provided their consent to store and reuse their payment details.\r\nN - The cardholder did not provide their consent.\r\nDefaults to N if not provided.",
            "nullable": true
          },
          "AccountUpdaterOptOut": {
            "type": "boolean",
            "description": "Specifies whether or not the profile is set to opt out of the CardPointe Account Updater service. Requires the merchant account to be enrolled in the Card Account Updater add-on.\r\nSpecify one of the following values:\r\n[Y - Yes; updates are not retrieved for this profile.]\r\n[N - No; updates are retrieved for this profile.]\r\n[Defaults to N if not provided.]",
            "nullable": true
          },
          "AccountType": {
            "maxLength": 6,
            "type": "string",
            "description": "One of PPAL, PAID, GIFT, PDEBIT, otherwise not required",
            "nullable": true
          },
          "Account": {
            "maxLength": 19,
            "type": "string",
            "description": "One of the following:\r\n[CardSecure Token - See the CardSecure Developer Guide for more information.]\r\n[Clear-text card number]\r\n[Bank Account Number - Account(s) must be entitled with electronic check capability. When using this field, the bankaba field is also required.]",
            "nullable": true
          },
          "BankAba": {
            "maxLength": 9,
            "type": "string",
            "description": "Bank routing (ABA) number, ECHK only",
            "nullable": true
          },
          "Expiry": {
            "maxLength": 8,
            "type": "string",
            "description": "Card expiration in one of the following formats:\r\n[MMYY]\r\n[YYYYM (for single-digit months)]\r\n[YYYYMM]\r\n[YYYYMMDD]\r\n[Not required for eCheck (ACH) or digital wallet (for example, Apple Pay or Google Pay) payments.]",
            "nullable": true
          },
          "Name": {
            "maxLength": 30,
            "type": "string",
            "description": "Account name; optional for credit cards, but required for E-check/ACH authorizations.",
            "nullable": true
          },
          "Address": {
            "maxLength": 30,
            "type": "string",
            "description": "Account street address.",
            "nullable": true
          },
          "Address2": {
            "maxLength": 30,
            "type": "string",
            "description": "Account street address 2.",
            "nullable": true
          },
          "City": {
            "maxLength": 30,
            "type": "string",
            "description": "Account city.",
            "nullable": true
          },
          "Region": {
            "maxLength": 20,
            "type": "string",
            "description": "Account US state, Mexican state, or Canadian province.",
            "nullable": true
          },
          "CountryId": {
            "maxLength": 8,
            "type": "string",
            "description": "Country foreign key identifier",
            "nullable": true
          },
          "Phone": {
            "maxLength": 15,
            "type": "string",
            "description": "Account phone; optional for credit cards, but required for ACH(ECHK or ESAV) transactions.",
            "nullable": true
          },
          "PostalCode": {
            "maxLength": 10,
            "type": "string",
            "description": "Account postal code.",
            "nullable": true
          },
          "Company": {
            "maxLength": 128,
            "type": "string",
            "description": "Company name associated with the account. if country is \"US\", must be 5 or 9 digits, otherwise any alphanumeric string is accepted.",
            "nullable": true
          },
          "Email": {
            "maxLength": 128,
            "type": "string",
            "description": "E-Mail address of the account holder",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginCreateOrUpdateAccountResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "true when the StatusCode is Approved, otherwise false"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginCreateOrUpdateProfileResponseStatusCodes"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          },
          "ProfileId": {
            "maxLength": 20,
            "type": "string",
            "description": "Primary identifier to access profiles",
            "nullable": true
          },
          "AccountId": {
            "maxLength": 3,
            "type": "string",
            "description": "Account identifier within a profile",
            "nullable": true
          },
          "ResponseStatus": {
            "maxLength": 1,
            "type": "string",
            "description": "A - Approved\r\nB - Retry\r\nC - Declined",
            "nullable": true
          },
          "Token": {
            "maxLength": 19,
            "type": "string",
            "description": "The token included in the request. If a card number or bank account number was included in the request, returns a new token generated for that account.",
            "nullable": true
          },
          "ResponseCode": {
            "maxLength": 3,
            "type": "string",
            "description": "Alpha-numeric response code that represents the description of the response.",
            "nullable": true
          },
          "ResponseText": {
            "maxLength": 40,
            "type": "string",
            "description": "Text description of response.",
            "nullable": true
          },
          "CardType": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.ProcessCreditCardPaymentCardTypes"
          },
          "Expiry": {
            "maxLength": 8,
            "type": "string",
            "description": "Card Expiration.",
            "nullable": true
          },
          "CardholderName": {
            "maxLength": 30,
            "type": "string",
            "description": "Account name.",
            "nullable": true
          },
          "Address": {
            "maxLength": 30,
            "type": "string",
            "description": "Account street address.",
            "nullable": true
          },
          "Address2": {
            "maxLength": 30,
            "type": "string",
            "description": "Account street address 2.",
            "nullable": true
          },
          "City": {
            "maxLength": 30,
            "type": "string",
            "description": "Account city.",
            "nullable": true
          },
          "Region": {
            "maxLength": 20,
            "type": "string",
            "description": "US State, Mexican State, Canadian Province.",
            "nullable": true
          },
          "Country": {
            "maxLength": 3,
            "type": "string",
            "description": "Account country(2 character country code).",
            "nullable": true
          },
          "Phone": {
            "maxLength": 15,
            "type": "string",
            "description": "Account phone.",
            "nullable": true
          },
          "Postal": {
            "maxLength": 10,
            "type": "string",
            "description": "Account postal code.",
            "nullable": true
          },
          "Email": {
            "maxLength": 128,
            "type": "string",
            "description": "Email address of the account holder.",
            "nullable": true
          },
          "Company": {
            "maxLength": 128,
            "type": "string",
            "description": "Company name associated with the account.",
            "nullable": true
          },
          "DefaultAccount": {
            "type": "boolean",
            "description": "Y marks the default account referenced when a profile ID is used without an associated account ID.",
            "nullable": true
          },
          "GsaCard": {
            "type": "boolean",
            "description": "Identifies if the card is a government issued card.",
            "nullable": true
          },
          "AccountUpdaterOptOut": {
            "type": "boolean",
            "description": "Identifies whether or not the profile is set to opt out of the CardPointe Account Updater service.\r\nY = Yes (updates are not retrieved for this profile)\r\nN = No (updates are retrieved for this profile)",
            "nullable": true
          },
          "CardOnFilePermission": {
            "type": "boolean",
            "description": "Identifies whether or not the cardholder provided consent to store their payment details in a profile. One of the following values:\r\n[Y - The cardholder provided their consent to store and reuse their payment details.]\r\n[N - The cardholder did not provide their consent.]",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginCreateOrUpdateProfileResponseStatusCodes": {
        "enum": [
          "Approved",
          "Retry",
          "Declined",
          "Error"
        ],
        "type": "string"
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginDeleteAccountResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "true when the StatusCode is Ok, otherwise false"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginDeleteProfileResponseStatusCodes"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginDeleteProfileResponseStatusCodes": {
        "enum": [
          "Ok",
          "Error"
        ],
        "type": "string"
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginGetSettingsResponse": {
        "type": "object",
        "properties": {
          "UseCvv": {
            "type": "boolean",
            "description": "Indicates if CVV is enabled on the merchant account"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginRefundResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginRefundResponseStatusCodes"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          },
          "TransactionId": {
            "type": "string",
            "nullable": true
          },
          "CardEntryMode": {
            "type": "string",
            "nullable": true
          },
          "CardType": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.ProcessCreditCardPaymentCardTypes"
          },
          "Amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "IsPartial": {
            "type": "boolean"
          },
          "IsVoid": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginRefundResponseStatusCodes": {
        "enum": [
          "Approved",
          "Retry",
          "Declined",
          "Error"
        ],
        "type": "string"
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginVoidReceiptRequest": {
        "required": [
          "ReceiptId"
        ],
        "type": "object",
        "properties": {
          "ReceiptId": {
            "type": "string"
          },
          "Amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginVoidResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "true when the StatusCode is Approved, otherwise false"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginVoidResponseStatusCodes"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          },
          "TransactionId": {
            "type": "string",
            "nullable": true
          },
          "IsPartial": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPluginVoidResponseStatusCodes": {
        "enum": [
          "Approved",
          "Retry",
          "Declined",
          "Error"
        ],
        "type": "string"
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPreAuthorization": {
        "type": "object",
        "properties": {
          "CreditCardPreAuthorizationId": {
            "type": "integer",
            "description": "Format: Integer, IsPrimaryKey: true",
            "format": "int32"
          },
          "TransactionId": {
            "maxLength": 50,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "OrderId": {
            "maxLength": 8,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "TransactionDate": {
            "type": "string",
            "description": "Format: Date",
            "format": "date-time",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Format: Date",
            "format": "date-time",
            "nullable": true
          },
          "HoldPeriod": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "HoldDaysRemaining": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "description": "Format: Decimal",
            "format": "double",
            "nullable": true
          },
          "CapturedAmount": {
            "type": "number",
            "description": "Format: Decimal",
            "format": "double",
            "nullable": true
          },
          "Status": {
            "maxLength": 20,
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CreditCardPinPadId": {
            "type": "integer",
            "description": "Format: Integer",
            "format": "int32",
            "nullable": true
          },
          "CreditCardPinPadCode": {
            "type": "string",
            "nullable": true
          },
          "CreditCardPinPadDescription": {
            "type": "string",
            "nullable": true
          },
          "CreditCardNumber": {
            "type": "string",
            "description": "Format: Text",
            "nullable": true
          },
          "CreditCardExpirationDate": {
            "type": "string",
            "description": "Format: Date",
            "nullable": true
          },
          "CreditCardName": {
            "type": "string",
            "description": "Format: Integer",
            "nullable": true
          },
          "DateStamp": {
            "type": "string",
            "description": "Format: UTCDateTime, Required: true",
            "format": "date-time",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          },
          "_Translation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwTranslatedValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPreAuthorizationRequest": {
        "required": [
          "AmountToPay",
          "DealNumber",
          "OrderId",
          "PayWith"
        ],
        "type": "object",
        "properties": {
          "PayWith": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPreAuthorizationRequest_PaymentTypes"
          },
          "OrderId": {
            "type": "string"
          },
          "AmountToPay": {
            "type": "number",
            "format": "double"
          },
          "CreditCardPinPadId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DealNumber": {
            "type": "string"
          },
          "PaymentBy": {
            "type": "string",
            "description": "Either 'CUSTOMER' or 'DEAL'.  This gets set on the invoice.",
            "nullable": true
          },
          "DealId": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "nullable": true
          },
          "AccountId": {
            "type": "string",
            "description": "The AccountId of the CreditCard to Use",
            "nullable": true
          },
          "Account": {
            "type": "string",
            "description": "The tokenized card number or blank if this initiates a process to collect input from a PIN Pad.",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Required if passing Account",
            "nullable": true
          },
          "CardholderName": {
            "type": "string",
            "nullable": true
          },
          "CreditCardSource": {
            "type": "string",
            "description": "Save the credit card on either the 'CUSTOMER' or 'DEAL' record.",
            "nullable": true
          },
          "SaveCreditCard": {
            "type": "boolean"
          },
          "DefaultAccount": {
            "type": "boolean"
          },
          "AuthorizationOnFile": {
            "type": "boolean"
          },
          "Address": {
            "type": "string",
            "nullable": true
          },
          "Address2": {
            "type": "string",
            "nullable": true
          },
          "City": {
            "type": "string",
            "nullable": true
          },
          "Region": {
            "type": "string",
            "nullable": true
          },
          "PostalCode": {
            "type": "string",
            "nullable": true
          },
          "CountryId": {
            "type": "string",
            "nullable": true
          },
          "TrackData": {
            "type": "string",
            "description": "The tokenized track data from a credit card reader",
            "nullable": true
          },
          "EmailFrom": {
            "type": "string",
            "description": "Required when RequestType is TokenizedCardNumber",
            "nullable": true
          },
          "EmailTo": {
            "type": "string",
            "description": "Required when RequestType is TokenizedCardNumber",
            "nullable": true
          },
          "EmailSubject": {
            "type": "string",
            "description": "Required when RequestType is TokenizedCardNumber",
            "nullable": true
          },
          "EmailBody": {
            "type": "string",
            "description": "Required when RequestType is TokenizedCardNumber",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPreAuthorizationRequest_PaymentTypes": {
        "enum": [
          "PINPAD",
          "TOKENIZEDCARDNUMBER",
          "SAVEDCARD",
          "NEWCARD",
          "TRACKDATA",
          "EMAIL",
          "WEBPAY"
        ],
        "type": "string"
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardPreAuthorizationResponse": {
        "type": "object",
        "properties": {
          "PluginResponse": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginAuthorizeResponse"
          },
          "Success": {
            "type": "boolean"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginAuthorizeResponseStatusCodes"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardRefundRequest": {
        "required": [
          "CreditCardPinPadId",
          "ReceiptId",
          "RefundAmount"
        ],
        "type": "object",
        "properties": {
          "ReceiptId": {
            "minLength": 1,
            "type": "string"
          },
          "CreditCardPinPadId": {
            "minLength": 1,
            "type": "integer",
            "format": "int32"
          },
          "RefundAmount": {
            "minLength": 1,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardRefundResponse": {
        "type": "object",
        "properties": {
          "PluginResponse": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginRefundResponse"
          },
          "Success": {
            "type": "boolean"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginRefundResponseStatusCodes"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardUpdatePreAuthorizationStatusRequest": {
        "type": "object",
        "properties": {
          "CreditCardPreAuthorizationId": {
            "type": "integer",
            "format": "int32"
          },
          "TransactionId": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.UpdatePreAuthorizationStatusCodes"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardUpdatePreAuthorizationStatusResponse": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean"
          },
          "Status": {
            "type": "string",
            "nullable": true
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardVoidPreAuthorizationRequest": {
        "required": [
          "CreditCardPreAuthorizationId"
        ],
        "type": "object",
        "properties": {
          "CreditCardPreAuthorizationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.CreditCardVoidPreAuthorizationResponse": {
        "type": "object",
        "properties": {
          "PluginResponse": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginVoidResponse"
          },
          "Success": {
            "type": "boolean"
          },
          "Status": {
            "$ref": "#/components/schemas/WebApi.Modules.Plugins.CreditCard.CreditCardPluginVoidResponseStatusCodes"
          },
          "StatusText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.OrderDeposit": {
        "type": "object",
        "properties": {
          "OrderId": {
            "type": "string",
            "nullable": true
          },
          "TransactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "PayType": {
            "type": "string",
            "nullable": true
          },
          "CheckOrReferenceNumber": {
            "type": "string",
            "nullable": true
          },
          "Amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "CreditCardName": {
            "type": "string",
            "nullable": true
          },
          "CreditCardExpiration": {
            "type": "string",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          },
          "_Translation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwTranslatedValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.ProcessCreditCardInfo": {
        "type": "object",
        "properties": {
          "RecordTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "OrderId": {
            "type": "string",
            "nullable": true
          },
          "OrderNumber": {
            "type": "string",
            "nullable": true
          },
          "OrderDescription": {
            "type": "string",
            "nullable": true
          },
          "OrderStatus": {
            "type": "string",
            "nullable": true
          },
          "DealId": {
            "type": "string",
            "nullable": true
          },
          "DealNumber": {
            "type": "string",
            "nullable": true
          },
          "Deal": {
            "type": "string",
            "nullable": true
          },
          "CustomerId": {
            "type": "string",
            "nullable": true
          },
          "CustomerNumber": {
            "type": "string",
            "nullable": true
          },
          "Customer": {
            "type": "string",
            "nullable": true
          },
          "Totals_Weekly_GrossTotal": {
            "type": "number",
            "format": "double"
          },
          "Totals_Weekly_Discount": {
            "type": "number",
            "format": "double"
          },
          "Totals_Weekly_SubTotal": {
            "type": "number",
            "format": "double"
          },
          "Totals_Weekly_Tax": {
            "type": "number",
            "format": "double"
          },
          "Totals_Weekly_GrandTotal": {
            "type": "number",
            "format": "double"
          },
          "Totals_Period_GrossTotal": {
            "type": "number",
            "format": "double"
          },
          "Totals_Period_Discount": {
            "type": "number",
            "format": "double"
          },
          "Totals_Period_SubTotal": {
            "type": "number",
            "format": "double"
          },
          "Totals_Period_Tax": {
            "type": "number",
            "format": "double"
          },
          "Totals_Period_GrandTotal": {
            "type": "number",
            "format": "double"
          },
          "Totals_Replacement_ReplacementCost": {
            "type": "number",
            "format": "double"
          },
          "Totals_Replacement_DepositPercentage": {
            "type": "number",
            "format": "double"
          },
          "Totals_Replacement_DepositDue": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "Totals_Replacement_PreAuthorization_RequiredAmount": {
            "type": "number",
            "format": "double"
          },
          "Totals_Replacement_PreAuthorization_CurrentTotal": {
            "type": "number",
            "format": "double"
          },
          "Totals_Replacement_PreAuthorization_AmountDue": {
            "type": "number",
            "format": "double"
          },
          "Payment_TotalAmount": {
            "type": "number",
            "format": "double"
          },
          "Payment_AmountToPay": {
            "type": "number",
            "format": "double"
          },
          "PINPad_Code": {
            "type": "string",
            "nullable": true
          },
          "PINPad_Description": {
            "type": "string",
            "nullable": true
          },
          "LocationCode": {
            "type": "string",
            "nullable": true
          },
          "AgentBarcode": {
            "type": "string",
            "nullable": true
          },
          "CurrencyId": {
            "type": "string",
            "nullable": true
          },
          "CurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "LocationId": {
            "type": "string",
            "nullable": true
          },
          "AuditNote": {
            "type": "string",
            "nullable": true
          },
          "_Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.BusinessLogic.FwBusinessLogicFieldDefinition"
            },
            "nullable": true,
            "readOnly": true
          },
          "_Custom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwCustomValue"
            },
            "nullable": true
          },
          "_DefaultFieldAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwDefaultAttribute"
            },
            "nullable": true
          },
          "_Translation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FwStandard.Data.FwTranslatedValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WebApi.Modules.Plugins.CreditCard.ProcessCreditCardPaymentCardTypes": {
        "enum": [
          "OTHER",
          "AMEX",
          "VISA",
          "MC",
          "DISC"
        ],
        "type": "string"
      },
      "WebApi.Modules.Plugins.CreditCard.UpdatePreAuthorizationStatusCodes": {
        "enum": [
          "Approved",
          "Declined",
          "FraudDetected",
          "Void",
          "VoidFailed"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. (Don't add the prefix Bearer anymore).",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}