// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'home.swagger.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

FwCoreApiSwashbuckleBadRequestResponse
    _$FwCoreApiSwashbuckleBadRequestResponseFromJson(
        Map<String, dynamic> json) {
  return FwCoreApiSwashbuckleBadRequestResponse();
}

Map<String, dynamic> _$FwCoreApiSwashbuckleBadRequestResponseToJson(
        FwCoreApiSwashbuckleBadRequestResponse instance) =>
    <String, dynamic>{};

FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult
    _$FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResultFromJson(
        Map<String, dynamic> json) {
  return FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult(
    downloadUrl: json['downloadUrl'] as String?,
  );
}

Map<String, dynamic>
    _$FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResultToJson(
            FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult
                instance) =>
        <String, dynamic>{
          'downloadUrl': instance.downloadUrl,
        };

FwStandardBusinessLogicFwBusinessLogicFieldDefinition
    _$FwStandardBusinessLogicFwBusinessLogicFieldDefinitionFromJson(
        Map<String, dynamic> json) {
  return FwStandardBusinessLogicFwBusinessLogicFieldDefinition(
    name: json['Name'] as String?,
    dataType:
        fwStandardSqlServerFwDataTypesFromJson(json['DataType'] as String?),
  );
}

Map<String, dynamic>
    _$FwStandardBusinessLogicFwBusinessLogicFieldDefinitionToJson(
            FwStandardBusinessLogicFwBusinessLogicFieldDefinition instance) =>
        <String, dynamic>{
          'Name': instance.name,
          'DataType': fwStandardSqlServerFwDataTypesToJson(instance.dataType),
        };

FwStandardDataFwCustomValue _$FwStandardDataFwCustomValueFromJson(
    Map<String, dynamic> json) {
  return FwStandardDataFwCustomValue(
    fieldName: json['FieldName'] as String?,
    fieldValue: json['FieldValue'] as String?,
    fieldType: json['FieldType'] as String?,
  );
}

Map<String, dynamic> _$FwStandardDataFwCustomValueToJson(
        FwStandardDataFwCustomValue instance) =>
    <String, dynamic>{
      'FieldName': instance.fieldName,
      'FieldValue': instance.fieldValue,
      'FieldType': instance.fieldType,
    };

FwStandardDataFwDefaultAttribute _$FwStandardDataFwDefaultAttributeFromJson(
    Map<String, dynamic> json) {
  return FwStandardDataFwDefaultAttribute(
    fieldName: json['FieldName'] as String?,
    attributeName: json['AttributeName'] as String?,
    defaultValue: json['DefaultValue'] as String?,
  );
}

Map<String, dynamic> _$FwStandardDataFwDefaultAttributeToJson(
        FwStandardDataFwDefaultAttribute instance) =>
    <String, dynamic>{
      'FieldName': instance.fieldName,
      'AttributeName': instance.attributeName,
      'DefaultValue': instance.defaultValue,
    };

FwStandardGridsAppDocumentAppDocumentGetManyResponse
    _$FwStandardGridsAppDocumentAppDocumentGetManyResponseFromJson(
        Map<String, dynamic> json) {
  return FwStandardGridsAppDocumentAppDocumentGetManyResponse(
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    documentType: json['DocumentType'] as String?,
    description: json['Description'] as String?,
    hasImages: json['HasImages'] as bool?,
    hasFile: json['HasFile'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardGridsAppDocumentAppDocumentGetManyResponseToJson(
            FwStandardGridsAppDocumentAppDocumentGetManyResponse instance) =>
        <String, dynamic>{
          'DocumentId': instance.documentId,
          'DocumentTypeId': instance.documentTypeId,
          'DocumentType': instance.documentType,
          'Description': instance.description,
          'HasImages': instance.hasImages,
          'HasFile': instance.hasFile,
          'Inactive': instance.inactive,
          'DateStamp': instance.dateStamp,
        };

FwStandardGridsAppDocumentDocumentImage
    _$FwStandardGridsAppDocumentDocumentImageFromJson(
        Map<String, dynamic> json) {
  return FwStandardGridsAppDocumentDocumentImage(
    imageId: json['ImageId'] as String?,
    description: json['Description'] as String?,
    imageNumber: json['ImageNumber'] as String?,
    dataUrl: json['DataUrl'] as String?,
  );
}

Map<String, dynamic> _$FwStandardGridsAppDocumentDocumentImageToJson(
        FwStandardGridsAppDocumentDocumentImage instance) =>
    <String, dynamic>{
      'ImageId': instance.imageId,
      'Description': instance.description,
      'ImageNumber': instance.imageNumber,
      'DataUrl': instance.dataUrl,
    };

FwStandardGridsAppDocumentGetDocumentImageResponse
    _$FwStandardGridsAppDocumentGetDocumentImageResponseFromJson(
        Map<String, dynamic> json) {
  return FwStandardGridsAppDocumentGetDocumentImageResponse(
    image: json['Image'] == null
        ? null
        : FwStandardGridsAppDocumentDocumentImage.fromJson(
            json['Image'] as Map<String, dynamic>),
  );
}

Map<String, dynamic> _$FwStandardGridsAppDocumentGetDocumentImageResponseToJson(
        FwStandardGridsAppDocumentGetDocumentImageResponse instance) =>
    <String, dynamic>{
      'Image': instance.image?.toJson(),
    };

FwStandardGridsAppDocumentGetDocumentThumbnailsResponse
    _$FwStandardGridsAppDocumentGetDocumentThumbnailsResponseFromJson(
        Map<String, dynamic> json) {
  return FwStandardGridsAppDocumentGetDocumentThumbnailsResponse(
    thumbnails: (json['Thumbnails'] as List<dynamic>?)
            ?.map((e) => FwStandardGridsAppDocumentDocumentImage.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$FwStandardGridsAppDocumentGetDocumentThumbnailsResponseToJson(
            FwStandardGridsAppDocumentGetDocumentThumbnailsResponse instance) =>
        <String, dynamic>{
          'Thumbnails': instance.thumbnails?.map((e) => e.toJson()).toList(),
        };

FwStandardGridsAppDocumentPostDocumentImageRequest
    _$FwStandardGridsAppDocumentPostDocumentImageRequestFromJson(
        Map<String, dynamic> json) {
  return FwStandardGridsAppDocumentPostDocumentImageRequest(
    dataUrl: json['DataUrl'] as String?,
    fileExtension: json['FileExtension'] as String?,
  );
}

Map<String, dynamic> _$FwStandardGridsAppDocumentPostDocumentImageRequestToJson(
        FwStandardGridsAppDocumentPostDocumentImageRequest instance) =>
    <String, dynamic>{
      'DataUrl': instance.dataUrl,
      'FileExtension': instance.fileExtension,
    };

FwStandardGridsAppDocumentPutDocumentFileRequest
    _$FwStandardGridsAppDocumentPutDocumentFileRequestFromJson(
        Map<String, dynamic> json) {
  return FwStandardGridsAppDocumentPutDocumentFileRequest(
    dataUrl: json['DataUrl'] as String?,
    fileExtension: json['FileExtension'] as String?,
  );
}

Map<String, dynamic> _$FwStandardGridsAppDocumentPutDocumentFileRequestToJson(
        FwStandardGridsAppDocumentPutDocumentFileRequest instance) =>
    <String, dynamic>{
      'DataUrl': instance.dataUrl,
      'FileExtension': instance.fileExtension,
    };

FwStandardModelsBrowseRequest _$FwStandardModelsBrowseRequestFromJson(
    Map<String, dynamic> json) {
  return FwStandardModelsBrowseRequest(
    miscfields: json['miscfields'],
    module: json['module'] as String?,
    options: json['options'],
    orderby: json['orderby'] as String?,
    orderbydirection: json['orderbydirection'] as String?,
    top: json['top'] as int?,
    pageno: json['pageno'] as int?,
    pagesize: json['pagesize'] as int?,
    searchfieldoperators: (json['searchfieldoperators'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    searchfields: (json['searchfields'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    searchfieldvalues: (json['searchfieldvalues'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    searchfieldtypes: (json['searchfieldtypes'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    searchseparators: (json['searchseparators'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    searchcondition: (json['searchcondition'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    searchconjunctions: (json['searchconjunctions'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    uniqueids: json['uniqueids'],
    boundids: json['boundids'],
    filterfields: json['filterfields'],
    activeview: json['activeview'] as String?,
    emptyobject: json['emptyobject'] as bool?,
    forexcel: json['forexcel'] as bool?,
    excelfields: (json['excelfields'] as List<dynamic>?)
            ?.map((e) => FwStandardModelsCheckBoxListItem.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    totalfields: (json['totalfields'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    activeviewfields: json['activeviewfields'],
  );
}

Map<String, dynamic> _$FwStandardModelsBrowseRequestToJson(
        FwStandardModelsBrowseRequest instance) =>
    <String, dynamic>{
      'miscfields': instance.miscfields,
      'module': instance.module,
      'options': instance.options,
      'orderby': instance.orderby,
      'orderbydirection': instance.orderbydirection,
      'top': instance.top,
      'pageno': instance.pageno,
      'pagesize': instance.pagesize,
      'searchfieldoperators': instance.searchfieldoperators,
      'searchfields': instance.searchfields,
      'searchfieldvalues': instance.searchfieldvalues,
      'searchfieldtypes': instance.searchfieldtypes,
      'searchseparators': instance.searchseparators,
      'searchcondition': instance.searchcondition,
      'searchconjunctions': instance.searchconjunctions,
      'uniqueids': instance.uniqueids,
      'boundids': instance.boundids,
      'filterfields': instance.filterfields,
      'activeview': instance.activeview,
      'emptyobject': instance.emptyobject,
      'forexcel': instance.forexcel,
      'excelfields': instance.excelfields?.map((e) => e.toJson()).toList(),
      'totalfields': instance.totalfields,
      'activeviewfields': instance.activeviewfields,
    };

FwStandardModelsCheckBoxListItem _$FwStandardModelsCheckBoxListItemFromJson(
    Map<String, dynamic> json) {
  return FwStandardModelsCheckBoxListItem(
    value: json['value'] as String?,
    text: json['text'] as String?,
    selected: json['selected'] as bool?,
  );
}

Map<String, dynamic> _$FwStandardModelsCheckBoxListItemToJson(
        FwStandardModelsCheckBoxListItem instance) =>
    <String, dynamic>{
      'value': instance.value,
      'text': instance.text,
      'selected': instance.selected,
    };

FwStandardModelsFwApiException _$FwStandardModelsFwApiExceptionFromJson(
    Map<String, dynamic> json) {
  return FwStandardModelsFwApiException(
    statusCode: json['StatusCode'] as int?,
    message: json['Message'] as String?,
    stackTrace: json['StackTrace'] as String?,
  );
}

Map<String, dynamic> _$FwStandardModelsFwApiExceptionToJson(
        FwStandardModelsFwApiException instance) =>
    <String, dynamic>{
      'StatusCode': instance.statusCode,
      'Message': instance.message,
      'StackTrace': instance.stackTrace,
    };

FwStandardModelsFwQueryFilter _$FwStandardModelsFwQueryFilterFromJson(
    Map<String, dynamic> json) {
  return FwStandardModelsFwQueryFilter(
    field: json['Field'] as String?,
    op: json['Op'] as String?,
    value: json['Value'] as String?,
  );
}

Map<String, dynamic> _$FwStandardModelsFwQueryFilterToJson(
        FwStandardModelsFwQueryFilter instance) =>
    <String, dynamic>{
      'Field': instance.field,
      'Op': instance.op,
      'Value': instance.value,
    };

FwStandardModelsFwQueryResponseWebApiModulesAgentContactContactLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentContactContactLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesAgentContactContactLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesAgentContactContact.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentContactContactLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesAgentContactContactLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesAgentCustomerCustomerLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentCustomerCustomerLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesAgentCustomerCustomerLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesAgentCustomerCustomer.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentCustomerCustomerLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesAgentCustomerCustomerLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesAgentDealDealLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentDealDealLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesAgentDealDealLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesAgentDealDeal.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentDealDealLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesAgentDealDealLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesAgentOrderOrderLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentOrderOrderLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesAgentOrderOrderLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesAgentOrderOrder.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentOrderOrderLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesAgentOrderOrderLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesAgentProjectProjectLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentProjectProjectLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesAgentProjectProjectLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesAgentProjectProject.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentProjectProjectLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesAgentProjectProjectLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesAgentPurchaseOrderPurchaseOrderLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentPurchaseOrderPurchaseOrderLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesAgentPurchaseOrderPurchaseOrderLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesAgentPurchaseOrderPurchaseOrder.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentPurchaseOrderPurchaseOrderLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesAgentPurchaseOrderPurchaseOrderLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesAgentQuoteQuoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentQuoteQuoteLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesAgentQuoteQuoteLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesAgentQuoteQuote.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentQuoteQuoteLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesAgentQuoteQuoteLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesAgentVendorVendorLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentVendorVendorLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesAgentVendorVendorLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesAgentVendorVendor.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentVendorVendorLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesAgentVendorVendorLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesBillingBankAccountBankAccountLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingBankAccountBankAccountLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesBillingBankAccountBankAccountLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesBillingBankAccountBankAccount.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingBankAccountBankAccountLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesBillingBankAccountBankAccountLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesBillingBillingWorksheetBillingWorksheetLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingBillingWorksheetBillingWorksheetLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesBillingBillingWorksheetBillingWorksheetLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesBillingBillingWorksheetBillingWorksheet.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingBillingWorksheetBillingWorksheetLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesBillingBillingWorksheetBillingWorksheetLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesBillingInvoiceInvoiceLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingInvoiceInvoiceLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesBillingInvoiceInvoiceLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesBillingInvoiceInvoice.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingInvoiceInvoiceLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesBillingInvoiceInvoiceLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesBillingPaymentPaymentLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingPaymentPaymentLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesBillingPaymentPaymentLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesBillingPaymentPayment.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingPaymentPaymentLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesBillingPaymentPaymentLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesBillingReceiptReceiptLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingReceiptReceiptLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesBillingReceiptReceiptLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesBillingReceiptReceipt.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingReceiptReceiptLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesBillingReceiptReceiptLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesBillingVendorInvoiceVendorInvoiceLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingVendorInvoiceVendorInvoiceLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesBillingVendorInvoiceVendorInvoiceLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesBillingVendorInvoiceVendorInvoice.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingVendorInvoiceVendorInvoiceLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesBillingVendorInvoiceVendorInvoiceLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesContainersContainerContainerLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesContainersContainerContainerLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesContainersContainerContainerLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesContainersContainerContainer.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesContainersContainerContainerLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesContainersContainerContainerLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAddressAddressLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAddressAddressLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAddressAddressLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsAddressAddress.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAddressAddressLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAddressAddressLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescription
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyCompanyLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyCompanyLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyCompanyLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsCompanyCompany.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyCompanyLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyCompanyLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyContactCompanyContactLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyContactCompanyContactLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyContactCompanyContactLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsCompanyContactCompanyContact.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyContactCompanyContactLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyContactCompanyContactLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOption
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResale
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContactNoteContactNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContactNoteContactNoteLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContactNoteContactNoteLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsContactNoteContactNote.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContactNoteContactNoteLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContactNoteContactNoteLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContainerWarehouseContainerWarehouseLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContainerWarehouseContainerWarehouseLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContainerWarehouseContainerWarehouseLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsContainerWarehouseContainerWarehouse
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContainerWarehouseContainerWarehouseLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContainerWarehouseContainerWarehouseLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCustomerNoteCustomerNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCustomerNoteCustomerNoteLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCustomerNoteCustomerNoteLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsCustomerNoteCustomerNote.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCustomerNoteCustomerNoteLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCustomerNoteCustomerNoteLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealNoteDealNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealNoteDealNoteLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealNoteDealNoteLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsDealNoteDealNote.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealNoteDealNoteLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealNoteDealNoteLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealShipperDealShipperLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealShipperDealShipperLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealShipperDealShipperLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsDealShipperDealShipper.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealShipperDealShipperLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealShipperDealShipperLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDeliveryDeliveryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDeliveryDeliveryLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDeliveryDeliveryLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsDeliveryDelivery.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDeliveryDeliveryLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDeliveryDeliveryLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepositPaymentDepositPaymentLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepositPaymentDepositPaymentLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepositPaymentDepositPaymentLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsDepositPaymentDepositPayment.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepositPaymentDepositPaymentLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepositPaymentDepositPaymentLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepreciationDepreciationLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepreciationDepreciationLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepreciationDepreciationLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsDepreciationDepreciation.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepreciationDepreciationLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepreciationDepreciationLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsGlManualGlManualLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsGlManualGlManualLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsGlManualGlManualLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsGlManualGlManual.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsGlManualGlManualLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsGlManualGlManualLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValue
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryColorInventoryColorLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryColorInventoryColorLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryColorInventoryColorLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryColorInventoryColor.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryColorInventoryColorLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryColorInventoryColorLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryCompatibleInventoryCompatible
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKit
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryConsignorInventoryConsignorLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryConsignorInventoryConsignorLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryConsignorInventoryConsignorLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryConsignorInventoryConsignor
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryConsignorInventoryConsignorLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryConsignorInventoryConsignorLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItem
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTax
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryMaterialInventoryMaterialLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryMaterialInventoryMaterialLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryMaterialInventoryMaterialLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryMaterialInventoryMaterial
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryMaterialInventoryMaterialLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryMaterialInventoryMaterialLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventory
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPrepInventoryPrepLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPrepInventoryPrepLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPrepInventoryPrepLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryPrepInventoryPrep.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPrepInventoryPrepLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPrepInventoryPrepLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItem
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventorySubstituteInventorySubstituteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventorySubstituteInventorySubstituteLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventorySubstituteInventorySubstituteLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventorySubstituteInventorySubstitute
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventorySubstituteInventorySubstituteLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventorySubstituteInventorySubstituteLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryVendorInventoryVendorLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryVendorInventoryVendorLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryVendorInventoryVendorLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsInventoryVendorInventoryVendor
                .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryVendorInventoryVendorLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryVendorInventoryVendorLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecific
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatch
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceItemInvoiceItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceItemInvoiceItemLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceItemInvoiceItemLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInvoiceItemInvoiceItem.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceItemInvoiceItemLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceItemInvoiceItemLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceNoteInvoiceNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceNoteInvoiceNoteLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceNoteInvoiceNoteLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInvoiceNoteInvoiceNote.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceNoteInvoiceNoteLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceNoteInvoiceNoteLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInvoiceReceiptInvoiceReceipt.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemAttributeValueItemAttributeValueLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemAttributeValueItemAttributeValueLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemAttributeValueItemAttributeValueLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsItemAttributeValueItemAttributeValue
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemAttributeValueItemAttributeValueLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemAttributeValueItemAttributeValueLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemQcItemQcLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemQcItemQcLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemQcItemQcLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsItemQcItemQc.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemQcItemQcLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemQcItemQcLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsManifestManifestLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsManifestManifestLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsManifestManifestLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsManifestManifest.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsManifestManifestLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsManifestManifestLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderContactOrderContactLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderContactOrderContactLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderContactOrderContactLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsOrderContactOrderContact.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderContactOrderContactLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderContactOrderContactLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderItemOrderItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderItemOrderItemLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderItemOrderItemLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsOrderItemOrderItem.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderItemOrderItemLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderItemOrderItemLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderNoteOrderNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderNoteOrderNoteLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderNoteOrderNoteLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsOrderNoteOrderNote.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderNoteOrderNoteLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderNoteOrderNoteLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistory
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPersonalEventPersonalEventLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPersonalEventPersonalEventLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPersonalEventPersonalEventLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsPersonalEventPersonalEvent.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPersonalEventPersonalEventLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPersonalEventPersonalEventLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventory
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventory
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPickListItemPickListItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPickListItemPickListItemLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPickListItemPickListItemLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsPickListItemPickListItem.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPickListItemPickListItemLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPickListItemPickListItemLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectContactProjectContactLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectContactProjectContactLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectContactProjectContactLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsProjectContactProjectContact.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectContactProjectContactLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectContactProjectContactLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectNoteProjectNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectNoteProjectNoteLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectNoteProjectNoteLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsProjectNoteProjectNote.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectNoteProjectNoteLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectNoteProjectNoteLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCode
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCode
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItem
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairCostRepairCostLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairCostRepairCostLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairCostRepairCostLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsRepairCostRepairCost.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairCostRepairCostLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairCostRepairCostLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairPartRepairPartLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairPartRepairPartLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairPartRepairPartLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsRepairPartRepairPart.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairPartRepairPartLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairPartRepairPartLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairReleaseRepairReleaseLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairReleaseRepairReleaseLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairReleaseRepairReleaseLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsRepairReleaseRepairRelease.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairReleaseRepairReleaseLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairReleaseRepairReleaseLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItem
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNote
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorNoteVendorNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorNoteVendorNoteLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorNoteVendorNoteLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsVendorNoteVendorNote.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorNoteVendorNoteLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorNoteVendorNoteLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryAssetItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryAssetItemLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryAssetItemLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesInventoryAssetItem.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryAssetItemLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryAssetItemLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryPartsInventoryPartsInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPartsInventoryPartsInventoryLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryPartsInventoryPartsInventoryLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesInventoryPartsInventoryPartsInventory.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPartsInventoryPartsInventoryLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryPartsInventoryPartsInventoryLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantity
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerial
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptions
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAdded
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesInventoryPhysicalInventoryPhysicalInventory
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecount
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryRentalInventoryRentalInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRentalInventoryRentalInventoryLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryRentalInventoryRentalInventoryLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesInventoryRentalInventoryRentalInventory.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRentalInventoryRentalInventoryLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryRentalInventoryRentalInventoryLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryRepairRepairLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRepairRepairLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryRepairRepairLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesInventoryRepairRepair.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRepairRepairLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryRepairRepairLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventoryRetiredRetiredLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRetiredRetiredLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventoryRetiredRetiredLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesInventoryRetiredRetired.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRetiredRetiredLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventoryRetiredRetiredLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesInventorySalesInventorySalesInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventorySalesInventorySalesInventoryLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesInventorySalesInventorySalesInventoryLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesInventorySalesInventorySalesInventory.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventorySalesInventorySalesInventoryLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesInventorySalesInventorySalesInventoryLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatus
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesTransfersTransferOrderTransferOrderLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesTransfersTransferOrderTransferOrderLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesTransfersTransferOrderTransferOrderLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesTransfersTransferOrderTransferOrder.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesTransfersTransferOrderTransferOrderLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesTransfersTransferOrderTransferOrderLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerGridLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerGridLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerGridLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesWarehouseCheckOutStorageContainerGrid.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerGridLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerGridLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerItemsGridLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerItemsGridLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerItemsGridLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesWarehouseCheckOutStorageContainerItemsGrid
                .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerItemsGridLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerItemsGridLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesWarehouseContractContractLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseContractContractLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesWarehouseContractContractLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesWarehouseContractContract.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseContractContractLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesWarehouseContractContractLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerGridLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerGridLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerGridLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesWarehouseOrderStatusStorageContainerGrid.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerGridLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerGridLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerItemsGridLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerItemsGridLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerItemsGridLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesWarehouseOrderStatusStorageContainerItemsGrid
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerItemsGridLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerItemsGridLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesWarehousePickListPickListLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehousePickListPickListLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesWarehousePickListPickListLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesWarehousePickListPickList.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehousePickListPickListLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesWarehousePickListPickListLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsFwQueryResponseWebApiModulesWarehouseQuikReceiptQuikReceiptGridLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseQuikReceiptQuikReceiptGridLogicFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsFwQueryResponseWebApiModulesWarehouseQuikReceiptQuikReceiptGridLogic(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesWarehouseQuikReceiptQuikReceiptGrid.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalItems: json['TotalItems'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseQuikReceiptQuikReceiptGridLogicToJson(
            FwStandardModelsFwQueryResponseWebApiModulesWarehouseQuikReceiptQuikReceiptGridLogic
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalItems': instance.totalItems,
          'Sort': instance.sort,
        };

FwStandardModelsGetResponseFwStandardGridsAppDocumentAppDocumentGetManyResponse
    _$FwStandardModelsGetResponseFwStandardGridsAppDocumentAppDocumentGetManyResponseFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsGetResponseFwStandardGridsAppDocumentAppDocumentGetManyResponse(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardGridsAppDocumentAppDocumentGetManyResponse.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalRows: json['TotalRows'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsGetResponseFwStandardGridsAppDocumentAppDocumentGetManyResponseToJson(
            FwStandardModelsGetResponseFwStandardGridsAppDocumentAppDocumentGetManyResponse
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalRows': instance.totalRows,
          'Sort': instance.sort,
        };

FwStandardModelsGetResponseWebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel
    _$FwStandardModelsGetResponseWebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModelFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsGetResponseWebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalRows: json['TotalRows'] as int?,
    sort: json['Sort'] as String?,
  );
}

Map<String, dynamic>
    _$FwStandardModelsGetResponseWebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModelToJson(
            FwStandardModelsGetResponseWebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'PageNo': instance.pageNo,
          'PageSize': instance.pageSize,
          'TotalRows': instance.totalRows,
          'Sort': instance.sort,
        };

FwStandardModelsSelectedCheckBoxListItem
    _$FwStandardModelsSelectedCheckBoxListItemFromJson(
        Map<String, dynamic> json) {
  return FwStandardModelsSelectedCheckBoxListItem(
    value: json['value'] as String?,
  );
}

Map<String, dynamic> _$FwStandardModelsSelectedCheckBoxListItemToJson(
        FwStandardModelsSelectedCheckBoxListItem instance) =>
    <String, dynamic>{
      'value': instance.value,
    };

FwStandardSqlServerFwDateTime _$FwStandardSqlServerFwDateTimeFromJson(
    Map<String, dynamic> json) {
  return FwStandardSqlServerFwDateTime(
    val: json['Val'] as String?,
  );
}

Map<String, dynamic> _$FwStandardSqlServerFwDateTimeToJson(
        FwStandardSqlServerFwDateTime instance) =>
    <String, dynamic>{
      'Val': instance.val,
    };

FwStandardSqlServerFwJsonDataTable _$FwStandardSqlServerFwJsonDataTableFromJson(
    Map<String, dynamic> json) {
  return FwStandardSqlServerFwJsonDataTable(
    columnIndex: json['ColumnIndex'],
    totals: json['Totals'],
    columns: (json['Columns'] as List<dynamic>?)
            ?.map((e) => FwStandardSqlServerFwJsonDataTableColumn.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    rows: (json['Rows'] as List<dynamic>?)
            ?.map((e) => (e as List<dynamic>).map((e) => e as Object).toList())
            .toList() ??
        [],
    pageNo: json['PageNo'] as int?,
    pageSize: json['PageSize'] as int?,
    totalPages: json['TotalPages'] as int?,
    totalRows: json['TotalRows'] as int?,
    dateFields: (json['DateFields'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    columnNameByIndex: json['ColumnNameByIndex'],
  );
}

Map<String, dynamic> _$FwStandardSqlServerFwJsonDataTableToJson(
        FwStandardSqlServerFwJsonDataTable instance) =>
    <String, dynamic>{
      'ColumnIndex': instance.columnIndex,
      'Totals': instance.totals,
      'Columns': instance.columns?.map((e) => e.toJson()).toList(),
      'Rows': instance.rows,
      'PageNo': instance.pageNo,
      'PageSize': instance.pageSize,
      'TotalPages': instance.totalPages,
      'TotalRows': instance.totalRows,
      'DateFields': instance.dateFields,
      'ColumnNameByIndex': instance.columnNameByIndex,
    };

FwStandardSqlServerFwJsonDataTableColumn
    _$FwStandardSqlServerFwJsonDataTableColumnFromJson(
        Map<String, dynamic> json) {
  return FwStandardSqlServerFwJsonDataTableColumn(
    name: json['Name'] as String?,
    dataField: json['DataField'] as String?,
    dataType:
        fwStandardSqlServerFwDataTypesFromJson(json['DataType'] as String?),
    isUniqueId: json['IsUniqueId'] as bool?,
    isVisible: json['IsVisible'] as bool?,
  );
}

Map<String, dynamic> _$FwStandardSqlServerFwJsonDataTableColumnToJson(
        FwStandardSqlServerFwJsonDataTableColumn instance) =>
    <String, dynamic>{
      'Name': instance.name,
      'DataField': instance.dataField,
      'DataType': fwStandardSqlServerFwDataTypesToJson(instance.dataType),
      'IsUniqueId': instance.isUniqueId,
      'IsVisible': instance.isVisible,
    };

MicrosoftAspNetCoreMvcActionResult _$MicrosoftAspNetCoreMvcActionResultFromJson(
    Map<String, dynamic> json) {
  return MicrosoftAspNetCoreMvcActionResult();
}

Map<String, dynamic> _$MicrosoftAspNetCoreMvcActionResultToJson(
        MicrosoftAspNetCoreMvcActionResult instance) =>
    <String, dynamic>{};

MicrosoftAspNetCoreMvcActionResultWebApiModulesAgentDealDealLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesAgentDealDealLogicFromJson(
        Map<String, dynamic> json) {
  return MicrosoftAspNetCoreMvcActionResultWebApiModulesAgentDealDealLogic(
    result: json['Result'] == null
        ? null
        : MicrosoftAspNetCoreMvcActionResult.fromJson(
            json['Result'] as Map<String, dynamic>),
    value: json['Value'] == null
        ? null
        : WebApiModulesAgentDealDeal.fromJson(
            json['Value'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesAgentDealDealLogicToJson(
            MicrosoftAspNetCoreMvcActionResultWebApiModulesAgentDealDealLogic
                instance) =>
        <String, dynamic>{
          'Result': instance.result?.toJson(),
          'Value': instance.value?.toJson(),
        };

MicrosoftAspNetCoreMvcActionResultWebApiModulesBillingInvoiceInvoiceLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesBillingInvoiceInvoiceLogicFromJson(
        Map<String, dynamic> json) {
  return MicrosoftAspNetCoreMvcActionResultWebApiModulesBillingInvoiceInvoiceLogic(
    result: json['Result'] == null
        ? null
        : MicrosoftAspNetCoreMvcActionResult.fromJson(
            json['Result'] as Map<String, dynamic>),
    value: json['Value'] == null
        ? null
        : WebApiModulesBillingInvoiceInvoice.fromJson(
            json['Value'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesBillingInvoiceInvoiceLogicToJson(
            MicrosoftAspNetCoreMvcActionResultWebApiModulesBillingInvoiceInvoiceLogic
                instance) =>
        <String, dynamic>{
          'Result': instance.result?.toJson(),
          'Value': instance.value?.toJson(),
        };

MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogicFromJson(
        Map<String, dynamic> json) {
  return MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic(
    result: json['Result'] == null
        ? null
        : MicrosoftAspNetCoreMvcActionResult.fromJson(
            json['Result'] as Map<String, dynamic>),
    value: json['Value'] == null
        ? null
        : WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse
            .fromJson(json['Value'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogicToJson(
            MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic
                instance) =>
        <String, dynamic>{
          'Result': instance.result?.toJson(),
          'Value': instance.value?.toJson(),
        };

MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsOrderItemOrderItemLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsOrderItemOrderItemLogicFromJson(
        Map<String, dynamic> json) {
  return MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsOrderItemOrderItemLogic(
    result: json['Result'] == null
        ? null
        : MicrosoftAspNetCoreMvcActionResult.fromJson(
            json['Result'] as Map<String, dynamic>),
    value: json['Value'] == null
        ? null
        : WebApiModulesHomeControlsOrderItemOrderItem.fromJson(
            json['Value'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsOrderItemOrderItemLogicToJson(
            MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsOrderItemOrderItemLogic
                instance) =>
        <String, dynamic>{
          'Result': instance.result?.toJson(),
          'Value': instance.value?.toJson(),
        };

MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsPricingPricingLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsPricingPricingLogicFromJson(
        Map<String, dynamic> json) {
  return MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsPricingPricingLogic(
    result: json['Result'] == null
        ? null
        : MicrosoftAspNetCoreMvcActionResult.fromJson(
            json['Result'] as Map<String, dynamic>),
    value: json['Value'] == null
        ? null
        : WebApiModulesHomeControlsPricingPricing.fromJson(
            json['Value'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsPricingPricingLogicToJson(
            MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsPricingPricingLogic
                instance) =>
        <String, dynamic>{
          'Result': instance.result?.toJson(),
          'Value': instance.value?.toJson(),
        };

MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemLogicFromJson(
        Map<String, dynamic> json) {
  return MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemLogic(
    result: json['Result'] == null
        ? null
        : MicrosoftAspNetCoreMvcActionResult.fromJson(
            json['Result'] as Map<String, dynamic>),
    value: json['Value'] == null
        ? null
        : WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItem
            .fromJson(json['Value'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemLogicToJson(
            MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemLogic
                instance) =>
        <String, dynamic>{
          'Result': instance.result?.toJson(),
          'Value': instance.value?.toJson(),
        };

WebApiApplyBottomLineDaysPerWeekRequest
    _$WebApiApplyBottomLineDaysPerWeekRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiApplyBottomLineDaysPerWeekRequest(
    orderId: json['OrderId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    recType: json['RecType'] as String?,
    subs: json['Subs'] as bool?,
    daysPerWeek: (json['DaysPerWeek'] as num?)?.toDouble(),
  );
}

Map<String, dynamic> _$WebApiApplyBottomLineDaysPerWeekRequestToJson(
        WebApiApplyBottomLineDaysPerWeekRequest instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'PurchaseOrderId': instance.purchaseOrderId,
      'RecType': instance.recType,
      'Subs': instance.subs,
      'DaysPerWeek': instance.daysPerWeek,
    };

WebApiApplyBottomLineDiscountPercentRequest
    _$WebApiApplyBottomLineDiscountPercentRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiApplyBottomLineDiscountPercentRequest(
    orderId: json['OrderId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    recType: json['RecType'] as String?,
    subs: json['Subs'] as bool?,
    discountPercent: (json['DiscountPercent'] as num?)?.toDouble(),
  );
}

Map<String, dynamic> _$WebApiApplyBottomLineDiscountPercentRequestToJson(
        WebApiApplyBottomLineDiscountPercentRequest instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'PurchaseOrderId': instance.purchaseOrderId,
      'RecType': instance.recType,
      'Subs': instance.subs,
      'DiscountPercent': instance.discountPercent,
    };

WebApiApplyBottomLineTotalRequest _$WebApiApplyBottomLineTotalRequestFromJson(
    Map<String, dynamic> json) {
  return WebApiApplyBottomLineTotalRequest(
    orderId: json['OrderId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    recType: json['RecType'] as String?,
    subs: json['Subs'] as bool?,
    totalType: json['TotalType'] as String?,
    total: (json['Total'] as num?)?.toDouble(),
    includeTaxInTotal: json['IncludeTaxInTotal'] as bool?,
  );
}

Map<String, dynamic> _$WebApiApplyBottomLineTotalRequestToJson(
        WebApiApplyBottomLineTotalRequest instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'PurchaseOrderId': instance.purchaseOrderId,
      'RecType': instance.recType,
      'Subs': instance.subs,
      'TotalType': instance.totalType,
      'Total': instance.total,
      'IncludeTaxInTotal': instance.includeTaxInTotal,
    };

WebApiLogicSortItemsResponse _$WebApiLogicSortItemsResponseFromJson(
    Map<String, dynamic> json) {
  return WebApiLogicSortItemsResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic> _$WebApiLogicSortItemsResponseToJson(
        WebApiLogicSortItemsResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiLogicTSpStatusResponse _$WebApiLogicTSpStatusResponseFromJson(
    Map<String, dynamic> json) {
  return WebApiLogicTSpStatusResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic> _$WebApiLogicTSpStatusResponseToJson(
        WebApiLogicTSpStatusResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesAgentContactContact _$WebApiModulesAgentContactContactFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesAgentContactContact(
    contactId: json['ContactId'] as String?,
    activeDate: json['ActiveDate'] as String?,
    address1: json['Address1'] as String?,
    address2: json['Address2'] as String?,
    barcode: json['Barcode'] as String?,
    city: json['City'] as String?,
    contactRecordType: json['ContactRecordType'] as String?,
    contactRecordTypeColor: json['ContactRecordTypeColor'] as String?,
    contactTitleId: json['ContactTitleId'] as String?,
    contactTitle: json['ContactTitle'] as String?,
    country: json['Country'] as String?,
    countryId: json['CountryId'] as String?,
    dateStamp: json['DateStamp'] as String?,
    directExtension: json['DirectExtension'] as String?,
    directPhone: json['DirectPhone'] as String?,
    email: json['Email'] as String?,
    fax: json['Fax'] as String?,
    faxExtension: json['FaxExtension'] as String?,
    firstName: json['FirstName'] as String?,
    firstNameColor: json['FirstNameColor'] as String?,
    homePhone: json['HomePhone'] as String?,
    inactive: json['Inactive'] as bool?,
    inactiveDate: json['InactiveDate'] as String?,
    info: json['Info'] as String?,
    inputDate: json['InputDate'] as String?,
    modifiedDate: json['ModifiedDate'] as String?,
    lastName: json['LastName'] as String?,
    middleInitial: json['MiddleInitial'] as String?,
    mobilePhone: json['MobilePhone'] as String?,
    nameFirstMiddleLast: json['NameFirstMiddleLast'] as String?,
    officeExtension: json['OfficeExtension'] as String?,
    officePhone: json['OfficePhone'] as String?,
    pager: json['Pager'] as String?,
    pagerPin: json['PagerPin'] as String?,
    person: json['Person'] as String?,
    salutation: json['Salutation'] as String?,
    website: json['Website'] as String?,
    webStatus: json['WebStatus'] as String?,
    zipCode: json['ZipCode'] as String?,
    state: json['State'] as String?,
    sourceId: json['SourceId'] as String?,
    userId: json['UserId'] as String?,
    password: json['Password'] as String?,
    changePasswordAtNextLogin: json['ChangePasswordAtNextLogin'] as bool?,
    expirePassword: json['ExpirePassword'] as bool?,
    expireDays: json['ExpireDays'] as int?,
    passwordLastUpdated: json['PasswordLastUpdated'] as String?,
    webUserId: json['WebUserId'] as String?,
    webUserContactId: json['WebUserContactId'] as String?,
    webUserUserId: json['WebUserUserId'] as String?,
    webAccess: json['WebAccess'] as bool?,
    lockAccount: json['LockAccount'] as bool?,
    defaultDealId: json['DefaultDealId'] as String?,
    defaultDeal: json['DefaultDeal'] as String?,
    webCatalogId: json['WebCatalogId'] as String?,
    webCatalog: json['WebCatalog'] as String?,
    locationId: json['LocationId'] as String?,
    location: json['Location'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    webQuoteRequest: json['WebQuoteRequest'] as bool?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentContactContactToJson(
        WebApiModulesAgentContactContact instance) =>
    <String, dynamic>{
      'ContactId': instance.contactId,
      'ActiveDate': instance.activeDate,
      'Address1': instance.address1,
      'Address2': instance.address2,
      'Barcode': instance.barcode,
      'City': instance.city,
      'ContactRecordType': instance.contactRecordType,
      'ContactRecordTypeColor': instance.contactRecordTypeColor,
      'ContactTitleId': instance.contactTitleId,
      'ContactTitle': instance.contactTitle,
      'Country': instance.country,
      'CountryId': instance.countryId,
      'DateStamp': instance.dateStamp,
      'DirectExtension': instance.directExtension,
      'DirectPhone': instance.directPhone,
      'Email': instance.email,
      'Fax': instance.fax,
      'FaxExtension': instance.faxExtension,
      'FirstName': instance.firstName,
      'FirstNameColor': instance.firstNameColor,
      'HomePhone': instance.homePhone,
      'Inactive': instance.inactive,
      'InactiveDate': instance.inactiveDate,
      'Info': instance.info,
      'InputDate': instance.inputDate,
      'ModifiedDate': instance.modifiedDate,
      'LastName': instance.lastName,
      'MiddleInitial': instance.middleInitial,
      'MobilePhone': instance.mobilePhone,
      'NameFirstMiddleLast': instance.nameFirstMiddleLast,
      'OfficeExtension': instance.officeExtension,
      'OfficePhone': instance.officePhone,
      'Pager': instance.pager,
      'PagerPin': instance.pagerPin,
      'Person': instance.person,
      'Salutation': instance.salutation,
      'Website': instance.website,
      'WebStatus': instance.webStatus,
      'ZipCode': instance.zipCode,
      'State': instance.state,
      'SourceId': instance.sourceId,
      'UserId': instance.userId,
      'Password': instance.password,
      'ChangePasswordAtNextLogin': instance.changePasswordAtNextLogin,
      'ExpirePassword': instance.expirePassword,
      'ExpireDays': instance.expireDays,
      'PasswordLastUpdated': instance.passwordLastUpdated,
      'WebUserId': instance.webUserId,
      'WebUserContactId': instance.webUserContactId,
      'WebUserUserId': instance.webUserUserId,
      'WebAccess': instance.webAccess,
      'LockAccount': instance.lockAccount,
      'DefaultDealId': instance.defaultDealId,
      'DefaultDeal': instance.defaultDeal,
      'WebCatalogId': instance.webCatalogId,
      'WebCatalog': instance.webCatalog,
      'LocationId': instance.locationId,
      'Location': instance.location,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'WebQuoteRequest': instance.webQuoteRequest,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentContactContactDocument
    _$WebApiModulesAgentContactContactDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentContactContactDocument(
    contactId: json['ContactId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentContactContactDocumentToJson(
        WebApiModulesAgentContactContactDocument instance) =>
    <String, dynamic>{
      'ContactId': instance.contactId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentContactContactDocumentPostRequest
    _$WebApiModulesAgentContactContactDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentContactContactDocumentPostRequest(
    contactId: json['ContactId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentContactContactDocumentPostRequestToJson(
            WebApiModulesAgentContactContactDocumentPostRequest instance) =>
        <String, dynamic>{
          'ContactId': instance.contactId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesAgentContactContactDocumentPutRequest
    _$WebApiModulesAgentContactContactDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentContactContactDocumentPutRequest(
    contactId: json['ContactId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentContactContactDocumentPutRequestToJson(
        WebApiModulesAgentContactContactDocumentPutRequest instance) =>
    <String, dynamic>{
      'ContactId': instance.contactId,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesAgentCustomerCustomer _$WebApiModulesAgentCustomerCustomerFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesAgentCustomerCustomer(
    customerId: json['CustomerId'] as String?,
    customerNumber: json['CustomerNumber'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    customerTypeId: json['CustomerTypeId'] as String?,
    customerType: json['CustomerType'] as String?,
    customerCategoryId: json['CustomerCategoryId'] as String?,
    customerCategory: json['CustomerCategory'] as String?,
    customer: json['Customer'] as String?,
    address1: json['Address1'] as String?,
    address2: json['Address2'] as String?,
    city: json['City'] as String?,
    state: json['State'] as String?,
    countryId: json['CountryId'] as String?,
    country: json['Country'] as String?,
    zipCode: json['ZipCode'] as String?,
    parentCustomerId: json['ParentCustomerId'] as String?,
    parentCustomer: json['ParentCustomer'] as String?,
    phone: json['Phone'] as String?,
    fax: json['Fax'] as String?,
    phoneTollFree: json['PhoneTollFree'] as String?,
    otherPhone: json['OtherPhone'] as String?,
    webAddress: json['WebAddress'] as String?,
    customerStatusId: json['CustomerStatusId'] as String?,
    customerStatus: json['CustomerStatus'] as String?,
    statusAsOf: json['StatusAsOf'] as String?,
    termsAndConditionsOnFile: json['TermsAndConditionsOnFile'] as bool?,
    billingAddressType: json['BillingAddressType'] as String?,
    billToAttention1: json['BillToAttention1'] as String?,
    billToAttention2: json['BillToAttention2'] as String?,
    billToAddress1: json['BillToAddress1'] as String?,
    billToAddress2: json['BillToAddress2'] as String?,
    billToCity: json['BillToCity'] as String?,
    billToState: json['BillToState'] as String?,
    billToCountryId: json['BillToCountryId'] as String?,
    billToCountry: json['BillToCountry'] as String?,
    billToZipCode: json['BillToZipCode'] as String?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    vehicleRentalAgreementComplete:
        json['VehicleRentalAgreementComplete'] as bool?,
    useDiscountTemplate: json['UseDiscountTemplate'] as bool?,
    discountTemplateId: json['DiscountTemplateId'] as String?,
    discountTemplate: json['DiscountTemplate'] as String?,
    creditStatusId: json['CreditStatusId'] as String?,
    creditStatus: json['CreditStatus'] as String?,
    creditStatusThroughDate: json['CreditStatusThroughDate'] as String?,
    creditApplicationOnFile: json['CreditApplicationOnFile'] as bool?,
    creditUnlimited: json['CreditUnlimited'] as bool?,
    creditLimit: json['CreditLimit'] as int?,
    creditBalance: json['CreditBalance'] as int?,
    creditAvailable: json['CreditAvailable'] as int?,
    creditResponsiblePartyOnFile: json['CreditResponsiblePartyOnFile'] as bool?,
    creditResponsibleParty: json['CreditResponsibleParty'] as String?,
    tradeReferencesVerified: json['TradeReferencesVerified'] as bool?,
    tradeReferencesVerifiedBy: json['TradeReferencesVerifiedBy'] as String?,
    tradeReferencesVerifiedOn: json['TradeReferencesVerifiedOn'] as String?,
    creditCardTypeId: json['CreditCardTypeId'] as String?,
    creditCardType: json['CreditCardType'] as String?,
    creditCardLimit: json['CreditCardLimit'] as int?,
    creditCardNo: json['CreditCardNo'] as String?,
    creditCardCode: json['CreditCardCode'] as String?,
    creditCardExpirationMonth: json['CreditCardExpirationMonth'] as int?,
    creditCardExpirationYear: json['CreditCardExpirationYear'] as int?,
    creditCardName: json['CreditCardName'] as String?,
    creditCardAuthorizationOnFile:
        json['CreditCardAuthorizationOnFile'] as bool?,
    insuranceCertificationOnFile: json['InsuranceCertificationOnFile'] as bool?,
    insuranceCertificationValidThrough:
        json['InsuranceCertificationValidThrough'] as String?,
    insuranceCoverageLiability: json['InsuranceCoverageLiability'] as int?,
    insuranceCoverageLiabilityDeductible:
        json['InsuranceCoverageLiabilityDeductible'] as int?,
    insuranceCoveragePropertyValue:
        json['InsuranceCoveragePropertyValue'] as int?,
    insuranceCoveragePropertyValueDeductible:
        json['InsuranceCoveragePropertyValueDeductible'] as int?,
    insuranceCompanyId: json['InsuranceCompanyId'] as String?,
    insuranceCompany: json['InsuranceCompany'] as String?,
    insuranceAgent: json['InsuranceAgent'] as String?,
    insuranceCompanyAddress1: json['InsuranceCompanyAddress1'] as String?,
    insuranceCompanyAddress2: json['InsuranceCompanyAddress2'] as String?,
    insuranceCompanyCity: json['InsuranceCompanyCity'] as String?,
    insuranceCompanyState: json['InsuranceCompanyState'] as String?,
    insuranceCompanyZipCode: json['InsuranceCompanyZipCode'] as String?,
    insuranceCompanyCountryId: json['InsuranceCompanyCountryId'] as String?,
    insuranceCompanyCountry: json['InsuranceCompanyCountry'] as String?,
    insuranceCompanyPhone: json['InsuranceCompanyPhone'] as String?,
    insuranceCompanyFax: json['InsuranceCompanyFax'] as String?,
    vehicleInsuranceCertficationOnFile:
        json['VehicleInsuranceCertficationOnFile'] as bool?,
    taxable: json['Taxable'] as bool?,
    taxStateOfIncorporationId: json['TaxStateOfIncorporationId'] as String?,
    taxStateOfIncorporation: json['TaxStateOfIncorporation'] as String?,
    taxFederalNo: json['TaxFederalNo'] as String?,
    nonTaxableYear: json['NonTaxableYear'] as int?,
    nonTaxableCertificateNo: json['NonTaxableCertificateNo'] as String?,
    nonTaxableCertificateValidThrough:
        json['NonTaxableCertificateValidThrough'] as String?,
    nonTaxableCertificateOnFile: json['NonTaxableCertificateOnFile'] as bool?,
    disableQuoteOrderActivity: json['DisableQuoteOrderActivity'] as bool?,
    disableRental: json['DisableRental'] as bool?,
    disableSales: json['DisableSales'] as bool?,
    disableFacilities: json['DisableFacilities'] as bool?,
    disableTransportation: json['DisableTransportation'] as bool?,
    disableLabor: json['DisableLabor'] as bool?,
    disableMisc: json['DisableMisc'] as bool?,
    disableRentalSale: json['DisableRentalSale'] as bool?,
    disableSubRental: json['DisableSubRental'] as bool?,
    disableSubSale: json['DisableSubSale'] as bool?,
    disableSubLabor: json['DisableSubLabor'] as bool?,
    disableSubMisc: json['DisableSubMisc'] as bool?,
    splitRental: json['SplitRental'] as bool?,
    splitRentalTaxCustomer: json['SplitRentalTaxCustomer'] as bool?,
    ownedEquipmentSplitRentalPerecent:
        json['OwnedEquipmentSplitRentalPerecent'] as int?,
    subRentalEquipmentSplitRentalPerecent:
        json['SubRentalEquipmentSplitRentalPerecent'] as int?,
    rebateRental: json['RebateRental'] as bool?,
    ownedEquipmentRebateRentalPerecent:
        json['OwnedEquipmentRebateRentalPerecent'] as int?,
    subRentalEquipmentRebateRentalPerecent:
        json['SubRentalEquipmentRebateRentalPerecent'] as int?,
    splitRentalLogoFileName: json['SplitRentalLogoFileName'] as String?,
    splitRentalLogoWidth: json['SplitRentalLogoWidth'] as int?,
    splitRentalLogoHeight: json['SplitRentalLogoHeight'] as int?,
    shippingAddressType: json['ShippingAddressType'] as String?,
    shipAttention: json['ShipAttention'] as String?,
    shipAddress1: json['ShipAddress1'] as String?,
    shipAddress2: json['ShipAddress2'] as String?,
    shipCity: json['ShipCity'] as String?,
    shipState: json['ShipState'] as String?,
    shipCountryId: json['ShipCountryId'] as String?,
    shipCountry: json['ShipCountry'] as String?,
    shipZipCode: json['ShipZipCode'] as String?,
    email: json['Email'] as String?,
    multipleCurrencies: json['MultipleCurrencies'] as bool?,
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    securityDepositAmount: (json['SecurityDepositAmount'] as num?)?.toDouble(),
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentCustomerCustomerToJson(
        WebApiModulesAgentCustomerCustomer instance) =>
    <String, dynamic>{
      'CustomerId': instance.customerId,
      'CustomerNumber': instance.customerNumber,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'CustomerTypeId': instance.customerTypeId,
      'CustomerType': instance.customerType,
      'CustomerCategoryId': instance.customerCategoryId,
      'CustomerCategory': instance.customerCategory,
      'Customer': instance.customer,
      'Address1': instance.address1,
      'Address2': instance.address2,
      'City': instance.city,
      'State': instance.state,
      'CountryId': instance.countryId,
      'Country': instance.country,
      'ZipCode': instance.zipCode,
      'ParentCustomerId': instance.parentCustomerId,
      'ParentCustomer': instance.parentCustomer,
      'Phone': instance.phone,
      'Fax': instance.fax,
      'PhoneTollFree': instance.phoneTollFree,
      'OtherPhone': instance.otherPhone,
      'WebAddress': instance.webAddress,
      'CustomerStatusId': instance.customerStatusId,
      'CustomerStatus': instance.customerStatus,
      'StatusAsOf': instance.statusAsOf,
      'TermsAndConditionsOnFile': instance.termsAndConditionsOnFile,
      'BillingAddressType': instance.billingAddressType,
      'BillToAttention1': instance.billToAttention1,
      'BillToAttention2': instance.billToAttention2,
      'BillToAddress1': instance.billToAddress1,
      'BillToAddress2': instance.billToAddress2,
      'BillToCity': instance.billToCity,
      'BillToState': instance.billToState,
      'BillToCountryId': instance.billToCountryId,
      'BillToCountry': instance.billToCountry,
      'BillToZipCode': instance.billToZipCode,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'VehicleRentalAgreementComplete': instance.vehicleRentalAgreementComplete,
      'UseDiscountTemplate': instance.useDiscountTemplate,
      'DiscountTemplateId': instance.discountTemplateId,
      'DiscountTemplate': instance.discountTemplate,
      'CreditStatusId': instance.creditStatusId,
      'CreditStatus': instance.creditStatus,
      'CreditStatusThroughDate': instance.creditStatusThroughDate,
      'CreditApplicationOnFile': instance.creditApplicationOnFile,
      'CreditUnlimited': instance.creditUnlimited,
      'CreditLimit': instance.creditLimit,
      'CreditBalance': instance.creditBalance,
      'CreditAvailable': instance.creditAvailable,
      'CreditResponsiblePartyOnFile': instance.creditResponsiblePartyOnFile,
      'CreditResponsibleParty': instance.creditResponsibleParty,
      'TradeReferencesVerified': instance.tradeReferencesVerified,
      'TradeReferencesVerifiedBy': instance.tradeReferencesVerifiedBy,
      'TradeReferencesVerifiedOn': instance.tradeReferencesVerifiedOn,
      'CreditCardTypeId': instance.creditCardTypeId,
      'CreditCardType': instance.creditCardType,
      'CreditCardLimit': instance.creditCardLimit,
      'CreditCardNo': instance.creditCardNo,
      'CreditCardCode': instance.creditCardCode,
      'CreditCardExpirationMonth': instance.creditCardExpirationMonth,
      'CreditCardExpirationYear': instance.creditCardExpirationYear,
      'CreditCardName': instance.creditCardName,
      'CreditCardAuthorizationOnFile': instance.creditCardAuthorizationOnFile,
      'InsuranceCertificationOnFile': instance.insuranceCertificationOnFile,
      'InsuranceCertificationValidThrough':
          instance.insuranceCertificationValidThrough,
      'InsuranceCoverageLiability': instance.insuranceCoverageLiability,
      'InsuranceCoverageLiabilityDeductible':
          instance.insuranceCoverageLiabilityDeductible,
      'InsuranceCoveragePropertyValue': instance.insuranceCoveragePropertyValue,
      'InsuranceCoveragePropertyValueDeductible':
          instance.insuranceCoveragePropertyValueDeductible,
      'InsuranceCompanyId': instance.insuranceCompanyId,
      'InsuranceCompany': instance.insuranceCompany,
      'InsuranceAgent': instance.insuranceAgent,
      'InsuranceCompanyAddress1': instance.insuranceCompanyAddress1,
      'InsuranceCompanyAddress2': instance.insuranceCompanyAddress2,
      'InsuranceCompanyCity': instance.insuranceCompanyCity,
      'InsuranceCompanyState': instance.insuranceCompanyState,
      'InsuranceCompanyZipCode': instance.insuranceCompanyZipCode,
      'InsuranceCompanyCountryId': instance.insuranceCompanyCountryId,
      'InsuranceCompanyCountry': instance.insuranceCompanyCountry,
      'InsuranceCompanyPhone': instance.insuranceCompanyPhone,
      'InsuranceCompanyFax': instance.insuranceCompanyFax,
      'VehicleInsuranceCertficationOnFile':
          instance.vehicleInsuranceCertficationOnFile,
      'Taxable': instance.taxable,
      'TaxStateOfIncorporationId': instance.taxStateOfIncorporationId,
      'TaxStateOfIncorporation': instance.taxStateOfIncorporation,
      'TaxFederalNo': instance.taxFederalNo,
      'NonTaxableYear': instance.nonTaxableYear,
      'NonTaxableCertificateNo': instance.nonTaxableCertificateNo,
      'NonTaxableCertificateValidThrough':
          instance.nonTaxableCertificateValidThrough,
      'NonTaxableCertificateOnFile': instance.nonTaxableCertificateOnFile,
      'DisableQuoteOrderActivity': instance.disableQuoteOrderActivity,
      'DisableRental': instance.disableRental,
      'DisableSales': instance.disableSales,
      'DisableFacilities': instance.disableFacilities,
      'DisableTransportation': instance.disableTransportation,
      'DisableLabor': instance.disableLabor,
      'DisableMisc': instance.disableMisc,
      'DisableRentalSale': instance.disableRentalSale,
      'DisableSubRental': instance.disableSubRental,
      'DisableSubSale': instance.disableSubSale,
      'DisableSubLabor': instance.disableSubLabor,
      'DisableSubMisc': instance.disableSubMisc,
      'SplitRental': instance.splitRental,
      'SplitRentalTaxCustomer': instance.splitRentalTaxCustomer,
      'OwnedEquipmentSplitRentalPerecent':
          instance.ownedEquipmentSplitRentalPerecent,
      'SubRentalEquipmentSplitRentalPerecent':
          instance.subRentalEquipmentSplitRentalPerecent,
      'RebateRental': instance.rebateRental,
      'OwnedEquipmentRebateRentalPerecent':
          instance.ownedEquipmentRebateRentalPerecent,
      'SubRentalEquipmentRebateRentalPerecent':
          instance.subRentalEquipmentRebateRentalPerecent,
      'SplitRentalLogoFileName': instance.splitRentalLogoFileName,
      'SplitRentalLogoWidth': instance.splitRentalLogoWidth,
      'SplitRentalLogoHeight': instance.splitRentalLogoHeight,
      'ShippingAddressType': instance.shippingAddressType,
      'ShipAttention': instance.shipAttention,
      'ShipAddress1': instance.shipAddress1,
      'ShipAddress2': instance.shipAddress2,
      'ShipCity': instance.shipCity,
      'ShipState': instance.shipState,
      'ShipCountryId': instance.shipCountryId,
      'ShipCountry': instance.shipCountry,
      'ShipZipCode': instance.shipZipCode,
      'Email': instance.email,
      'MultipleCurrencies': instance.multipleCurrencies,
      'CurrencyId': instance.currencyId,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'SecurityDepositAmount': instance.securityDepositAmount,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentCustomerCustomerDocument
    _$WebApiModulesAgentCustomerCustomerDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentCustomerCustomerDocument(
    customerId: json['CustomerId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentCustomerCustomerDocumentToJson(
        WebApiModulesAgentCustomerCustomerDocument instance) =>
    <String, dynamic>{
      'CustomerId': instance.customerId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentCustomerCustomerDocumentPostRequest
    _$WebApiModulesAgentCustomerCustomerDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentCustomerCustomerDocumentPostRequest(
    customerId: json['CustomerId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentCustomerCustomerDocumentPostRequestToJson(
            WebApiModulesAgentCustomerCustomerDocumentPostRequest instance) =>
        <String, dynamic>{
          'CustomerId': instance.customerId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesAgentCustomerCustomerDocumentPutRequest
    _$WebApiModulesAgentCustomerCustomerDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentCustomerCustomerDocumentPutRequest(
    customerId: json['CustomerId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentCustomerCustomerDocumentPutRequestToJson(
            WebApiModulesAgentCustomerCustomerDocumentPutRequest instance) =>
        <String, dynamic>{
          'CustomerId': instance.customerId,
          'DocumentId': instance.documentId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesAgentDealCopyContactsFromCustomerResponse
    _$WebApiModulesAgentDealCopyContactsFromCustomerResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentDealCopyContactsFromCustomerResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentDealCopyContactsFromCustomerResponseToJson(
            WebApiModulesAgentDealCopyContactsFromCustomerResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesAgentDealDeal _$WebApiModulesAgentDealDealFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesAgentDealDeal(
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    dealNumber: json['DealNumber'] as String?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    customerNumber: json['CustomerNumber'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    dealTypeId: json['DealTypeId'] as String?,
    dealType: json['DealType'] as String?,
    address1: json['Address1'] as String?,
    address2: json['Address2'] as String?,
    city: json['City'] as String?,
    state: json['State'] as String?,
    zipCode: json['ZipCode'] as String?,
    countryId: json['CountryId'] as String?,
    country: json['Country'] as String?,
    phone: json['Phone'] as String?,
    phoneTollFree: json['PhoneTollFree'] as String?,
    fax: json['Fax'] as String?,
    phoneOther: json['PhoneOther'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    csrId: json['CsrId'] as String?,
    csr: json['Csr'] as String?,
    defaultAgentId: json['DefaultAgentId'] as String?,
    defaultAgent: json['DefaultAgent'] as String?,
    defaultProjectManagerId: json['DefaultProjectManagerId'] as String?,
    defaultProjectManager: json['DefaultProjectManager'] as String?,
    dealClassificationId: json['DealClassificationId'] as String?,
    dealClassification: json['DealClassification'] as String?,
    productionTypeId: json['ProductionTypeId'] as String?,
    productionType: json['ProductionType'] as String?,
    dealStatusId: json['DealStatusId'] as String?,
    dealStatus: json['DealStatus'] as String?,
    statusAsOf: json['StatusAsOf'] as String?,
    expectedWrapDate: json['ExpectedWrapDate'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    billingCycle: json['BillingCycle'] as String?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    defaultRate: json['DefaultRate'] as String?,
    multipleCurrencies: json['MultipleCurrencies'] as bool?,
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    useCustomerDiscount: json['UseCustomerDiscount'] as bool?,
    customerDiscountTemplateId: json['CustomerDiscountTemplateId'] as String?,
    useDiscountTemplate: json['UseDiscountTemplate'] as bool?,
    discountTemplateId: json['DiscountTemplateId'] as String?,
    discountTemplate: json['DiscountTemplate'] as String?,
    rentalDaysPerWeek: (json['RentalDaysPerWeek'] as num?)?.toDouble(),
    rentalDiscountPercent: (json['RentalDiscountPercent'] as num?)?.toDouble(),
    salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
    facilitiesDaysPerWeek: (json['FacilitiesDaysPerWeek'] as num?)?.toDouble(),
    facilitiesDiscountPercent:
        (json['FacilitiesDiscountPercent'] as num?)?.toDouble(),
    outsideSalesRepresentativeId:
        json['OutsideSalesRepresentativeId'] as String?,
    outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
    commissionRate: (json['CommissionRate'] as num?)?.toDouble(),
    commissionIncludesVendorItems:
        json['CommissionIncludesVendorItems'] as bool?,
    poRequired: json['PoRequired'] as bool?,
    poType: json['PoType'] as String?,
    billToAddressType: json['BillToAddressType'] as String?,
    billToAttention1: json['BillToAttention1'] as String?,
    billToAttention2: json['BillToAttention2'] as String?,
    billToAddress1: json['BillToAddress1'] as String?,
    billToAddress2: json['BillToAddress2'] as String?,
    billToCity: json['BillToCity'] as String?,
    billToState: json['BillToState'] as String?,
    billToCountryId: json['BillToCountryId'] as String?,
    billToCountry: json['BillToCountry'] as String?,
    billToZipCode: json['BillToZipCode'] as String?,
    assessFinanceCharge: json['AssessFinanceCharge'] as bool?,
    allowBillingScheduleOverride: json['AllowBillingScheduleOverride'] as bool?,
    allowRebateCreditInvoices: json['AllowRebateCreditInvoices'] as bool?,
    useCustomerCredit: json['UseCustomerCredit'] as bool?,
    creditStatusId: json['CreditStatusId'] as String?,
    creditStatus: json['CreditStatus'] as String?,
    creditStatusThrough: json['CreditStatusThrough'] as String?,
    creditApplicationOnFile: json['CreditApplicationOnFile'] as bool?,
    unlimitedCredit: json['UnlimitedCredit'] as bool?,
    creditLimit: json['CreditLimit'] as int?,
    creditBalance: json['CreditBalance'] as int?,
    creditAvailable: json['CreditAvailable'] as int?,
    customerCreditLimit: json['CustomerCreditLimit'] as int?,
    customerCreditBalance: json['CustomerCreditBalance'] as int?,
    customerCreditAvailable: json['CustomerCreditAvailable'] as int?,
    creditResponsiblePartyOnFile: json['CreditResponsiblePartyOnFile'] as bool?,
    creditResponsibleParty: json['CreditResponsibleParty'] as String?,
    tradeReferencesVerified: json['TradeReferencesVerified'] as bool?,
    tradeReferencesVerifiedBy: json['TradeReferencesVerifiedBy'] as String?,
    tradeReferencesVerifiedOn: json['TradeReferencesVerifiedOn'] as String?,
    creditCardTypeId: json['CreditCardTypeId'] as String?,
    creditCardType: json['CreditCardType'] as String?,
    creditCardLimit: json['CreditCardLimit'] as int?,
    creditCardNumber: json['CreditCardNumber'] as String?,
    creditCardCode: json['CreditCardCode'] as String?,
    creditCardName: json['CreditCardName'] as String?,
    creditCardExpirationMonth: json['CreditCardExpirationMonth'] as int?,
    creditCardExpirationYear: json['CreditCardExpirationYear'] as int?,
    creditCardAuthorizationFormOnFile:
        json['CreditCardAuthorizationFormOnFile'] as bool?,
    depletingDepositThresholdAmount:
        (json['DepletingDepositThresholdAmount'] as num?)?.toDouble(),
    depletingDepositThresholdPercent:
        json['DepletingDepositThresholdPercent'] as int?,
    depletingDepositTotal: (json['DepletingDepositTotal'] as num?)?.toDouble(),
    depletingDepositApplied:
        (json['DepletingDepositApplied'] as num?)?.toDouble(),
    depletingDepositRemaining:
        (json['DepletingDepositRemaining'] as num?)?.toDouble(),
    useCustomerInsurance: json['UseCustomerInsurance'] as bool?,
    insuranceCertification: json['InsuranceCertification'] as bool?,
    insuranceCertificationValidThrough:
        json['InsuranceCertificationValidThrough'] as String?,
    insuranceCoverageLiability: json['InsuranceCoverageLiability'] as int?,
    insuranceCoverageLiabilityDeductible:
        json['InsuranceCoverageLiabilityDeductible'] as int?,
    insuranceCoverageProperty: json['InsuranceCoverageProperty'] as int?,
    insuranceCoveragePropertyDeductible:
        json['InsuranceCoveragePropertyDeductible'] as int?,
    securityDepositAmount: (json['SecurityDepositAmount'] as num?)?.toDouble(),
    insuranceCompanyId: json['InsuranceCompanyId'] as String?,
    insuranceCompany: json['InsuranceCompany'] as String?,
    insuranceCompanyAgent: json['InsuranceCompanyAgent'] as String?,
    insuranceCompanyAddress1: json['InsuranceCompanyAddress1'] as String?,
    insuranceCompanyAddress2: json['InsuranceCompanyAddress2'] as String?,
    insuranceCompanyCity: json['InsuranceCompanyCity'] as String?,
    insuranceCompanyState: json['InsuranceCompanyState'] as String?,
    insuranceCompanyZipCode: json['InsuranceCompanyZipCode'] as String?,
    insuranceCompanyCountryId: json['InsuranceCompanyCountryId'] as String?,
    insuranceCompanyCountry: json['InsuranceCompanyCountry'] as String?,
    insuranceCompanyPhone: json['InsuranceCompanyPhone'] as String?,
    insuranceCompanyFax: json['InsuranceCompanyFax'] as String?,
    vehicleInsuranceCertification:
        json['VehicleInsuranceCertification'] as bool?,
    useCustomerTax: json['UseCustomerTax'] as bool?,
    taxable: json['Taxable'] as bool?,
    taxStateOfIncorporationId: json['TaxStateOfIncorporationId'] as String?,
    taxStateOfIncorporation: json['TaxStateOfIncorporation'] as String?,
    taxFederalNo: json['TaxFederalNo'] as String?,
    nonTaxableYear: json['NonTaxableYear'] as int?,
    nonTaxableCertificateNo: json['NonTaxableCertificateNo'] as String?,
    nonTaxableCertificateValidThrough:
        json['NonTaxableCertificateValidThrough'] as String?,
    nonTaxableCertificateOnFile: json['NonTaxableCertificateOnFile'] as bool?,
    disableQuoteOrderActivity: json['DisableQuoteOrderActivity'] as bool?,
    disableRental: json['DisableRental'] as bool?,
    disableSales: json['DisableSales'] as bool?,
    disableFacilities: json['DisableFacilities'] as bool?,
    disableTransportation: json['DisableTransportation'] as bool?,
    disableLabor: json['DisableLabor'] as bool?,
    disableMisc: json['DisableMisc'] as bool?,
    disableRentalSale: json['DisableRentalSale'] as bool?,
    disableSubRental: json['DisableSubRental'] as bool?,
    disableSubSale: json['DisableSubSale'] as bool?,
    disableSubLabor: json['DisableSubLabor'] as bool?,
    disableSubMisc: json['DisableSubMisc'] as bool?,
    defaultOutgoingDeliveryType: json['DefaultOutgoingDeliveryType'] as String?,
    defaultIncomingDeliveryType: json['DefaultIncomingDeliveryType'] as String?,
    shippingAddressType: json['ShippingAddressType'] as String?,
    shipAttention: json['ShipAttention'] as String?,
    shipAddress1: json['ShipAddress1'] as String?,
    shipAddress2: json['ShipAddress2'] as String?,
    shipCity: json['ShipCity'] as String?,
    shipState: json['ShipState'] as String?,
    shipCountryId: json['ShipCountryId'] as String?,
    shipCountry: json['ShipCountry'] as String?,
    shipZipCode: json['ShipZipCode'] as String?,
    rebateRental: json['RebateRental'] as bool?,
    rebateCustomerId: json['RebateCustomerId'] as String?,
    rebateCustomer: json['RebateCustomer'] as String?,
    ownedEquipmentRebateRentalPerecent:
        json['OwnedEquipmentRebateRentalPerecent'] as int?,
    subRentalEquipmentRebateRentalPerecent:
        json['SubRentalEquipmentRebateRentalPerecent'] as int?,
    enableWebQuoteRequest: json['EnableWebQuoteRequest'] as bool?,
    email: json['Email'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentDealDealToJson(
        WebApiModulesAgentDealDeal instance) =>
    <String, dynamic>{
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'DealNumber': instance.dealNumber,
      'CustomerId': instance.customerId,
      'Customer': instance.customer,
      'CustomerNumber': instance.customerNumber,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'DealTypeId': instance.dealTypeId,
      'DealType': instance.dealType,
      'Address1': instance.address1,
      'Address2': instance.address2,
      'City': instance.city,
      'State': instance.state,
      'ZipCode': instance.zipCode,
      'CountryId': instance.countryId,
      'Country': instance.country,
      'Phone': instance.phone,
      'PhoneTollFree': instance.phoneTollFree,
      'Fax': instance.fax,
      'PhoneOther': instance.phoneOther,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'CsrId': instance.csrId,
      'Csr': instance.csr,
      'DefaultAgentId': instance.defaultAgentId,
      'DefaultAgent': instance.defaultAgent,
      'DefaultProjectManagerId': instance.defaultProjectManagerId,
      'DefaultProjectManager': instance.defaultProjectManager,
      'DealClassificationId': instance.dealClassificationId,
      'DealClassification': instance.dealClassification,
      'ProductionTypeId': instance.productionTypeId,
      'ProductionType': instance.productionType,
      'DealStatusId': instance.dealStatusId,
      'DealStatus': instance.dealStatus,
      'StatusAsOf': instance.statusAsOf,
      'ExpectedWrapDate': instance.expectedWrapDate,
      'BillingCycleId': instance.billingCycleId,
      'BillingCycle': instance.billingCycle,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'PaymentTypeId': instance.paymentTypeId,
      'PaymentType': instance.paymentType,
      'DefaultRate': instance.defaultRate,
      'MultipleCurrencies': instance.multipleCurrencies,
      'CurrencyId': instance.currencyId,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'UseCustomerDiscount': instance.useCustomerDiscount,
      'CustomerDiscountTemplateId': instance.customerDiscountTemplateId,
      'UseDiscountTemplate': instance.useDiscountTemplate,
      'DiscountTemplateId': instance.discountTemplateId,
      'DiscountTemplate': instance.discountTemplate,
      'RentalDaysPerWeek': instance.rentalDaysPerWeek,
      'RentalDiscountPercent': instance.rentalDiscountPercent,
      'SalesDiscountPercent': instance.salesDiscountPercent,
      'FacilitiesDaysPerWeek': instance.facilitiesDaysPerWeek,
      'FacilitiesDiscountPercent': instance.facilitiesDiscountPercent,
      'OutsideSalesRepresentativeId': instance.outsideSalesRepresentativeId,
      'OutsideSalesRepresentative': instance.outsideSalesRepresentative,
      'CommissionRate': instance.commissionRate,
      'CommissionIncludesVendorItems': instance.commissionIncludesVendorItems,
      'PoRequired': instance.poRequired,
      'PoType': instance.poType,
      'BillToAddressType': instance.billToAddressType,
      'BillToAttention1': instance.billToAttention1,
      'BillToAttention2': instance.billToAttention2,
      'BillToAddress1': instance.billToAddress1,
      'BillToAddress2': instance.billToAddress2,
      'BillToCity': instance.billToCity,
      'BillToState': instance.billToState,
      'BillToCountryId': instance.billToCountryId,
      'BillToCountry': instance.billToCountry,
      'BillToZipCode': instance.billToZipCode,
      'AssessFinanceCharge': instance.assessFinanceCharge,
      'AllowBillingScheduleOverride': instance.allowBillingScheduleOverride,
      'AllowRebateCreditInvoices': instance.allowRebateCreditInvoices,
      'UseCustomerCredit': instance.useCustomerCredit,
      'CreditStatusId': instance.creditStatusId,
      'CreditStatus': instance.creditStatus,
      'CreditStatusThrough': instance.creditStatusThrough,
      'CreditApplicationOnFile': instance.creditApplicationOnFile,
      'UnlimitedCredit': instance.unlimitedCredit,
      'CreditLimit': instance.creditLimit,
      'CreditBalance': instance.creditBalance,
      'CreditAvailable': instance.creditAvailable,
      'CustomerCreditLimit': instance.customerCreditLimit,
      'CustomerCreditBalance': instance.customerCreditBalance,
      'CustomerCreditAvailable': instance.customerCreditAvailable,
      'CreditResponsiblePartyOnFile': instance.creditResponsiblePartyOnFile,
      'CreditResponsibleParty': instance.creditResponsibleParty,
      'TradeReferencesVerified': instance.tradeReferencesVerified,
      'TradeReferencesVerifiedBy': instance.tradeReferencesVerifiedBy,
      'TradeReferencesVerifiedOn': instance.tradeReferencesVerifiedOn,
      'CreditCardTypeId': instance.creditCardTypeId,
      'CreditCardType': instance.creditCardType,
      'CreditCardLimit': instance.creditCardLimit,
      'CreditCardNumber': instance.creditCardNumber,
      'CreditCardCode': instance.creditCardCode,
      'CreditCardName': instance.creditCardName,
      'CreditCardExpirationMonth': instance.creditCardExpirationMonth,
      'CreditCardExpirationYear': instance.creditCardExpirationYear,
      'CreditCardAuthorizationFormOnFile':
          instance.creditCardAuthorizationFormOnFile,
      'DepletingDepositThresholdAmount':
          instance.depletingDepositThresholdAmount,
      'DepletingDepositThresholdPercent':
          instance.depletingDepositThresholdPercent,
      'DepletingDepositTotal': instance.depletingDepositTotal,
      'DepletingDepositApplied': instance.depletingDepositApplied,
      'DepletingDepositRemaining': instance.depletingDepositRemaining,
      'UseCustomerInsurance': instance.useCustomerInsurance,
      'InsuranceCertification': instance.insuranceCertification,
      'InsuranceCertificationValidThrough':
          instance.insuranceCertificationValidThrough,
      'InsuranceCoverageLiability': instance.insuranceCoverageLiability,
      'InsuranceCoverageLiabilityDeductible':
          instance.insuranceCoverageLiabilityDeductible,
      'InsuranceCoverageProperty': instance.insuranceCoverageProperty,
      'InsuranceCoveragePropertyDeductible':
          instance.insuranceCoveragePropertyDeductible,
      'SecurityDepositAmount': instance.securityDepositAmount,
      'InsuranceCompanyId': instance.insuranceCompanyId,
      'InsuranceCompany': instance.insuranceCompany,
      'InsuranceCompanyAgent': instance.insuranceCompanyAgent,
      'InsuranceCompanyAddress1': instance.insuranceCompanyAddress1,
      'InsuranceCompanyAddress2': instance.insuranceCompanyAddress2,
      'InsuranceCompanyCity': instance.insuranceCompanyCity,
      'InsuranceCompanyState': instance.insuranceCompanyState,
      'InsuranceCompanyZipCode': instance.insuranceCompanyZipCode,
      'InsuranceCompanyCountryId': instance.insuranceCompanyCountryId,
      'InsuranceCompanyCountry': instance.insuranceCompanyCountry,
      'InsuranceCompanyPhone': instance.insuranceCompanyPhone,
      'InsuranceCompanyFax': instance.insuranceCompanyFax,
      'VehicleInsuranceCertification': instance.vehicleInsuranceCertification,
      'UseCustomerTax': instance.useCustomerTax,
      'Taxable': instance.taxable,
      'TaxStateOfIncorporationId': instance.taxStateOfIncorporationId,
      'TaxStateOfIncorporation': instance.taxStateOfIncorporation,
      'TaxFederalNo': instance.taxFederalNo,
      'NonTaxableYear': instance.nonTaxableYear,
      'NonTaxableCertificateNo': instance.nonTaxableCertificateNo,
      'NonTaxableCertificateValidThrough':
          instance.nonTaxableCertificateValidThrough,
      'NonTaxableCertificateOnFile': instance.nonTaxableCertificateOnFile,
      'DisableQuoteOrderActivity': instance.disableQuoteOrderActivity,
      'DisableRental': instance.disableRental,
      'DisableSales': instance.disableSales,
      'DisableFacilities': instance.disableFacilities,
      'DisableTransportation': instance.disableTransportation,
      'DisableLabor': instance.disableLabor,
      'DisableMisc': instance.disableMisc,
      'DisableRentalSale': instance.disableRentalSale,
      'DisableSubRental': instance.disableSubRental,
      'DisableSubSale': instance.disableSubSale,
      'DisableSubLabor': instance.disableSubLabor,
      'DisableSubMisc': instance.disableSubMisc,
      'DefaultOutgoingDeliveryType': instance.defaultOutgoingDeliveryType,
      'DefaultIncomingDeliveryType': instance.defaultIncomingDeliveryType,
      'ShippingAddressType': instance.shippingAddressType,
      'ShipAttention': instance.shipAttention,
      'ShipAddress1': instance.shipAddress1,
      'ShipAddress2': instance.shipAddress2,
      'ShipCity': instance.shipCity,
      'ShipState': instance.shipState,
      'ShipCountryId': instance.shipCountryId,
      'ShipCountry': instance.shipCountry,
      'ShipZipCode': instance.shipZipCode,
      'RebateRental': instance.rebateRental,
      'RebateCustomerId': instance.rebateCustomerId,
      'RebateCustomer': instance.rebateCustomer,
      'OwnedEquipmentRebateRentalPerecent':
          instance.ownedEquipmentRebateRentalPerecent,
      'SubRentalEquipmentRebateRentalPerecent':
          instance.subRentalEquipmentRebateRentalPerecent,
      'EnableWebQuoteRequest': instance.enableWebQuoteRequest,
      'Email': instance.email,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentDealDealDocument _$WebApiModulesAgentDealDealDocumentFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesAgentDealDealDocument(
    dealId: json['DealId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentDealDealDocumentToJson(
        WebApiModulesAgentDealDealDocument instance) =>
    <String, dynamic>{
      'DealId': instance.dealId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentDealDealDocumentPostRequest
    _$WebApiModulesAgentDealDealDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentDealDealDocumentPostRequest(
    dealId: json['DealId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentDealDealDocumentPostRequestToJson(
        WebApiModulesAgentDealDealDocumentPostRequest instance) =>
    <String, dynamic>{
      'DealId': instance.dealId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesAgentDealDealDocumentPutRequest
    _$WebApiModulesAgentDealDealDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentDealDealDocumentPutRequest(
    dealId: json['DealId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentDealDealDocumentPutRequestToJson(
        WebApiModulesAgentDealDealDocumentPutRequest instance) =>
    <String, dynamic>{
      'DealId': instance.dealId,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesAgentOrderCancelUncancelQuoteResponse
    _$WebApiModulesAgentOrderCancelUncancelQuoteResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCancelUncancelQuoteResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    quote: json['Quote'] == null
        ? null
        : WebApiModulesAgentQuoteQuote.fromJson(
            json['Quote'] as Map<String, dynamic>),
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderCancelUncancelQuoteResponseToJson(
        WebApiModulesAgentOrderCancelUncancelQuoteResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'Quote': instance.quote?.toJson(),
    };

WebApiModulesAgentOrderChangeOrderOfficeLocationRequest
    _$WebApiModulesAgentOrderChangeOrderOfficeLocationRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderChangeOrderOfficeLocationRequest(
    officeLocationId: json['OfficeLocationId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentOrderChangeOrderOfficeLocationRequestToJson(
            WebApiModulesAgentOrderChangeOrderOfficeLocationRequest instance) =>
        <String, dynamic>{
          'OfficeLocationId': instance.officeLocationId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesAgentOrderChangeOrderOfficeLocationResponse
    _$WebApiModulesAgentOrderChangeOrderOfficeLocationResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderChangeOrderOfficeLocationResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    quoteOrOrder: json['quoteOrOrder'] == null
        ? null
        : WebApiModulesAgentOrderOrderBase.fromJson(
            json['quoteOrOrder'] as Map<String, dynamic>),
  );
}

Map<String,
    dynamic> _$WebApiModulesAgentOrderChangeOrderOfficeLocationResponseToJson(
        WebApiModulesAgentOrderChangeOrderOfficeLocationResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'quoteOrOrder': instance.quoteOrOrder?.toJson(),
    };

WebApiModulesAgentOrderCompletePoWorksheetSessionRequest
    _$WebApiModulesAgentOrderCompletePoWorksheetSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCompletePoWorksheetSessionRequest(
    sessionId: json['SessionId'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesAgentOrderCompletePoWorksheetSessionRequestToJson(
        WebApiModulesAgentOrderCompletePoWorksheetSessionRequest instance) =>
    <String, dynamic>{
      'SessionId': instance.sessionId,
    };

WebApiModulesAgentOrderCompletePoWorksheetSessionResponse
    _$WebApiModulesAgentOrderCompletePoWorksheetSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCompletePoWorksheetSessionResponse(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesAgentOrderCompletePoWorksheetSessionResponseToJson(
        WebApiModulesAgentOrderCompletePoWorksheetSessionResponse instance) =>
    <String, dynamic>{
      'PurchaseOrderId': instance.purchaseOrderId,
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesAgentOrderCopyOrderItemsRequest
    _$WebApiModulesAgentOrderCopyOrderItemsRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCopyOrderItemsRequest(
    orderId: json['OrderId'] as String?,
    orderItemIds: (json['OrderItemIds'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderCopyOrderItemsRequestToJson(
        WebApiModulesAgentOrderCopyOrderItemsRequest instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'OrderItemIds': instance.orderItemIds,
    };

WebApiModulesAgentOrderCopyOrderItemsResponse
    _$WebApiModulesAgentOrderCopyOrderItemsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCopyOrderItemsResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    orderItemIds: (json['OrderItemIds'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderCopyOrderItemsResponseToJson(
        WebApiModulesAgentOrderCopyOrderItemsResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'OrderItemIds': instance.orderItemIds,
    };

WebApiModulesAgentOrderCopyQuoteOrderRequest
    _$WebApiModulesAgentOrderCopyQuoteOrderRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCopyQuoteOrderRequest(
    copyToType: json['CopyToType'] as String?,
    locationId: json['LocationId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderCopyQuoteOrderRequestToJson(
        WebApiModulesAgentOrderCopyQuoteOrderRequest instance) =>
    <String, dynamic>{
      'CopyToType': instance.copyToType,
      'LocationId': instance.locationId,
      'WarehouseId': instance.warehouseId,
    };

WebApiModulesAgentOrderCopyQuoteOrderResponse
    _$WebApiModulesAgentOrderCopyQuoteOrderResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCopyQuoteOrderResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    copy: json['Copy'] == null
        ? null
        : WebApiModulesAgentOrderOrderBase.fromJson(
            json['Copy'] as Map<String, dynamic>),
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderCopyQuoteOrderResponseToJson(
        WebApiModulesAgentOrderCopyQuoteOrderResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'Copy': instance.copy?.toJson(),
    };

WebApiModulesAgentOrderCopyTemplateRequest
    _$WebApiModulesAgentOrderCopyTemplateRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCopyTemplateRequest(
    templateIds: (json['TemplateIds'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    orderId: json['OrderId'] as String?,
    recType: json['RecType'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderCopyTemplateRequestToJson(
        WebApiModulesAgentOrderCopyTemplateRequest instance) =>
    <String, dynamic>{
      'TemplateIds': instance.templateIds,
      'OrderId': instance.orderId,
      'RecType': instance.recType,
    };

WebApiModulesAgentOrderCopyTemplateResponse
    _$WebApiModulesAgentOrderCopyTemplateResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCopyTemplateResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderCopyTemplateResponseToJson(
        WebApiModulesAgentOrderCopyTemplateResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesAgentOrderCreatePoWorksheetSessionRequest
    _$WebApiModulesAgentOrderCreatePoWorksheetSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCreatePoWorksheetSessionRequest(
    orderId: json['OrderId'] as String?,
    recType: json['RecType'] as String?,
    vendorId: json['VendorId'] as String?,
    contactId: json['ContactId'] as String?,
    rateType: json['RateType'] as String?,
    currencyId: json['CurrencyId'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    requiredDate: json['RequiredDate'] == null
        ? null
        : DateTime.parse(json['RequiredDate'] as String),
    requiredTime: json['RequiredTime'] as String?,
    fromDate: json['FromDate'] == null
        ? null
        : DateTime.parse(json['FromDate'] as String),
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
    deliveryId: json['DeliveryId'] as String?,
    adjustContractDates: json['AdjustContractDates'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentOrderCreatePoWorksheetSessionRequestToJson(
            WebApiModulesAgentOrderCreatePoWorksheetSessionRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'RecType': instance.recType,
          'VendorId': instance.vendorId,
          'ContactId': instance.contactId,
          'RateType': instance.rateType,
          'CurrencyId': instance.currencyId,
          'BillingCycleId': instance.billingCycleId,
          'RequiredDate': instance.requiredDate?.toIso8601String(),
          'RequiredTime': instance.requiredTime,
          'FromDate': instance.fromDate?.toIso8601String(),
          'ToDate': instance.toDate?.toIso8601String(),
          'DeliveryId': instance.deliveryId,
          'AdjustContractDates': instance.adjustContractDates,
        };

WebApiModulesAgentOrderCreatePoWorksheetSessionResponse
    _$WebApiModulesAgentOrderCreatePoWorksheetSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCreatePoWorksheetSessionResponse(
    sessionId: json['SessionId'] as String?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentOrderCreatePoWorksheetSessionResponseToJson(
            WebApiModulesAgentOrderCreatePoWorksheetSessionResponse instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesAgentOrderCustomRates _$WebApiModulesAgentOrderCustomRatesFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesAgentOrderCustomRates(
    dailyRate: (json['DailyRate'] as num?)?.toDouble(),
    weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
    week2Rate: (json['Week2Rate'] as num?)?.toDouble(),
    week3Rate: (json['Week3Rate'] as num?)?.toDouble(),
    week4Rate: (json['Week4Rate'] as num?)?.toDouble(),
    week5Rate: (json['Week5Rate'] as num?)?.toDouble(),
    monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderCustomRatesToJson(
        WebApiModulesAgentOrderCustomRates instance) =>
    <String, dynamic>{
      'DailyRate': instance.dailyRate,
      'WeeklyRate': instance.weeklyRate,
      'Week2Rate': instance.week2Rate,
      'Week3Rate': instance.week3Rate,
      'Week4Rate': instance.week4Rate,
      'Week5Rate': instance.week5Rate,
      'MonthlyRate': instance.monthlyRate,
    };

WebApiModulesAgentOrderGetCustomRatesRequest
    _$WebApiModulesAgentOrderGetCustomRatesRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderGetCustomRatesRequest(
    orderId: json['OrderId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    recType: json['RecType'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderGetCustomRatesRequestToJson(
        WebApiModulesAgentOrderGetCustomRatesRequest instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'InventoryId': instance.inventoryId,
      'RecType': instance.recType,
    };

WebApiModulesAgentOrderGetCustomRatesResponse
    _$WebApiModulesAgentOrderGetCustomRatesResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderGetCustomRatesResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    hasDiscount: json['HasDiscount'] as bool?,
    applyDiscountToCustomRate: json['ApplyDiscountToCustomRate'] as bool?,
    customRates: json['CustomRates'] == null
        ? null
        : WebApiModulesAgentOrderCustomRates.fromJson(
            json['CustomRates'] as Map<String, dynamic>),
    daysPerWeek: (json['DaysPerWeek'] as num?)?.toDouble(),
    discountPercent: (json['DiscountPercent'] as num?)?.toDouble(),
    markupPercent: (json['MarkupPercent'] as num?)?.toDouble(),
    marginPercent: (json['MarginPercent'] as num?)?.toDouble(),
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderGetCustomRatesResponseToJson(
        WebApiModulesAgentOrderGetCustomRatesResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'HasDiscount': instance.hasDiscount,
      'ApplyDiscountToCustomRate': instance.applyDiscountToCustomRate,
      'CustomRates': instance.customRates?.toJson(),
      'DaysPerWeek': instance.daysPerWeek,
      'DiscountPercent': instance.discountPercent,
      'MarkupPercent': instance.markupPercent,
      'MarginPercent': instance.marginPercent,
    };

WebApiModulesAgentOrderGetOrderResponse
    _$WebApiModulesAgentOrderGetOrderResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderGetOrderResponse(
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDate: json['OrderDate'] as String?,
    sourceQuoteId: json['SourceQuoteId'] as String?,
    sourceQuoteNumber: json['SourceQuoteNumber'] as String?,
    description: json['Description'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    customerNumber: json['CustomerNumber'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    dealNumber: json['DealNumber'] as String?,
    rateType: json['RateType'] as String?,
    rateTypeDisplay: json['RateTypeDisplay'] as String?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    projectManagerId: json['ProjectManagerId'] as String?,
    projectManager: json['ProjectManager'] as String?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    miscellaneous: json['Miscellaneous'] as bool?,
    labor: json['Labor'] as bool?,
    facilities: json['Facilities'] as bool?,
    transportation: json['Transportation'] as bool?,
    rentalSale: json['RentalSale'] as bool?,
    lossAndDamage: json['LossAndDamage'] as bool?,
    repair: json['Repair'] as bool?,
    hasRentalItem: json['HasRentalItem'] as bool?,
    hasSalesItem: json['HasSalesItem'] as bool?,
    hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
    hasLaborItem: json['HasLaborItem'] as bool?,
    hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
    hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
    hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
    hasRepair: json['HasRepair'] as bool?,
    activityDatesAndTimes: (json['ActivityDatesAndTimes'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pickDate: json['PickDate'] as String?,
    pickTime: json['PickTime'] as String?,
    estimatedStartDate: json['EstimatedStartDate'] as String?,
    estimatedStartTime: json['EstimatedStartTime'] as String?,
    estimatedStopDate: json['EstimatedStopDate'] as String?,
    estimatedStopTime: json['EstimatedStopTime'] as String?,
    pickUpDate: json['PickUpDate'] as String?,
    pickUpTime: json['PickUpTime'] as String?,
    prepDate: json['PrepDate'] as String?,
    prepTime: json['PrepTime'] as String?,
    loadInDate: json['LoadInDate'] as String?,
    loadInTime: json['LoadInTime'] as String?,
    strikeDate: json['StrikeDate'] as String?,
    strikeTime: json['StrikeTime'] as String?,
    testDate: json['TestDate'] as String?,
    testTime: json['TestTime'] as String?,
    orderTypeId: json['OrderTypeId'] as String?,
    orderType: json['OrderType'] as String?,
    orderTypeCombineActivityTabs: json['OrderTypeCombineActivityTabs'] as bool?,
    flatPo: json['FlatPo'] as bool?,
    pendingPo: json['PendingPo'] as bool?,
    poNumber: json['PoNumber'] as String?,
    poAmount: (json['PoAmount'] as num?)?.toDouble(),
    location: json['Location'] as String?,
    orderLocationId: json['OrderLocationId'] as String?,
    orderLocation: json['OrderLocation'] as String?,
    referenceNumber: json['ReferenceNumber'] as String?,
    total: (json['Total'] as num?)?.toDouble(),
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    poApprovalStatusId: json['PoApprovalStatusId'] as String?,
    lockBillingDates: json['LockBillingDates'] as bool?,
    specifyBillingDatesByType: json['SpecifyBillingDatesByType'] as bool?,
    rentalBillingStartDate: json['RentalBillingStartDate'] as String?,
    rentalBillingEndDate: json['RentalBillingEndDate'] as String?,
    laborBillingStartDate: json['LaborBillingStartDate'] as String?,
    laborBillingEndDate: json['LaborBillingEndDate'] as String?,
    miscellaneousBillingStartDate:
        json['MiscellaneousBillingStartDate'] as String?,
    miscellaneousBillingEndDate: json['MiscellaneousBillingEndDate'] as String?,
    facilitiesBillingStartDate: json['FacilitiesBillingStartDate'] as String?,
    facilitiesBillingEndDate: json['FacilitiesBillingEndDate'] as String?,
    vehicleBillingStartDate: json['VehicleBillingStartDate'] as String?,
    vehicleBillingEndDate: json['VehicleBillingEndDate'] as String?,
    delayBillingSearchUntil: json['DelayBillingSearchUntil'] as String?,
    includePrepFeesInRentalRate: json['IncludePrepFeesInRentalRate'] as bool?,
    billingStartDate: json['BillingStartDate'] as String?,
    billingEndDate: json['BillingEndDate'] as String?,
    billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
    billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
    determineQuantitiesToBillBasedOn:
        json['DetermineQuantitiesToBillBasedOn'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    billingCycle: json['BillingCycle'] as String?,
    billingCycleType: json['BillingCycleType'] as String?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    currencyId: json['CurrencyId'] as String?,
    updateAllRatesToNewCurrency: json['UpdateAllRatesToNewCurrency'] as bool?,
    confirmUpdateAllRatesToNewCurrency:
        json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currency: json['Currency'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    tax1Name: json['Tax1Name'] as String?,
    tax2Name: json['Tax2Name'] as String?,
    taxId: json['TaxId'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    noCharge: json['NoCharge'] as bool?,
    noChargeReason: json['NoChargeReason'] as String?,
    printIssuedToAddressFrom: json['PrintIssuedToAddressFrom'] as String?,
    issuedToName: json['IssuedToName'] as String?,
    issuedToAttention: json['IssuedToAttention'] as String?,
    issuedToAttention2: json['IssuedToAttention2'] as String?,
    issuedToAddress1: json['IssuedToAddress1'] as String?,
    issuedToAddress2: json['IssuedToAddress2'] as String?,
    issuedToCity: json['IssuedToCity'] as String?,
    issuedToState: json['IssuedToState'] as String?,
    issuedToZipCode: json['IssuedToZipCode'] as String?,
    issuedToCountryId: json['IssuedToCountryId'] as String?,
    issuedToCountry: json['IssuedToCountry'] as String?,
    billToAddressDifferentFromIssuedToAddress:
        json['BillToAddressDifferentFromIssuedToAddress'] as bool?,
    billToAddressId: json['BillToAddressId'] as String?,
    billToName: json['BillToName'] as String?,
    billToAttention: json['BillToAttention'] as String?,
    billToAttention2: json['BillToAttention2'] as String?,
    billToAddress1: json['BillToAddress1'] as String?,
    billToAddress2: json['BillToAddress2'] as String?,
    billToCity: json['BillToCity'] as String?,
    billToState: json['BillToState'] as String?,
    billToZipCode: json['BillToZipCode'] as String?,
    billToCountryId: json['BillToCountryId'] as String?,
    billToCountry: json['BillToCountry'] as String?,
    discountReasonId: json['DiscountReasonId'] as String?,
    discountReason: json['DiscountReason'] as String?,
    requireContactConfirmation: json['RequireContactConfirmation'] as bool?,
    includeInBillingAnalysis: json['IncludeInBillingAnalysis'] as bool?,
    hiatusDiscountFrom: json['HiatusDiscountFrom'] as String?,
    roundTripRentals: json['RoundTripRentals'] as bool?,
    inGroup: json['InGroup'] as bool?,
    groupNumber: json['GroupNumber'] as int?,
    groupColor: json['GroupColor'] as int?,
    groupOrderBy: (json['GroupOrderBy'] as num?)?.toDouble(),
    coverLetterId: json['CoverLetterId'] as String?,
    coverLetter: json['CoverLetter'] as String?,
    termsConditionsId: json['TermsConditionsId'] as String?,
    termsConditions: json['TermsConditions'] as String?,
    outsideSalesRepresentativeId:
        json['OutsideSalesRepresentativeId'] as String?,
    outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
    marketTypeId: json['MarketTypeId'] as String?,
    marketType: json['MarketType'] as String?,
    marketSegmentId: json['MarketSegmentId'] as String?,
    marketSegment: json['MarketSegment'] as String?,
    marketSegmentJobId: json['MarketSegmentJobId'] as String?,
    marketSegmentJob: json['MarketSegmentJob'] as String?,
    outDeliveryId: json['OutDeliveryId'] as String?,
    outDeliveryDeliveryType: json['OutDeliveryDeliveryType'] as String?,
    outDeliveryRequiredDate: json['OutDeliveryRequiredDate'] as String?,
    outDeliveryRequiredTime: json['OutDeliveryRequiredTime'] as String?,
    outDeliveryTargetShipDate: json['OutDeliveryTargetShipDate'] as String?,
    outDeliveryTargetShipTime: json['OutDeliveryTargetShipTime'] as String?,
    outDeliveryDirection: json['OutDeliveryDirection'] as String?,
    outDeliveryAddressType: json['OutDeliveryAddressType'] as String?,
    outDeliveryFromLocation: json['OutDeliveryFromLocation'] as String?,
    outDeliveryFromContact: json['OutDeliveryFromContact'] as String?,
    outDeliveryFromContactPhone: json['OutDeliveryFromContactPhone'] as String?,
    outDeliveryFromAlternateContact:
        json['OutDeliveryFromAlternateContact'] as String?,
    outDeliveryFromAlternateContactPhone:
        json['OutDeliveryFromAlternateContactPhone'] as String?,
    outDeliveryFromAttention: json['OutDeliveryFromAttention'] as String?,
    outDeliveryFromAddress1: json['OutDeliveryFromAddress1'] as String?,
    outDeliveryFromAdd2ress: json['OutDeliveryFromAdd2ress'] as String?,
    outDeliveryFromCity: json['OutDeliveryFromCity'] as String?,
    outDeliveryFromState: json['OutDeliveryFromState'] as String?,
    outDeliveryFromZipCode: json['OutDeliveryFromZipCode'] as String?,
    outDeliveryFromCountry: json['OutDeliveryFromCountry'] as String?,
    outDeliveryFromCountryId: json['OutDeliveryFromCountryId'] as String?,
    outDeliveryFromCrossStreets: json['OutDeliveryFromCrossStreets'] as String?,
    outDeliveryToLocation: json['OutDeliveryToLocation'] as String?,
    outDeliveryToContact: json['OutDeliveryToContact'] as String?,
    outDeliveryToContactPhone: json['OutDeliveryToContactPhone'] as String?,
    outDeliveryToAlternateContact:
        json['OutDeliveryToAlternateContact'] as String?,
    outDeliveryToAlternateContactPhone:
        json['OutDeliveryToAlternateContactPhone'] as String?,
    outDeliveryToAttention: json['OutDeliveryToAttention'] as String?,
    outDeliveryToAddress1: json['OutDeliveryToAddress1'] as String?,
    outDeliveryToAddress2: json['OutDeliveryToAddress2'] as String?,
    outDeliveryToCity: json['OutDeliveryToCity'] as String?,
    outDeliveryToState: json['OutDeliveryToState'] as String?,
    outDeliveryToZipCode: json['OutDeliveryToZipCode'] as String?,
    outDeliveryToCountryId: json['OutDeliveryToCountryId'] as String?,
    outDeliveryToCountry: json['OutDeliveryToCountry'] as String?,
    outDeliveryToContactFax: json['OutDeliveryToContactFax'] as String?,
    outDeliveryToCrossStreets: json['OutDeliveryToCrossStreets'] as String?,
    outDeliveryDeliveryNotes: json['OutDeliveryDeliveryNotes'] as String?,
    outDeliveryCarrierId: json['OutDeliveryCarrierId'] as String?,
    outDeliveryCarrier: json['OutDeliveryCarrier'] as String?,
    outDeliveryCarrierAccount: json['OutDeliveryCarrierAccount'] as String?,
    outDeliveryShipViaId: json['OutDeliveryShipViaId'] as String?,
    outDeliveryShipVia: json['OutDeliveryShipVia'] as String?,
    outDeliveryInvoiceId: json['OutDeliveryInvoiceId'] as String?,
    outDeliveryVendorInvoiceId: json['OutDeliveryVendorInvoiceId'] as String?,
    outDeliveryEstimatedFreight:
        (json['OutDeliveryEstimatedFreight'] as num?)?.toDouble(),
    outDeliveryFreightInvoiceAmount:
        (json['OutDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    outDeliveryChargeType: json['OutDeliveryChargeType'] as String?,
    outDeliveryFreightTrackingNumber:
        json['OutDeliveryFreightTrackingNumber'] as String?,
    outDeliveryFreightTrackingUrl:
        json['OutDeliveryFreightTrackingUrl'] as String?,
    outDeliveryPackageCode: json['OutDeliveryPackageCode'] as String?,
    outDeliveryBillPoFreightOnOrder:
        json['OutDeliveryBillPoFreightOnOrder'] as bool?,
    outDeliveryOnlineOrderNumber:
        json['OutDeliveryOnlineOrderNumber'] as String?,
    outDeliveryToVenue: json['OutDeliveryToVenue'] as String?,
    outDeliveryToVenueId: json['OutDeliveryToVenueId'] as String?,
    outDeliveryToWarehouse: json['OutDeliveryToWarehouse'] as String?,
    outDeliveryToWarehouseId: json['OutDeliveryToWarehouseId'] as String?,
    outDeliveryDateStamp: json['OutDeliveryDateStamp'] as String?,
    inDeliveryId: json['InDeliveryId'] as String?,
    inDeliveryDeliveryType: json['InDeliveryDeliveryType'] as String?,
    inDeliveryRequiredDate: json['InDeliveryRequiredDate'] as String?,
    inDeliveryRequiredTime: json['InDeliveryRequiredTime'] as String?,
    inDeliveryTargetShipDate: json['InDeliveryTargetShipDate'] as String?,
    inDeliveryTargetShipTime: json['InDeliveryTargetShipTime'] as String?,
    inDeliveryDirection: json['InDeliveryDirection'] as String?,
    inDeliveryAddressType: json['InDeliveryAddressType'] as String?,
    inDeliveryFromLocation: json['InDeliveryFromLocation'] as String?,
    inDeliveryFromContact: json['InDeliveryFromContact'] as String?,
    inDeliveryFromContactPhone: json['InDeliveryFromContactPhone'] as String?,
    inDeliveryFromAlternateContact:
        json['InDeliveryFromAlternateContact'] as String?,
    inDeliveryFromAlternateContactPhone:
        json['InDeliveryFromAlternateContactPhone'] as String?,
    inDeliveryFromAttention: json['InDeliveryFromAttention'] as String?,
    inDeliveryFromAddress1: json['InDeliveryFromAddress1'] as String?,
    inDeliveryFromAdd2ress: json['InDeliveryFromAdd2ress'] as String?,
    inDeliveryFromCity: json['InDeliveryFromCity'] as String?,
    inDeliveryFromState: json['InDeliveryFromState'] as String?,
    inDeliveryFromZipCode: json['InDeliveryFromZipCode'] as String?,
    inDeliveryFromCountry: json['InDeliveryFromCountry'] as String?,
    inDeliveryFromCountryId: json['InDeliveryFromCountryId'] as String?,
    inDeliveryFromCrossStreets: json['InDeliveryFromCrossStreets'] as String?,
    inDeliveryToLocation: json['InDeliveryToLocation'] as String?,
    inDeliveryToContact: json['InDeliveryToContact'] as String?,
    inDeliveryToContactPhone: json['InDeliveryToContactPhone'] as String?,
    inDeliveryToAlternateContact:
        json['InDeliveryToAlternateContact'] as String?,
    inDeliveryToAlternateContactPhone:
        json['InDeliveryToAlternateContactPhone'] as String?,
    inDeliveryToAttention: json['InDeliveryToAttention'] as String?,
    inDeliveryToAddress1: json['InDeliveryToAddress1'] as String?,
    inDeliveryToAddress2: json['InDeliveryToAddress2'] as String?,
    inDeliveryToCity: json['InDeliveryToCity'] as String?,
    inDeliveryToState: json['InDeliveryToState'] as String?,
    inDeliveryToZipCode: json['InDeliveryToZipCode'] as String?,
    inDeliveryToCountryId: json['InDeliveryToCountryId'] as String?,
    inDeliveryToCountry: json['InDeliveryToCountry'] as String?,
    inDeliveryToContactFax: json['InDeliveryToContactFax'] as String?,
    inDeliveryToCrossStreets: json['InDeliveryToCrossStreets'] as String?,
    inDeliveryDeliveryNotes: json['InDeliveryDeliveryNotes'] as String?,
    inDeliveryCarrierId: json['InDeliveryCarrierId'] as String?,
    inDeliveryCarrier: json['InDeliveryCarrier'] as String?,
    inDeliveryCarrierAccount: json['InDeliveryCarrierAccount'] as String?,
    inDeliveryShipViaId: json['InDeliveryShipViaId'] as String?,
    inDeliveryShipVia: json['InDeliveryShipVia'] as String?,
    inDeliveryInvoiceId: json['InDeliveryInvoiceId'] as String?,
    inDeliveryVendorInvoiceId: json['InDeliveryVendorInvoiceId'] as String?,
    inDeliveryEstimatedFreight:
        (json['InDeliveryEstimatedFreight'] as num?)?.toDouble(),
    inDeliveryFreightInvoiceAmount:
        (json['InDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    inDeliveryChargeType: json['InDeliveryChargeType'] as String?,
    inDeliveryFreightTrackingNumber:
        json['InDeliveryFreightTrackingNumber'] as String?,
    inDeliveryFreightTrackingUrl:
        json['InDeliveryFreightTrackingUrl'] as String?,
    inDeliveryPackageCode: json['InDeliveryPackageCode'] as String?,
    inDeliveryBillPoFreightOnOrder:
        json['InDeliveryBillPoFreightOnOrder'] as bool?,
    inDeliveryOnlineOrderNumber: json['InDeliveryOnlineOrderNumber'] as String?,
    inDeliveryOnlineOrderStatus: json['InDeliveryOnlineOrderStatus'] as String?,
    inDeliveryToVenue: json['InDeliveryToVenue'] as String?,
    inDeliveryToVenueId: json['InDeliveryToVenueId'] as String?,
    inDeliveryToWarehouse: json['InDeliveryToWarehouse'] as String?,
    inDeliveryToWarehouseId: json['InDeliveryToWarehouseId'] as String?,
    inDeliveryDateStamp: json['InDeliveryDateStamp'] as String?,
    rentalDaysPerWeek: (json['RentalDaysPerWeek'] as num?)?.toDouble(),
    rentalDiscountPercent: (json['RentalDiscountPercent'] as num?)?.toDouble(),
    weeklyRentalTotal: (json['WeeklyRentalTotal'] as num?)?.toDouble(),
    monthlyRentalTotal: (json['MonthlyRentalTotal'] as num?)?.toDouble(),
    periodRentalTotal: (json['PeriodRentalTotal'] as num?)?.toDouble(),
    weeklyRentalTotalIncludesTax: json['WeeklyRentalTotalIncludesTax'] as bool?,
    monthlyRentalTotalIncludesTax:
        json['MonthlyRentalTotalIncludesTax'] as bool?,
    periodRentalTotalIncludesTax: json['PeriodRentalTotalIncludesTax'] as bool?,
    billLockedTotal: json['BillLockedTotal'] as bool?,
    salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
    salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
    salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
    partsDiscountPercent: (json['PartsDiscountPercent'] as num?)?.toDouble(),
    partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
    partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
    spaceDaysPerWeek: (json['SpaceDaysPerWeek'] as num?)?.toDouble(),
    spaceDiscountPercent: (json['SpaceDiscountPercent'] as num?)?.toDouble(),
    spaceSplitPercent: (json['SpaceSplitPercent'] as num?)?.toDouble(),
    weeklySpaceTotal: (json['WeeklySpaceTotal'] as num?)?.toDouble(),
    monthlySpaceTotal: (json['MonthlySpaceTotal'] as num?)?.toDouble(),
    periodSpaceTotal: (json['PeriodSpaceTotal'] as num?)?.toDouble(),
    weeklySpaceTotalIncludesTax: json['WeeklySpaceTotalIncludesTax'] as bool?,
    monthlySpaceTotalIncludesTax: json['MonthlySpaceTotalIncludesTax'] as bool?,
    periodSpaceTotalIncludesTax: json['PeriodSpaceTotalIncludesTax'] as bool?,
    vehicleDaysPerWeek: (json['VehicleDaysPerWeek'] as num?)?.toDouble(),
    vehicleDiscountPercent:
        (json['VehicleDiscountPercent'] as num?)?.toDouble(),
    weeklyVehicleTotal: (json['WeeklyVehicleTotal'] as num?)?.toDouble(),
    monthlyVehicleTotal: (json['MonthlyVehicleTotal'] as num?)?.toDouble(),
    periodVehicleTotal: (json['PeriodVehicleTotal'] as num?)?.toDouble(),
    weeklyVehicleTotalIncludesTax:
        json['WeeklyVehicleTotalIncludesTax'] as bool?,
    monthlyVehicleTotalIncludesTax:
        json['MonthlyVehicleTotalIncludesTax'] as bool?,
    periodVehicleTotalIncludesTax:
        json['PeriodVehicleTotalIncludesTax'] as bool?,
    miscDiscountPercent: (json['MiscDiscountPercent'] as num?)?.toDouble(),
    weeklyMiscTotal: (json['WeeklyMiscTotal'] as num?)?.toDouble(),
    monthlyMiscTotal: (json['MonthlyMiscTotal'] as num?)?.toDouble(),
    periodMiscTotal: (json['PeriodMiscTotal'] as num?)?.toDouble(),
    weeklyMiscTotalIncludesTax: json['WeeklyMiscTotalIncludesTax'] as bool?,
    monthlyMiscTotalIncludesTax: json['MonthlyMiscTotalIncludesTax'] as bool?,
    periodMiscTotalIncludesTax: json['PeriodMiscTotalIncludesTax'] as bool?,
    laborDiscountPercent: (json['LaborDiscountPercent'] as num?)?.toDouble(),
    weeklyLaborTotal: (json['WeeklyLaborTotal'] as num?)?.toDouble(),
    monthlyLaborTotal: (json['MonthlyLaborTotal'] as num?)?.toDouble(),
    periodLaborTotal: (json['PeriodLaborTotal'] as num?)?.toDouble(),
    weeklyLaborTotalIncludesTax: json['WeeklyLaborTotalIncludesTax'] as bool?,
    monthlyLaborTotalIncludesTax: json['MonthlyLaborTotalIncludesTax'] as bool?,
    periodLaborTotalIncludesTax: json['PeriodLaborTotalIncludesTax'] as bool?,
    rentalSaleDiscountPercent:
        (json['RentalSaleDiscountPercent'] as num?)?.toDouble(),
    rentalSaleTotal: (json['RentalSaleTotal'] as num?)?.toDouble(),
    rentalSaleTotalIncludesTax: json['RentalSaleTotalIncludesTax'] as bool?,
    lossAndDamageDiscountPercent:
        (json['LossAndDamageDiscountPercent'] as num?)?.toDouble(),
    lossAndDamageTotal: (json['LossAndDamageTotal'] as num?)?.toDouble(),
    lossAndDamageTotalIncludesTax:
        json['LossAndDamageTotalIncludesTax'] as bool?,
    combinedDaysPerWeek: (json['CombinedDaysPerWeek'] as num?)?.toDouble(),
    combinedDiscountPercent:
        (json['CombinedDiscountPercent'] as num?)?.toDouble(),
    weeklyCombinedTotal: (json['WeeklyCombinedTotal'] as num?)?.toDouble(),
    monthlyCombinedTotal: (json['MonthlyCombinedTotal'] as num?)?.toDouble(),
    periodCombinedTotal: (json['PeriodCombinedTotal'] as num?)?.toDouble(),
    weeklyCombinedTotalIncludesTax:
        json['WeeklyCombinedTotalIncludesTax'] as bool?,
    monthlyCombinedTotalIncludesTax:
        json['MonthlyCombinedTotalIncludesTax'] as bool?,
    periodCombinedTotalIncludesTax:
        json['PeriodCombinedTotalIncludesTax'] as bool?,
    disableEditingRentalRate: json['DisableEditingRentalRate'] as bool?,
    disableEditingSalesRate: json['DisableEditingSalesRate'] as bool?,
    disableEditingMiscellaneousRate:
        json['DisableEditingMiscellaneousRate'] as bool?,
    disableEditingLaborRate: json['DisableEditingLaborRate'] as bool?,
    disableEditingRentalSaleRate: json['DisableEditingRentalSaleRate'] as bool?,
    disableEditingLossAndDamageRate:
        json['DisableEditingLossAndDamageRate'] as bool?,
    rentalExtendedTotal: (json['RentalExtendedTotal'] as num?)?.toDouble(),
    salesExtendedTotal: (json['SalesExtendedTotal'] as num?)?.toDouble(),
    laborExtendedTotal: (json['LaborExtendedTotal'] as num?)?.toDouble(),
    miscellaneousExtendedTotal:
        (json['MiscellaneousExtendedTotal'] as num?)?.toDouble(),
    rentalSaleExtendedTotal:
        (json['RentalSaleExtendedTotal'] as num?)?.toDouble(),
    lossAndDamageExtendedTotal:
        (json['LossAndDamageExtendedTotal'] as num?)?.toDouble(),
    hasNotes: json['HasNotes'] as bool?,
    hasDocuments: json['HasDocuments'] as bool?,
    hasEmailHistory: json['HasEmailHistory'] as bool?,
    hasContacts: json['HasContacts'] as bool?,
    hasSubPurchaseOrders: json['HasSubPurchaseOrders'] as bool?,
    hasPickLists: json['HasPickLists'] as bool?,
    hasContracts: json['HasContracts'] as bool?,
    hasSuspendedContracts: json['HasSuspendedContracts'] as bool?,
    hasMultiOrderContracts: json['HasMultiOrderContracts'] as bool?,
    hasInvoices: json['HasInvoices'] as bool?,
    hasBillingWorksheets: json['HasBillingWorksheets'] as bool?,
    hasMultiOrderInvoices: json['HasMultiOrderInvoices'] as bool?,
    totalReplacementCost: (json['TotalReplacementCost'] as num?)?.toDouble(),
    presentationLayerId: json['PresentationLayerId'] as String?,
    presentationLayer: json['PresentationLayer'] as String?,
    isManualSort: json['IsManualSort'] as bool?,
    quoteOrderTitle: json['QuoteOrderTitle'] as String?,
    unassignedSubs: json['UnassignedSubs'] as bool?,
    nonTaxable: json['NonTaxable'] as bool?,
    enableProjects: json['EnableProjects'] as bool?,
    projectId: json['ProjectId'] as String?,
    projectNumber: json['ProjectNumber'] as String?,
    project: json['Project'] as String?,
    projectDrawingsId: json['ProjectDrawingsId'] as String?,
    projectDrawings: json['ProjectDrawings'] as String?,
    projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
    projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
    projectDropShipId: json['ProjectDropShipId'] as String?,
    projectDropShip: json['ProjectDropShip'] as String?,
    projectAsBuildId: json['ProjectAsBuildId'] as String?,
    projectAsBuild: json['ProjectAsBuild'] as String?,
    projectCommissioningId: json['ProjectCommissioningId'] as String?,
    projectCommissioning: json['ProjectCommissioning'] as String?,
    projectDepositId: json['ProjectDepositId'] as String?,
    projectDeposit: json['ProjectDeposit'] as String?,
    inputByUserId: json['InputByUserId'] as String?,
    modifiedByUserId: json['ModifiedByUserId'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsOrderItemOrderItem.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderGetOrderResponseToJson(
        WebApiModulesAgentOrderGetOrderResponse instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'OrderDate': instance.orderDate,
      'SourceQuoteId': instance.sourceQuoteId,
      'SourceQuoteNumber': instance.sourceQuoteNumber,
      'Description': instance.description,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'CustomerId': instance.customerId,
      'Customer': instance.customer,
      'CustomerNumber': instance.customerNumber,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'DealNumber': instance.dealNumber,
      'RateType': instance.rateType,
      'RateTypeDisplay': instance.rateTypeDisplay,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'ProjectManagerId': instance.projectManagerId,
      'ProjectManager': instance.projectManager,
      'Rental': instance.rental,
      'Sales': instance.sales,
      'Miscellaneous': instance.miscellaneous,
      'Labor': instance.labor,
      'Facilities': instance.facilities,
      'Transportation': instance.transportation,
      'RentalSale': instance.rentalSale,
      'LossAndDamage': instance.lossAndDamage,
      'Repair': instance.repair,
      'HasRentalItem': instance.hasRentalItem,
      'HasSalesItem': instance.hasSalesItem,
      'HasMiscellaneousItem': instance.hasMiscellaneousItem,
      'HasLaborItem': instance.hasLaborItem,
      'HasFacilitiesItem': instance.hasFacilitiesItem,
      'HasLossAndDamageItem': instance.hasLossAndDamageItem,
      'HasRentalSaleItem': instance.hasRentalSaleItem,
      'HasRepair': instance.hasRepair,
      'ActivityDatesAndTimes':
          instance.activityDatesAndTimes?.map((e) => e.toJson()).toList(),
      'PickDate': instance.pickDate,
      'PickTime': instance.pickTime,
      'EstimatedStartDate': instance.estimatedStartDate,
      'EstimatedStartTime': instance.estimatedStartTime,
      'EstimatedStopDate': instance.estimatedStopDate,
      'EstimatedStopTime': instance.estimatedStopTime,
      'PickUpDate': instance.pickUpDate,
      'PickUpTime': instance.pickUpTime,
      'PrepDate': instance.prepDate,
      'PrepTime': instance.prepTime,
      'LoadInDate': instance.loadInDate,
      'LoadInTime': instance.loadInTime,
      'StrikeDate': instance.strikeDate,
      'StrikeTime': instance.strikeTime,
      'TestDate': instance.testDate,
      'TestTime': instance.testTime,
      'OrderTypeId': instance.orderTypeId,
      'OrderType': instance.orderType,
      'OrderTypeCombineActivityTabs': instance.orderTypeCombineActivityTabs,
      'FlatPo': instance.flatPo,
      'PendingPo': instance.pendingPo,
      'PoNumber': instance.poNumber,
      'PoAmount': instance.poAmount,
      'Location': instance.location,
      'OrderLocationId': instance.orderLocationId,
      'OrderLocation': instance.orderLocation,
      'ReferenceNumber': instance.referenceNumber,
      'Total': instance.total,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'PoApprovalStatusId': instance.poApprovalStatusId,
      'LockBillingDates': instance.lockBillingDates,
      'SpecifyBillingDatesByType': instance.specifyBillingDatesByType,
      'RentalBillingStartDate': instance.rentalBillingStartDate,
      'RentalBillingEndDate': instance.rentalBillingEndDate,
      'LaborBillingStartDate': instance.laborBillingStartDate,
      'LaborBillingEndDate': instance.laborBillingEndDate,
      'MiscellaneousBillingStartDate': instance.miscellaneousBillingStartDate,
      'MiscellaneousBillingEndDate': instance.miscellaneousBillingEndDate,
      'FacilitiesBillingStartDate': instance.facilitiesBillingStartDate,
      'FacilitiesBillingEndDate': instance.facilitiesBillingEndDate,
      'VehicleBillingStartDate': instance.vehicleBillingStartDate,
      'VehicleBillingEndDate': instance.vehicleBillingEndDate,
      'DelayBillingSearchUntil': instance.delayBillingSearchUntil,
      'IncludePrepFeesInRentalRate': instance.includePrepFeesInRentalRate,
      'BillingStartDate': instance.billingStartDate,
      'BillingEndDate': instance.billingEndDate,
      'BillingWeeks': instance.billingWeeks,
      'BillingMonths': instance.billingMonths,
      'DetermineQuantitiesToBillBasedOn':
          instance.determineQuantitiesToBillBasedOn,
      'BillingCycleId': instance.billingCycleId,
      'BillingCycle': instance.billingCycle,
      'BillingCycleType': instance.billingCycleType,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'PaymentTypeId': instance.paymentTypeId,
      'PaymentType': instance.paymentType,
      'CurrencyId': instance.currencyId,
      'UpdateAllRatesToNewCurrency': instance.updateAllRatesToNewCurrency,
      'ConfirmUpdateAllRatesToNewCurrency':
          instance.confirmUpdateAllRatesToNewCurrency,
      'CurrencyCode': instance.currencyCode,
      'Currency': instance.currency,
      'CurrencySymbol': instance.currencySymbol,
      'TaxOptionId': instance.taxOptionId,
      'TaxOption': instance.taxOption,
      'Tax1Name': instance.tax1Name,
      'Tax2Name': instance.tax2Name,
      'TaxId': instance.taxId,
      'RentalTaxRate1': instance.rentalTaxRate1,
      'SalesTaxRate1': instance.salesTaxRate1,
      'LaborTaxRate1': instance.laborTaxRate1,
      'RentalTaxRate2': instance.rentalTaxRate2,
      'SalesTaxRate2': instance.salesTaxRate2,
      'LaborTaxRate2': instance.laborTaxRate2,
      'NoCharge': instance.noCharge,
      'NoChargeReason': instance.noChargeReason,
      'PrintIssuedToAddressFrom': instance.printIssuedToAddressFrom,
      'IssuedToName': instance.issuedToName,
      'IssuedToAttention': instance.issuedToAttention,
      'IssuedToAttention2': instance.issuedToAttention2,
      'IssuedToAddress1': instance.issuedToAddress1,
      'IssuedToAddress2': instance.issuedToAddress2,
      'IssuedToCity': instance.issuedToCity,
      'IssuedToState': instance.issuedToState,
      'IssuedToZipCode': instance.issuedToZipCode,
      'IssuedToCountryId': instance.issuedToCountryId,
      'IssuedToCountry': instance.issuedToCountry,
      'BillToAddressDifferentFromIssuedToAddress':
          instance.billToAddressDifferentFromIssuedToAddress,
      'BillToAddressId': instance.billToAddressId,
      'BillToName': instance.billToName,
      'BillToAttention': instance.billToAttention,
      'BillToAttention2': instance.billToAttention2,
      'BillToAddress1': instance.billToAddress1,
      'BillToAddress2': instance.billToAddress2,
      'BillToCity': instance.billToCity,
      'BillToState': instance.billToState,
      'BillToZipCode': instance.billToZipCode,
      'BillToCountryId': instance.billToCountryId,
      'BillToCountry': instance.billToCountry,
      'DiscountReasonId': instance.discountReasonId,
      'DiscountReason': instance.discountReason,
      'RequireContactConfirmation': instance.requireContactConfirmation,
      'IncludeInBillingAnalysis': instance.includeInBillingAnalysis,
      'HiatusDiscountFrom': instance.hiatusDiscountFrom,
      'RoundTripRentals': instance.roundTripRentals,
      'InGroup': instance.inGroup,
      'GroupNumber': instance.groupNumber,
      'GroupColor': instance.groupColor,
      'GroupOrderBy': instance.groupOrderBy,
      'CoverLetterId': instance.coverLetterId,
      'CoverLetter': instance.coverLetter,
      'TermsConditionsId': instance.termsConditionsId,
      'TermsConditions': instance.termsConditions,
      'OutsideSalesRepresentativeId': instance.outsideSalesRepresentativeId,
      'OutsideSalesRepresentative': instance.outsideSalesRepresentative,
      'MarketTypeId': instance.marketTypeId,
      'MarketType': instance.marketType,
      'MarketSegmentId': instance.marketSegmentId,
      'MarketSegment': instance.marketSegment,
      'MarketSegmentJobId': instance.marketSegmentJobId,
      'MarketSegmentJob': instance.marketSegmentJob,
      'OutDeliveryId': instance.outDeliveryId,
      'OutDeliveryDeliveryType': instance.outDeliveryDeliveryType,
      'OutDeliveryRequiredDate': instance.outDeliveryRequiredDate,
      'OutDeliveryRequiredTime': instance.outDeliveryRequiredTime,
      'OutDeliveryTargetShipDate': instance.outDeliveryTargetShipDate,
      'OutDeliveryTargetShipTime': instance.outDeliveryTargetShipTime,
      'OutDeliveryDirection': instance.outDeliveryDirection,
      'OutDeliveryAddressType': instance.outDeliveryAddressType,
      'OutDeliveryFromLocation': instance.outDeliveryFromLocation,
      'OutDeliveryFromContact': instance.outDeliveryFromContact,
      'OutDeliveryFromContactPhone': instance.outDeliveryFromContactPhone,
      'OutDeliveryFromAlternateContact':
          instance.outDeliveryFromAlternateContact,
      'OutDeliveryFromAlternateContactPhone':
          instance.outDeliveryFromAlternateContactPhone,
      'OutDeliveryFromAttention': instance.outDeliveryFromAttention,
      'OutDeliveryFromAddress1': instance.outDeliveryFromAddress1,
      'OutDeliveryFromAdd2ress': instance.outDeliveryFromAdd2ress,
      'OutDeliveryFromCity': instance.outDeliveryFromCity,
      'OutDeliveryFromState': instance.outDeliveryFromState,
      'OutDeliveryFromZipCode': instance.outDeliveryFromZipCode,
      'OutDeliveryFromCountry': instance.outDeliveryFromCountry,
      'OutDeliveryFromCountryId': instance.outDeliveryFromCountryId,
      'OutDeliveryFromCrossStreets': instance.outDeliveryFromCrossStreets,
      'OutDeliveryToLocation': instance.outDeliveryToLocation,
      'OutDeliveryToContact': instance.outDeliveryToContact,
      'OutDeliveryToContactPhone': instance.outDeliveryToContactPhone,
      'OutDeliveryToAlternateContact': instance.outDeliveryToAlternateContact,
      'OutDeliveryToAlternateContactPhone':
          instance.outDeliveryToAlternateContactPhone,
      'OutDeliveryToAttention': instance.outDeliveryToAttention,
      'OutDeliveryToAddress1': instance.outDeliveryToAddress1,
      'OutDeliveryToAddress2': instance.outDeliveryToAddress2,
      'OutDeliveryToCity': instance.outDeliveryToCity,
      'OutDeliveryToState': instance.outDeliveryToState,
      'OutDeliveryToZipCode': instance.outDeliveryToZipCode,
      'OutDeliveryToCountryId': instance.outDeliveryToCountryId,
      'OutDeliveryToCountry': instance.outDeliveryToCountry,
      'OutDeliveryToContactFax': instance.outDeliveryToContactFax,
      'OutDeliveryToCrossStreets': instance.outDeliveryToCrossStreets,
      'OutDeliveryDeliveryNotes': instance.outDeliveryDeliveryNotes,
      'OutDeliveryCarrierId': instance.outDeliveryCarrierId,
      'OutDeliveryCarrier': instance.outDeliveryCarrier,
      'OutDeliveryCarrierAccount': instance.outDeliveryCarrierAccount,
      'OutDeliveryShipViaId': instance.outDeliveryShipViaId,
      'OutDeliveryShipVia': instance.outDeliveryShipVia,
      'OutDeliveryInvoiceId': instance.outDeliveryInvoiceId,
      'OutDeliveryVendorInvoiceId': instance.outDeliveryVendorInvoiceId,
      'OutDeliveryEstimatedFreight': instance.outDeliveryEstimatedFreight,
      'OutDeliveryFreightInvoiceAmount':
          instance.outDeliveryFreightInvoiceAmount,
      'OutDeliveryChargeType': instance.outDeliveryChargeType,
      'OutDeliveryFreightTrackingNumber':
          instance.outDeliveryFreightTrackingNumber,
      'OutDeliveryFreightTrackingUrl': instance.outDeliveryFreightTrackingUrl,
      'OutDeliveryPackageCode': instance.outDeliveryPackageCode,
      'OutDeliveryBillPoFreightOnOrder':
          instance.outDeliveryBillPoFreightOnOrder,
      'OutDeliveryOnlineOrderNumber': instance.outDeliveryOnlineOrderNumber,
      'OutDeliveryToVenue': instance.outDeliveryToVenue,
      'OutDeliveryToVenueId': instance.outDeliveryToVenueId,
      'OutDeliveryToWarehouse': instance.outDeliveryToWarehouse,
      'OutDeliveryToWarehouseId': instance.outDeliveryToWarehouseId,
      'OutDeliveryDateStamp': instance.outDeliveryDateStamp,
      'InDeliveryId': instance.inDeliveryId,
      'InDeliveryDeliveryType': instance.inDeliveryDeliveryType,
      'InDeliveryRequiredDate': instance.inDeliveryRequiredDate,
      'InDeliveryRequiredTime': instance.inDeliveryRequiredTime,
      'InDeliveryTargetShipDate': instance.inDeliveryTargetShipDate,
      'InDeliveryTargetShipTime': instance.inDeliveryTargetShipTime,
      'InDeliveryDirection': instance.inDeliveryDirection,
      'InDeliveryAddressType': instance.inDeliveryAddressType,
      'InDeliveryFromLocation': instance.inDeliveryFromLocation,
      'InDeliveryFromContact': instance.inDeliveryFromContact,
      'InDeliveryFromContactPhone': instance.inDeliveryFromContactPhone,
      'InDeliveryFromAlternateContact': instance.inDeliveryFromAlternateContact,
      'InDeliveryFromAlternateContactPhone':
          instance.inDeliveryFromAlternateContactPhone,
      'InDeliveryFromAttention': instance.inDeliveryFromAttention,
      'InDeliveryFromAddress1': instance.inDeliveryFromAddress1,
      'InDeliveryFromAdd2ress': instance.inDeliveryFromAdd2ress,
      'InDeliveryFromCity': instance.inDeliveryFromCity,
      'InDeliveryFromState': instance.inDeliveryFromState,
      'InDeliveryFromZipCode': instance.inDeliveryFromZipCode,
      'InDeliveryFromCountry': instance.inDeliveryFromCountry,
      'InDeliveryFromCountryId': instance.inDeliveryFromCountryId,
      'InDeliveryFromCrossStreets': instance.inDeliveryFromCrossStreets,
      'InDeliveryToLocation': instance.inDeliveryToLocation,
      'InDeliveryToContact': instance.inDeliveryToContact,
      'InDeliveryToContactPhone': instance.inDeliveryToContactPhone,
      'InDeliveryToAlternateContact': instance.inDeliveryToAlternateContact,
      'InDeliveryToAlternateContactPhone':
          instance.inDeliveryToAlternateContactPhone,
      'InDeliveryToAttention': instance.inDeliveryToAttention,
      'InDeliveryToAddress1': instance.inDeliveryToAddress1,
      'InDeliveryToAddress2': instance.inDeliveryToAddress2,
      'InDeliveryToCity': instance.inDeliveryToCity,
      'InDeliveryToState': instance.inDeliveryToState,
      'InDeliveryToZipCode': instance.inDeliveryToZipCode,
      'InDeliveryToCountryId': instance.inDeliveryToCountryId,
      'InDeliveryToCountry': instance.inDeliveryToCountry,
      'InDeliveryToContactFax': instance.inDeliveryToContactFax,
      'InDeliveryToCrossStreets': instance.inDeliveryToCrossStreets,
      'InDeliveryDeliveryNotes': instance.inDeliveryDeliveryNotes,
      'InDeliveryCarrierId': instance.inDeliveryCarrierId,
      'InDeliveryCarrier': instance.inDeliveryCarrier,
      'InDeliveryCarrierAccount': instance.inDeliveryCarrierAccount,
      'InDeliveryShipViaId': instance.inDeliveryShipViaId,
      'InDeliveryShipVia': instance.inDeliveryShipVia,
      'InDeliveryInvoiceId': instance.inDeliveryInvoiceId,
      'InDeliveryVendorInvoiceId': instance.inDeliveryVendorInvoiceId,
      'InDeliveryEstimatedFreight': instance.inDeliveryEstimatedFreight,
      'InDeliveryFreightInvoiceAmount': instance.inDeliveryFreightInvoiceAmount,
      'InDeliveryChargeType': instance.inDeliveryChargeType,
      'InDeliveryFreightTrackingNumber':
          instance.inDeliveryFreightTrackingNumber,
      'InDeliveryFreightTrackingUrl': instance.inDeliveryFreightTrackingUrl,
      'InDeliveryPackageCode': instance.inDeliveryPackageCode,
      'InDeliveryBillPoFreightOnOrder': instance.inDeliveryBillPoFreightOnOrder,
      'InDeliveryOnlineOrderNumber': instance.inDeliveryOnlineOrderNumber,
      'InDeliveryOnlineOrderStatus': instance.inDeliveryOnlineOrderStatus,
      'InDeliveryToVenue': instance.inDeliveryToVenue,
      'InDeliveryToVenueId': instance.inDeliveryToVenueId,
      'InDeliveryToWarehouse': instance.inDeliveryToWarehouse,
      'InDeliveryToWarehouseId': instance.inDeliveryToWarehouseId,
      'InDeliveryDateStamp': instance.inDeliveryDateStamp,
      'RentalDaysPerWeek': instance.rentalDaysPerWeek,
      'RentalDiscountPercent': instance.rentalDiscountPercent,
      'WeeklyRentalTotal': instance.weeklyRentalTotal,
      'MonthlyRentalTotal': instance.monthlyRentalTotal,
      'PeriodRentalTotal': instance.periodRentalTotal,
      'WeeklyRentalTotalIncludesTax': instance.weeklyRentalTotalIncludesTax,
      'MonthlyRentalTotalIncludesTax': instance.monthlyRentalTotalIncludesTax,
      'PeriodRentalTotalIncludesTax': instance.periodRentalTotalIncludesTax,
      'BillLockedTotal': instance.billLockedTotal,
      'SalesDiscountPercent': instance.salesDiscountPercent,
      'SalesTotal': instance.salesTotal,
      'SalesTotalIncludesTax': instance.salesTotalIncludesTax,
      'PartsDiscountPercent': instance.partsDiscountPercent,
      'PartsTotal': instance.partsTotal,
      'PartsTotalIncludesTax': instance.partsTotalIncludesTax,
      'SpaceDaysPerWeek': instance.spaceDaysPerWeek,
      'SpaceDiscountPercent': instance.spaceDiscountPercent,
      'SpaceSplitPercent': instance.spaceSplitPercent,
      'WeeklySpaceTotal': instance.weeklySpaceTotal,
      'MonthlySpaceTotal': instance.monthlySpaceTotal,
      'PeriodSpaceTotal': instance.periodSpaceTotal,
      'WeeklySpaceTotalIncludesTax': instance.weeklySpaceTotalIncludesTax,
      'MonthlySpaceTotalIncludesTax': instance.monthlySpaceTotalIncludesTax,
      'PeriodSpaceTotalIncludesTax': instance.periodSpaceTotalIncludesTax,
      'VehicleDaysPerWeek': instance.vehicleDaysPerWeek,
      'VehicleDiscountPercent': instance.vehicleDiscountPercent,
      'WeeklyVehicleTotal': instance.weeklyVehicleTotal,
      'MonthlyVehicleTotal': instance.monthlyVehicleTotal,
      'PeriodVehicleTotal': instance.periodVehicleTotal,
      'WeeklyVehicleTotalIncludesTax': instance.weeklyVehicleTotalIncludesTax,
      'MonthlyVehicleTotalIncludesTax': instance.monthlyVehicleTotalIncludesTax,
      'PeriodVehicleTotalIncludesTax': instance.periodVehicleTotalIncludesTax,
      'MiscDiscountPercent': instance.miscDiscountPercent,
      'WeeklyMiscTotal': instance.weeklyMiscTotal,
      'MonthlyMiscTotal': instance.monthlyMiscTotal,
      'PeriodMiscTotal': instance.periodMiscTotal,
      'WeeklyMiscTotalIncludesTax': instance.weeklyMiscTotalIncludesTax,
      'MonthlyMiscTotalIncludesTax': instance.monthlyMiscTotalIncludesTax,
      'PeriodMiscTotalIncludesTax': instance.periodMiscTotalIncludesTax,
      'LaborDiscountPercent': instance.laborDiscountPercent,
      'WeeklyLaborTotal': instance.weeklyLaborTotal,
      'MonthlyLaborTotal': instance.monthlyLaborTotal,
      'PeriodLaborTotal': instance.periodLaborTotal,
      'WeeklyLaborTotalIncludesTax': instance.weeklyLaborTotalIncludesTax,
      'MonthlyLaborTotalIncludesTax': instance.monthlyLaborTotalIncludesTax,
      'PeriodLaborTotalIncludesTax': instance.periodLaborTotalIncludesTax,
      'RentalSaleDiscountPercent': instance.rentalSaleDiscountPercent,
      'RentalSaleTotal': instance.rentalSaleTotal,
      'RentalSaleTotalIncludesTax': instance.rentalSaleTotalIncludesTax,
      'LossAndDamageDiscountPercent': instance.lossAndDamageDiscountPercent,
      'LossAndDamageTotal': instance.lossAndDamageTotal,
      'LossAndDamageTotalIncludesTax': instance.lossAndDamageTotalIncludesTax,
      'CombinedDaysPerWeek': instance.combinedDaysPerWeek,
      'CombinedDiscountPercent': instance.combinedDiscountPercent,
      'WeeklyCombinedTotal': instance.weeklyCombinedTotal,
      'MonthlyCombinedTotal': instance.monthlyCombinedTotal,
      'PeriodCombinedTotal': instance.periodCombinedTotal,
      'WeeklyCombinedTotalIncludesTax': instance.weeklyCombinedTotalIncludesTax,
      'MonthlyCombinedTotalIncludesTax':
          instance.monthlyCombinedTotalIncludesTax,
      'PeriodCombinedTotalIncludesTax': instance.periodCombinedTotalIncludesTax,
      'DisableEditingRentalRate': instance.disableEditingRentalRate,
      'DisableEditingSalesRate': instance.disableEditingSalesRate,
      'DisableEditingMiscellaneousRate':
          instance.disableEditingMiscellaneousRate,
      'DisableEditingLaborRate': instance.disableEditingLaborRate,
      'DisableEditingRentalSaleRate': instance.disableEditingRentalSaleRate,
      'DisableEditingLossAndDamageRate':
          instance.disableEditingLossAndDamageRate,
      'RentalExtendedTotal': instance.rentalExtendedTotal,
      'SalesExtendedTotal': instance.salesExtendedTotal,
      'LaborExtendedTotal': instance.laborExtendedTotal,
      'MiscellaneousExtendedTotal': instance.miscellaneousExtendedTotal,
      'RentalSaleExtendedTotal': instance.rentalSaleExtendedTotal,
      'LossAndDamageExtendedTotal': instance.lossAndDamageExtendedTotal,
      'HasNotes': instance.hasNotes,
      'HasDocuments': instance.hasDocuments,
      'HasEmailHistory': instance.hasEmailHistory,
      'HasContacts': instance.hasContacts,
      'HasSubPurchaseOrders': instance.hasSubPurchaseOrders,
      'HasPickLists': instance.hasPickLists,
      'HasContracts': instance.hasContracts,
      'HasSuspendedContracts': instance.hasSuspendedContracts,
      'HasMultiOrderContracts': instance.hasMultiOrderContracts,
      'HasInvoices': instance.hasInvoices,
      'HasBillingWorksheets': instance.hasBillingWorksheets,
      'HasMultiOrderInvoices': instance.hasMultiOrderInvoices,
      'TotalReplacementCost': instance.totalReplacementCost,
      'PresentationLayerId': instance.presentationLayerId,
      'PresentationLayer': instance.presentationLayer,
      'IsManualSort': instance.isManualSort,
      'QuoteOrderTitle': instance.quoteOrderTitle,
      'UnassignedSubs': instance.unassignedSubs,
      'NonTaxable': instance.nonTaxable,
      'EnableProjects': instance.enableProjects,
      'ProjectId': instance.projectId,
      'ProjectNumber': instance.projectNumber,
      'Project': instance.project,
      'ProjectDrawingsId': instance.projectDrawingsId,
      'ProjectDrawings': instance.projectDrawings,
      'ProjectItemsOrderedId': instance.projectItemsOrderedId,
      'ProjectItemsOrdered': instance.projectItemsOrdered,
      'ProjectDropShipId': instance.projectDropShipId,
      'ProjectDropShip': instance.projectDropShip,
      'ProjectAsBuildId': instance.projectAsBuildId,
      'ProjectAsBuild': instance.projectAsBuild,
      'ProjectCommissioningId': instance.projectCommissioningId,
      'ProjectCommissioning': instance.projectCommissioning,
      'ProjectDepositId': instance.projectDepositId,
      'ProjectDeposit': instance.projectDeposit,
      'InputByUserId': instance.inputByUserId,
      'ModifiedByUserId': instance.modifiedByUserId,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      'Items': instance.items?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentOrderModifyPoWorksheetSessionRequest
    _$WebApiModulesAgentOrderModifyPoWorksheetSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderModifyPoWorksheetSessionRequest(
    orderId: json['OrderId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    recType: json['RecType'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentOrderModifyPoWorksheetSessionRequestToJson(
            WebApiModulesAgentOrderModifyPoWorksheetSessionRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'PurchaseOrderId': instance.purchaseOrderId,
          'RecType': instance.recType,
        };

WebApiModulesAgentOrderModifyPoWorksheetSessionResponse
    _$WebApiModulesAgentOrderModifyPoWorksheetSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderModifyPoWorksheetSessionResponse(
    sessionId: json['SessionId'] as String?,
    vendorId: json['VendorId'] as String?,
    vendor: json['Vendor'] as String?,
    contactId: json['ContactId'] as String?,
    contact: json['Contact'] as String?,
    rateType: json['RateType'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    billingCycle: json['BillingCycle'] as String?,
    requiredDate: json['RequiredDate'] == null
        ? null
        : DateTime.parse(json['RequiredDate'] as String),
    requiredTime: json['RequiredTime'] as String?,
    fromDate: json['FromDate'] == null
        ? null
        : DateTime.parse(json['FromDate'] as String),
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
    deliveryId: json['DeliveryId'] as String?,
    adjustContractDates: json['AdjustContractDates'] as bool?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentOrderModifyPoWorksheetSessionResponseToJson(
            WebApiModulesAgentOrderModifyPoWorksheetSessionResponse instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'VendorId': instance.vendorId,
          'Vendor': instance.vendor,
          'ContactId': instance.contactId,
          'Contact': instance.contact,
          'RateType': instance.rateType,
          'BillingCycleId': instance.billingCycleId,
          'BillingCycle': instance.billingCycle,
          'RequiredDate': instance.requiredDate?.toIso8601String(),
          'RequiredTime': instance.requiredTime,
          'FromDate': instance.fromDate?.toIso8601String(),
          'ToDate': instance.toDate?.toIso8601String(),
          'DeliveryId': instance.deliveryId,
          'AdjustContractDates': instance.adjustContractDates,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesAgentOrderOrder _$WebApiModulesAgentOrderOrderFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesAgentOrderOrder(
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDate: json['OrderDate'] as String?,
    sourceQuoteId: json['SourceQuoteId'] as String?,
    sourceQuoteNumber: json['SourceQuoteNumber'] as String?,
    description: json['Description'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    customerNumber: json['CustomerNumber'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    dealNumber: json['DealNumber'] as String?,
    rateType: json['RateType'] as String?,
    rateTypeDisplay: json['RateTypeDisplay'] as String?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    projectManagerId: json['ProjectManagerId'] as String?,
    projectManager: json['ProjectManager'] as String?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    miscellaneous: json['Miscellaneous'] as bool?,
    labor: json['Labor'] as bool?,
    facilities: json['Facilities'] as bool?,
    transportation: json['Transportation'] as bool?,
    rentalSale: json['RentalSale'] as bool?,
    lossAndDamage: json['LossAndDamage'] as bool?,
    repair: json['Repair'] as bool?,
    hasRentalItem: json['HasRentalItem'] as bool?,
    hasSalesItem: json['HasSalesItem'] as bool?,
    hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
    hasLaborItem: json['HasLaborItem'] as bool?,
    hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
    hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
    hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
    hasRepair: json['HasRepair'] as bool?,
    activityDatesAndTimes: (json['ActivityDatesAndTimes'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pickDate: json['PickDate'] as String?,
    pickTime: json['PickTime'] as String?,
    estimatedStartDate: json['EstimatedStartDate'] as String?,
    estimatedStartTime: json['EstimatedStartTime'] as String?,
    estimatedStopDate: json['EstimatedStopDate'] as String?,
    estimatedStopTime: json['EstimatedStopTime'] as String?,
    pickUpDate: json['PickUpDate'] as String?,
    pickUpTime: json['PickUpTime'] as String?,
    prepDate: json['PrepDate'] as String?,
    prepTime: json['PrepTime'] as String?,
    loadInDate: json['LoadInDate'] as String?,
    loadInTime: json['LoadInTime'] as String?,
    strikeDate: json['StrikeDate'] as String?,
    strikeTime: json['StrikeTime'] as String?,
    testDate: json['TestDate'] as String?,
    testTime: json['TestTime'] as String?,
    orderTypeId: json['OrderTypeId'] as String?,
    orderType: json['OrderType'] as String?,
    orderTypeCombineActivityTabs: json['OrderTypeCombineActivityTabs'] as bool?,
    flatPo: json['FlatPo'] as bool?,
    pendingPo: json['PendingPo'] as bool?,
    poNumber: json['PoNumber'] as String?,
    poAmount: (json['PoAmount'] as num?)?.toDouble(),
    location: json['Location'] as String?,
    orderLocationId: json['OrderLocationId'] as String?,
    orderLocation: json['OrderLocation'] as String?,
    referenceNumber: json['ReferenceNumber'] as String?,
    total: (json['Total'] as num?)?.toDouble(),
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    poApprovalStatusId: json['PoApprovalStatusId'] as String?,
    lockBillingDates: json['LockBillingDates'] as bool?,
    specifyBillingDatesByType: json['SpecifyBillingDatesByType'] as bool?,
    rentalBillingStartDate: json['RentalBillingStartDate'] as String?,
    rentalBillingEndDate: json['RentalBillingEndDate'] as String?,
    laborBillingStartDate: json['LaborBillingStartDate'] as String?,
    laborBillingEndDate: json['LaborBillingEndDate'] as String?,
    miscellaneousBillingStartDate:
        json['MiscellaneousBillingStartDate'] as String?,
    miscellaneousBillingEndDate: json['MiscellaneousBillingEndDate'] as String?,
    facilitiesBillingStartDate: json['FacilitiesBillingStartDate'] as String?,
    facilitiesBillingEndDate: json['FacilitiesBillingEndDate'] as String?,
    vehicleBillingStartDate: json['VehicleBillingStartDate'] as String?,
    vehicleBillingEndDate: json['VehicleBillingEndDate'] as String?,
    delayBillingSearchUntil: json['DelayBillingSearchUntil'] as String?,
    includePrepFeesInRentalRate: json['IncludePrepFeesInRentalRate'] as bool?,
    billingStartDate: json['BillingStartDate'] as String?,
    billingEndDate: json['BillingEndDate'] as String?,
    billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
    billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
    determineQuantitiesToBillBasedOn:
        json['DetermineQuantitiesToBillBasedOn'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    billingCycle: json['BillingCycle'] as String?,
    billingCycleType: json['BillingCycleType'] as String?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    currencyId: json['CurrencyId'] as String?,
    updateAllRatesToNewCurrency: json['UpdateAllRatesToNewCurrency'] as bool?,
    confirmUpdateAllRatesToNewCurrency:
        json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currency: json['Currency'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    tax1Name: json['Tax1Name'] as String?,
    tax2Name: json['Tax2Name'] as String?,
    taxId: json['TaxId'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    noCharge: json['NoCharge'] as bool?,
    noChargeReason: json['NoChargeReason'] as String?,
    printIssuedToAddressFrom: json['PrintIssuedToAddressFrom'] as String?,
    issuedToName: json['IssuedToName'] as String?,
    issuedToAttention: json['IssuedToAttention'] as String?,
    issuedToAttention2: json['IssuedToAttention2'] as String?,
    issuedToAddress1: json['IssuedToAddress1'] as String?,
    issuedToAddress2: json['IssuedToAddress2'] as String?,
    issuedToCity: json['IssuedToCity'] as String?,
    issuedToState: json['IssuedToState'] as String?,
    issuedToZipCode: json['IssuedToZipCode'] as String?,
    issuedToCountryId: json['IssuedToCountryId'] as String?,
    issuedToCountry: json['IssuedToCountry'] as String?,
    billToAddressDifferentFromIssuedToAddress:
        json['BillToAddressDifferentFromIssuedToAddress'] as bool?,
    billToAddressId: json['BillToAddressId'] as String?,
    billToName: json['BillToName'] as String?,
    billToAttention: json['BillToAttention'] as String?,
    billToAttention2: json['BillToAttention2'] as String?,
    billToAddress1: json['BillToAddress1'] as String?,
    billToAddress2: json['BillToAddress2'] as String?,
    billToCity: json['BillToCity'] as String?,
    billToState: json['BillToState'] as String?,
    billToZipCode: json['BillToZipCode'] as String?,
    billToCountryId: json['BillToCountryId'] as String?,
    billToCountry: json['BillToCountry'] as String?,
    discountReasonId: json['DiscountReasonId'] as String?,
    discountReason: json['DiscountReason'] as String?,
    requireContactConfirmation: json['RequireContactConfirmation'] as bool?,
    includeInBillingAnalysis: json['IncludeInBillingAnalysis'] as bool?,
    hiatusDiscountFrom: json['HiatusDiscountFrom'] as String?,
    roundTripRentals: json['RoundTripRentals'] as bool?,
    inGroup: json['InGroup'] as bool?,
    groupNumber: json['GroupNumber'] as int?,
    groupColor: json['GroupColor'] as int?,
    groupOrderBy: (json['GroupOrderBy'] as num?)?.toDouble(),
    coverLetterId: json['CoverLetterId'] as String?,
    coverLetter: json['CoverLetter'] as String?,
    termsConditionsId: json['TermsConditionsId'] as String?,
    termsConditions: json['TermsConditions'] as String?,
    outsideSalesRepresentativeId:
        json['OutsideSalesRepresentativeId'] as String?,
    outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
    marketTypeId: json['MarketTypeId'] as String?,
    marketType: json['MarketType'] as String?,
    marketSegmentId: json['MarketSegmentId'] as String?,
    marketSegment: json['MarketSegment'] as String?,
    marketSegmentJobId: json['MarketSegmentJobId'] as String?,
    marketSegmentJob: json['MarketSegmentJob'] as String?,
    outDeliveryId: json['OutDeliveryId'] as String?,
    outDeliveryDeliveryType: json['OutDeliveryDeliveryType'] as String?,
    outDeliveryRequiredDate: json['OutDeliveryRequiredDate'] as String?,
    outDeliveryRequiredTime: json['OutDeliveryRequiredTime'] as String?,
    outDeliveryTargetShipDate: json['OutDeliveryTargetShipDate'] as String?,
    outDeliveryTargetShipTime: json['OutDeliveryTargetShipTime'] as String?,
    outDeliveryDirection: json['OutDeliveryDirection'] as String?,
    outDeliveryAddressType: json['OutDeliveryAddressType'] as String?,
    outDeliveryFromLocation: json['OutDeliveryFromLocation'] as String?,
    outDeliveryFromContact: json['OutDeliveryFromContact'] as String?,
    outDeliveryFromContactPhone: json['OutDeliveryFromContactPhone'] as String?,
    outDeliveryFromAlternateContact:
        json['OutDeliveryFromAlternateContact'] as String?,
    outDeliveryFromAlternateContactPhone:
        json['OutDeliveryFromAlternateContactPhone'] as String?,
    outDeliveryFromAttention: json['OutDeliveryFromAttention'] as String?,
    outDeliveryFromAddress1: json['OutDeliveryFromAddress1'] as String?,
    outDeliveryFromAdd2ress: json['OutDeliveryFromAdd2ress'] as String?,
    outDeliveryFromCity: json['OutDeliveryFromCity'] as String?,
    outDeliveryFromState: json['OutDeliveryFromState'] as String?,
    outDeliveryFromZipCode: json['OutDeliveryFromZipCode'] as String?,
    outDeliveryFromCountry: json['OutDeliveryFromCountry'] as String?,
    outDeliveryFromCountryId: json['OutDeliveryFromCountryId'] as String?,
    outDeliveryFromCrossStreets: json['OutDeliveryFromCrossStreets'] as String?,
    outDeliveryToLocation: json['OutDeliveryToLocation'] as String?,
    outDeliveryToContact: json['OutDeliveryToContact'] as String?,
    outDeliveryToContactPhone: json['OutDeliveryToContactPhone'] as String?,
    outDeliveryToAlternateContact:
        json['OutDeliveryToAlternateContact'] as String?,
    outDeliveryToAlternateContactPhone:
        json['OutDeliveryToAlternateContactPhone'] as String?,
    outDeliveryToAttention: json['OutDeliveryToAttention'] as String?,
    outDeliveryToAddress1: json['OutDeliveryToAddress1'] as String?,
    outDeliveryToAddress2: json['OutDeliveryToAddress2'] as String?,
    outDeliveryToCity: json['OutDeliveryToCity'] as String?,
    outDeliveryToState: json['OutDeliveryToState'] as String?,
    outDeliveryToZipCode: json['OutDeliveryToZipCode'] as String?,
    outDeliveryToCountryId: json['OutDeliveryToCountryId'] as String?,
    outDeliveryToCountry: json['OutDeliveryToCountry'] as String?,
    outDeliveryToContactFax: json['OutDeliveryToContactFax'] as String?,
    outDeliveryToCrossStreets: json['OutDeliveryToCrossStreets'] as String?,
    outDeliveryDeliveryNotes: json['OutDeliveryDeliveryNotes'] as String?,
    outDeliveryCarrierId: json['OutDeliveryCarrierId'] as String?,
    outDeliveryCarrier: json['OutDeliveryCarrier'] as String?,
    outDeliveryCarrierAccount: json['OutDeliveryCarrierAccount'] as String?,
    outDeliveryShipViaId: json['OutDeliveryShipViaId'] as String?,
    outDeliveryShipVia: json['OutDeliveryShipVia'] as String?,
    outDeliveryInvoiceId: json['OutDeliveryInvoiceId'] as String?,
    outDeliveryVendorInvoiceId: json['OutDeliveryVendorInvoiceId'] as String?,
    outDeliveryEstimatedFreight:
        (json['OutDeliveryEstimatedFreight'] as num?)?.toDouble(),
    outDeliveryFreightInvoiceAmount:
        (json['OutDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    outDeliveryChargeType: json['OutDeliveryChargeType'] as String?,
    outDeliveryFreightTrackingNumber:
        json['OutDeliveryFreightTrackingNumber'] as String?,
    outDeliveryFreightTrackingUrl:
        json['OutDeliveryFreightTrackingUrl'] as String?,
    outDeliveryPackageCode: json['OutDeliveryPackageCode'] as String?,
    outDeliveryBillPoFreightOnOrder:
        json['OutDeliveryBillPoFreightOnOrder'] as bool?,
    outDeliveryOnlineOrderNumber:
        json['OutDeliveryOnlineOrderNumber'] as String?,
    outDeliveryToVenue: json['OutDeliveryToVenue'] as String?,
    outDeliveryToVenueId: json['OutDeliveryToVenueId'] as String?,
    outDeliveryToWarehouse: json['OutDeliveryToWarehouse'] as String?,
    outDeliveryToWarehouseId: json['OutDeliveryToWarehouseId'] as String?,
    outDeliveryDateStamp: json['OutDeliveryDateStamp'] as String?,
    inDeliveryId: json['InDeliveryId'] as String?,
    inDeliveryDeliveryType: json['InDeliveryDeliveryType'] as String?,
    inDeliveryRequiredDate: json['InDeliveryRequiredDate'] as String?,
    inDeliveryRequiredTime: json['InDeliveryRequiredTime'] as String?,
    inDeliveryTargetShipDate: json['InDeliveryTargetShipDate'] as String?,
    inDeliveryTargetShipTime: json['InDeliveryTargetShipTime'] as String?,
    inDeliveryDirection: json['InDeliveryDirection'] as String?,
    inDeliveryAddressType: json['InDeliveryAddressType'] as String?,
    inDeliveryFromLocation: json['InDeliveryFromLocation'] as String?,
    inDeliveryFromContact: json['InDeliveryFromContact'] as String?,
    inDeliveryFromContactPhone: json['InDeliveryFromContactPhone'] as String?,
    inDeliveryFromAlternateContact:
        json['InDeliveryFromAlternateContact'] as String?,
    inDeliveryFromAlternateContactPhone:
        json['InDeliveryFromAlternateContactPhone'] as String?,
    inDeliveryFromAttention: json['InDeliveryFromAttention'] as String?,
    inDeliveryFromAddress1: json['InDeliveryFromAddress1'] as String?,
    inDeliveryFromAdd2ress: json['InDeliveryFromAdd2ress'] as String?,
    inDeliveryFromCity: json['InDeliveryFromCity'] as String?,
    inDeliveryFromState: json['InDeliveryFromState'] as String?,
    inDeliveryFromZipCode: json['InDeliveryFromZipCode'] as String?,
    inDeliveryFromCountry: json['InDeliveryFromCountry'] as String?,
    inDeliveryFromCountryId: json['InDeliveryFromCountryId'] as String?,
    inDeliveryFromCrossStreets: json['InDeliveryFromCrossStreets'] as String?,
    inDeliveryToLocation: json['InDeliveryToLocation'] as String?,
    inDeliveryToContact: json['InDeliveryToContact'] as String?,
    inDeliveryToContactPhone: json['InDeliveryToContactPhone'] as String?,
    inDeliveryToAlternateContact:
        json['InDeliveryToAlternateContact'] as String?,
    inDeliveryToAlternateContactPhone:
        json['InDeliveryToAlternateContactPhone'] as String?,
    inDeliveryToAttention: json['InDeliveryToAttention'] as String?,
    inDeliveryToAddress1: json['InDeliveryToAddress1'] as String?,
    inDeliveryToAddress2: json['InDeliveryToAddress2'] as String?,
    inDeliveryToCity: json['InDeliveryToCity'] as String?,
    inDeliveryToState: json['InDeliveryToState'] as String?,
    inDeliveryToZipCode: json['InDeliveryToZipCode'] as String?,
    inDeliveryToCountryId: json['InDeliveryToCountryId'] as String?,
    inDeliveryToCountry: json['InDeliveryToCountry'] as String?,
    inDeliveryToContactFax: json['InDeliveryToContactFax'] as String?,
    inDeliveryToCrossStreets: json['InDeliveryToCrossStreets'] as String?,
    inDeliveryDeliveryNotes: json['InDeliveryDeliveryNotes'] as String?,
    inDeliveryCarrierId: json['InDeliveryCarrierId'] as String?,
    inDeliveryCarrier: json['InDeliveryCarrier'] as String?,
    inDeliveryCarrierAccount: json['InDeliveryCarrierAccount'] as String?,
    inDeliveryShipViaId: json['InDeliveryShipViaId'] as String?,
    inDeliveryShipVia: json['InDeliveryShipVia'] as String?,
    inDeliveryInvoiceId: json['InDeliveryInvoiceId'] as String?,
    inDeliveryVendorInvoiceId: json['InDeliveryVendorInvoiceId'] as String?,
    inDeliveryEstimatedFreight:
        (json['InDeliveryEstimatedFreight'] as num?)?.toDouble(),
    inDeliveryFreightInvoiceAmount:
        (json['InDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    inDeliveryChargeType: json['InDeliveryChargeType'] as String?,
    inDeliveryFreightTrackingNumber:
        json['InDeliveryFreightTrackingNumber'] as String?,
    inDeliveryFreightTrackingUrl:
        json['InDeliveryFreightTrackingUrl'] as String?,
    inDeliveryPackageCode: json['InDeliveryPackageCode'] as String?,
    inDeliveryBillPoFreightOnOrder:
        json['InDeliveryBillPoFreightOnOrder'] as bool?,
    inDeliveryOnlineOrderNumber: json['InDeliveryOnlineOrderNumber'] as String?,
    inDeliveryOnlineOrderStatus: json['InDeliveryOnlineOrderStatus'] as String?,
    inDeliveryToVenue: json['InDeliveryToVenue'] as String?,
    inDeliveryToVenueId: json['InDeliveryToVenueId'] as String?,
    inDeliveryToWarehouse: json['InDeliveryToWarehouse'] as String?,
    inDeliveryToWarehouseId: json['InDeliveryToWarehouseId'] as String?,
    inDeliveryDateStamp: json['InDeliveryDateStamp'] as String?,
    rentalDaysPerWeek: (json['RentalDaysPerWeek'] as num?)?.toDouble(),
    rentalDiscountPercent: (json['RentalDiscountPercent'] as num?)?.toDouble(),
    weeklyRentalTotal: (json['WeeklyRentalTotal'] as num?)?.toDouble(),
    monthlyRentalTotal: (json['MonthlyRentalTotal'] as num?)?.toDouble(),
    periodRentalTotal: (json['PeriodRentalTotal'] as num?)?.toDouble(),
    weeklyRentalTotalIncludesTax: json['WeeklyRentalTotalIncludesTax'] as bool?,
    monthlyRentalTotalIncludesTax:
        json['MonthlyRentalTotalIncludesTax'] as bool?,
    periodRentalTotalIncludesTax: json['PeriodRentalTotalIncludesTax'] as bool?,
    billLockedTotal: json['BillLockedTotal'] as bool?,
    salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
    salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
    salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
    partsDiscountPercent: (json['PartsDiscountPercent'] as num?)?.toDouble(),
    partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
    partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
    spaceDaysPerWeek: (json['SpaceDaysPerWeek'] as num?)?.toDouble(),
    spaceDiscountPercent: (json['SpaceDiscountPercent'] as num?)?.toDouble(),
    spaceSplitPercent: (json['SpaceSplitPercent'] as num?)?.toDouble(),
    weeklySpaceTotal: (json['WeeklySpaceTotal'] as num?)?.toDouble(),
    monthlySpaceTotal: (json['MonthlySpaceTotal'] as num?)?.toDouble(),
    periodSpaceTotal: (json['PeriodSpaceTotal'] as num?)?.toDouble(),
    weeklySpaceTotalIncludesTax: json['WeeklySpaceTotalIncludesTax'] as bool?,
    monthlySpaceTotalIncludesTax: json['MonthlySpaceTotalIncludesTax'] as bool?,
    periodSpaceTotalIncludesTax: json['PeriodSpaceTotalIncludesTax'] as bool?,
    vehicleDaysPerWeek: (json['VehicleDaysPerWeek'] as num?)?.toDouble(),
    vehicleDiscountPercent:
        (json['VehicleDiscountPercent'] as num?)?.toDouble(),
    weeklyVehicleTotal: (json['WeeklyVehicleTotal'] as num?)?.toDouble(),
    monthlyVehicleTotal: (json['MonthlyVehicleTotal'] as num?)?.toDouble(),
    periodVehicleTotal: (json['PeriodVehicleTotal'] as num?)?.toDouble(),
    weeklyVehicleTotalIncludesTax:
        json['WeeklyVehicleTotalIncludesTax'] as bool?,
    monthlyVehicleTotalIncludesTax:
        json['MonthlyVehicleTotalIncludesTax'] as bool?,
    periodVehicleTotalIncludesTax:
        json['PeriodVehicleTotalIncludesTax'] as bool?,
    miscDiscountPercent: (json['MiscDiscountPercent'] as num?)?.toDouble(),
    weeklyMiscTotal: (json['WeeklyMiscTotal'] as num?)?.toDouble(),
    monthlyMiscTotal: (json['MonthlyMiscTotal'] as num?)?.toDouble(),
    periodMiscTotal: (json['PeriodMiscTotal'] as num?)?.toDouble(),
    weeklyMiscTotalIncludesTax: json['WeeklyMiscTotalIncludesTax'] as bool?,
    monthlyMiscTotalIncludesTax: json['MonthlyMiscTotalIncludesTax'] as bool?,
    periodMiscTotalIncludesTax: json['PeriodMiscTotalIncludesTax'] as bool?,
    laborDiscountPercent: (json['LaborDiscountPercent'] as num?)?.toDouble(),
    weeklyLaborTotal: (json['WeeklyLaborTotal'] as num?)?.toDouble(),
    monthlyLaborTotal: (json['MonthlyLaborTotal'] as num?)?.toDouble(),
    periodLaborTotal: (json['PeriodLaborTotal'] as num?)?.toDouble(),
    weeklyLaborTotalIncludesTax: json['WeeklyLaborTotalIncludesTax'] as bool?,
    monthlyLaborTotalIncludesTax: json['MonthlyLaborTotalIncludesTax'] as bool?,
    periodLaborTotalIncludesTax: json['PeriodLaborTotalIncludesTax'] as bool?,
    rentalSaleDiscountPercent:
        (json['RentalSaleDiscountPercent'] as num?)?.toDouble(),
    rentalSaleTotal: (json['RentalSaleTotal'] as num?)?.toDouble(),
    rentalSaleTotalIncludesTax: json['RentalSaleTotalIncludesTax'] as bool?,
    lossAndDamageDiscountPercent:
        (json['LossAndDamageDiscountPercent'] as num?)?.toDouble(),
    lossAndDamageTotal: (json['LossAndDamageTotal'] as num?)?.toDouble(),
    lossAndDamageTotalIncludesTax:
        json['LossAndDamageTotalIncludesTax'] as bool?,
    combinedDaysPerWeek: (json['CombinedDaysPerWeek'] as num?)?.toDouble(),
    combinedDiscountPercent:
        (json['CombinedDiscountPercent'] as num?)?.toDouble(),
    weeklyCombinedTotal: (json['WeeklyCombinedTotal'] as num?)?.toDouble(),
    monthlyCombinedTotal: (json['MonthlyCombinedTotal'] as num?)?.toDouble(),
    periodCombinedTotal: (json['PeriodCombinedTotal'] as num?)?.toDouble(),
    weeklyCombinedTotalIncludesTax:
        json['WeeklyCombinedTotalIncludesTax'] as bool?,
    monthlyCombinedTotalIncludesTax:
        json['MonthlyCombinedTotalIncludesTax'] as bool?,
    periodCombinedTotalIncludesTax:
        json['PeriodCombinedTotalIncludesTax'] as bool?,
    disableEditingRentalRate: json['DisableEditingRentalRate'] as bool?,
    disableEditingSalesRate: json['DisableEditingSalesRate'] as bool?,
    disableEditingMiscellaneousRate:
        json['DisableEditingMiscellaneousRate'] as bool?,
    disableEditingLaborRate: json['DisableEditingLaborRate'] as bool?,
    disableEditingRentalSaleRate: json['DisableEditingRentalSaleRate'] as bool?,
    disableEditingLossAndDamageRate:
        json['DisableEditingLossAndDamageRate'] as bool?,
    rentalExtendedTotal: (json['RentalExtendedTotal'] as num?)?.toDouble(),
    salesExtendedTotal: (json['SalesExtendedTotal'] as num?)?.toDouble(),
    laborExtendedTotal: (json['LaborExtendedTotal'] as num?)?.toDouble(),
    miscellaneousExtendedTotal:
        (json['MiscellaneousExtendedTotal'] as num?)?.toDouble(),
    rentalSaleExtendedTotal:
        (json['RentalSaleExtendedTotal'] as num?)?.toDouble(),
    lossAndDamageExtendedTotal:
        (json['LossAndDamageExtendedTotal'] as num?)?.toDouble(),
    hasNotes: json['HasNotes'] as bool?,
    hasDocuments: json['HasDocuments'] as bool?,
    hasEmailHistory: json['HasEmailHistory'] as bool?,
    hasContacts: json['HasContacts'] as bool?,
    hasSubPurchaseOrders: json['HasSubPurchaseOrders'] as bool?,
    hasPickLists: json['HasPickLists'] as bool?,
    hasContracts: json['HasContracts'] as bool?,
    hasSuspendedContracts: json['HasSuspendedContracts'] as bool?,
    hasMultiOrderContracts: json['HasMultiOrderContracts'] as bool?,
    hasInvoices: json['HasInvoices'] as bool?,
    hasBillingWorksheets: json['HasBillingWorksheets'] as bool?,
    hasMultiOrderInvoices: json['HasMultiOrderInvoices'] as bool?,
    totalReplacementCost: (json['TotalReplacementCost'] as num?)?.toDouble(),
    presentationLayerId: json['PresentationLayerId'] as String?,
    presentationLayer: json['PresentationLayer'] as String?,
    isManualSort: json['IsManualSort'] as bool?,
    quoteOrderTitle: json['QuoteOrderTitle'] as String?,
    unassignedSubs: json['UnassignedSubs'] as bool?,
    nonTaxable: json['NonTaxable'] as bool?,
    enableProjects: json['EnableProjects'] as bool?,
    projectId: json['ProjectId'] as String?,
    projectNumber: json['ProjectNumber'] as String?,
    project: json['Project'] as String?,
    projectDrawingsId: json['ProjectDrawingsId'] as String?,
    projectDrawings: json['ProjectDrawings'] as String?,
    projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
    projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
    projectDropShipId: json['ProjectDropShipId'] as String?,
    projectDropShip: json['ProjectDropShip'] as String?,
    projectAsBuildId: json['ProjectAsBuildId'] as String?,
    projectAsBuild: json['ProjectAsBuild'] as String?,
    projectCommissioningId: json['ProjectCommissioningId'] as String?,
    projectCommissioning: json['ProjectCommissioning'] as String?,
    projectDepositId: json['ProjectDepositId'] as String?,
    projectDeposit: json['ProjectDeposit'] as String?,
    inputByUserId: json['InputByUserId'] as String?,
    modifiedByUserId: json['ModifiedByUserId'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderOrderToJson(
        WebApiModulesAgentOrderOrder instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'OrderDate': instance.orderDate,
      'SourceQuoteId': instance.sourceQuoteId,
      'SourceQuoteNumber': instance.sourceQuoteNumber,
      'Description': instance.description,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'CustomerId': instance.customerId,
      'Customer': instance.customer,
      'CustomerNumber': instance.customerNumber,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'DealNumber': instance.dealNumber,
      'RateType': instance.rateType,
      'RateTypeDisplay': instance.rateTypeDisplay,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'ProjectManagerId': instance.projectManagerId,
      'ProjectManager': instance.projectManager,
      'Rental': instance.rental,
      'Sales': instance.sales,
      'Miscellaneous': instance.miscellaneous,
      'Labor': instance.labor,
      'Facilities': instance.facilities,
      'Transportation': instance.transportation,
      'RentalSale': instance.rentalSale,
      'LossAndDamage': instance.lossAndDamage,
      'Repair': instance.repair,
      'HasRentalItem': instance.hasRentalItem,
      'HasSalesItem': instance.hasSalesItem,
      'HasMiscellaneousItem': instance.hasMiscellaneousItem,
      'HasLaborItem': instance.hasLaborItem,
      'HasFacilitiesItem': instance.hasFacilitiesItem,
      'HasLossAndDamageItem': instance.hasLossAndDamageItem,
      'HasRentalSaleItem': instance.hasRentalSaleItem,
      'HasRepair': instance.hasRepair,
      'ActivityDatesAndTimes':
          instance.activityDatesAndTimes?.map((e) => e.toJson()).toList(),
      'PickDate': instance.pickDate,
      'PickTime': instance.pickTime,
      'EstimatedStartDate': instance.estimatedStartDate,
      'EstimatedStartTime': instance.estimatedStartTime,
      'EstimatedStopDate': instance.estimatedStopDate,
      'EstimatedStopTime': instance.estimatedStopTime,
      'PickUpDate': instance.pickUpDate,
      'PickUpTime': instance.pickUpTime,
      'PrepDate': instance.prepDate,
      'PrepTime': instance.prepTime,
      'LoadInDate': instance.loadInDate,
      'LoadInTime': instance.loadInTime,
      'StrikeDate': instance.strikeDate,
      'StrikeTime': instance.strikeTime,
      'TestDate': instance.testDate,
      'TestTime': instance.testTime,
      'OrderTypeId': instance.orderTypeId,
      'OrderType': instance.orderType,
      'OrderTypeCombineActivityTabs': instance.orderTypeCombineActivityTabs,
      'FlatPo': instance.flatPo,
      'PendingPo': instance.pendingPo,
      'PoNumber': instance.poNumber,
      'PoAmount': instance.poAmount,
      'Location': instance.location,
      'OrderLocationId': instance.orderLocationId,
      'OrderLocation': instance.orderLocation,
      'ReferenceNumber': instance.referenceNumber,
      'Total': instance.total,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'PoApprovalStatusId': instance.poApprovalStatusId,
      'LockBillingDates': instance.lockBillingDates,
      'SpecifyBillingDatesByType': instance.specifyBillingDatesByType,
      'RentalBillingStartDate': instance.rentalBillingStartDate,
      'RentalBillingEndDate': instance.rentalBillingEndDate,
      'LaborBillingStartDate': instance.laborBillingStartDate,
      'LaborBillingEndDate': instance.laborBillingEndDate,
      'MiscellaneousBillingStartDate': instance.miscellaneousBillingStartDate,
      'MiscellaneousBillingEndDate': instance.miscellaneousBillingEndDate,
      'FacilitiesBillingStartDate': instance.facilitiesBillingStartDate,
      'FacilitiesBillingEndDate': instance.facilitiesBillingEndDate,
      'VehicleBillingStartDate': instance.vehicleBillingStartDate,
      'VehicleBillingEndDate': instance.vehicleBillingEndDate,
      'DelayBillingSearchUntil': instance.delayBillingSearchUntil,
      'IncludePrepFeesInRentalRate': instance.includePrepFeesInRentalRate,
      'BillingStartDate': instance.billingStartDate,
      'BillingEndDate': instance.billingEndDate,
      'BillingWeeks': instance.billingWeeks,
      'BillingMonths': instance.billingMonths,
      'DetermineQuantitiesToBillBasedOn':
          instance.determineQuantitiesToBillBasedOn,
      'BillingCycleId': instance.billingCycleId,
      'BillingCycle': instance.billingCycle,
      'BillingCycleType': instance.billingCycleType,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'PaymentTypeId': instance.paymentTypeId,
      'PaymentType': instance.paymentType,
      'CurrencyId': instance.currencyId,
      'UpdateAllRatesToNewCurrency': instance.updateAllRatesToNewCurrency,
      'ConfirmUpdateAllRatesToNewCurrency':
          instance.confirmUpdateAllRatesToNewCurrency,
      'CurrencyCode': instance.currencyCode,
      'Currency': instance.currency,
      'CurrencySymbol': instance.currencySymbol,
      'TaxOptionId': instance.taxOptionId,
      'TaxOption': instance.taxOption,
      'Tax1Name': instance.tax1Name,
      'Tax2Name': instance.tax2Name,
      'TaxId': instance.taxId,
      'RentalTaxRate1': instance.rentalTaxRate1,
      'SalesTaxRate1': instance.salesTaxRate1,
      'LaborTaxRate1': instance.laborTaxRate1,
      'RentalTaxRate2': instance.rentalTaxRate2,
      'SalesTaxRate2': instance.salesTaxRate2,
      'LaborTaxRate2': instance.laborTaxRate2,
      'NoCharge': instance.noCharge,
      'NoChargeReason': instance.noChargeReason,
      'PrintIssuedToAddressFrom': instance.printIssuedToAddressFrom,
      'IssuedToName': instance.issuedToName,
      'IssuedToAttention': instance.issuedToAttention,
      'IssuedToAttention2': instance.issuedToAttention2,
      'IssuedToAddress1': instance.issuedToAddress1,
      'IssuedToAddress2': instance.issuedToAddress2,
      'IssuedToCity': instance.issuedToCity,
      'IssuedToState': instance.issuedToState,
      'IssuedToZipCode': instance.issuedToZipCode,
      'IssuedToCountryId': instance.issuedToCountryId,
      'IssuedToCountry': instance.issuedToCountry,
      'BillToAddressDifferentFromIssuedToAddress':
          instance.billToAddressDifferentFromIssuedToAddress,
      'BillToAddressId': instance.billToAddressId,
      'BillToName': instance.billToName,
      'BillToAttention': instance.billToAttention,
      'BillToAttention2': instance.billToAttention2,
      'BillToAddress1': instance.billToAddress1,
      'BillToAddress2': instance.billToAddress2,
      'BillToCity': instance.billToCity,
      'BillToState': instance.billToState,
      'BillToZipCode': instance.billToZipCode,
      'BillToCountryId': instance.billToCountryId,
      'BillToCountry': instance.billToCountry,
      'DiscountReasonId': instance.discountReasonId,
      'DiscountReason': instance.discountReason,
      'RequireContactConfirmation': instance.requireContactConfirmation,
      'IncludeInBillingAnalysis': instance.includeInBillingAnalysis,
      'HiatusDiscountFrom': instance.hiatusDiscountFrom,
      'RoundTripRentals': instance.roundTripRentals,
      'InGroup': instance.inGroup,
      'GroupNumber': instance.groupNumber,
      'GroupColor': instance.groupColor,
      'GroupOrderBy': instance.groupOrderBy,
      'CoverLetterId': instance.coverLetterId,
      'CoverLetter': instance.coverLetter,
      'TermsConditionsId': instance.termsConditionsId,
      'TermsConditions': instance.termsConditions,
      'OutsideSalesRepresentativeId': instance.outsideSalesRepresentativeId,
      'OutsideSalesRepresentative': instance.outsideSalesRepresentative,
      'MarketTypeId': instance.marketTypeId,
      'MarketType': instance.marketType,
      'MarketSegmentId': instance.marketSegmentId,
      'MarketSegment': instance.marketSegment,
      'MarketSegmentJobId': instance.marketSegmentJobId,
      'MarketSegmentJob': instance.marketSegmentJob,
      'OutDeliveryId': instance.outDeliveryId,
      'OutDeliveryDeliveryType': instance.outDeliveryDeliveryType,
      'OutDeliveryRequiredDate': instance.outDeliveryRequiredDate,
      'OutDeliveryRequiredTime': instance.outDeliveryRequiredTime,
      'OutDeliveryTargetShipDate': instance.outDeliveryTargetShipDate,
      'OutDeliveryTargetShipTime': instance.outDeliveryTargetShipTime,
      'OutDeliveryDirection': instance.outDeliveryDirection,
      'OutDeliveryAddressType': instance.outDeliveryAddressType,
      'OutDeliveryFromLocation': instance.outDeliveryFromLocation,
      'OutDeliveryFromContact': instance.outDeliveryFromContact,
      'OutDeliveryFromContactPhone': instance.outDeliveryFromContactPhone,
      'OutDeliveryFromAlternateContact':
          instance.outDeliveryFromAlternateContact,
      'OutDeliveryFromAlternateContactPhone':
          instance.outDeliveryFromAlternateContactPhone,
      'OutDeliveryFromAttention': instance.outDeliveryFromAttention,
      'OutDeliveryFromAddress1': instance.outDeliveryFromAddress1,
      'OutDeliveryFromAdd2ress': instance.outDeliveryFromAdd2ress,
      'OutDeliveryFromCity': instance.outDeliveryFromCity,
      'OutDeliveryFromState': instance.outDeliveryFromState,
      'OutDeliveryFromZipCode': instance.outDeliveryFromZipCode,
      'OutDeliveryFromCountry': instance.outDeliveryFromCountry,
      'OutDeliveryFromCountryId': instance.outDeliveryFromCountryId,
      'OutDeliveryFromCrossStreets': instance.outDeliveryFromCrossStreets,
      'OutDeliveryToLocation': instance.outDeliveryToLocation,
      'OutDeliveryToContact': instance.outDeliveryToContact,
      'OutDeliveryToContactPhone': instance.outDeliveryToContactPhone,
      'OutDeliveryToAlternateContact': instance.outDeliveryToAlternateContact,
      'OutDeliveryToAlternateContactPhone':
          instance.outDeliveryToAlternateContactPhone,
      'OutDeliveryToAttention': instance.outDeliveryToAttention,
      'OutDeliveryToAddress1': instance.outDeliveryToAddress1,
      'OutDeliveryToAddress2': instance.outDeliveryToAddress2,
      'OutDeliveryToCity': instance.outDeliveryToCity,
      'OutDeliveryToState': instance.outDeliveryToState,
      'OutDeliveryToZipCode': instance.outDeliveryToZipCode,
      'OutDeliveryToCountryId': instance.outDeliveryToCountryId,
      'OutDeliveryToCountry': instance.outDeliveryToCountry,
      'OutDeliveryToContactFax': instance.outDeliveryToContactFax,
      'OutDeliveryToCrossStreets': instance.outDeliveryToCrossStreets,
      'OutDeliveryDeliveryNotes': instance.outDeliveryDeliveryNotes,
      'OutDeliveryCarrierId': instance.outDeliveryCarrierId,
      'OutDeliveryCarrier': instance.outDeliveryCarrier,
      'OutDeliveryCarrierAccount': instance.outDeliveryCarrierAccount,
      'OutDeliveryShipViaId': instance.outDeliveryShipViaId,
      'OutDeliveryShipVia': instance.outDeliveryShipVia,
      'OutDeliveryInvoiceId': instance.outDeliveryInvoiceId,
      'OutDeliveryVendorInvoiceId': instance.outDeliveryVendorInvoiceId,
      'OutDeliveryEstimatedFreight': instance.outDeliveryEstimatedFreight,
      'OutDeliveryFreightInvoiceAmount':
          instance.outDeliveryFreightInvoiceAmount,
      'OutDeliveryChargeType': instance.outDeliveryChargeType,
      'OutDeliveryFreightTrackingNumber':
          instance.outDeliveryFreightTrackingNumber,
      'OutDeliveryFreightTrackingUrl': instance.outDeliveryFreightTrackingUrl,
      'OutDeliveryPackageCode': instance.outDeliveryPackageCode,
      'OutDeliveryBillPoFreightOnOrder':
          instance.outDeliveryBillPoFreightOnOrder,
      'OutDeliveryOnlineOrderNumber': instance.outDeliveryOnlineOrderNumber,
      'OutDeliveryToVenue': instance.outDeliveryToVenue,
      'OutDeliveryToVenueId': instance.outDeliveryToVenueId,
      'OutDeliveryToWarehouse': instance.outDeliveryToWarehouse,
      'OutDeliveryToWarehouseId': instance.outDeliveryToWarehouseId,
      'OutDeliveryDateStamp': instance.outDeliveryDateStamp,
      'InDeliveryId': instance.inDeliveryId,
      'InDeliveryDeliveryType': instance.inDeliveryDeliveryType,
      'InDeliveryRequiredDate': instance.inDeliveryRequiredDate,
      'InDeliveryRequiredTime': instance.inDeliveryRequiredTime,
      'InDeliveryTargetShipDate': instance.inDeliveryTargetShipDate,
      'InDeliveryTargetShipTime': instance.inDeliveryTargetShipTime,
      'InDeliveryDirection': instance.inDeliveryDirection,
      'InDeliveryAddressType': instance.inDeliveryAddressType,
      'InDeliveryFromLocation': instance.inDeliveryFromLocation,
      'InDeliveryFromContact': instance.inDeliveryFromContact,
      'InDeliveryFromContactPhone': instance.inDeliveryFromContactPhone,
      'InDeliveryFromAlternateContact': instance.inDeliveryFromAlternateContact,
      'InDeliveryFromAlternateContactPhone':
          instance.inDeliveryFromAlternateContactPhone,
      'InDeliveryFromAttention': instance.inDeliveryFromAttention,
      'InDeliveryFromAddress1': instance.inDeliveryFromAddress1,
      'InDeliveryFromAdd2ress': instance.inDeliveryFromAdd2ress,
      'InDeliveryFromCity': instance.inDeliveryFromCity,
      'InDeliveryFromState': instance.inDeliveryFromState,
      'InDeliveryFromZipCode': instance.inDeliveryFromZipCode,
      'InDeliveryFromCountry': instance.inDeliveryFromCountry,
      'InDeliveryFromCountryId': instance.inDeliveryFromCountryId,
      'InDeliveryFromCrossStreets': instance.inDeliveryFromCrossStreets,
      'InDeliveryToLocation': instance.inDeliveryToLocation,
      'InDeliveryToContact': instance.inDeliveryToContact,
      'InDeliveryToContactPhone': instance.inDeliveryToContactPhone,
      'InDeliveryToAlternateContact': instance.inDeliveryToAlternateContact,
      'InDeliveryToAlternateContactPhone':
          instance.inDeliveryToAlternateContactPhone,
      'InDeliveryToAttention': instance.inDeliveryToAttention,
      'InDeliveryToAddress1': instance.inDeliveryToAddress1,
      'InDeliveryToAddress2': instance.inDeliveryToAddress2,
      'InDeliveryToCity': instance.inDeliveryToCity,
      'InDeliveryToState': instance.inDeliveryToState,
      'InDeliveryToZipCode': instance.inDeliveryToZipCode,
      'InDeliveryToCountryId': instance.inDeliveryToCountryId,
      'InDeliveryToCountry': instance.inDeliveryToCountry,
      'InDeliveryToContactFax': instance.inDeliveryToContactFax,
      'InDeliveryToCrossStreets': instance.inDeliveryToCrossStreets,
      'InDeliveryDeliveryNotes': instance.inDeliveryDeliveryNotes,
      'InDeliveryCarrierId': instance.inDeliveryCarrierId,
      'InDeliveryCarrier': instance.inDeliveryCarrier,
      'InDeliveryCarrierAccount': instance.inDeliveryCarrierAccount,
      'InDeliveryShipViaId': instance.inDeliveryShipViaId,
      'InDeliveryShipVia': instance.inDeliveryShipVia,
      'InDeliveryInvoiceId': instance.inDeliveryInvoiceId,
      'InDeliveryVendorInvoiceId': instance.inDeliveryVendorInvoiceId,
      'InDeliveryEstimatedFreight': instance.inDeliveryEstimatedFreight,
      'InDeliveryFreightInvoiceAmount': instance.inDeliveryFreightInvoiceAmount,
      'InDeliveryChargeType': instance.inDeliveryChargeType,
      'InDeliveryFreightTrackingNumber':
          instance.inDeliveryFreightTrackingNumber,
      'InDeliveryFreightTrackingUrl': instance.inDeliveryFreightTrackingUrl,
      'InDeliveryPackageCode': instance.inDeliveryPackageCode,
      'InDeliveryBillPoFreightOnOrder': instance.inDeliveryBillPoFreightOnOrder,
      'InDeliveryOnlineOrderNumber': instance.inDeliveryOnlineOrderNumber,
      'InDeliveryOnlineOrderStatus': instance.inDeliveryOnlineOrderStatus,
      'InDeliveryToVenue': instance.inDeliveryToVenue,
      'InDeliveryToVenueId': instance.inDeliveryToVenueId,
      'InDeliveryToWarehouse': instance.inDeliveryToWarehouse,
      'InDeliveryToWarehouseId': instance.inDeliveryToWarehouseId,
      'InDeliveryDateStamp': instance.inDeliveryDateStamp,
      'RentalDaysPerWeek': instance.rentalDaysPerWeek,
      'RentalDiscountPercent': instance.rentalDiscountPercent,
      'WeeklyRentalTotal': instance.weeklyRentalTotal,
      'MonthlyRentalTotal': instance.monthlyRentalTotal,
      'PeriodRentalTotal': instance.periodRentalTotal,
      'WeeklyRentalTotalIncludesTax': instance.weeklyRentalTotalIncludesTax,
      'MonthlyRentalTotalIncludesTax': instance.monthlyRentalTotalIncludesTax,
      'PeriodRentalTotalIncludesTax': instance.periodRentalTotalIncludesTax,
      'BillLockedTotal': instance.billLockedTotal,
      'SalesDiscountPercent': instance.salesDiscountPercent,
      'SalesTotal': instance.salesTotal,
      'SalesTotalIncludesTax': instance.salesTotalIncludesTax,
      'PartsDiscountPercent': instance.partsDiscountPercent,
      'PartsTotal': instance.partsTotal,
      'PartsTotalIncludesTax': instance.partsTotalIncludesTax,
      'SpaceDaysPerWeek': instance.spaceDaysPerWeek,
      'SpaceDiscountPercent': instance.spaceDiscountPercent,
      'SpaceSplitPercent': instance.spaceSplitPercent,
      'WeeklySpaceTotal': instance.weeklySpaceTotal,
      'MonthlySpaceTotal': instance.monthlySpaceTotal,
      'PeriodSpaceTotal': instance.periodSpaceTotal,
      'WeeklySpaceTotalIncludesTax': instance.weeklySpaceTotalIncludesTax,
      'MonthlySpaceTotalIncludesTax': instance.monthlySpaceTotalIncludesTax,
      'PeriodSpaceTotalIncludesTax': instance.periodSpaceTotalIncludesTax,
      'VehicleDaysPerWeek': instance.vehicleDaysPerWeek,
      'VehicleDiscountPercent': instance.vehicleDiscountPercent,
      'WeeklyVehicleTotal': instance.weeklyVehicleTotal,
      'MonthlyVehicleTotal': instance.monthlyVehicleTotal,
      'PeriodVehicleTotal': instance.periodVehicleTotal,
      'WeeklyVehicleTotalIncludesTax': instance.weeklyVehicleTotalIncludesTax,
      'MonthlyVehicleTotalIncludesTax': instance.monthlyVehicleTotalIncludesTax,
      'PeriodVehicleTotalIncludesTax': instance.periodVehicleTotalIncludesTax,
      'MiscDiscountPercent': instance.miscDiscountPercent,
      'WeeklyMiscTotal': instance.weeklyMiscTotal,
      'MonthlyMiscTotal': instance.monthlyMiscTotal,
      'PeriodMiscTotal': instance.periodMiscTotal,
      'WeeklyMiscTotalIncludesTax': instance.weeklyMiscTotalIncludesTax,
      'MonthlyMiscTotalIncludesTax': instance.monthlyMiscTotalIncludesTax,
      'PeriodMiscTotalIncludesTax': instance.periodMiscTotalIncludesTax,
      'LaborDiscountPercent': instance.laborDiscountPercent,
      'WeeklyLaborTotal': instance.weeklyLaborTotal,
      'MonthlyLaborTotal': instance.monthlyLaborTotal,
      'PeriodLaborTotal': instance.periodLaborTotal,
      'WeeklyLaborTotalIncludesTax': instance.weeklyLaborTotalIncludesTax,
      'MonthlyLaborTotalIncludesTax': instance.monthlyLaborTotalIncludesTax,
      'PeriodLaborTotalIncludesTax': instance.periodLaborTotalIncludesTax,
      'RentalSaleDiscountPercent': instance.rentalSaleDiscountPercent,
      'RentalSaleTotal': instance.rentalSaleTotal,
      'RentalSaleTotalIncludesTax': instance.rentalSaleTotalIncludesTax,
      'LossAndDamageDiscountPercent': instance.lossAndDamageDiscountPercent,
      'LossAndDamageTotal': instance.lossAndDamageTotal,
      'LossAndDamageTotalIncludesTax': instance.lossAndDamageTotalIncludesTax,
      'CombinedDaysPerWeek': instance.combinedDaysPerWeek,
      'CombinedDiscountPercent': instance.combinedDiscountPercent,
      'WeeklyCombinedTotal': instance.weeklyCombinedTotal,
      'MonthlyCombinedTotal': instance.monthlyCombinedTotal,
      'PeriodCombinedTotal': instance.periodCombinedTotal,
      'WeeklyCombinedTotalIncludesTax': instance.weeklyCombinedTotalIncludesTax,
      'MonthlyCombinedTotalIncludesTax':
          instance.monthlyCombinedTotalIncludesTax,
      'PeriodCombinedTotalIncludesTax': instance.periodCombinedTotalIncludesTax,
      'DisableEditingRentalRate': instance.disableEditingRentalRate,
      'DisableEditingSalesRate': instance.disableEditingSalesRate,
      'DisableEditingMiscellaneousRate':
          instance.disableEditingMiscellaneousRate,
      'DisableEditingLaborRate': instance.disableEditingLaborRate,
      'DisableEditingRentalSaleRate': instance.disableEditingRentalSaleRate,
      'DisableEditingLossAndDamageRate':
          instance.disableEditingLossAndDamageRate,
      'RentalExtendedTotal': instance.rentalExtendedTotal,
      'SalesExtendedTotal': instance.salesExtendedTotal,
      'LaborExtendedTotal': instance.laborExtendedTotal,
      'MiscellaneousExtendedTotal': instance.miscellaneousExtendedTotal,
      'RentalSaleExtendedTotal': instance.rentalSaleExtendedTotal,
      'LossAndDamageExtendedTotal': instance.lossAndDamageExtendedTotal,
      'HasNotes': instance.hasNotes,
      'HasDocuments': instance.hasDocuments,
      'HasEmailHistory': instance.hasEmailHistory,
      'HasContacts': instance.hasContacts,
      'HasSubPurchaseOrders': instance.hasSubPurchaseOrders,
      'HasPickLists': instance.hasPickLists,
      'HasContracts': instance.hasContracts,
      'HasSuspendedContracts': instance.hasSuspendedContracts,
      'HasMultiOrderContracts': instance.hasMultiOrderContracts,
      'HasInvoices': instance.hasInvoices,
      'HasBillingWorksheets': instance.hasBillingWorksheets,
      'HasMultiOrderInvoices': instance.hasMultiOrderInvoices,
      'TotalReplacementCost': instance.totalReplacementCost,
      'PresentationLayerId': instance.presentationLayerId,
      'PresentationLayer': instance.presentationLayer,
      'IsManualSort': instance.isManualSort,
      'QuoteOrderTitle': instance.quoteOrderTitle,
      'UnassignedSubs': instance.unassignedSubs,
      'NonTaxable': instance.nonTaxable,
      'EnableProjects': instance.enableProjects,
      'ProjectId': instance.projectId,
      'ProjectNumber': instance.projectNumber,
      'Project': instance.project,
      'ProjectDrawingsId': instance.projectDrawingsId,
      'ProjectDrawings': instance.projectDrawings,
      'ProjectItemsOrderedId': instance.projectItemsOrderedId,
      'ProjectItemsOrdered': instance.projectItemsOrdered,
      'ProjectDropShipId': instance.projectDropShipId,
      'ProjectDropShip': instance.projectDropShip,
      'ProjectAsBuildId': instance.projectAsBuildId,
      'ProjectAsBuild': instance.projectAsBuild,
      'ProjectCommissioningId': instance.projectCommissioningId,
      'ProjectCommissioning': instance.projectCommissioning,
      'ProjectDepositId': instance.projectDepositId,
      'ProjectDeposit': instance.projectDeposit,
      'InputByUserId': instance.inputByUserId,
      'ModifiedByUserId': instance.modifiedByUserId,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentOrderOrderBase _$WebApiModulesAgentOrderOrderBaseFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesAgentOrderOrderBase(
    description: json['Description'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    customerNumber: json['CustomerNumber'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    dealNumber: json['DealNumber'] as String?,
    rateType: json['RateType'] as String?,
    rateTypeDisplay: json['RateTypeDisplay'] as String?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    projectManagerId: json['ProjectManagerId'] as String?,
    projectManager: json['ProjectManager'] as String?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    miscellaneous: json['Miscellaneous'] as bool?,
    labor: json['Labor'] as bool?,
    facilities: json['Facilities'] as bool?,
    transportation: json['Transportation'] as bool?,
    rentalSale: json['RentalSale'] as bool?,
    lossAndDamage: json['LossAndDamage'] as bool?,
    repair: json['Repair'] as bool?,
    hasRentalItem: json['HasRentalItem'] as bool?,
    hasSalesItem: json['HasSalesItem'] as bool?,
    hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
    hasLaborItem: json['HasLaborItem'] as bool?,
    hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
    hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
    hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
    hasRepair: json['HasRepair'] as bool?,
    activityDatesAndTimes: (json['ActivityDatesAndTimes'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pickDate: json['PickDate'] as String?,
    pickTime: json['PickTime'] as String?,
    estimatedStartDate: json['EstimatedStartDate'] as String?,
    estimatedStartTime: json['EstimatedStartTime'] as String?,
    estimatedStopDate: json['EstimatedStopDate'] as String?,
    estimatedStopTime: json['EstimatedStopTime'] as String?,
    pickUpDate: json['PickUpDate'] as String?,
    pickUpTime: json['PickUpTime'] as String?,
    prepDate: json['PrepDate'] as String?,
    prepTime: json['PrepTime'] as String?,
    loadInDate: json['LoadInDate'] as String?,
    loadInTime: json['LoadInTime'] as String?,
    strikeDate: json['StrikeDate'] as String?,
    strikeTime: json['StrikeTime'] as String?,
    testDate: json['TestDate'] as String?,
    testTime: json['TestTime'] as String?,
    orderTypeId: json['OrderTypeId'] as String?,
    orderType: json['OrderType'] as String?,
    orderTypeCombineActivityTabs: json['OrderTypeCombineActivityTabs'] as bool?,
    flatPo: json['FlatPo'] as bool?,
    pendingPo: json['PendingPo'] as bool?,
    poNumber: json['PoNumber'] as String?,
    poAmount: (json['PoAmount'] as num?)?.toDouble(),
    location: json['Location'] as String?,
    orderLocationId: json['OrderLocationId'] as String?,
    orderLocation: json['OrderLocation'] as String?,
    referenceNumber: json['ReferenceNumber'] as String?,
    total: (json['Total'] as num?)?.toDouble(),
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    poApprovalStatusId: json['PoApprovalStatusId'] as String?,
    lockBillingDates: json['LockBillingDates'] as bool?,
    specifyBillingDatesByType: json['SpecifyBillingDatesByType'] as bool?,
    rentalBillingStartDate: json['RentalBillingStartDate'] as String?,
    rentalBillingEndDate: json['RentalBillingEndDate'] as String?,
    laborBillingStartDate: json['LaborBillingStartDate'] as String?,
    laborBillingEndDate: json['LaborBillingEndDate'] as String?,
    miscellaneousBillingStartDate:
        json['MiscellaneousBillingStartDate'] as String?,
    miscellaneousBillingEndDate: json['MiscellaneousBillingEndDate'] as String?,
    facilitiesBillingStartDate: json['FacilitiesBillingStartDate'] as String?,
    facilitiesBillingEndDate: json['FacilitiesBillingEndDate'] as String?,
    vehicleBillingStartDate: json['VehicleBillingStartDate'] as String?,
    vehicleBillingEndDate: json['VehicleBillingEndDate'] as String?,
    delayBillingSearchUntil: json['DelayBillingSearchUntil'] as String?,
    includePrepFeesInRentalRate: json['IncludePrepFeesInRentalRate'] as bool?,
    billingStartDate: json['BillingStartDate'] as String?,
    billingEndDate: json['BillingEndDate'] as String?,
    billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
    billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
    determineQuantitiesToBillBasedOn:
        json['DetermineQuantitiesToBillBasedOn'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    billingCycle: json['BillingCycle'] as String?,
    billingCycleType: json['BillingCycleType'] as String?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    currencyId: json['CurrencyId'] as String?,
    updateAllRatesToNewCurrency: json['UpdateAllRatesToNewCurrency'] as bool?,
    confirmUpdateAllRatesToNewCurrency:
        json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currency: json['Currency'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    tax1Name: json['Tax1Name'] as String?,
    tax2Name: json['Tax2Name'] as String?,
    taxId: json['TaxId'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    noCharge: json['NoCharge'] as bool?,
    noChargeReason: json['NoChargeReason'] as String?,
    printIssuedToAddressFrom: json['PrintIssuedToAddressFrom'] as String?,
    issuedToName: json['IssuedToName'] as String?,
    issuedToAttention: json['IssuedToAttention'] as String?,
    issuedToAttention2: json['IssuedToAttention2'] as String?,
    issuedToAddress1: json['IssuedToAddress1'] as String?,
    issuedToAddress2: json['IssuedToAddress2'] as String?,
    issuedToCity: json['IssuedToCity'] as String?,
    issuedToState: json['IssuedToState'] as String?,
    issuedToZipCode: json['IssuedToZipCode'] as String?,
    issuedToCountryId: json['IssuedToCountryId'] as String?,
    issuedToCountry: json['IssuedToCountry'] as String?,
    billToAddressDifferentFromIssuedToAddress:
        json['BillToAddressDifferentFromIssuedToAddress'] as bool?,
    billToAddressId: json['BillToAddressId'] as String?,
    billToName: json['BillToName'] as String?,
    billToAttention: json['BillToAttention'] as String?,
    billToAttention2: json['BillToAttention2'] as String?,
    billToAddress1: json['BillToAddress1'] as String?,
    billToAddress2: json['BillToAddress2'] as String?,
    billToCity: json['BillToCity'] as String?,
    billToState: json['BillToState'] as String?,
    billToZipCode: json['BillToZipCode'] as String?,
    billToCountryId: json['BillToCountryId'] as String?,
    billToCountry: json['BillToCountry'] as String?,
    discountReasonId: json['DiscountReasonId'] as String?,
    discountReason: json['DiscountReason'] as String?,
    requireContactConfirmation: json['RequireContactConfirmation'] as bool?,
    includeInBillingAnalysis: json['IncludeInBillingAnalysis'] as bool?,
    hiatusDiscountFrom: json['HiatusDiscountFrom'] as String?,
    roundTripRentals: json['RoundTripRentals'] as bool?,
    inGroup: json['InGroup'] as bool?,
    groupNumber: json['GroupNumber'] as int?,
    groupColor: json['GroupColor'] as int?,
    groupOrderBy: (json['GroupOrderBy'] as num?)?.toDouble(),
    coverLetterId: json['CoverLetterId'] as String?,
    coverLetter: json['CoverLetter'] as String?,
    termsConditionsId: json['TermsConditionsId'] as String?,
    termsConditions: json['TermsConditions'] as String?,
    outsideSalesRepresentativeId:
        json['OutsideSalesRepresentativeId'] as String?,
    outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
    marketTypeId: json['MarketTypeId'] as String?,
    marketType: json['MarketType'] as String?,
    marketSegmentId: json['MarketSegmentId'] as String?,
    marketSegment: json['MarketSegment'] as String?,
    marketSegmentJobId: json['MarketSegmentJobId'] as String?,
    marketSegmentJob: json['MarketSegmentJob'] as String?,
    outDeliveryId: json['OutDeliveryId'] as String?,
    outDeliveryDeliveryType: json['OutDeliveryDeliveryType'] as String?,
    outDeliveryRequiredDate: json['OutDeliveryRequiredDate'] as String?,
    outDeliveryRequiredTime: json['OutDeliveryRequiredTime'] as String?,
    outDeliveryTargetShipDate: json['OutDeliveryTargetShipDate'] as String?,
    outDeliveryTargetShipTime: json['OutDeliveryTargetShipTime'] as String?,
    outDeliveryDirection: json['OutDeliveryDirection'] as String?,
    outDeliveryAddressType: json['OutDeliveryAddressType'] as String?,
    outDeliveryFromLocation: json['OutDeliveryFromLocation'] as String?,
    outDeliveryFromContact: json['OutDeliveryFromContact'] as String?,
    outDeliveryFromContactPhone: json['OutDeliveryFromContactPhone'] as String?,
    outDeliveryFromAlternateContact:
        json['OutDeliveryFromAlternateContact'] as String?,
    outDeliveryFromAlternateContactPhone:
        json['OutDeliveryFromAlternateContactPhone'] as String?,
    outDeliveryFromAttention: json['OutDeliveryFromAttention'] as String?,
    outDeliveryFromAddress1: json['OutDeliveryFromAddress1'] as String?,
    outDeliveryFromAdd2ress: json['OutDeliveryFromAdd2ress'] as String?,
    outDeliveryFromCity: json['OutDeliveryFromCity'] as String?,
    outDeliveryFromState: json['OutDeliveryFromState'] as String?,
    outDeliveryFromZipCode: json['OutDeliveryFromZipCode'] as String?,
    outDeliveryFromCountry: json['OutDeliveryFromCountry'] as String?,
    outDeliveryFromCountryId: json['OutDeliveryFromCountryId'] as String?,
    outDeliveryFromCrossStreets: json['OutDeliveryFromCrossStreets'] as String?,
    outDeliveryToLocation: json['OutDeliveryToLocation'] as String?,
    outDeliveryToContact: json['OutDeliveryToContact'] as String?,
    outDeliveryToContactPhone: json['OutDeliveryToContactPhone'] as String?,
    outDeliveryToAlternateContact:
        json['OutDeliveryToAlternateContact'] as String?,
    outDeliveryToAlternateContactPhone:
        json['OutDeliveryToAlternateContactPhone'] as String?,
    outDeliveryToAttention: json['OutDeliveryToAttention'] as String?,
    outDeliveryToAddress1: json['OutDeliveryToAddress1'] as String?,
    outDeliveryToAddress2: json['OutDeliveryToAddress2'] as String?,
    outDeliveryToCity: json['OutDeliveryToCity'] as String?,
    outDeliveryToState: json['OutDeliveryToState'] as String?,
    outDeliveryToZipCode: json['OutDeliveryToZipCode'] as String?,
    outDeliveryToCountryId: json['OutDeliveryToCountryId'] as String?,
    outDeliveryToCountry: json['OutDeliveryToCountry'] as String?,
    outDeliveryToContactFax: json['OutDeliveryToContactFax'] as String?,
    outDeliveryToCrossStreets: json['OutDeliveryToCrossStreets'] as String?,
    outDeliveryDeliveryNotes: json['OutDeliveryDeliveryNotes'] as String?,
    outDeliveryCarrierId: json['OutDeliveryCarrierId'] as String?,
    outDeliveryCarrier: json['OutDeliveryCarrier'] as String?,
    outDeliveryCarrierAccount: json['OutDeliveryCarrierAccount'] as String?,
    outDeliveryShipViaId: json['OutDeliveryShipViaId'] as String?,
    outDeliveryShipVia: json['OutDeliveryShipVia'] as String?,
    outDeliveryInvoiceId: json['OutDeliveryInvoiceId'] as String?,
    outDeliveryVendorInvoiceId: json['OutDeliveryVendorInvoiceId'] as String?,
    outDeliveryEstimatedFreight:
        (json['OutDeliveryEstimatedFreight'] as num?)?.toDouble(),
    outDeliveryFreightInvoiceAmount:
        (json['OutDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    outDeliveryChargeType: json['OutDeliveryChargeType'] as String?,
    outDeliveryFreightTrackingNumber:
        json['OutDeliveryFreightTrackingNumber'] as String?,
    outDeliveryFreightTrackingUrl:
        json['OutDeliveryFreightTrackingUrl'] as String?,
    outDeliveryPackageCode: json['OutDeliveryPackageCode'] as String?,
    outDeliveryBillPoFreightOnOrder:
        json['OutDeliveryBillPoFreightOnOrder'] as bool?,
    outDeliveryOnlineOrderNumber:
        json['OutDeliveryOnlineOrderNumber'] as String?,
    outDeliveryToVenue: json['OutDeliveryToVenue'] as String?,
    outDeliveryToVenueId: json['OutDeliveryToVenueId'] as String?,
    outDeliveryToWarehouse: json['OutDeliveryToWarehouse'] as String?,
    outDeliveryToWarehouseId: json['OutDeliveryToWarehouseId'] as String?,
    outDeliveryDateStamp: json['OutDeliveryDateStamp'] as String?,
    inDeliveryId: json['InDeliveryId'] as String?,
    inDeliveryDeliveryType: json['InDeliveryDeliveryType'] as String?,
    inDeliveryRequiredDate: json['InDeliveryRequiredDate'] as String?,
    inDeliveryRequiredTime: json['InDeliveryRequiredTime'] as String?,
    inDeliveryTargetShipDate: json['InDeliveryTargetShipDate'] as String?,
    inDeliveryTargetShipTime: json['InDeliveryTargetShipTime'] as String?,
    inDeliveryDirection: json['InDeliveryDirection'] as String?,
    inDeliveryAddressType: json['InDeliveryAddressType'] as String?,
    inDeliveryFromLocation: json['InDeliveryFromLocation'] as String?,
    inDeliveryFromContact: json['InDeliveryFromContact'] as String?,
    inDeliveryFromContactPhone: json['InDeliveryFromContactPhone'] as String?,
    inDeliveryFromAlternateContact:
        json['InDeliveryFromAlternateContact'] as String?,
    inDeliveryFromAlternateContactPhone:
        json['InDeliveryFromAlternateContactPhone'] as String?,
    inDeliveryFromAttention: json['InDeliveryFromAttention'] as String?,
    inDeliveryFromAddress1: json['InDeliveryFromAddress1'] as String?,
    inDeliveryFromAdd2ress: json['InDeliveryFromAdd2ress'] as String?,
    inDeliveryFromCity: json['InDeliveryFromCity'] as String?,
    inDeliveryFromState: json['InDeliveryFromState'] as String?,
    inDeliveryFromZipCode: json['InDeliveryFromZipCode'] as String?,
    inDeliveryFromCountry: json['InDeliveryFromCountry'] as String?,
    inDeliveryFromCountryId: json['InDeliveryFromCountryId'] as String?,
    inDeliveryFromCrossStreets: json['InDeliveryFromCrossStreets'] as String?,
    inDeliveryToLocation: json['InDeliveryToLocation'] as String?,
    inDeliveryToContact: json['InDeliveryToContact'] as String?,
    inDeliveryToContactPhone: json['InDeliveryToContactPhone'] as String?,
    inDeliveryToAlternateContact:
        json['InDeliveryToAlternateContact'] as String?,
    inDeliveryToAlternateContactPhone:
        json['InDeliveryToAlternateContactPhone'] as String?,
    inDeliveryToAttention: json['InDeliveryToAttention'] as String?,
    inDeliveryToAddress1: json['InDeliveryToAddress1'] as String?,
    inDeliveryToAddress2: json['InDeliveryToAddress2'] as String?,
    inDeliveryToCity: json['InDeliveryToCity'] as String?,
    inDeliveryToState: json['InDeliveryToState'] as String?,
    inDeliveryToZipCode: json['InDeliveryToZipCode'] as String?,
    inDeliveryToCountryId: json['InDeliveryToCountryId'] as String?,
    inDeliveryToCountry: json['InDeliveryToCountry'] as String?,
    inDeliveryToContactFax: json['InDeliveryToContactFax'] as String?,
    inDeliveryToCrossStreets: json['InDeliveryToCrossStreets'] as String?,
    inDeliveryDeliveryNotes: json['InDeliveryDeliveryNotes'] as String?,
    inDeliveryCarrierId: json['InDeliveryCarrierId'] as String?,
    inDeliveryCarrier: json['InDeliveryCarrier'] as String?,
    inDeliveryCarrierAccount: json['InDeliveryCarrierAccount'] as String?,
    inDeliveryShipViaId: json['InDeliveryShipViaId'] as String?,
    inDeliveryShipVia: json['InDeliveryShipVia'] as String?,
    inDeliveryInvoiceId: json['InDeliveryInvoiceId'] as String?,
    inDeliveryVendorInvoiceId: json['InDeliveryVendorInvoiceId'] as String?,
    inDeliveryEstimatedFreight:
        (json['InDeliveryEstimatedFreight'] as num?)?.toDouble(),
    inDeliveryFreightInvoiceAmount:
        (json['InDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    inDeliveryChargeType: json['InDeliveryChargeType'] as String?,
    inDeliveryFreightTrackingNumber:
        json['InDeliveryFreightTrackingNumber'] as String?,
    inDeliveryFreightTrackingUrl:
        json['InDeliveryFreightTrackingUrl'] as String?,
    inDeliveryPackageCode: json['InDeliveryPackageCode'] as String?,
    inDeliveryBillPoFreightOnOrder:
        json['InDeliveryBillPoFreightOnOrder'] as bool?,
    inDeliveryOnlineOrderNumber: json['InDeliveryOnlineOrderNumber'] as String?,
    inDeliveryOnlineOrderStatus: json['InDeliveryOnlineOrderStatus'] as String?,
    inDeliveryToVenue: json['InDeliveryToVenue'] as String?,
    inDeliveryToVenueId: json['InDeliveryToVenueId'] as String?,
    inDeliveryToWarehouse: json['InDeliveryToWarehouse'] as String?,
    inDeliveryToWarehouseId: json['InDeliveryToWarehouseId'] as String?,
    inDeliveryDateStamp: json['InDeliveryDateStamp'] as String?,
    rentalDaysPerWeek: (json['RentalDaysPerWeek'] as num?)?.toDouble(),
    rentalDiscountPercent: (json['RentalDiscountPercent'] as num?)?.toDouble(),
    weeklyRentalTotal: (json['WeeklyRentalTotal'] as num?)?.toDouble(),
    monthlyRentalTotal: (json['MonthlyRentalTotal'] as num?)?.toDouble(),
    periodRentalTotal: (json['PeriodRentalTotal'] as num?)?.toDouble(),
    weeklyRentalTotalIncludesTax: json['WeeklyRentalTotalIncludesTax'] as bool?,
    monthlyRentalTotalIncludesTax:
        json['MonthlyRentalTotalIncludesTax'] as bool?,
    periodRentalTotalIncludesTax: json['PeriodRentalTotalIncludesTax'] as bool?,
    billLockedTotal: json['BillLockedTotal'] as bool?,
    salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
    salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
    salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
    partsDiscountPercent: (json['PartsDiscountPercent'] as num?)?.toDouble(),
    partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
    partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
    spaceDaysPerWeek: (json['SpaceDaysPerWeek'] as num?)?.toDouble(),
    spaceDiscountPercent: (json['SpaceDiscountPercent'] as num?)?.toDouble(),
    spaceSplitPercent: (json['SpaceSplitPercent'] as num?)?.toDouble(),
    weeklySpaceTotal: (json['WeeklySpaceTotal'] as num?)?.toDouble(),
    monthlySpaceTotal: (json['MonthlySpaceTotal'] as num?)?.toDouble(),
    periodSpaceTotal: (json['PeriodSpaceTotal'] as num?)?.toDouble(),
    weeklySpaceTotalIncludesTax: json['WeeklySpaceTotalIncludesTax'] as bool?,
    monthlySpaceTotalIncludesTax: json['MonthlySpaceTotalIncludesTax'] as bool?,
    periodSpaceTotalIncludesTax: json['PeriodSpaceTotalIncludesTax'] as bool?,
    vehicleDaysPerWeek: (json['VehicleDaysPerWeek'] as num?)?.toDouble(),
    vehicleDiscountPercent:
        (json['VehicleDiscountPercent'] as num?)?.toDouble(),
    weeklyVehicleTotal: (json['WeeklyVehicleTotal'] as num?)?.toDouble(),
    monthlyVehicleTotal: (json['MonthlyVehicleTotal'] as num?)?.toDouble(),
    periodVehicleTotal: (json['PeriodVehicleTotal'] as num?)?.toDouble(),
    weeklyVehicleTotalIncludesTax:
        json['WeeklyVehicleTotalIncludesTax'] as bool?,
    monthlyVehicleTotalIncludesTax:
        json['MonthlyVehicleTotalIncludesTax'] as bool?,
    periodVehicleTotalIncludesTax:
        json['PeriodVehicleTotalIncludesTax'] as bool?,
    miscDiscountPercent: (json['MiscDiscountPercent'] as num?)?.toDouble(),
    weeklyMiscTotal: (json['WeeklyMiscTotal'] as num?)?.toDouble(),
    monthlyMiscTotal: (json['MonthlyMiscTotal'] as num?)?.toDouble(),
    periodMiscTotal: (json['PeriodMiscTotal'] as num?)?.toDouble(),
    weeklyMiscTotalIncludesTax: json['WeeklyMiscTotalIncludesTax'] as bool?,
    monthlyMiscTotalIncludesTax: json['MonthlyMiscTotalIncludesTax'] as bool?,
    periodMiscTotalIncludesTax: json['PeriodMiscTotalIncludesTax'] as bool?,
    laborDiscountPercent: (json['LaborDiscountPercent'] as num?)?.toDouble(),
    weeklyLaborTotal: (json['WeeklyLaborTotal'] as num?)?.toDouble(),
    monthlyLaborTotal: (json['MonthlyLaborTotal'] as num?)?.toDouble(),
    periodLaborTotal: (json['PeriodLaborTotal'] as num?)?.toDouble(),
    weeklyLaborTotalIncludesTax: json['WeeklyLaborTotalIncludesTax'] as bool?,
    monthlyLaborTotalIncludesTax: json['MonthlyLaborTotalIncludesTax'] as bool?,
    periodLaborTotalIncludesTax: json['PeriodLaborTotalIncludesTax'] as bool?,
    rentalSaleDiscountPercent:
        (json['RentalSaleDiscountPercent'] as num?)?.toDouble(),
    rentalSaleTotal: (json['RentalSaleTotal'] as num?)?.toDouble(),
    rentalSaleTotalIncludesTax: json['RentalSaleTotalIncludesTax'] as bool?,
    lossAndDamageDiscountPercent:
        (json['LossAndDamageDiscountPercent'] as num?)?.toDouble(),
    lossAndDamageTotal: (json['LossAndDamageTotal'] as num?)?.toDouble(),
    lossAndDamageTotalIncludesTax:
        json['LossAndDamageTotalIncludesTax'] as bool?,
    combinedDaysPerWeek: (json['CombinedDaysPerWeek'] as num?)?.toDouble(),
    combinedDiscountPercent:
        (json['CombinedDiscountPercent'] as num?)?.toDouble(),
    weeklyCombinedTotal: (json['WeeklyCombinedTotal'] as num?)?.toDouble(),
    monthlyCombinedTotal: (json['MonthlyCombinedTotal'] as num?)?.toDouble(),
    periodCombinedTotal: (json['PeriodCombinedTotal'] as num?)?.toDouble(),
    weeklyCombinedTotalIncludesTax:
        json['WeeklyCombinedTotalIncludesTax'] as bool?,
    monthlyCombinedTotalIncludesTax:
        json['MonthlyCombinedTotalIncludesTax'] as bool?,
    periodCombinedTotalIncludesTax:
        json['PeriodCombinedTotalIncludesTax'] as bool?,
    disableEditingRentalRate: json['DisableEditingRentalRate'] as bool?,
    disableEditingSalesRate: json['DisableEditingSalesRate'] as bool?,
    disableEditingMiscellaneousRate:
        json['DisableEditingMiscellaneousRate'] as bool?,
    disableEditingLaborRate: json['DisableEditingLaborRate'] as bool?,
    disableEditingRentalSaleRate: json['DisableEditingRentalSaleRate'] as bool?,
    disableEditingLossAndDamageRate:
        json['DisableEditingLossAndDamageRate'] as bool?,
    rentalExtendedTotal: (json['RentalExtendedTotal'] as num?)?.toDouble(),
    salesExtendedTotal: (json['SalesExtendedTotal'] as num?)?.toDouble(),
    laborExtendedTotal: (json['LaborExtendedTotal'] as num?)?.toDouble(),
    miscellaneousExtendedTotal:
        (json['MiscellaneousExtendedTotal'] as num?)?.toDouble(),
    rentalSaleExtendedTotal:
        (json['RentalSaleExtendedTotal'] as num?)?.toDouble(),
    lossAndDamageExtendedTotal:
        (json['LossAndDamageExtendedTotal'] as num?)?.toDouble(),
    hasNotes: json['HasNotes'] as bool?,
    hasDocuments: json['HasDocuments'] as bool?,
    hasEmailHistory: json['HasEmailHistory'] as bool?,
    hasContacts: json['HasContacts'] as bool?,
    hasSubPurchaseOrders: json['HasSubPurchaseOrders'] as bool?,
    hasPickLists: json['HasPickLists'] as bool?,
    hasContracts: json['HasContracts'] as bool?,
    hasSuspendedContracts: json['HasSuspendedContracts'] as bool?,
    hasMultiOrderContracts: json['HasMultiOrderContracts'] as bool?,
    hasInvoices: json['HasInvoices'] as bool?,
    hasBillingWorksheets: json['HasBillingWorksheets'] as bool?,
    hasMultiOrderInvoices: json['HasMultiOrderInvoices'] as bool?,
    totalReplacementCost: (json['TotalReplacementCost'] as num?)?.toDouble(),
    presentationLayerId: json['PresentationLayerId'] as String?,
    presentationLayer: json['PresentationLayer'] as String?,
    isManualSort: json['IsManualSort'] as bool?,
    quoteOrderTitle: json['QuoteOrderTitle'] as String?,
    unassignedSubs: json['UnassignedSubs'] as bool?,
    nonTaxable: json['NonTaxable'] as bool?,
    enableProjects: json['EnableProjects'] as bool?,
    projectId: json['ProjectId'] as String?,
    projectNumber: json['ProjectNumber'] as String?,
    project: json['Project'] as String?,
    projectDrawingsId: json['ProjectDrawingsId'] as String?,
    projectDrawings: json['ProjectDrawings'] as String?,
    projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
    projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
    projectDropShipId: json['ProjectDropShipId'] as String?,
    projectDropShip: json['ProjectDropShip'] as String?,
    projectAsBuildId: json['ProjectAsBuildId'] as String?,
    projectAsBuild: json['ProjectAsBuild'] as String?,
    projectCommissioningId: json['ProjectCommissioningId'] as String?,
    projectCommissioning: json['ProjectCommissioning'] as String?,
    projectDepositId: json['ProjectDepositId'] as String?,
    projectDeposit: json['ProjectDeposit'] as String?,
    inputByUserId: json['InputByUserId'] as String?,
    modifiedByUserId: json['ModifiedByUserId'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderOrderBaseToJson(
        WebApiModulesAgentOrderOrderBase instance) =>
    <String, dynamic>{
      'Description': instance.description,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'CustomerId': instance.customerId,
      'Customer': instance.customer,
      'CustomerNumber': instance.customerNumber,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'DealNumber': instance.dealNumber,
      'RateType': instance.rateType,
      'RateTypeDisplay': instance.rateTypeDisplay,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'ProjectManagerId': instance.projectManagerId,
      'ProjectManager': instance.projectManager,
      'Rental': instance.rental,
      'Sales': instance.sales,
      'Miscellaneous': instance.miscellaneous,
      'Labor': instance.labor,
      'Facilities': instance.facilities,
      'Transportation': instance.transportation,
      'RentalSale': instance.rentalSale,
      'LossAndDamage': instance.lossAndDamage,
      'Repair': instance.repair,
      'HasRentalItem': instance.hasRentalItem,
      'HasSalesItem': instance.hasSalesItem,
      'HasMiscellaneousItem': instance.hasMiscellaneousItem,
      'HasLaborItem': instance.hasLaborItem,
      'HasFacilitiesItem': instance.hasFacilitiesItem,
      'HasLossAndDamageItem': instance.hasLossAndDamageItem,
      'HasRentalSaleItem': instance.hasRentalSaleItem,
      'HasRepair': instance.hasRepair,
      'ActivityDatesAndTimes':
          instance.activityDatesAndTimes?.map((e) => e.toJson()).toList(),
      'PickDate': instance.pickDate,
      'PickTime': instance.pickTime,
      'EstimatedStartDate': instance.estimatedStartDate,
      'EstimatedStartTime': instance.estimatedStartTime,
      'EstimatedStopDate': instance.estimatedStopDate,
      'EstimatedStopTime': instance.estimatedStopTime,
      'PickUpDate': instance.pickUpDate,
      'PickUpTime': instance.pickUpTime,
      'PrepDate': instance.prepDate,
      'PrepTime': instance.prepTime,
      'LoadInDate': instance.loadInDate,
      'LoadInTime': instance.loadInTime,
      'StrikeDate': instance.strikeDate,
      'StrikeTime': instance.strikeTime,
      'TestDate': instance.testDate,
      'TestTime': instance.testTime,
      'OrderTypeId': instance.orderTypeId,
      'OrderType': instance.orderType,
      'OrderTypeCombineActivityTabs': instance.orderTypeCombineActivityTabs,
      'FlatPo': instance.flatPo,
      'PendingPo': instance.pendingPo,
      'PoNumber': instance.poNumber,
      'PoAmount': instance.poAmount,
      'Location': instance.location,
      'OrderLocationId': instance.orderLocationId,
      'OrderLocation': instance.orderLocation,
      'ReferenceNumber': instance.referenceNumber,
      'Total': instance.total,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'PoApprovalStatusId': instance.poApprovalStatusId,
      'LockBillingDates': instance.lockBillingDates,
      'SpecifyBillingDatesByType': instance.specifyBillingDatesByType,
      'RentalBillingStartDate': instance.rentalBillingStartDate,
      'RentalBillingEndDate': instance.rentalBillingEndDate,
      'LaborBillingStartDate': instance.laborBillingStartDate,
      'LaborBillingEndDate': instance.laborBillingEndDate,
      'MiscellaneousBillingStartDate': instance.miscellaneousBillingStartDate,
      'MiscellaneousBillingEndDate': instance.miscellaneousBillingEndDate,
      'FacilitiesBillingStartDate': instance.facilitiesBillingStartDate,
      'FacilitiesBillingEndDate': instance.facilitiesBillingEndDate,
      'VehicleBillingStartDate': instance.vehicleBillingStartDate,
      'VehicleBillingEndDate': instance.vehicleBillingEndDate,
      'DelayBillingSearchUntil': instance.delayBillingSearchUntil,
      'IncludePrepFeesInRentalRate': instance.includePrepFeesInRentalRate,
      'BillingStartDate': instance.billingStartDate,
      'BillingEndDate': instance.billingEndDate,
      'BillingWeeks': instance.billingWeeks,
      'BillingMonths': instance.billingMonths,
      'DetermineQuantitiesToBillBasedOn':
          instance.determineQuantitiesToBillBasedOn,
      'BillingCycleId': instance.billingCycleId,
      'BillingCycle': instance.billingCycle,
      'BillingCycleType': instance.billingCycleType,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'PaymentTypeId': instance.paymentTypeId,
      'PaymentType': instance.paymentType,
      'CurrencyId': instance.currencyId,
      'UpdateAllRatesToNewCurrency': instance.updateAllRatesToNewCurrency,
      'ConfirmUpdateAllRatesToNewCurrency':
          instance.confirmUpdateAllRatesToNewCurrency,
      'CurrencyCode': instance.currencyCode,
      'Currency': instance.currency,
      'CurrencySymbol': instance.currencySymbol,
      'TaxOptionId': instance.taxOptionId,
      'TaxOption': instance.taxOption,
      'Tax1Name': instance.tax1Name,
      'Tax2Name': instance.tax2Name,
      'TaxId': instance.taxId,
      'RentalTaxRate1': instance.rentalTaxRate1,
      'SalesTaxRate1': instance.salesTaxRate1,
      'LaborTaxRate1': instance.laborTaxRate1,
      'RentalTaxRate2': instance.rentalTaxRate2,
      'SalesTaxRate2': instance.salesTaxRate2,
      'LaborTaxRate2': instance.laborTaxRate2,
      'NoCharge': instance.noCharge,
      'NoChargeReason': instance.noChargeReason,
      'PrintIssuedToAddressFrom': instance.printIssuedToAddressFrom,
      'IssuedToName': instance.issuedToName,
      'IssuedToAttention': instance.issuedToAttention,
      'IssuedToAttention2': instance.issuedToAttention2,
      'IssuedToAddress1': instance.issuedToAddress1,
      'IssuedToAddress2': instance.issuedToAddress2,
      'IssuedToCity': instance.issuedToCity,
      'IssuedToState': instance.issuedToState,
      'IssuedToZipCode': instance.issuedToZipCode,
      'IssuedToCountryId': instance.issuedToCountryId,
      'IssuedToCountry': instance.issuedToCountry,
      'BillToAddressDifferentFromIssuedToAddress':
          instance.billToAddressDifferentFromIssuedToAddress,
      'BillToAddressId': instance.billToAddressId,
      'BillToName': instance.billToName,
      'BillToAttention': instance.billToAttention,
      'BillToAttention2': instance.billToAttention2,
      'BillToAddress1': instance.billToAddress1,
      'BillToAddress2': instance.billToAddress2,
      'BillToCity': instance.billToCity,
      'BillToState': instance.billToState,
      'BillToZipCode': instance.billToZipCode,
      'BillToCountryId': instance.billToCountryId,
      'BillToCountry': instance.billToCountry,
      'DiscountReasonId': instance.discountReasonId,
      'DiscountReason': instance.discountReason,
      'RequireContactConfirmation': instance.requireContactConfirmation,
      'IncludeInBillingAnalysis': instance.includeInBillingAnalysis,
      'HiatusDiscountFrom': instance.hiatusDiscountFrom,
      'RoundTripRentals': instance.roundTripRentals,
      'InGroup': instance.inGroup,
      'GroupNumber': instance.groupNumber,
      'GroupColor': instance.groupColor,
      'GroupOrderBy': instance.groupOrderBy,
      'CoverLetterId': instance.coverLetterId,
      'CoverLetter': instance.coverLetter,
      'TermsConditionsId': instance.termsConditionsId,
      'TermsConditions': instance.termsConditions,
      'OutsideSalesRepresentativeId': instance.outsideSalesRepresentativeId,
      'OutsideSalesRepresentative': instance.outsideSalesRepresentative,
      'MarketTypeId': instance.marketTypeId,
      'MarketType': instance.marketType,
      'MarketSegmentId': instance.marketSegmentId,
      'MarketSegment': instance.marketSegment,
      'MarketSegmentJobId': instance.marketSegmentJobId,
      'MarketSegmentJob': instance.marketSegmentJob,
      'OutDeliveryId': instance.outDeliveryId,
      'OutDeliveryDeliveryType': instance.outDeliveryDeliveryType,
      'OutDeliveryRequiredDate': instance.outDeliveryRequiredDate,
      'OutDeliveryRequiredTime': instance.outDeliveryRequiredTime,
      'OutDeliveryTargetShipDate': instance.outDeliveryTargetShipDate,
      'OutDeliveryTargetShipTime': instance.outDeliveryTargetShipTime,
      'OutDeliveryDirection': instance.outDeliveryDirection,
      'OutDeliveryAddressType': instance.outDeliveryAddressType,
      'OutDeliveryFromLocation': instance.outDeliveryFromLocation,
      'OutDeliveryFromContact': instance.outDeliveryFromContact,
      'OutDeliveryFromContactPhone': instance.outDeliveryFromContactPhone,
      'OutDeliveryFromAlternateContact':
          instance.outDeliveryFromAlternateContact,
      'OutDeliveryFromAlternateContactPhone':
          instance.outDeliveryFromAlternateContactPhone,
      'OutDeliveryFromAttention': instance.outDeliveryFromAttention,
      'OutDeliveryFromAddress1': instance.outDeliveryFromAddress1,
      'OutDeliveryFromAdd2ress': instance.outDeliveryFromAdd2ress,
      'OutDeliveryFromCity': instance.outDeliveryFromCity,
      'OutDeliveryFromState': instance.outDeliveryFromState,
      'OutDeliveryFromZipCode': instance.outDeliveryFromZipCode,
      'OutDeliveryFromCountry': instance.outDeliveryFromCountry,
      'OutDeliveryFromCountryId': instance.outDeliveryFromCountryId,
      'OutDeliveryFromCrossStreets': instance.outDeliveryFromCrossStreets,
      'OutDeliveryToLocation': instance.outDeliveryToLocation,
      'OutDeliveryToContact': instance.outDeliveryToContact,
      'OutDeliveryToContactPhone': instance.outDeliveryToContactPhone,
      'OutDeliveryToAlternateContact': instance.outDeliveryToAlternateContact,
      'OutDeliveryToAlternateContactPhone':
          instance.outDeliveryToAlternateContactPhone,
      'OutDeliveryToAttention': instance.outDeliveryToAttention,
      'OutDeliveryToAddress1': instance.outDeliveryToAddress1,
      'OutDeliveryToAddress2': instance.outDeliveryToAddress2,
      'OutDeliveryToCity': instance.outDeliveryToCity,
      'OutDeliveryToState': instance.outDeliveryToState,
      'OutDeliveryToZipCode': instance.outDeliveryToZipCode,
      'OutDeliveryToCountryId': instance.outDeliveryToCountryId,
      'OutDeliveryToCountry': instance.outDeliveryToCountry,
      'OutDeliveryToContactFax': instance.outDeliveryToContactFax,
      'OutDeliveryToCrossStreets': instance.outDeliveryToCrossStreets,
      'OutDeliveryDeliveryNotes': instance.outDeliveryDeliveryNotes,
      'OutDeliveryCarrierId': instance.outDeliveryCarrierId,
      'OutDeliveryCarrier': instance.outDeliveryCarrier,
      'OutDeliveryCarrierAccount': instance.outDeliveryCarrierAccount,
      'OutDeliveryShipViaId': instance.outDeliveryShipViaId,
      'OutDeliveryShipVia': instance.outDeliveryShipVia,
      'OutDeliveryInvoiceId': instance.outDeliveryInvoiceId,
      'OutDeliveryVendorInvoiceId': instance.outDeliveryVendorInvoiceId,
      'OutDeliveryEstimatedFreight': instance.outDeliveryEstimatedFreight,
      'OutDeliveryFreightInvoiceAmount':
          instance.outDeliveryFreightInvoiceAmount,
      'OutDeliveryChargeType': instance.outDeliveryChargeType,
      'OutDeliveryFreightTrackingNumber':
          instance.outDeliveryFreightTrackingNumber,
      'OutDeliveryFreightTrackingUrl': instance.outDeliveryFreightTrackingUrl,
      'OutDeliveryPackageCode': instance.outDeliveryPackageCode,
      'OutDeliveryBillPoFreightOnOrder':
          instance.outDeliveryBillPoFreightOnOrder,
      'OutDeliveryOnlineOrderNumber': instance.outDeliveryOnlineOrderNumber,
      'OutDeliveryToVenue': instance.outDeliveryToVenue,
      'OutDeliveryToVenueId': instance.outDeliveryToVenueId,
      'OutDeliveryToWarehouse': instance.outDeliveryToWarehouse,
      'OutDeliveryToWarehouseId': instance.outDeliveryToWarehouseId,
      'OutDeliveryDateStamp': instance.outDeliveryDateStamp,
      'InDeliveryId': instance.inDeliveryId,
      'InDeliveryDeliveryType': instance.inDeliveryDeliveryType,
      'InDeliveryRequiredDate': instance.inDeliveryRequiredDate,
      'InDeliveryRequiredTime': instance.inDeliveryRequiredTime,
      'InDeliveryTargetShipDate': instance.inDeliveryTargetShipDate,
      'InDeliveryTargetShipTime': instance.inDeliveryTargetShipTime,
      'InDeliveryDirection': instance.inDeliveryDirection,
      'InDeliveryAddressType': instance.inDeliveryAddressType,
      'InDeliveryFromLocation': instance.inDeliveryFromLocation,
      'InDeliveryFromContact': instance.inDeliveryFromContact,
      'InDeliveryFromContactPhone': instance.inDeliveryFromContactPhone,
      'InDeliveryFromAlternateContact': instance.inDeliveryFromAlternateContact,
      'InDeliveryFromAlternateContactPhone':
          instance.inDeliveryFromAlternateContactPhone,
      'InDeliveryFromAttention': instance.inDeliveryFromAttention,
      'InDeliveryFromAddress1': instance.inDeliveryFromAddress1,
      'InDeliveryFromAdd2ress': instance.inDeliveryFromAdd2ress,
      'InDeliveryFromCity': instance.inDeliveryFromCity,
      'InDeliveryFromState': instance.inDeliveryFromState,
      'InDeliveryFromZipCode': instance.inDeliveryFromZipCode,
      'InDeliveryFromCountry': instance.inDeliveryFromCountry,
      'InDeliveryFromCountryId': instance.inDeliveryFromCountryId,
      'InDeliveryFromCrossStreets': instance.inDeliveryFromCrossStreets,
      'InDeliveryToLocation': instance.inDeliveryToLocation,
      'InDeliveryToContact': instance.inDeliveryToContact,
      'InDeliveryToContactPhone': instance.inDeliveryToContactPhone,
      'InDeliveryToAlternateContact': instance.inDeliveryToAlternateContact,
      'InDeliveryToAlternateContactPhone':
          instance.inDeliveryToAlternateContactPhone,
      'InDeliveryToAttention': instance.inDeliveryToAttention,
      'InDeliveryToAddress1': instance.inDeliveryToAddress1,
      'InDeliveryToAddress2': instance.inDeliveryToAddress2,
      'InDeliveryToCity': instance.inDeliveryToCity,
      'InDeliveryToState': instance.inDeliveryToState,
      'InDeliveryToZipCode': instance.inDeliveryToZipCode,
      'InDeliveryToCountryId': instance.inDeliveryToCountryId,
      'InDeliveryToCountry': instance.inDeliveryToCountry,
      'InDeliveryToContactFax': instance.inDeliveryToContactFax,
      'InDeliveryToCrossStreets': instance.inDeliveryToCrossStreets,
      'InDeliveryDeliveryNotes': instance.inDeliveryDeliveryNotes,
      'InDeliveryCarrierId': instance.inDeliveryCarrierId,
      'InDeliveryCarrier': instance.inDeliveryCarrier,
      'InDeliveryCarrierAccount': instance.inDeliveryCarrierAccount,
      'InDeliveryShipViaId': instance.inDeliveryShipViaId,
      'InDeliveryShipVia': instance.inDeliveryShipVia,
      'InDeliveryInvoiceId': instance.inDeliveryInvoiceId,
      'InDeliveryVendorInvoiceId': instance.inDeliveryVendorInvoiceId,
      'InDeliveryEstimatedFreight': instance.inDeliveryEstimatedFreight,
      'InDeliveryFreightInvoiceAmount': instance.inDeliveryFreightInvoiceAmount,
      'InDeliveryChargeType': instance.inDeliveryChargeType,
      'InDeliveryFreightTrackingNumber':
          instance.inDeliveryFreightTrackingNumber,
      'InDeliveryFreightTrackingUrl': instance.inDeliveryFreightTrackingUrl,
      'InDeliveryPackageCode': instance.inDeliveryPackageCode,
      'InDeliveryBillPoFreightOnOrder': instance.inDeliveryBillPoFreightOnOrder,
      'InDeliveryOnlineOrderNumber': instance.inDeliveryOnlineOrderNumber,
      'InDeliveryOnlineOrderStatus': instance.inDeliveryOnlineOrderStatus,
      'InDeliveryToVenue': instance.inDeliveryToVenue,
      'InDeliveryToVenueId': instance.inDeliveryToVenueId,
      'InDeliveryToWarehouse': instance.inDeliveryToWarehouse,
      'InDeliveryToWarehouseId': instance.inDeliveryToWarehouseId,
      'InDeliveryDateStamp': instance.inDeliveryDateStamp,
      'RentalDaysPerWeek': instance.rentalDaysPerWeek,
      'RentalDiscountPercent': instance.rentalDiscountPercent,
      'WeeklyRentalTotal': instance.weeklyRentalTotal,
      'MonthlyRentalTotal': instance.monthlyRentalTotal,
      'PeriodRentalTotal': instance.periodRentalTotal,
      'WeeklyRentalTotalIncludesTax': instance.weeklyRentalTotalIncludesTax,
      'MonthlyRentalTotalIncludesTax': instance.monthlyRentalTotalIncludesTax,
      'PeriodRentalTotalIncludesTax': instance.periodRentalTotalIncludesTax,
      'BillLockedTotal': instance.billLockedTotal,
      'SalesDiscountPercent': instance.salesDiscountPercent,
      'SalesTotal': instance.salesTotal,
      'SalesTotalIncludesTax': instance.salesTotalIncludesTax,
      'PartsDiscountPercent': instance.partsDiscountPercent,
      'PartsTotal': instance.partsTotal,
      'PartsTotalIncludesTax': instance.partsTotalIncludesTax,
      'SpaceDaysPerWeek': instance.spaceDaysPerWeek,
      'SpaceDiscountPercent': instance.spaceDiscountPercent,
      'SpaceSplitPercent': instance.spaceSplitPercent,
      'WeeklySpaceTotal': instance.weeklySpaceTotal,
      'MonthlySpaceTotal': instance.monthlySpaceTotal,
      'PeriodSpaceTotal': instance.periodSpaceTotal,
      'WeeklySpaceTotalIncludesTax': instance.weeklySpaceTotalIncludesTax,
      'MonthlySpaceTotalIncludesTax': instance.monthlySpaceTotalIncludesTax,
      'PeriodSpaceTotalIncludesTax': instance.periodSpaceTotalIncludesTax,
      'VehicleDaysPerWeek': instance.vehicleDaysPerWeek,
      'VehicleDiscountPercent': instance.vehicleDiscountPercent,
      'WeeklyVehicleTotal': instance.weeklyVehicleTotal,
      'MonthlyVehicleTotal': instance.monthlyVehicleTotal,
      'PeriodVehicleTotal': instance.periodVehicleTotal,
      'WeeklyVehicleTotalIncludesTax': instance.weeklyVehicleTotalIncludesTax,
      'MonthlyVehicleTotalIncludesTax': instance.monthlyVehicleTotalIncludesTax,
      'PeriodVehicleTotalIncludesTax': instance.periodVehicleTotalIncludesTax,
      'MiscDiscountPercent': instance.miscDiscountPercent,
      'WeeklyMiscTotal': instance.weeklyMiscTotal,
      'MonthlyMiscTotal': instance.monthlyMiscTotal,
      'PeriodMiscTotal': instance.periodMiscTotal,
      'WeeklyMiscTotalIncludesTax': instance.weeklyMiscTotalIncludesTax,
      'MonthlyMiscTotalIncludesTax': instance.monthlyMiscTotalIncludesTax,
      'PeriodMiscTotalIncludesTax': instance.periodMiscTotalIncludesTax,
      'LaborDiscountPercent': instance.laborDiscountPercent,
      'WeeklyLaborTotal': instance.weeklyLaborTotal,
      'MonthlyLaborTotal': instance.monthlyLaborTotal,
      'PeriodLaborTotal': instance.periodLaborTotal,
      'WeeklyLaborTotalIncludesTax': instance.weeklyLaborTotalIncludesTax,
      'MonthlyLaborTotalIncludesTax': instance.monthlyLaborTotalIncludesTax,
      'PeriodLaborTotalIncludesTax': instance.periodLaborTotalIncludesTax,
      'RentalSaleDiscountPercent': instance.rentalSaleDiscountPercent,
      'RentalSaleTotal': instance.rentalSaleTotal,
      'RentalSaleTotalIncludesTax': instance.rentalSaleTotalIncludesTax,
      'LossAndDamageDiscountPercent': instance.lossAndDamageDiscountPercent,
      'LossAndDamageTotal': instance.lossAndDamageTotal,
      'LossAndDamageTotalIncludesTax': instance.lossAndDamageTotalIncludesTax,
      'CombinedDaysPerWeek': instance.combinedDaysPerWeek,
      'CombinedDiscountPercent': instance.combinedDiscountPercent,
      'WeeklyCombinedTotal': instance.weeklyCombinedTotal,
      'MonthlyCombinedTotal': instance.monthlyCombinedTotal,
      'PeriodCombinedTotal': instance.periodCombinedTotal,
      'WeeklyCombinedTotalIncludesTax': instance.weeklyCombinedTotalIncludesTax,
      'MonthlyCombinedTotalIncludesTax':
          instance.monthlyCombinedTotalIncludesTax,
      'PeriodCombinedTotalIncludesTax': instance.periodCombinedTotalIncludesTax,
      'DisableEditingRentalRate': instance.disableEditingRentalRate,
      'DisableEditingSalesRate': instance.disableEditingSalesRate,
      'DisableEditingMiscellaneousRate':
          instance.disableEditingMiscellaneousRate,
      'DisableEditingLaborRate': instance.disableEditingLaborRate,
      'DisableEditingRentalSaleRate': instance.disableEditingRentalSaleRate,
      'DisableEditingLossAndDamageRate':
          instance.disableEditingLossAndDamageRate,
      'RentalExtendedTotal': instance.rentalExtendedTotal,
      'SalesExtendedTotal': instance.salesExtendedTotal,
      'LaborExtendedTotal': instance.laborExtendedTotal,
      'MiscellaneousExtendedTotal': instance.miscellaneousExtendedTotal,
      'RentalSaleExtendedTotal': instance.rentalSaleExtendedTotal,
      'LossAndDamageExtendedTotal': instance.lossAndDamageExtendedTotal,
      'HasNotes': instance.hasNotes,
      'HasDocuments': instance.hasDocuments,
      'HasEmailHistory': instance.hasEmailHistory,
      'HasContacts': instance.hasContacts,
      'HasSubPurchaseOrders': instance.hasSubPurchaseOrders,
      'HasPickLists': instance.hasPickLists,
      'HasContracts': instance.hasContracts,
      'HasSuspendedContracts': instance.hasSuspendedContracts,
      'HasMultiOrderContracts': instance.hasMultiOrderContracts,
      'HasInvoices': instance.hasInvoices,
      'HasBillingWorksheets': instance.hasBillingWorksheets,
      'HasMultiOrderInvoices': instance.hasMultiOrderInvoices,
      'TotalReplacementCost': instance.totalReplacementCost,
      'PresentationLayerId': instance.presentationLayerId,
      'PresentationLayer': instance.presentationLayer,
      'IsManualSort': instance.isManualSort,
      'QuoteOrderTitle': instance.quoteOrderTitle,
      'UnassignedSubs': instance.unassignedSubs,
      'NonTaxable': instance.nonTaxable,
      'EnableProjects': instance.enableProjects,
      'ProjectId': instance.projectId,
      'ProjectNumber': instance.projectNumber,
      'Project': instance.project,
      'ProjectDrawingsId': instance.projectDrawingsId,
      'ProjectDrawings': instance.projectDrawings,
      'ProjectItemsOrderedId': instance.projectItemsOrderedId,
      'ProjectItemsOrdered': instance.projectItemsOrdered,
      'ProjectDropShipId': instance.projectDropShipId,
      'ProjectDropShip': instance.projectDropShip,
      'ProjectAsBuildId': instance.projectAsBuildId,
      'ProjectAsBuild': instance.projectAsBuild,
      'ProjectCommissioningId': instance.projectCommissioningId,
      'ProjectCommissioning': instance.projectCommissioning,
      'ProjectDepositId': instance.projectDepositId,
      'ProjectDeposit': instance.projectDeposit,
      'InputByUserId': instance.inputByUserId,
      'ModifiedByUserId': instance.modifiedByUserId,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentOrderOrderDocument
    _$WebApiModulesAgentOrderOrderDocumentFromJson(Map<String, dynamic> json) {
  return WebApiModulesAgentOrderOrderDocument(
    orderId: json['OrderId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderOrderDocumentToJson(
        WebApiModulesAgentOrderOrderDocument instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentOrderOrderDocumentPostRequest
    _$WebApiModulesAgentOrderOrderDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderOrderDocumentPostRequest(
    orderId: json['OrderId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderOrderDocumentPostRequestToJson(
        WebApiModulesAgentOrderOrderDocumentPostRequest instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesAgentOrderOrderDocumentPutRequest
    _$WebApiModulesAgentOrderOrderDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderOrderDocumentPutRequest(
    orderId: json['OrderId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderOrderDocumentPutRequestToJson(
        WebApiModulesAgentOrderOrderDocumentPutRequest instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesAgentOrderOrderMessage
    _$WebApiModulesAgentOrderOrderMessageFromJson(Map<String, dynamic> json) {
  return WebApiModulesAgentOrderOrderMessage(
    message: json['Message'] as String?,
    preventCheckOut: json['PreventCheckOut'] as bool?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderOrderMessageToJson(
        WebApiModulesAgentOrderOrderMessage instance) =>
    <String, dynamic>{
      'Message': instance.message,
      'PreventCheckOut': instance.preventCheckOut,
    };

WebApiModulesAgentOrderOrderMessagesResponse
    _$WebApiModulesAgentOrderOrderMessagesResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderOrderMessagesResponse(
    messages: (json['Messages'] as List<dynamic>?)
            ?.map((e) => WebApiModulesAgentOrderOrderMessage.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderOrderMessagesResponseToJson(
        WebApiModulesAgentOrderOrderMessagesResponse instance) =>
    <String, dynamic>{
      'Messages': instance.messages?.map((e) => e.toJson()).toList(),
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesAgentOrderPoWorksheetSessionTotalsResponse
    _$WebApiModulesAgentOrderPoWorksheetSessionTotalsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderPoWorksheetSessionTotalsResponse(
    grossTotal: (json['GrossTotal'] as num?)?.toDouble(),
    discount: (json['Discount'] as num?)?.toDouble(),
    subTotal: (json['SubTotal'] as num?)?.toDouble(),
    tax: (json['Tax'] as num?)?.toDouble(),
    total: (json['Total'] as num?)?.toDouble(),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentOrderPoWorksheetSessionTotalsResponseToJson(
            WebApiModulesAgentOrderPoWorksheetSessionTotalsResponse instance) =>
        <String, dynamic>{
          'GrossTotal': instance.grossTotal,
          'Discount': instance.discount,
          'SubTotal': instance.subTotal,
          'Tax': instance.tax,
          'Total': instance.total,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesAgentOrderQuoteNewVersionResponse
    _$WebApiModulesAgentOrderQuoteNewVersionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderQuoteNewVersionResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    newVersion: json['NewVersion'] == null
        ? null
        : WebApiModulesAgentQuoteQuote.fromJson(
            json['NewVersion'] as Map<String, dynamic>),
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderQuoteNewVersionResponseToJson(
        WebApiModulesAgentOrderQuoteNewVersionResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'NewVersion': instance.newVersion?.toJson(),
    };

WebApiModulesAgentOrderQuoteToOrderRequest
    _$WebApiModulesAgentOrderQuoteToOrderRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderQuoteToOrderRequest(
    quoteId: json['QuoteId'] as String?,
    locationId: json['LocationId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderQuoteToOrderRequestToJson(
        WebApiModulesAgentOrderQuoteToOrderRequest instance) =>
    <String, dynamic>{
      'QuoteId': instance.quoteId,
      'LocationId': instance.locationId,
      'WarehouseId': instance.warehouseId,
    };

WebApiModulesAgentOrderQuoteToOrderResponse
    _$WebApiModulesAgentOrderQuoteToOrderResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderQuoteToOrderResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    order: json['Order'] == null
        ? null
        : WebApiModulesAgentOrderOrder.fromJson(
            json['Order'] as Map<String, dynamic>),
  );
}

Map<String, dynamic> _$WebApiModulesAgentOrderQuoteToOrderResponseToJson(
        WebApiModulesAgentOrderQuoteToOrderResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'Order': instance.order?.toJson(),
    };

WebApiModulesAgentOrderReserveUnreserveQuoteResponse
    _$WebApiModulesAgentOrderReserveUnreserveQuoteResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderReserveUnreserveQuoteResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    quote: json['Quote'] == null
        ? null
        : WebApiModulesAgentQuoteQuote.fromJson(
            json['Quote'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentOrderReserveUnreserveQuoteResponseToJson(
            WebApiModulesAgentOrderReserveUnreserveQuoteResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'Quote': instance.quote?.toJson(),
        };

WebApiModulesAgentOrderUpdatePoWorksheetSessionRequest
    _$WebApiModulesAgentOrderUpdatePoWorksheetSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderUpdatePoWorksheetSessionRequest(
    recType: json['RecType'] as String?,
    vendorId: json['VendorId'] as String?,
    contactId: json['ContactId'] as String?,
    rateType: json['RateType'] as String?,
    currencyId: json['CurrencyId'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    requiredDate: json['RequiredDate'] == null
        ? null
        : DateTime.parse(json['RequiredDate'] as String),
    requiredTime: json['RequiredTime'] as String?,
    fromDate: json['FromDate'] == null
        ? null
        : DateTime.parse(json['FromDate'] as String),
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
    deliveryId: json['DeliveryId'] as String?,
    adjustContractDates: json['AdjustContractDates'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentOrderUpdatePoWorksheetSessionRequestToJson(
            WebApiModulesAgentOrderUpdatePoWorksheetSessionRequest instance) =>
        <String, dynamic>{
          'RecType': instance.recType,
          'VendorId': instance.vendorId,
          'ContactId': instance.contactId,
          'RateType': instance.rateType,
          'CurrencyId': instance.currencyId,
          'BillingCycleId': instance.billingCycleId,
          'RequiredDate': instance.requiredDate?.toIso8601String(),
          'RequiredTime': instance.requiredTime,
          'FromDate': instance.fromDate?.toIso8601String(),
          'ToDate': instance.toDate?.toIso8601String(),
          'DeliveryId': instance.deliveryId,
          'AdjustContractDates': instance.adjustContractDates,
        };

WebApiModulesAgentOrderUpdatePoWorksheetSessionResponse
    _$WebApiModulesAgentOrderUpdatePoWorksheetSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentOrderUpdatePoWorksheetSessionResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentOrderUpdatePoWorksheetSessionResponseToJson(
            WebApiModulesAgentOrderUpdatePoWorksheetSessionResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesAgentProjectCreateQuoteFromProjectRequest
    _$WebApiModulesAgentProjectCreateQuoteFromProjectRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentProjectCreateQuoteFromProjectRequest(
    projectId: json['ProjectId'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentProjectCreateQuoteFromProjectRequestToJson(
            WebApiModulesAgentProjectCreateQuoteFromProjectRequest instance) =>
        <String, dynamic>{
          'ProjectId': instance.projectId,
          'OfficeLocationId': instance.officeLocationId,
        };

WebApiModulesAgentProjectCreateQuoteFromProjectResponse
    _$WebApiModulesAgentProjectCreateQuoteFromProjectResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentProjectCreateQuoteFromProjectResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    quoteId: json['QuoteId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentProjectCreateQuoteFromProjectResponseToJson(
            WebApiModulesAgentProjectCreateQuoteFromProjectResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'QuoteId': instance.quoteId,
        };

WebApiModulesAgentProjectProject _$WebApiModulesAgentProjectProjectFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesAgentProjectProject(
    projectId: json['ProjectId'] as String?,
    projectNumber: json['ProjectNumber'] as String?,
    project: json['Project'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    projectManagerId: json['ProjectManagerId'] as String?,
    projectManager: json['ProjectManager'] as String?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    primaryContact: json['PrimaryContact'] as String?,
    requestedBy: json['RequestedBy'] as String?,
    outsideSalesRepresentativeId:
        json['OutsideSalesRepresentativeId'] as String?,
    outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
    projectDescription: json['ProjectDescription'] as String?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    facilities: json['Facilities'] as bool?,
    labor: json['Labor'] as bool?,
    miscellaneous: json['Miscellaneous'] as bool?,
    transportation: json['Transportation'] as bool?,
    pickDate: json['PickDate'] as String?,
    pickTime: json['PickTime'] as String?,
    estimatedStartDate: json['EstimatedStartDate'] as String?,
    estimatedStartTime: json['EstimatedStartTime'] as String?,
    estimatedStopDate: json['EstimatedStopDate'] as String?,
    estimatedStopTime: json['EstimatedStopTime'] as String?,
    ccPrimaryApproverWhenEmailingBackupApprover:
        json['CcPrimaryApproverWhenEmailingBackupApprover'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentProjectProjectToJson(
        WebApiModulesAgentProjectProject instance) =>
    <String, dynamic>{
      'ProjectId': instance.projectId,
      'ProjectNumber': instance.projectNumber,
      'Project': instance.project,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'ProjectManagerId': instance.projectManagerId,
      'ProjectManager': instance.projectManager,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'PrimaryContact': instance.primaryContact,
      'RequestedBy': instance.requestedBy,
      'OutsideSalesRepresentativeId': instance.outsideSalesRepresentativeId,
      'OutsideSalesRepresentative': instance.outsideSalesRepresentative,
      'ProjectDescription': instance.projectDescription,
      'Rental': instance.rental,
      'Sales': instance.sales,
      'Facilities': instance.facilities,
      'Labor': instance.labor,
      'Miscellaneous': instance.miscellaneous,
      'Transportation': instance.transportation,
      'PickDate': instance.pickDate,
      'PickTime': instance.pickTime,
      'EstimatedStartDate': instance.estimatedStartDate,
      'EstimatedStartTime': instance.estimatedStartTime,
      'EstimatedStopDate': instance.estimatedStopDate,
      'EstimatedStopTime': instance.estimatedStopTime,
      'CcPrimaryApproverWhenEmailingBackupApprover':
          instance.ccPrimaryApproverWhenEmailingBackupApprover,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentProjectProjectDocument
    _$WebApiModulesAgentProjectProjectDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentProjectProjectDocument(
    projectId: json['ProjectId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentProjectProjectDocumentToJson(
        WebApiModulesAgentProjectProjectDocument instance) =>
    <String, dynamic>{
      'ProjectId': instance.projectId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentProjectProjectDocumentPostRequest
    _$WebApiModulesAgentProjectProjectDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentProjectProjectDocumentPostRequest(
    projectId: json['ProjectId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentProjectProjectDocumentPostRequestToJson(
            WebApiModulesAgentProjectProjectDocumentPostRequest instance) =>
        <String, dynamic>{
          'ProjectId': instance.projectId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesAgentProjectProjectDocumentPutRequest
    _$WebApiModulesAgentProjectProjectDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentProjectProjectDocumentPutRequest(
    projectId: json['ProjectId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentProjectProjectDocumentPutRequestToJson(
        WebApiModulesAgentProjectProjectDocumentPutRequest instance) =>
    <String, dynamic>{
      'ProjectId': instance.projectId,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesAgentPurchaseOrderCompleteReceiveContractRequest
    _$WebApiModulesAgentPurchaseOrderCompleteReceiveContractRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderCompleteReceiveContractRequest(
    createOutContracts: json['CreateOutContracts'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderCompleteReceiveContractRequestToJson(
            WebApiModulesAgentPurchaseOrderCompleteReceiveContractRequest
                instance) =>
        <String, dynamic>{
          'CreateOutContracts': instance.createOutContracts,
        };

WebApiModulesAgentPurchaseOrderConfirmDropShipRequest
    _$WebApiModulesAgentPurchaseOrderConfirmDropShipRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderConfirmDropShipRequest(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    deliveryId: json['DeliveryId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderConfirmDropShipRequestToJson(
            WebApiModulesAgentPurchaseOrderConfirmDropShipRequest instance) =>
        <String, dynamic>{
          'PurchaseOrderId': instance.purchaseOrderId,
          'DeliveryId': instance.deliveryId,
        };

WebApiModulesAgentPurchaseOrderConfirmDropShipResponse
    _$WebApiModulesAgentPurchaseOrderConfirmDropShipResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderConfirmDropShipResponse(
    receiveContractIds: json['ReceiveContractIds'] as String?,
    outContractIds: json['OutContractIds'] as String?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    contracts: (json['Contracts'] as List<dynamic>?)
            ?.map((e) => WebApiModulesWarehouseContractContract.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderConfirmDropShipResponseToJson(
            WebApiModulesAgentPurchaseOrderConfirmDropShipResponse instance) =>
        <String, dynamic>{
          'ReceiveContractIds': instance.receiveContractIds,
          'OutContractIds': instance.outContractIds,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'Contracts': instance.contracts?.map((e) => e.toJson()).toList(),
        };

WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveRequest
    _$WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveRequest(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    deliveryId: json['DeliveryId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveRequestToJson(
            WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveRequest
                instance) =>
        <String, dynamic>{
          'PurchaseOrderId': instance.purchaseOrderId,
          'DeliveryId': instance.deliveryId,
        };

WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveResponse
    _$WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveResponse(
    returnContractIds: json['ReturnContractIds'] as String?,
    inContractIds: json['InContractIds'] as String?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    contracts: (json['Contracts'] as List<dynamic>?)
            ?.map((e) => WebApiModulesWarehouseContractContract.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveResponseToJson(
            WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveResponse
                instance) =>
        <String, dynamic>{
          'ReturnContractIds': instance.returnContractIds,
          'InContractIds': instance.inContractIds,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'Contracts': instance.contracts?.map((e) => e.toJson()).toList(),
        };

WebApiModulesAgentPurchaseOrderCopyPurchaseOrderRequest
    _$WebApiModulesAgentPurchaseOrderCopyPurchaseOrderRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderCopyPurchaseOrderRequest(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    locationId: json['LocationId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderCopyPurchaseOrderRequestToJson(
            WebApiModulesAgentPurchaseOrderCopyPurchaseOrderRequest instance) =>
        <String, dynamic>{
          'PurchaseOrderId': instance.purchaseOrderId,
          'LocationId': instance.locationId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesAgentPurchaseOrderCopyPurchaseOrderResponse
    _$WebApiModulesAgentPurchaseOrderCopyPurchaseOrderResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderCopyPurchaseOrderResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    purchaseOrder: json['PurchaseOrder'] == null
        ? null
        : WebApiModulesAgentPurchaseOrderPurchaseOrder.fromJson(
            json['PurchaseOrder'] as Map<String, dynamic>),
  );
}

Map<String,
    dynamic> _$WebApiModulesAgentPurchaseOrderCopyPurchaseOrderResponseToJson(
        WebApiModulesAgentPurchaseOrderCopyPurchaseOrderResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'PurchaseOrder': instance.purchaseOrder?.toJson(),
    };

WebApiModulesAgentPurchaseOrderGetPurchaseOrderResponse
    _$WebApiModulesAgentPurchaseOrderGetPurchaseOrderResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderGetPurchaseOrderResponse(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
    description: json['Description'] as String?,
    purchaseOrderDate: json['PurchaseOrderDate'] as String?,
    requisitionNumber: json['RequisitionNumber'] as String?,
    requisitionDate: json['RequisitionDate'] as String?,
    vendorId: json['VendorId'] as String?,
    vendor: json['Vendor'] as String?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    referenceNumber: json['ReferenceNumber'] as String?,
    needsApproval: json['NeedsApproval'] as bool?,
    approvedByUserId: json['ApprovedByUserId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    quantityHolding: json['QuantityHolding'] as int?,
    quantityToBarCode: json['QuantityToBarCode'] as int?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    parts: json['Parts'] as bool?,
    labor: json['Labor'] as bool?,
    miscellaneous: json['Miscellaneous'] as bool?,
    vehicle: json['Vehicle'] as bool?,
    subRent: json['SubRent'] as bool?,
    subSale: json['SubSale'] as bool?,
    subLabor: json['SubLabor'] as bool?,
    subMiscellaneous: json['SubMiscellaneous'] as bool?,
    subVehicle: json['SubVehicle'] as bool?,
    repair: json['Repair'] as bool?,
    consignment: json['Consignment'] as bool?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
    consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    dealNumber: json['DealNumber'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    rateType: json['RateType'] as String?,
    departmentLocationRequiresApproval:
        json['DepartmentLocationRequiresApproval'] as bool?,
    total: (json['Total'] as num?)?.toDouble(),
    poTypeId: json['PoTypeId'] as String?,
    poType: json['PoType'] as String?,
    poClassificationId: json['PoClassificationId'] as String?,
    poClassification: json['PoClassification'] as String?,
    activityDatesAndTimes: (json['ActivityDatesAndTimes'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    estimatedStartDate: json['EstimatedStartDate'] as String?,
    estimatedStartTime: json['EstimatedStartTime'] as String?,
    estimatedStopDate: json['EstimatedStopDate'] as String?,
    estimatedStopTime: json['EstimatedStopTime'] as String?,
    billingStartDate: json['BillingStartDate'] as String?,
    billingEndDate: json['BillingEndDate'] as String?,
    billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
    billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
    invoicedAmount: (json['InvoicedAmount'] as num?)?.toDouble(),
    projectManagerId: json['ProjectManagerId'] as String?,
    projectManager: json['ProjectManager'] as String?,
    receiveDeliveryId: json['ReceiveDeliveryId'] as String?,
    receiveDeliveryDeliveryType: json['ReceiveDeliveryDeliveryType'] as String?,
    receiveDeliveryRequiredDate: json['ReceiveDeliveryRequiredDate'] as String?,
    receiveDeliveryRequiredTime: json['ReceiveDeliveryRequiredTime'] as String?,
    receiveDeliveryTargetShipDate:
        json['ReceiveDeliveryTargetShipDate'] as String?,
    receiveDeliveryTargetShipTime:
        json['ReceiveDeliveryTargetShipTime'] as String?,
    receiveDeliveryDirection: json['ReceiveDeliveryDirection'] as String?,
    receiveDeliveryAddressType: json['ReceiveDeliveryAddressType'] as String?,
    receiveDeliveryFromLocation: json['ReceiveDeliveryFromLocation'] as String?,
    receiveDeliveryFromContact: json['ReceiveDeliveryFromContact'] as String?,
    receiveDeliveryFromContactPhone:
        json['ReceiveDeliveryFromContactPhone'] as String?,
    receiveDeliveryFromAlternateContact:
        json['ReceiveDeliveryFromAlternateContact'] as String?,
    receiveDeliveryFromAlternateContactPhone:
        json['ReceiveDeliveryFromAlternateContactPhone'] as String?,
    receiveDeliveryFromAttention:
        json['ReceiveDeliveryFromAttention'] as String?,
    receiveDeliveryFromAddress1: json['ReceiveDeliveryFromAddress1'] as String?,
    receiveDeliveryFromAdd2ress: json['ReceiveDeliveryFromAdd2ress'] as String?,
    receiveDeliveryFromCity: json['ReceiveDeliveryFromCity'] as String?,
    receiveDeliveryFromState: json['ReceiveDeliveryFromState'] as String?,
    receiveDeliveryFromZipCode: json['ReceiveDeliveryFromZipCode'] as String?,
    receiveDeliveryFromCountry: json['ReceiveDeliveryFromCountry'] as String?,
    receiveDeliveryFromCountryId:
        json['ReceiveDeliveryFromCountryId'] as String?,
    receiveDeliveryFromCrossStreets:
        json['ReceiveDeliveryFromCrossStreets'] as String?,
    receiveDeliveryToLocation: json['ReceiveDeliveryToLocation'] as String?,
    receiveDeliveryToVenue: json['ReceiveDeliveryToVenue'] as String?,
    receiveDeliveryToVenueId: json['ReceiveDeliveryToVenueId'] as String?,
    receiveDeliveryToWarehouse: json['ReceiveDeliveryToWarehouse'] as String?,
    receiveDeliveryToWarehouseId:
        json['ReceiveDeliveryToWarehouseId'] as String?,
    receiveDeliveryToContact: json['ReceiveDeliveryToContact'] as String?,
    receiveDeliveryToContactPhone:
        json['ReceiveDeliveryToContactPhone'] as String?,
    receiveDeliveryToAlternateContact:
        json['ReceiveDeliveryToAlternateContact'] as String?,
    receiveDeliveryToAlternateContactPhone:
        json['ReceiveDeliveryToAlternateContactPhone'] as String?,
    receiveDeliveryToAttention: json['ReceiveDeliveryToAttention'] as String?,
    receiveDeliveryToAddress1: json['ReceiveDeliveryToAddress1'] as String?,
    receiveDeliveryToAddress2: json['ReceiveDeliveryToAddress2'] as String?,
    receiveDeliveryToCity: json['ReceiveDeliveryToCity'] as String?,
    receiveDeliveryToState: json['ReceiveDeliveryToState'] as String?,
    receiveDeliveryToZipCode: json['ReceiveDeliveryToZipCode'] as String?,
    receiveDeliveryToCountryId: json['ReceiveDeliveryToCountryId'] as String?,
    receiveDeliveryToCountry: json['ReceiveDeliveryToCountry'] as String?,
    receiveDeliveryToContactFax: json['ReceiveDeliveryToContactFax'] as String?,
    receiveDeliveryToCrossStreets:
        json['ReceiveDeliveryToCrossStreets'] as String?,
    receiveDeliveryDeliveryNotes:
        json['ReceiveDeliveryDeliveryNotes'] as String?,
    receiveDeliveryCarrierId: json['ReceiveDeliveryCarrierId'] as String?,
    receiveDeliveryCarrier: json['ReceiveDeliveryCarrier'] as String?,
    receiveDeliveryCarrierAccount:
        json['ReceiveDeliveryCarrierAccount'] as String?,
    receiveDeliveryShipViaId: json['ReceiveDeliveryShipViaId'] as String?,
    receiveDeliveryShipVia: json['ReceiveDeliveryShipVia'] as String?,
    receiveDeliveryInvoiceId: json['ReceiveDeliveryInvoiceId'] as String?,
    receiveDeliveryVendorInvoiceId:
        json['ReceiveDeliveryVendorInvoiceId'] as String?,
    receiveDeliveryEstimatedFreight:
        (json['ReceiveDeliveryEstimatedFreight'] as num?)?.toDouble(),
    receiveDeliveryFreightInvoiceAmount:
        (json['ReceiveDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    receiveDeliveryChargeType: json['ReceiveDeliveryChargeType'] as String?,
    receiveDeliveryFreightTrackingNumber:
        json['ReceiveDeliveryFreightTrackingNumber'] as String?,
    receiveDeliveryFreightTrackingUrl:
        json['ReceiveDeliveryFreightTrackingUrl'] as String?,
    receiveDeliveryDropShip: json['ReceiveDeliveryDropShip'] as bool?,
    receiveDeliveryPackageCode: json['ReceiveDeliveryPackageCode'] as String?,
    receiveDeliveryBillPoFreightOnOrder:
        json['ReceiveDeliveryBillPoFreightOnOrder'] as bool?,
    receiveDeliveryOnlineOrderNumber:
        json['ReceiveDeliveryOnlineOrderNumber'] as String?,
    receiveDeliveryOnlineOrderStatus:
        json['ReceiveDeliveryOnlineOrderStatus'] as String?,
    receiveDeliveryDateStamp: json['ReceiveDeliveryDateStamp'] as String?,
    returnDeliveryId: json['ReturnDeliveryId'] as String?,
    returnDeliveryDeliveryType: json['ReturnDeliveryDeliveryType'] as String?,
    returnDeliveryRequiredDate: json['ReturnDeliveryRequiredDate'] as String?,
    returnDeliveryRequiredTime: json['ReturnDeliveryRequiredTime'] as String?,
    returnDeliveryTargetShipDate:
        json['ReturnDeliveryTargetShipDate'] as String?,
    returnDeliveryTargetShipTime:
        json['ReturnDeliveryTargetShipTime'] as String?,
    returnDeliveryDirection: json['ReturnDeliveryDirection'] as String?,
    returnDeliveryAddressType: json['ReturnDeliveryAddressType'] as String?,
    returnDeliveryFromLocation: json['ReturnDeliveryFromLocation'] as String?,
    returnDeliveryFromContact: json['ReturnDeliveryFromContact'] as String?,
    returnDeliveryFromContactPhone:
        json['ReturnDeliveryFromContactPhone'] as String?,
    returnDeliveryFromAlternateContact:
        json['ReturnDeliveryFromAlternateContact'] as String?,
    returnDeliveryFromAlternateContactPhone:
        json['ReturnDeliveryFromAlternateContactPhone'] as String?,
    returnDeliveryFromAttention: json['ReturnDeliveryFromAttention'] as String?,
    returnDeliveryFromAddress1: json['ReturnDeliveryFromAddress1'] as String?,
    returnDeliveryFromAdd2ress: json['ReturnDeliveryFromAdd2ress'] as String?,
    returnDeliveryFromCity: json['ReturnDeliveryFromCity'] as String?,
    returnDeliveryFromState: json['ReturnDeliveryFromState'] as String?,
    returnDeliveryFromZipCode: json['ReturnDeliveryFromZipCode'] as String?,
    returnDeliveryFromCountry: json['ReturnDeliveryFromCountry'] as String?,
    returnDeliveryFromCountryId: json['ReturnDeliveryFromCountryId'] as String?,
    returnDeliveryFromCrossStreets:
        json['ReturnDeliveryFromCrossStreets'] as String?,
    returnDeliveryToLocation: json['ReturnDeliveryToLocation'] as String?,
    returnDeliveryToVenue: json['ReturnDeliveryToVenue'] as String?,
    returnDeliveryToVenueId: json['ReturnDeliveryToVenueId'] as String?,
    returnDeliveryToWarehouse: json['ReturnDeliveryToWarehouse'] as String?,
    returnDeliveryToWarehouseId: json['ReturnDeliveryToWarehouseId'] as String?,
    returnDeliveryToContact: json['ReturnDeliveryToContact'] as String?,
    returnDeliveryToContactPhone:
        json['ReturnDeliveryToContactPhone'] as String?,
    returnDeliveryToAlternateContact:
        json['ReturnDeliveryToAlternateContact'] as String?,
    returnDeliveryToAlternateContactPhone:
        json['ReturnDeliveryToAlternateContactPhone'] as String?,
    returnDeliveryToAttention: json['ReturnDeliveryToAttention'] as String?,
    returnDeliveryToAddress1: json['ReturnDeliveryToAddress1'] as String?,
    returnDeliveryToAddress2: json['ReturnDeliveryToAddress2'] as String?,
    returnDeliveryToCity: json['ReturnDeliveryToCity'] as String?,
    returnDeliveryToState: json['ReturnDeliveryToState'] as String?,
    returnDeliveryToZipCode: json['ReturnDeliveryToZipCode'] as String?,
    returnDeliveryToCountryId: json['ReturnDeliveryToCountryId'] as String?,
    returnDeliveryToCountry: json['ReturnDeliveryToCountry'] as String?,
    returnDeliveryToContactFax: json['ReturnDeliveryToContactFax'] as String?,
    returnDeliveryToCrossStreets:
        json['ReturnDeliveryToCrossStreets'] as String?,
    returnDeliveryDeliveryNotes: json['ReturnDeliveryDeliveryNotes'] as String?,
    returnDeliveryCarrierId: json['ReturnDeliveryCarrierId'] as String?,
    returnDeliveryCarrier: json['ReturnDeliveryCarrier'] as String?,
    returnDeliveryCarrierAccount:
        json['ReturnDeliveryCarrierAccount'] as String?,
    returnDeliveryShipViaId: json['ReturnDeliveryShipViaId'] as String?,
    returnDeliveryShipVia: json['ReturnDeliveryShipVia'] as String?,
    returnDeliveryInvoiceId: json['ReturnDeliveryInvoiceId'] as String?,
    returnDeliveryVendorInvoiceId:
        json['ReturnDeliveryVendorInvoiceId'] as String?,
    returnDeliveryEstimatedFreight:
        (json['ReturnDeliveryEstimatedFreight'] as num?)?.toDouble(),
    returnDeliveryFreightInvoiceAmount:
        (json['ReturnDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    returnDeliveryChargeType: json['ReturnDeliveryChargeType'] as String?,
    returnDeliveryFreightTrackingNumber:
        json['ReturnDeliveryFreightTrackingNumber'] as String?,
    returnDeliveryFreightTrackingUrl:
        json['ReturnDeliveryFreightTrackingUrl'] as String?,
    returnDeliveryVendorRetrieve: json['ReturnDeliveryVendorRetrieve'] as bool?,
    returnDeliveryPackageCode: json['ReturnDeliveryPackageCode'] as String?,
    returnDeliveryBillPoFreightOnOrder:
        json['ReturnDeliveryBillPoFreightOnOrder'] as bool?,
    returnDeliveryOnlineOrderNumber:
        json['ReturnDeliveryOnlineOrderNumber'] as String?,
    returnDeliveryOnlineOrderStatus:
        json['ReturnDeliveryOnlineOrderStatus'] as String?,
    returnDeliveryDateStamp: json['ReturnDeliveryDateStamp'] as String?,
    enableProjects: json['EnableProjects'] as bool?,
    projectId: json['ProjectId'] as String?,
    projectNumber: json['ProjectNumber'] as String?,
    project: json['Project'] as String?,
    projectDrawingsId: json['ProjectDrawingsId'] as String?,
    projectDrawings: json['ProjectDrawings'] as String?,
    projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
    projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
    projectDropShipId: json['ProjectDropShipId'] as String?,
    projectDropShip: json['ProjectDropShip'] as String?,
    projectAsBuildId: json['ProjectAsBuildId'] as String?,
    projectAsBuild: json['ProjectAsBuild'] as String?,
    projectCommissioningId: json['ProjectCommissioningId'] as String?,
    projectCommissioning: json['ProjectCommissioning'] as String?,
    projectDepositId: json['ProjectDepositId'] as String?,
    projectDeposit: json['ProjectDeposit'] as String?,
    location: json['Location'] as String?,
    currencyId: json['CurrencyId'] as String?,
    updateAllRatesToNewCurrency: json['UpdateAllRatesToNewCurrency'] as bool?,
    confirmUpdateAllRatesToNewCurrency:
        json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currency: json['Currency'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    billingCycle: json['BillingCycle'] as String?,
    remitToAttention1: json['RemitToAttention1'] as String?,
    remitToAttention2: json['RemitToAttention2'] as String?,
    remitToAddress1: json['RemitToAddress1'] as String?,
    remitToAddress2: json['RemitToAddress2'] as String?,
    remitToCity: json['RemitToCity'] as String?,
    remitToState: json['RemitToState'] as String?,
    remitToCountryId: json['RemitToCountryId'] as String?,
    remitToCountry: json['RemitToCountry'] as String?,
    remitToZipCode: json['RemitToZipCode'] as String?,
    remitToEmail: json['RemitToEmail'] as String?,
    remitToPhone: json['RemitToPhone'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    paymentTermsDueInDays: json['PaymentTermsDueInDays'] as int?,
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    taxId: json['TaxId'] as String?,
    tax1Name: json['Tax1Name'] as String?,
    tax2Name: json['Tax2Name'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    hasRentalItem: json['HasRentalItem'] as bool?,
    hasSalesItem: json['HasSalesItem'] as bool?,
    hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
    hasLaborItem: json['HasLaborItem'] as bool?,
    hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
    hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
    hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
    hasPartsItem: json['HasPartsItem'] as bool?,
    rentalDiscountPercent: (json['RentalDiscountPercent'] as num?)?.toDouble(),
    rentalTotal: (json['RentalTotal'] as num?)?.toDouble(),
    rentalTotalIncludesTax: json['RentalTotalIncludesTax'] as bool?,
    salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
    salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
    salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
    partsDiscountPercent: (json['PartsDiscountPercent'] as num?)?.toDouble(),
    partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
    partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
    vehicleDiscountPercent:
        (json['VehicleDiscountPercent'] as num?)?.toDouble(),
    vehicleTotal: (json['VehicleTotal'] as num?)?.toDouble(),
    vehicleTotalIncludesTax: json['VehicleTotalIncludesTax'] as bool?,
    miscDiscountPercent: (json['MiscDiscountPercent'] as num?)?.toDouble(),
    miscTotal: (json['MiscTotal'] as num?)?.toDouble(),
    miscTotalIncludesTax: json['MiscTotalIncludesTax'] as bool?,
    laborDiscountPercent: (json['LaborDiscountPercent'] as num?)?.toDouble(),
    laborTotal: (json['LaborTotal'] as num?)?.toDouble(),
    laborTotalIncludesTax: json['LaborTotalIncludesTax'] as bool?,
    subRentalDaysPerWeek: (json['SubRentalDaysPerWeek'] as num?)?.toDouble(),
    subRentalDiscountPercent:
        (json['SubRentalDiscountPercent'] as num?)?.toDouble(),
    weeklySubRentalTotal: (json['WeeklySubRentalTotal'] as num?)?.toDouble(),
    monthlySubRentalTotal: (json['MonthlySubRentalTotal'] as num?)?.toDouble(),
    periodSubRentalTotal: (json['PeriodSubRentalTotal'] as num?)?.toDouble(),
    weeklySubRentalTotalIncludesTax:
        json['WeeklySubRentalTotalIncludesTax'] as bool?,
    monthlySubRentalTotalIncludesTax:
        json['MonthlySubRentalTotalIncludesTax'] as bool?,
    periodSubRentalTotalIncludesTax:
        json['PeriodSubRentalTotalIncludesTax'] as bool?,
    subSalesDiscountPercent:
        (json['SubSalesDiscountPercent'] as num?)?.toDouble(),
    subSalesTotal: (json['SubSalesTotal'] as num?)?.toDouble(),
    subSalesTotalIncludesTax: json['SubSalesTotalIncludesTax'] as bool?,
    subVehicleDaysPerWeek: (json['SubVehicleDaysPerWeek'] as num?)?.toDouble(),
    subvehicleDiscountPercent:
        (json['SubvehicleDiscountPercent'] as num?)?.toDouble(),
    weeklySubVehicleTotal: (json['WeeklySubVehicleTotal'] as num?)?.toDouble(),
    monthlySubVehicleTotal:
        (json['MonthlySubVehicleTotal'] as num?)?.toDouble(),
    periodSubVehicleTotal: (json['PeriodSubVehicleTotal'] as num?)?.toDouble(),
    weeklySubVehicleTotalIncludesTax:
        json['WeeklySubVehicleTotalIncludesTax'] as bool?,
    monthlySubVehicleTotalIncludesTax:
        json['MonthlySubVehicleTotalIncludesTax'] as bool?,
    periodSubVehicleTotalIncludesTax:
        json['PeriodSubVehicleTotalIncludesTax'] as bool?,
    subMiscDiscountPercent:
        (json['SubMiscDiscountPercent'] as num?)?.toDouble(),
    weeklySubMiscTotal: (json['WeeklySubMiscTotal'] as num?)?.toDouble(),
    monthlySubMiscTotal: (json['MonthlySubMiscTotal'] as num?)?.toDouble(),
    periodSubMiscTotal: (json['PeriodSubMiscTotal'] as num?)?.toDouble(),
    weeklySubMiscTotalIncludesTax:
        json['WeeklySubMiscTotalIncludesTax'] as bool?,
    monthlySubMiscTotalIncludesTax:
        json['MonthlySubMiscTotalIncludesTax'] as bool?,
    periodSubMiscTotalIncludesTax:
        json['PeriodSubMiscTotalIncludesTax'] as bool?,
    subLaborDiscountPercent:
        (json['SubLaborDiscountPercent'] as num?)?.toDouble(),
    weeklySubLaborTotal: (json['WeeklySubLaborTotal'] as num?)?.toDouble(),
    monthlySubLaborTotal: (json['MonthlySubLaborTotal'] as num?)?.toDouble(),
    periodSubLaborTotal: (json['PeriodSubLaborTotal'] as num?)?.toDouble(),
    weeklySubLaborTotalIncludesTax:
        json['WeeklySubLaborTotalIncludesTax'] as bool?,
    monthlySubLaborTotalIncludesTax:
        json['MonthlySubLaborTotalIncludesTax'] as bool?,
    periodSubLaborTotalIncludesTax:
        json['PeriodSubLaborTotalIncludesTax'] as bool?,
    miscellaneousIsComplete: json['MiscellaneousIsComplete'] as bool?,
    subMiscellaneousIsComplete: json['SubMiscellaneousIsComplete'] as bool?,
    laborIsComplete: json['LaborIsComplete'] as bool?,
    subLaborIsComplete: json['SubLaborIsComplete'] as bool?,
    currencyColor: json['CurrencyColor'] as String?,
    statusColor: json['StatusColor'] as String?,
    purchaseOrderNumberColor: json['PurchaseOrderNumberColor'] as String?,
    vendorColor: json['VendorColor'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsOrderItemOrderItem.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesAgentPurchaseOrderGetPurchaseOrderResponseToJson(
        WebApiModulesAgentPurchaseOrderGetPurchaseOrderResponse instance) =>
    <String, dynamic>{
      'PurchaseOrderId': instance.purchaseOrderId,
      'PurchaseOrderNumber': instance.purchaseOrderNumber,
      'Description': instance.description,
      'PurchaseOrderDate': instance.purchaseOrderDate,
      'RequisitionNumber': instance.requisitionNumber,
      'RequisitionDate': instance.requisitionDate,
      'VendorId': instance.vendorId,
      'Vendor': instance.vendor,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'ReferenceNumber': instance.referenceNumber,
      'NeedsApproval': instance.needsApproval,
      'ApprovedByUserId': instance.approvedByUserId,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'QuantityHolding': instance.quantityHolding,
      'QuantityToBarCode': instance.quantityToBarCode,
      'Rental': instance.rental,
      'Sales': instance.sales,
      'Parts': instance.parts,
      'Labor': instance.labor,
      'Miscellaneous': instance.miscellaneous,
      'Vehicle': instance.vehicle,
      'SubRent': instance.subRent,
      'SubSale': instance.subSale,
      'SubLabor': instance.subLabor,
      'SubMiscellaneous': instance.subMiscellaneous,
      'SubVehicle': instance.subVehicle,
      'Repair': instance.repair,
      'Consignment': instance.consignment,
      'ConsignorAgreementId': instance.consignorAgreementId,
      'ConsignorAgreementNumber': instance.consignorAgreementNumber,
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'DealNumber': instance.dealNumber,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'RateType': instance.rateType,
      'DepartmentLocationRequiresApproval':
          instance.departmentLocationRequiresApproval,
      'Total': instance.total,
      'PoTypeId': instance.poTypeId,
      'PoType': instance.poType,
      'PoClassificationId': instance.poClassificationId,
      'PoClassification': instance.poClassification,
      'ActivityDatesAndTimes':
          instance.activityDatesAndTimes?.map((e) => e.toJson()).toList(),
      'EstimatedStartDate': instance.estimatedStartDate,
      'EstimatedStartTime': instance.estimatedStartTime,
      'EstimatedStopDate': instance.estimatedStopDate,
      'EstimatedStopTime': instance.estimatedStopTime,
      'BillingStartDate': instance.billingStartDate,
      'BillingEndDate': instance.billingEndDate,
      'BillingWeeks': instance.billingWeeks,
      'BillingMonths': instance.billingMonths,
      'InvoicedAmount': instance.invoicedAmount,
      'ProjectManagerId': instance.projectManagerId,
      'ProjectManager': instance.projectManager,
      'ReceiveDeliveryId': instance.receiveDeliveryId,
      'ReceiveDeliveryDeliveryType': instance.receiveDeliveryDeliveryType,
      'ReceiveDeliveryRequiredDate': instance.receiveDeliveryRequiredDate,
      'ReceiveDeliveryRequiredTime': instance.receiveDeliveryRequiredTime,
      'ReceiveDeliveryTargetShipDate': instance.receiveDeliveryTargetShipDate,
      'ReceiveDeliveryTargetShipTime': instance.receiveDeliveryTargetShipTime,
      'ReceiveDeliveryDirection': instance.receiveDeliveryDirection,
      'ReceiveDeliveryAddressType': instance.receiveDeliveryAddressType,
      'ReceiveDeliveryFromLocation': instance.receiveDeliveryFromLocation,
      'ReceiveDeliveryFromContact': instance.receiveDeliveryFromContact,
      'ReceiveDeliveryFromContactPhone':
          instance.receiveDeliveryFromContactPhone,
      'ReceiveDeliveryFromAlternateContact':
          instance.receiveDeliveryFromAlternateContact,
      'ReceiveDeliveryFromAlternateContactPhone':
          instance.receiveDeliveryFromAlternateContactPhone,
      'ReceiveDeliveryFromAttention': instance.receiveDeliveryFromAttention,
      'ReceiveDeliveryFromAddress1': instance.receiveDeliveryFromAddress1,
      'ReceiveDeliveryFromAdd2ress': instance.receiveDeliveryFromAdd2ress,
      'ReceiveDeliveryFromCity': instance.receiveDeliveryFromCity,
      'ReceiveDeliveryFromState': instance.receiveDeliveryFromState,
      'ReceiveDeliveryFromZipCode': instance.receiveDeliveryFromZipCode,
      'ReceiveDeliveryFromCountry': instance.receiveDeliveryFromCountry,
      'ReceiveDeliveryFromCountryId': instance.receiveDeliveryFromCountryId,
      'ReceiveDeliveryFromCrossStreets':
          instance.receiveDeliveryFromCrossStreets,
      'ReceiveDeliveryToLocation': instance.receiveDeliveryToLocation,
      'ReceiveDeliveryToVenue': instance.receiveDeliveryToVenue,
      'ReceiveDeliveryToVenueId': instance.receiveDeliveryToVenueId,
      'ReceiveDeliveryToWarehouse': instance.receiveDeliveryToWarehouse,
      'ReceiveDeliveryToWarehouseId': instance.receiveDeliveryToWarehouseId,
      'ReceiveDeliveryToContact': instance.receiveDeliveryToContact,
      'ReceiveDeliveryToContactPhone': instance.receiveDeliveryToContactPhone,
      'ReceiveDeliveryToAlternateContact':
          instance.receiveDeliveryToAlternateContact,
      'ReceiveDeliveryToAlternateContactPhone':
          instance.receiveDeliveryToAlternateContactPhone,
      'ReceiveDeliveryToAttention': instance.receiveDeliveryToAttention,
      'ReceiveDeliveryToAddress1': instance.receiveDeliveryToAddress1,
      'ReceiveDeliveryToAddress2': instance.receiveDeliveryToAddress2,
      'ReceiveDeliveryToCity': instance.receiveDeliveryToCity,
      'ReceiveDeliveryToState': instance.receiveDeliveryToState,
      'ReceiveDeliveryToZipCode': instance.receiveDeliveryToZipCode,
      'ReceiveDeliveryToCountryId': instance.receiveDeliveryToCountryId,
      'ReceiveDeliveryToCountry': instance.receiveDeliveryToCountry,
      'ReceiveDeliveryToContactFax': instance.receiveDeliveryToContactFax,
      'ReceiveDeliveryToCrossStreets': instance.receiveDeliveryToCrossStreets,
      'ReceiveDeliveryDeliveryNotes': instance.receiveDeliveryDeliveryNotes,
      'ReceiveDeliveryCarrierId': instance.receiveDeliveryCarrierId,
      'ReceiveDeliveryCarrier': instance.receiveDeliveryCarrier,
      'ReceiveDeliveryCarrierAccount': instance.receiveDeliveryCarrierAccount,
      'ReceiveDeliveryShipViaId': instance.receiveDeliveryShipViaId,
      'ReceiveDeliveryShipVia': instance.receiveDeliveryShipVia,
      'ReceiveDeliveryInvoiceId': instance.receiveDeliveryInvoiceId,
      'ReceiveDeliveryVendorInvoiceId': instance.receiveDeliveryVendorInvoiceId,
      'ReceiveDeliveryEstimatedFreight':
          instance.receiveDeliveryEstimatedFreight,
      'ReceiveDeliveryFreightInvoiceAmount':
          instance.receiveDeliveryFreightInvoiceAmount,
      'ReceiveDeliveryChargeType': instance.receiveDeliveryChargeType,
      'ReceiveDeliveryFreightTrackingNumber':
          instance.receiveDeliveryFreightTrackingNumber,
      'ReceiveDeliveryFreightTrackingUrl':
          instance.receiveDeliveryFreightTrackingUrl,
      'ReceiveDeliveryDropShip': instance.receiveDeliveryDropShip,
      'ReceiveDeliveryPackageCode': instance.receiveDeliveryPackageCode,
      'ReceiveDeliveryBillPoFreightOnOrder':
          instance.receiveDeliveryBillPoFreightOnOrder,
      'ReceiveDeliveryOnlineOrderNumber':
          instance.receiveDeliveryOnlineOrderNumber,
      'ReceiveDeliveryOnlineOrderStatus':
          instance.receiveDeliveryOnlineOrderStatus,
      'ReceiveDeliveryDateStamp': instance.receiveDeliveryDateStamp,
      'ReturnDeliveryId': instance.returnDeliveryId,
      'ReturnDeliveryDeliveryType': instance.returnDeliveryDeliveryType,
      'ReturnDeliveryRequiredDate': instance.returnDeliveryRequiredDate,
      'ReturnDeliveryRequiredTime': instance.returnDeliveryRequiredTime,
      'ReturnDeliveryTargetShipDate': instance.returnDeliveryTargetShipDate,
      'ReturnDeliveryTargetShipTime': instance.returnDeliveryTargetShipTime,
      'ReturnDeliveryDirection': instance.returnDeliveryDirection,
      'ReturnDeliveryAddressType': instance.returnDeliveryAddressType,
      'ReturnDeliveryFromLocation': instance.returnDeliveryFromLocation,
      'ReturnDeliveryFromContact': instance.returnDeliveryFromContact,
      'ReturnDeliveryFromContactPhone': instance.returnDeliveryFromContactPhone,
      'ReturnDeliveryFromAlternateContact':
          instance.returnDeliveryFromAlternateContact,
      'ReturnDeliveryFromAlternateContactPhone':
          instance.returnDeliveryFromAlternateContactPhone,
      'ReturnDeliveryFromAttention': instance.returnDeliveryFromAttention,
      'ReturnDeliveryFromAddress1': instance.returnDeliveryFromAddress1,
      'ReturnDeliveryFromAdd2ress': instance.returnDeliveryFromAdd2ress,
      'ReturnDeliveryFromCity': instance.returnDeliveryFromCity,
      'ReturnDeliveryFromState': instance.returnDeliveryFromState,
      'ReturnDeliveryFromZipCode': instance.returnDeliveryFromZipCode,
      'ReturnDeliveryFromCountry': instance.returnDeliveryFromCountry,
      'ReturnDeliveryFromCountryId': instance.returnDeliveryFromCountryId,
      'ReturnDeliveryFromCrossStreets': instance.returnDeliveryFromCrossStreets,
      'ReturnDeliveryToLocation': instance.returnDeliveryToLocation,
      'ReturnDeliveryToVenue': instance.returnDeliveryToVenue,
      'ReturnDeliveryToVenueId': instance.returnDeliveryToVenueId,
      'ReturnDeliveryToWarehouse': instance.returnDeliveryToWarehouse,
      'ReturnDeliveryToWarehouseId': instance.returnDeliveryToWarehouseId,
      'ReturnDeliveryToContact': instance.returnDeliveryToContact,
      'ReturnDeliveryToContactPhone': instance.returnDeliveryToContactPhone,
      'ReturnDeliveryToAlternateContact':
          instance.returnDeliveryToAlternateContact,
      'ReturnDeliveryToAlternateContactPhone':
          instance.returnDeliveryToAlternateContactPhone,
      'ReturnDeliveryToAttention': instance.returnDeliveryToAttention,
      'ReturnDeliveryToAddress1': instance.returnDeliveryToAddress1,
      'ReturnDeliveryToAddress2': instance.returnDeliveryToAddress2,
      'ReturnDeliveryToCity': instance.returnDeliveryToCity,
      'ReturnDeliveryToState': instance.returnDeliveryToState,
      'ReturnDeliveryToZipCode': instance.returnDeliveryToZipCode,
      'ReturnDeliveryToCountryId': instance.returnDeliveryToCountryId,
      'ReturnDeliveryToCountry': instance.returnDeliveryToCountry,
      'ReturnDeliveryToContactFax': instance.returnDeliveryToContactFax,
      'ReturnDeliveryToCrossStreets': instance.returnDeliveryToCrossStreets,
      'ReturnDeliveryDeliveryNotes': instance.returnDeliveryDeliveryNotes,
      'ReturnDeliveryCarrierId': instance.returnDeliveryCarrierId,
      'ReturnDeliveryCarrier': instance.returnDeliveryCarrier,
      'ReturnDeliveryCarrierAccount': instance.returnDeliveryCarrierAccount,
      'ReturnDeliveryShipViaId': instance.returnDeliveryShipViaId,
      'ReturnDeliveryShipVia': instance.returnDeliveryShipVia,
      'ReturnDeliveryInvoiceId': instance.returnDeliveryInvoiceId,
      'ReturnDeliveryVendorInvoiceId': instance.returnDeliveryVendorInvoiceId,
      'ReturnDeliveryEstimatedFreight': instance.returnDeliveryEstimatedFreight,
      'ReturnDeliveryFreightInvoiceAmount':
          instance.returnDeliveryFreightInvoiceAmount,
      'ReturnDeliveryChargeType': instance.returnDeliveryChargeType,
      'ReturnDeliveryFreightTrackingNumber':
          instance.returnDeliveryFreightTrackingNumber,
      'ReturnDeliveryFreightTrackingUrl':
          instance.returnDeliveryFreightTrackingUrl,
      'ReturnDeliveryVendorRetrieve': instance.returnDeliveryVendorRetrieve,
      'ReturnDeliveryPackageCode': instance.returnDeliveryPackageCode,
      'ReturnDeliveryBillPoFreightOnOrder':
          instance.returnDeliveryBillPoFreightOnOrder,
      'ReturnDeliveryOnlineOrderNumber':
          instance.returnDeliveryOnlineOrderNumber,
      'ReturnDeliveryOnlineOrderStatus':
          instance.returnDeliveryOnlineOrderStatus,
      'ReturnDeliveryDateStamp': instance.returnDeliveryDateStamp,
      'EnableProjects': instance.enableProjects,
      'ProjectId': instance.projectId,
      'ProjectNumber': instance.projectNumber,
      'Project': instance.project,
      'ProjectDrawingsId': instance.projectDrawingsId,
      'ProjectDrawings': instance.projectDrawings,
      'ProjectItemsOrderedId': instance.projectItemsOrderedId,
      'ProjectItemsOrdered': instance.projectItemsOrdered,
      'ProjectDropShipId': instance.projectDropShipId,
      'ProjectDropShip': instance.projectDropShip,
      'ProjectAsBuildId': instance.projectAsBuildId,
      'ProjectAsBuild': instance.projectAsBuild,
      'ProjectCommissioningId': instance.projectCommissioningId,
      'ProjectCommissioning': instance.projectCommissioning,
      'ProjectDepositId': instance.projectDepositId,
      'ProjectDeposit': instance.projectDeposit,
      'Location': instance.location,
      'CurrencyId': instance.currencyId,
      'UpdateAllRatesToNewCurrency': instance.updateAllRatesToNewCurrency,
      'ConfirmUpdateAllRatesToNewCurrency':
          instance.confirmUpdateAllRatesToNewCurrency,
      'CurrencyCode': instance.currencyCode,
      'Currency': instance.currency,
      'CurrencySymbol': instance.currencySymbol,
      'BillingCycleId': instance.billingCycleId,
      'BillingCycle': instance.billingCycle,
      'RemitToAttention1': instance.remitToAttention1,
      'RemitToAttention2': instance.remitToAttention2,
      'RemitToAddress1': instance.remitToAddress1,
      'RemitToAddress2': instance.remitToAddress2,
      'RemitToCity': instance.remitToCity,
      'RemitToState': instance.remitToState,
      'RemitToCountryId': instance.remitToCountryId,
      'RemitToCountry': instance.remitToCountry,
      'RemitToZipCode': instance.remitToZipCode,
      'RemitToEmail': instance.remitToEmail,
      'RemitToPhone': instance.remitToPhone,
      'PaymentTypeId': instance.paymentTypeId,
      'PaymentType': instance.paymentType,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'PaymentTermsDueInDays': instance.paymentTermsDueInDays,
      'TaxOptionId': instance.taxOptionId,
      'TaxOption': instance.taxOption,
      'TaxId': instance.taxId,
      'Tax1Name': instance.tax1Name,
      'Tax2Name': instance.tax2Name,
      'RentalTaxRate1': instance.rentalTaxRate1,
      'SalesTaxRate1': instance.salesTaxRate1,
      'LaborTaxRate1': instance.laborTaxRate1,
      'RentalTaxRate2': instance.rentalTaxRate2,
      'SalesTaxRate2': instance.salesTaxRate2,
      'LaborTaxRate2': instance.laborTaxRate2,
      'HasRentalItem': instance.hasRentalItem,
      'HasSalesItem': instance.hasSalesItem,
      'HasMiscellaneousItem': instance.hasMiscellaneousItem,
      'HasLaborItem': instance.hasLaborItem,
      'HasFacilitiesItem': instance.hasFacilitiesItem,
      'HasLossAndDamageItem': instance.hasLossAndDamageItem,
      'HasRentalSaleItem': instance.hasRentalSaleItem,
      'HasPartsItem': instance.hasPartsItem,
      'RentalDiscountPercent': instance.rentalDiscountPercent,
      'RentalTotal': instance.rentalTotal,
      'RentalTotalIncludesTax': instance.rentalTotalIncludesTax,
      'SalesDiscountPercent': instance.salesDiscountPercent,
      'SalesTotal': instance.salesTotal,
      'SalesTotalIncludesTax': instance.salesTotalIncludesTax,
      'PartsDiscountPercent': instance.partsDiscountPercent,
      'PartsTotal': instance.partsTotal,
      'PartsTotalIncludesTax': instance.partsTotalIncludesTax,
      'VehicleDiscountPercent': instance.vehicleDiscountPercent,
      'VehicleTotal': instance.vehicleTotal,
      'VehicleTotalIncludesTax': instance.vehicleTotalIncludesTax,
      'MiscDiscountPercent': instance.miscDiscountPercent,
      'MiscTotal': instance.miscTotal,
      'MiscTotalIncludesTax': instance.miscTotalIncludesTax,
      'LaborDiscountPercent': instance.laborDiscountPercent,
      'LaborTotal': instance.laborTotal,
      'LaborTotalIncludesTax': instance.laborTotalIncludesTax,
      'SubRentalDaysPerWeek': instance.subRentalDaysPerWeek,
      'SubRentalDiscountPercent': instance.subRentalDiscountPercent,
      'WeeklySubRentalTotal': instance.weeklySubRentalTotal,
      'MonthlySubRentalTotal': instance.monthlySubRentalTotal,
      'PeriodSubRentalTotal': instance.periodSubRentalTotal,
      'WeeklySubRentalTotalIncludesTax':
          instance.weeklySubRentalTotalIncludesTax,
      'MonthlySubRentalTotalIncludesTax':
          instance.monthlySubRentalTotalIncludesTax,
      'PeriodSubRentalTotalIncludesTax':
          instance.periodSubRentalTotalIncludesTax,
      'SubSalesDiscountPercent': instance.subSalesDiscountPercent,
      'SubSalesTotal': instance.subSalesTotal,
      'SubSalesTotalIncludesTax': instance.subSalesTotalIncludesTax,
      'SubVehicleDaysPerWeek': instance.subVehicleDaysPerWeek,
      'SubvehicleDiscountPercent': instance.subvehicleDiscountPercent,
      'WeeklySubVehicleTotal': instance.weeklySubVehicleTotal,
      'MonthlySubVehicleTotal': instance.monthlySubVehicleTotal,
      'PeriodSubVehicleTotal': instance.periodSubVehicleTotal,
      'WeeklySubVehicleTotalIncludesTax':
          instance.weeklySubVehicleTotalIncludesTax,
      'MonthlySubVehicleTotalIncludesTax':
          instance.monthlySubVehicleTotalIncludesTax,
      'PeriodSubVehicleTotalIncludesTax':
          instance.periodSubVehicleTotalIncludesTax,
      'SubMiscDiscountPercent': instance.subMiscDiscountPercent,
      'WeeklySubMiscTotal': instance.weeklySubMiscTotal,
      'MonthlySubMiscTotal': instance.monthlySubMiscTotal,
      'PeriodSubMiscTotal': instance.periodSubMiscTotal,
      'WeeklySubMiscTotalIncludesTax': instance.weeklySubMiscTotalIncludesTax,
      'MonthlySubMiscTotalIncludesTax': instance.monthlySubMiscTotalIncludesTax,
      'PeriodSubMiscTotalIncludesTax': instance.periodSubMiscTotalIncludesTax,
      'SubLaborDiscountPercent': instance.subLaborDiscountPercent,
      'WeeklySubLaborTotal': instance.weeklySubLaborTotal,
      'MonthlySubLaborTotal': instance.monthlySubLaborTotal,
      'PeriodSubLaborTotal': instance.periodSubLaborTotal,
      'WeeklySubLaborTotalIncludesTax': instance.weeklySubLaborTotalIncludesTax,
      'MonthlySubLaborTotalIncludesTax':
          instance.monthlySubLaborTotalIncludesTax,
      'PeriodSubLaborTotalIncludesTax': instance.periodSubLaborTotalIncludesTax,
      'MiscellaneousIsComplete': instance.miscellaneousIsComplete,
      'SubMiscellaneousIsComplete': instance.subMiscellaneousIsComplete,
      'LaborIsComplete': instance.laborIsComplete,
      'SubLaborIsComplete': instance.subLaborIsComplete,
      'CurrencyColor': instance.currencyColor,
      'StatusColor': instance.statusColor,
      'PurchaseOrderNumberColor': instance.purchaseOrderNumberColor,
      'VendorColor': instance.vendorColor,
      'DescriptionColor': instance.descriptionColor,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      'Items': instance.items?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentPurchaseOrderNextVendorInvoiceDefaultDatesResponse
    _$WebApiModulesAgentPurchaseOrderNextVendorInvoiceDefaultDatesResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderNextVendorInvoiceDefaultDatesResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    billingStartDate: json['BillingStartDate'] == null
        ? null
        : DateTime.parse(json['BillingStartDate'] as String),
    billingEndDate: json['BillingEndDate'] == null
        ? null
        : DateTime.parse(json['BillingEndDate'] as String),
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderNextVendorInvoiceDefaultDatesResponseToJson(
            WebApiModulesAgentPurchaseOrderNextVendorInvoiceDefaultDatesResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'BillingStartDate': instance.billingStartDate?.toIso8601String(),
          'BillingEndDate': instance.billingEndDate?.toIso8601String(),
        };

WebApiModulesAgentPurchaseOrderPurchaseOrder
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderPurchaseOrder(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
    description: json['Description'] as String?,
    purchaseOrderDate: json['PurchaseOrderDate'] as String?,
    requisitionNumber: json['RequisitionNumber'] as String?,
    requisitionDate: json['RequisitionDate'] as String?,
    vendorId: json['VendorId'] as String?,
    vendor: json['Vendor'] as String?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    referenceNumber: json['ReferenceNumber'] as String?,
    needsApproval: json['NeedsApproval'] as bool?,
    approvedByUserId: json['ApprovedByUserId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    quantityHolding: json['QuantityHolding'] as int?,
    quantityToBarCode: json['QuantityToBarCode'] as int?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    parts: json['Parts'] as bool?,
    labor: json['Labor'] as bool?,
    miscellaneous: json['Miscellaneous'] as bool?,
    vehicle: json['Vehicle'] as bool?,
    subRent: json['SubRent'] as bool?,
    subSale: json['SubSale'] as bool?,
    subLabor: json['SubLabor'] as bool?,
    subMiscellaneous: json['SubMiscellaneous'] as bool?,
    subVehicle: json['SubVehicle'] as bool?,
    repair: json['Repair'] as bool?,
    consignment: json['Consignment'] as bool?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
    consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    dealNumber: json['DealNumber'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    rateType: json['RateType'] as String?,
    departmentLocationRequiresApproval:
        json['DepartmentLocationRequiresApproval'] as bool?,
    total: (json['Total'] as num?)?.toDouble(),
    poTypeId: json['PoTypeId'] as String?,
    poType: json['PoType'] as String?,
    poClassificationId: json['PoClassificationId'] as String?,
    poClassification: json['PoClassification'] as String?,
    activityDatesAndTimes: (json['ActivityDatesAndTimes'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    estimatedStartDate: json['EstimatedStartDate'] as String?,
    estimatedStartTime: json['EstimatedStartTime'] as String?,
    estimatedStopDate: json['EstimatedStopDate'] as String?,
    estimatedStopTime: json['EstimatedStopTime'] as String?,
    billingStartDate: json['BillingStartDate'] as String?,
    billingEndDate: json['BillingEndDate'] as String?,
    billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
    billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
    invoicedAmount: (json['InvoicedAmount'] as num?)?.toDouble(),
    projectManagerId: json['ProjectManagerId'] as String?,
    projectManager: json['ProjectManager'] as String?,
    receiveDeliveryId: json['ReceiveDeliveryId'] as String?,
    receiveDeliveryDeliveryType: json['ReceiveDeliveryDeliveryType'] as String?,
    receiveDeliveryRequiredDate: json['ReceiveDeliveryRequiredDate'] as String?,
    receiveDeliveryRequiredTime: json['ReceiveDeliveryRequiredTime'] as String?,
    receiveDeliveryTargetShipDate:
        json['ReceiveDeliveryTargetShipDate'] as String?,
    receiveDeliveryTargetShipTime:
        json['ReceiveDeliveryTargetShipTime'] as String?,
    receiveDeliveryDirection: json['ReceiveDeliveryDirection'] as String?,
    receiveDeliveryAddressType: json['ReceiveDeliveryAddressType'] as String?,
    receiveDeliveryFromLocation: json['ReceiveDeliveryFromLocation'] as String?,
    receiveDeliveryFromContact: json['ReceiveDeliveryFromContact'] as String?,
    receiveDeliveryFromContactPhone:
        json['ReceiveDeliveryFromContactPhone'] as String?,
    receiveDeliveryFromAlternateContact:
        json['ReceiveDeliveryFromAlternateContact'] as String?,
    receiveDeliveryFromAlternateContactPhone:
        json['ReceiveDeliveryFromAlternateContactPhone'] as String?,
    receiveDeliveryFromAttention:
        json['ReceiveDeliveryFromAttention'] as String?,
    receiveDeliveryFromAddress1: json['ReceiveDeliveryFromAddress1'] as String?,
    receiveDeliveryFromAdd2ress: json['ReceiveDeliveryFromAdd2ress'] as String?,
    receiveDeliveryFromCity: json['ReceiveDeliveryFromCity'] as String?,
    receiveDeliveryFromState: json['ReceiveDeliveryFromState'] as String?,
    receiveDeliveryFromZipCode: json['ReceiveDeliveryFromZipCode'] as String?,
    receiveDeliveryFromCountry: json['ReceiveDeliveryFromCountry'] as String?,
    receiveDeliveryFromCountryId:
        json['ReceiveDeliveryFromCountryId'] as String?,
    receiveDeliveryFromCrossStreets:
        json['ReceiveDeliveryFromCrossStreets'] as String?,
    receiveDeliveryToLocation: json['ReceiveDeliveryToLocation'] as String?,
    receiveDeliveryToVenue: json['ReceiveDeliveryToVenue'] as String?,
    receiveDeliveryToVenueId: json['ReceiveDeliveryToVenueId'] as String?,
    receiveDeliveryToWarehouse: json['ReceiveDeliveryToWarehouse'] as String?,
    receiveDeliveryToWarehouseId:
        json['ReceiveDeliveryToWarehouseId'] as String?,
    receiveDeliveryToContact: json['ReceiveDeliveryToContact'] as String?,
    receiveDeliveryToContactPhone:
        json['ReceiveDeliveryToContactPhone'] as String?,
    receiveDeliveryToAlternateContact:
        json['ReceiveDeliveryToAlternateContact'] as String?,
    receiveDeliveryToAlternateContactPhone:
        json['ReceiveDeliveryToAlternateContactPhone'] as String?,
    receiveDeliveryToAttention: json['ReceiveDeliveryToAttention'] as String?,
    receiveDeliveryToAddress1: json['ReceiveDeliveryToAddress1'] as String?,
    receiveDeliveryToAddress2: json['ReceiveDeliveryToAddress2'] as String?,
    receiveDeliveryToCity: json['ReceiveDeliveryToCity'] as String?,
    receiveDeliveryToState: json['ReceiveDeliveryToState'] as String?,
    receiveDeliveryToZipCode: json['ReceiveDeliveryToZipCode'] as String?,
    receiveDeliveryToCountryId: json['ReceiveDeliveryToCountryId'] as String?,
    receiveDeliveryToCountry: json['ReceiveDeliveryToCountry'] as String?,
    receiveDeliveryToContactFax: json['ReceiveDeliveryToContactFax'] as String?,
    receiveDeliveryToCrossStreets:
        json['ReceiveDeliveryToCrossStreets'] as String?,
    receiveDeliveryDeliveryNotes:
        json['ReceiveDeliveryDeliveryNotes'] as String?,
    receiveDeliveryCarrierId: json['ReceiveDeliveryCarrierId'] as String?,
    receiveDeliveryCarrier: json['ReceiveDeliveryCarrier'] as String?,
    receiveDeliveryCarrierAccount:
        json['ReceiveDeliveryCarrierAccount'] as String?,
    receiveDeliveryShipViaId: json['ReceiveDeliveryShipViaId'] as String?,
    receiveDeliveryShipVia: json['ReceiveDeliveryShipVia'] as String?,
    receiveDeliveryInvoiceId: json['ReceiveDeliveryInvoiceId'] as String?,
    receiveDeliveryVendorInvoiceId:
        json['ReceiveDeliveryVendorInvoiceId'] as String?,
    receiveDeliveryEstimatedFreight:
        (json['ReceiveDeliveryEstimatedFreight'] as num?)?.toDouble(),
    receiveDeliveryFreightInvoiceAmount:
        (json['ReceiveDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    receiveDeliveryChargeType: json['ReceiveDeliveryChargeType'] as String?,
    receiveDeliveryFreightTrackingNumber:
        json['ReceiveDeliveryFreightTrackingNumber'] as String?,
    receiveDeliveryFreightTrackingUrl:
        json['ReceiveDeliveryFreightTrackingUrl'] as String?,
    receiveDeliveryDropShip: json['ReceiveDeliveryDropShip'] as bool?,
    receiveDeliveryPackageCode: json['ReceiveDeliveryPackageCode'] as String?,
    receiveDeliveryBillPoFreightOnOrder:
        json['ReceiveDeliveryBillPoFreightOnOrder'] as bool?,
    receiveDeliveryOnlineOrderNumber:
        json['ReceiveDeliveryOnlineOrderNumber'] as String?,
    receiveDeliveryOnlineOrderStatus:
        json['ReceiveDeliveryOnlineOrderStatus'] as String?,
    receiveDeliveryDateStamp: json['ReceiveDeliveryDateStamp'] as String?,
    returnDeliveryId: json['ReturnDeliveryId'] as String?,
    returnDeliveryDeliveryType: json['ReturnDeliveryDeliveryType'] as String?,
    returnDeliveryRequiredDate: json['ReturnDeliveryRequiredDate'] as String?,
    returnDeliveryRequiredTime: json['ReturnDeliveryRequiredTime'] as String?,
    returnDeliveryTargetShipDate:
        json['ReturnDeliveryTargetShipDate'] as String?,
    returnDeliveryTargetShipTime:
        json['ReturnDeliveryTargetShipTime'] as String?,
    returnDeliveryDirection: json['ReturnDeliveryDirection'] as String?,
    returnDeliveryAddressType: json['ReturnDeliveryAddressType'] as String?,
    returnDeliveryFromLocation: json['ReturnDeliveryFromLocation'] as String?,
    returnDeliveryFromContact: json['ReturnDeliveryFromContact'] as String?,
    returnDeliveryFromContactPhone:
        json['ReturnDeliveryFromContactPhone'] as String?,
    returnDeliveryFromAlternateContact:
        json['ReturnDeliveryFromAlternateContact'] as String?,
    returnDeliveryFromAlternateContactPhone:
        json['ReturnDeliveryFromAlternateContactPhone'] as String?,
    returnDeliveryFromAttention: json['ReturnDeliveryFromAttention'] as String?,
    returnDeliveryFromAddress1: json['ReturnDeliveryFromAddress1'] as String?,
    returnDeliveryFromAdd2ress: json['ReturnDeliveryFromAdd2ress'] as String?,
    returnDeliveryFromCity: json['ReturnDeliveryFromCity'] as String?,
    returnDeliveryFromState: json['ReturnDeliveryFromState'] as String?,
    returnDeliveryFromZipCode: json['ReturnDeliveryFromZipCode'] as String?,
    returnDeliveryFromCountry: json['ReturnDeliveryFromCountry'] as String?,
    returnDeliveryFromCountryId: json['ReturnDeliveryFromCountryId'] as String?,
    returnDeliveryFromCrossStreets:
        json['ReturnDeliveryFromCrossStreets'] as String?,
    returnDeliveryToLocation: json['ReturnDeliveryToLocation'] as String?,
    returnDeliveryToVenue: json['ReturnDeliveryToVenue'] as String?,
    returnDeliveryToVenueId: json['ReturnDeliveryToVenueId'] as String?,
    returnDeliveryToWarehouse: json['ReturnDeliveryToWarehouse'] as String?,
    returnDeliveryToWarehouseId: json['ReturnDeliveryToWarehouseId'] as String?,
    returnDeliveryToContact: json['ReturnDeliveryToContact'] as String?,
    returnDeliveryToContactPhone:
        json['ReturnDeliveryToContactPhone'] as String?,
    returnDeliveryToAlternateContact:
        json['ReturnDeliveryToAlternateContact'] as String?,
    returnDeliveryToAlternateContactPhone:
        json['ReturnDeliveryToAlternateContactPhone'] as String?,
    returnDeliveryToAttention: json['ReturnDeliveryToAttention'] as String?,
    returnDeliveryToAddress1: json['ReturnDeliveryToAddress1'] as String?,
    returnDeliveryToAddress2: json['ReturnDeliveryToAddress2'] as String?,
    returnDeliveryToCity: json['ReturnDeliveryToCity'] as String?,
    returnDeliveryToState: json['ReturnDeliveryToState'] as String?,
    returnDeliveryToZipCode: json['ReturnDeliveryToZipCode'] as String?,
    returnDeliveryToCountryId: json['ReturnDeliveryToCountryId'] as String?,
    returnDeliveryToCountry: json['ReturnDeliveryToCountry'] as String?,
    returnDeliveryToContactFax: json['ReturnDeliveryToContactFax'] as String?,
    returnDeliveryToCrossStreets:
        json['ReturnDeliveryToCrossStreets'] as String?,
    returnDeliveryDeliveryNotes: json['ReturnDeliveryDeliveryNotes'] as String?,
    returnDeliveryCarrierId: json['ReturnDeliveryCarrierId'] as String?,
    returnDeliveryCarrier: json['ReturnDeliveryCarrier'] as String?,
    returnDeliveryCarrierAccount:
        json['ReturnDeliveryCarrierAccount'] as String?,
    returnDeliveryShipViaId: json['ReturnDeliveryShipViaId'] as String?,
    returnDeliveryShipVia: json['ReturnDeliveryShipVia'] as String?,
    returnDeliveryInvoiceId: json['ReturnDeliveryInvoiceId'] as String?,
    returnDeliveryVendorInvoiceId:
        json['ReturnDeliveryVendorInvoiceId'] as String?,
    returnDeliveryEstimatedFreight:
        (json['ReturnDeliveryEstimatedFreight'] as num?)?.toDouble(),
    returnDeliveryFreightInvoiceAmount:
        (json['ReturnDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    returnDeliveryChargeType: json['ReturnDeliveryChargeType'] as String?,
    returnDeliveryFreightTrackingNumber:
        json['ReturnDeliveryFreightTrackingNumber'] as String?,
    returnDeliveryFreightTrackingUrl:
        json['ReturnDeliveryFreightTrackingUrl'] as String?,
    returnDeliveryVendorRetrieve: json['ReturnDeliveryVendorRetrieve'] as bool?,
    returnDeliveryPackageCode: json['ReturnDeliveryPackageCode'] as String?,
    returnDeliveryBillPoFreightOnOrder:
        json['ReturnDeliveryBillPoFreightOnOrder'] as bool?,
    returnDeliveryOnlineOrderNumber:
        json['ReturnDeliveryOnlineOrderNumber'] as String?,
    returnDeliveryOnlineOrderStatus:
        json['ReturnDeliveryOnlineOrderStatus'] as String?,
    returnDeliveryDateStamp: json['ReturnDeliveryDateStamp'] as String?,
    enableProjects: json['EnableProjects'] as bool?,
    projectId: json['ProjectId'] as String?,
    projectNumber: json['ProjectNumber'] as String?,
    project: json['Project'] as String?,
    projectDrawingsId: json['ProjectDrawingsId'] as String?,
    projectDrawings: json['ProjectDrawings'] as String?,
    projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
    projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
    projectDropShipId: json['ProjectDropShipId'] as String?,
    projectDropShip: json['ProjectDropShip'] as String?,
    projectAsBuildId: json['ProjectAsBuildId'] as String?,
    projectAsBuild: json['ProjectAsBuild'] as String?,
    projectCommissioningId: json['ProjectCommissioningId'] as String?,
    projectCommissioning: json['ProjectCommissioning'] as String?,
    projectDepositId: json['ProjectDepositId'] as String?,
    projectDeposit: json['ProjectDeposit'] as String?,
    location: json['Location'] as String?,
    currencyId: json['CurrencyId'] as String?,
    updateAllRatesToNewCurrency: json['UpdateAllRatesToNewCurrency'] as bool?,
    confirmUpdateAllRatesToNewCurrency:
        json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currency: json['Currency'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    billingCycle: json['BillingCycle'] as String?,
    remitToAttention1: json['RemitToAttention1'] as String?,
    remitToAttention2: json['RemitToAttention2'] as String?,
    remitToAddress1: json['RemitToAddress1'] as String?,
    remitToAddress2: json['RemitToAddress2'] as String?,
    remitToCity: json['RemitToCity'] as String?,
    remitToState: json['RemitToState'] as String?,
    remitToCountryId: json['RemitToCountryId'] as String?,
    remitToCountry: json['RemitToCountry'] as String?,
    remitToZipCode: json['RemitToZipCode'] as String?,
    remitToEmail: json['RemitToEmail'] as String?,
    remitToPhone: json['RemitToPhone'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    paymentTermsDueInDays: json['PaymentTermsDueInDays'] as int?,
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    taxId: json['TaxId'] as String?,
    tax1Name: json['Tax1Name'] as String?,
    tax2Name: json['Tax2Name'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    hasRentalItem: json['HasRentalItem'] as bool?,
    hasSalesItem: json['HasSalesItem'] as bool?,
    hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
    hasLaborItem: json['HasLaborItem'] as bool?,
    hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
    hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
    hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
    hasPartsItem: json['HasPartsItem'] as bool?,
    rentalDiscountPercent: (json['RentalDiscountPercent'] as num?)?.toDouble(),
    rentalTotal: (json['RentalTotal'] as num?)?.toDouble(),
    rentalTotalIncludesTax: json['RentalTotalIncludesTax'] as bool?,
    salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
    salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
    salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
    partsDiscountPercent: (json['PartsDiscountPercent'] as num?)?.toDouble(),
    partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
    partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
    vehicleDiscountPercent:
        (json['VehicleDiscountPercent'] as num?)?.toDouble(),
    vehicleTotal: (json['VehicleTotal'] as num?)?.toDouble(),
    vehicleTotalIncludesTax: json['VehicleTotalIncludesTax'] as bool?,
    miscDiscountPercent: (json['MiscDiscountPercent'] as num?)?.toDouble(),
    miscTotal: (json['MiscTotal'] as num?)?.toDouble(),
    miscTotalIncludesTax: json['MiscTotalIncludesTax'] as bool?,
    laborDiscountPercent: (json['LaborDiscountPercent'] as num?)?.toDouble(),
    laborTotal: (json['LaborTotal'] as num?)?.toDouble(),
    laborTotalIncludesTax: json['LaborTotalIncludesTax'] as bool?,
    subRentalDaysPerWeek: (json['SubRentalDaysPerWeek'] as num?)?.toDouble(),
    subRentalDiscountPercent:
        (json['SubRentalDiscountPercent'] as num?)?.toDouble(),
    weeklySubRentalTotal: (json['WeeklySubRentalTotal'] as num?)?.toDouble(),
    monthlySubRentalTotal: (json['MonthlySubRentalTotal'] as num?)?.toDouble(),
    periodSubRentalTotal: (json['PeriodSubRentalTotal'] as num?)?.toDouble(),
    weeklySubRentalTotalIncludesTax:
        json['WeeklySubRentalTotalIncludesTax'] as bool?,
    monthlySubRentalTotalIncludesTax:
        json['MonthlySubRentalTotalIncludesTax'] as bool?,
    periodSubRentalTotalIncludesTax:
        json['PeriodSubRentalTotalIncludesTax'] as bool?,
    subSalesDiscountPercent:
        (json['SubSalesDiscountPercent'] as num?)?.toDouble(),
    subSalesTotal: (json['SubSalesTotal'] as num?)?.toDouble(),
    subSalesTotalIncludesTax: json['SubSalesTotalIncludesTax'] as bool?,
    subVehicleDaysPerWeek: (json['SubVehicleDaysPerWeek'] as num?)?.toDouble(),
    subvehicleDiscountPercent:
        (json['SubvehicleDiscountPercent'] as num?)?.toDouble(),
    weeklySubVehicleTotal: (json['WeeklySubVehicleTotal'] as num?)?.toDouble(),
    monthlySubVehicleTotal:
        (json['MonthlySubVehicleTotal'] as num?)?.toDouble(),
    periodSubVehicleTotal: (json['PeriodSubVehicleTotal'] as num?)?.toDouble(),
    weeklySubVehicleTotalIncludesTax:
        json['WeeklySubVehicleTotalIncludesTax'] as bool?,
    monthlySubVehicleTotalIncludesTax:
        json['MonthlySubVehicleTotalIncludesTax'] as bool?,
    periodSubVehicleTotalIncludesTax:
        json['PeriodSubVehicleTotalIncludesTax'] as bool?,
    subMiscDiscountPercent:
        (json['SubMiscDiscountPercent'] as num?)?.toDouble(),
    weeklySubMiscTotal: (json['WeeklySubMiscTotal'] as num?)?.toDouble(),
    monthlySubMiscTotal: (json['MonthlySubMiscTotal'] as num?)?.toDouble(),
    periodSubMiscTotal: (json['PeriodSubMiscTotal'] as num?)?.toDouble(),
    weeklySubMiscTotalIncludesTax:
        json['WeeklySubMiscTotalIncludesTax'] as bool?,
    monthlySubMiscTotalIncludesTax:
        json['MonthlySubMiscTotalIncludesTax'] as bool?,
    periodSubMiscTotalIncludesTax:
        json['PeriodSubMiscTotalIncludesTax'] as bool?,
    subLaborDiscountPercent:
        (json['SubLaborDiscountPercent'] as num?)?.toDouble(),
    weeklySubLaborTotal: (json['WeeklySubLaborTotal'] as num?)?.toDouble(),
    monthlySubLaborTotal: (json['MonthlySubLaborTotal'] as num?)?.toDouble(),
    periodSubLaborTotal: (json['PeriodSubLaborTotal'] as num?)?.toDouble(),
    weeklySubLaborTotalIncludesTax:
        json['WeeklySubLaborTotalIncludesTax'] as bool?,
    monthlySubLaborTotalIncludesTax:
        json['MonthlySubLaborTotalIncludesTax'] as bool?,
    periodSubLaborTotalIncludesTax:
        json['PeriodSubLaborTotalIncludesTax'] as bool?,
    miscellaneousIsComplete: json['MiscellaneousIsComplete'] as bool?,
    subMiscellaneousIsComplete: json['SubMiscellaneousIsComplete'] as bool?,
    laborIsComplete: json['LaborIsComplete'] as bool?,
    subLaborIsComplete: json['SubLaborIsComplete'] as bool?,
    currencyColor: json['CurrencyColor'] as String?,
    statusColor: json['StatusColor'] as String?,
    purchaseOrderNumberColor: json['PurchaseOrderNumberColor'] as String?,
    vendorColor: json['VendorColor'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentPurchaseOrderPurchaseOrderToJson(
        WebApiModulesAgentPurchaseOrderPurchaseOrder instance) =>
    <String, dynamic>{
      'PurchaseOrderId': instance.purchaseOrderId,
      'PurchaseOrderNumber': instance.purchaseOrderNumber,
      'Description': instance.description,
      'PurchaseOrderDate': instance.purchaseOrderDate,
      'RequisitionNumber': instance.requisitionNumber,
      'RequisitionDate': instance.requisitionDate,
      'VendorId': instance.vendorId,
      'Vendor': instance.vendor,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'ReferenceNumber': instance.referenceNumber,
      'NeedsApproval': instance.needsApproval,
      'ApprovedByUserId': instance.approvedByUserId,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'QuantityHolding': instance.quantityHolding,
      'QuantityToBarCode': instance.quantityToBarCode,
      'Rental': instance.rental,
      'Sales': instance.sales,
      'Parts': instance.parts,
      'Labor': instance.labor,
      'Miscellaneous': instance.miscellaneous,
      'Vehicle': instance.vehicle,
      'SubRent': instance.subRent,
      'SubSale': instance.subSale,
      'SubLabor': instance.subLabor,
      'SubMiscellaneous': instance.subMiscellaneous,
      'SubVehicle': instance.subVehicle,
      'Repair': instance.repair,
      'Consignment': instance.consignment,
      'ConsignorAgreementId': instance.consignorAgreementId,
      'ConsignorAgreementNumber': instance.consignorAgreementNumber,
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'DealNumber': instance.dealNumber,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'RateType': instance.rateType,
      'DepartmentLocationRequiresApproval':
          instance.departmentLocationRequiresApproval,
      'Total': instance.total,
      'PoTypeId': instance.poTypeId,
      'PoType': instance.poType,
      'PoClassificationId': instance.poClassificationId,
      'PoClassification': instance.poClassification,
      'ActivityDatesAndTimes':
          instance.activityDatesAndTimes?.map((e) => e.toJson()).toList(),
      'EstimatedStartDate': instance.estimatedStartDate,
      'EstimatedStartTime': instance.estimatedStartTime,
      'EstimatedStopDate': instance.estimatedStopDate,
      'EstimatedStopTime': instance.estimatedStopTime,
      'BillingStartDate': instance.billingStartDate,
      'BillingEndDate': instance.billingEndDate,
      'BillingWeeks': instance.billingWeeks,
      'BillingMonths': instance.billingMonths,
      'InvoicedAmount': instance.invoicedAmount,
      'ProjectManagerId': instance.projectManagerId,
      'ProjectManager': instance.projectManager,
      'ReceiveDeliveryId': instance.receiveDeliveryId,
      'ReceiveDeliveryDeliveryType': instance.receiveDeliveryDeliveryType,
      'ReceiveDeliveryRequiredDate': instance.receiveDeliveryRequiredDate,
      'ReceiveDeliveryRequiredTime': instance.receiveDeliveryRequiredTime,
      'ReceiveDeliveryTargetShipDate': instance.receiveDeliveryTargetShipDate,
      'ReceiveDeliveryTargetShipTime': instance.receiveDeliveryTargetShipTime,
      'ReceiveDeliveryDirection': instance.receiveDeliveryDirection,
      'ReceiveDeliveryAddressType': instance.receiveDeliveryAddressType,
      'ReceiveDeliveryFromLocation': instance.receiveDeliveryFromLocation,
      'ReceiveDeliveryFromContact': instance.receiveDeliveryFromContact,
      'ReceiveDeliveryFromContactPhone':
          instance.receiveDeliveryFromContactPhone,
      'ReceiveDeliveryFromAlternateContact':
          instance.receiveDeliveryFromAlternateContact,
      'ReceiveDeliveryFromAlternateContactPhone':
          instance.receiveDeliveryFromAlternateContactPhone,
      'ReceiveDeliveryFromAttention': instance.receiveDeliveryFromAttention,
      'ReceiveDeliveryFromAddress1': instance.receiveDeliveryFromAddress1,
      'ReceiveDeliveryFromAdd2ress': instance.receiveDeliveryFromAdd2ress,
      'ReceiveDeliveryFromCity': instance.receiveDeliveryFromCity,
      'ReceiveDeliveryFromState': instance.receiveDeliveryFromState,
      'ReceiveDeliveryFromZipCode': instance.receiveDeliveryFromZipCode,
      'ReceiveDeliveryFromCountry': instance.receiveDeliveryFromCountry,
      'ReceiveDeliveryFromCountryId': instance.receiveDeliveryFromCountryId,
      'ReceiveDeliveryFromCrossStreets':
          instance.receiveDeliveryFromCrossStreets,
      'ReceiveDeliveryToLocation': instance.receiveDeliveryToLocation,
      'ReceiveDeliveryToVenue': instance.receiveDeliveryToVenue,
      'ReceiveDeliveryToVenueId': instance.receiveDeliveryToVenueId,
      'ReceiveDeliveryToWarehouse': instance.receiveDeliveryToWarehouse,
      'ReceiveDeliveryToWarehouseId': instance.receiveDeliveryToWarehouseId,
      'ReceiveDeliveryToContact': instance.receiveDeliveryToContact,
      'ReceiveDeliveryToContactPhone': instance.receiveDeliveryToContactPhone,
      'ReceiveDeliveryToAlternateContact':
          instance.receiveDeliveryToAlternateContact,
      'ReceiveDeliveryToAlternateContactPhone':
          instance.receiveDeliveryToAlternateContactPhone,
      'ReceiveDeliveryToAttention': instance.receiveDeliveryToAttention,
      'ReceiveDeliveryToAddress1': instance.receiveDeliveryToAddress1,
      'ReceiveDeliveryToAddress2': instance.receiveDeliveryToAddress2,
      'ReceiveDeliveryToCity': instance.receiveDeliveryToCity,
      'ReceiveDeliveryToState': instance.receiveDeliveryToState,
      'ReceiveDeliveryToZipCode': instance.receiveDeliveryToZipCode,
      'ReceiveDeliveryToCountryId': instance.receiveDeliveryToCountryId,
      'ReceiveDeliveryToCountry': instance.receiveDeliveryToCountry,
      'ReceiveDeliveryToContactFax': instance.receiveDeliveryToContactFax,
      'ReceiveDeliveryToCrossStreets': instance.receiveDeliveryToCrossStreets,
      'ReceiveDeliveryDeliveryNotes': instance.receiveDeliveryDeliveryNotes,
      'ReceiveDeliveryCarrierId': instance.receiveDeliveryCarrierId,
      'ReceiveDeliveryCarrier': instance.receiveDeliveryCarrier,
      'ReceiveDeliveryCarrierAccount': instance.receiveDeliveryCarrierAccount,
      'ReceiveDeliveryShipViaId': instance.receiveDeliveryShipViaId,
      'ReceiveDeliveryShipVia': instance.receiveDeliveryShipVia,
      'ReceiveDeliveryInvoiceId': instance.receiveDeliveryInvoiceId,
      'ReceiveDeliveryVendorInvoiceId': instance.receiveDeliveryVendorInvoiceId,
      'ReceiveDeliveryEstimatedFreight':
          instance.receiveDeliveryEstimatedFreight,
      'ReceiveDeliveryFreightInvoiceAmount':
          instance.receiveDeliveryFreightInvoiceAmount,
      'ReceiveDeliveryChargeType': instance.receiveDeliveryChargeType,
      'ReceiveDeliveryFreightTrackingNumber':
          instance.receiveDeliveryFreightTrackingNumber,
      'ReceiveDeliveryFreightTrackingUrl':
          instance.receiveDeliveryFreightTrackingUrl,
      'ReceiveDeliveryDropShip': instance.receiveDeliveryDropShip,
      'ReceiveDeliveryPackageCode': instance.receiveDeliveryPackageCode,
      'ReceiveDeliveryBillPoFreightOnOrder':
          instance.receiveDeliveryBillPoFreightOnOrder,
      'ReceiveDeliveryOnlineOrderNumber':
          instance.receiveDeliveryOnlineOrderNumber,
      'ReceiveDeliveryOnlineOrderStatus':
          instance.receiveDeliveryOnlineOrderStatus,
      'ReceiveDeliveryDateStamp': instance.receiveDeliveryDateStamp,
      'ReturnDeliveryId': instance.returnDeliveryId,
      'ReturnDeliveryDeliveryType': instance.returnDeliveryDeliveryType,
      'ReturnDeliveryRequiredDate': instance.returnDeliveryRequiredDate,
      'ReturnDeliveryRequiredTime': instance.returnDeliveryRequiredTime,
      'ReturnDeliveryTargetShipDate': instance.returnDeliveryTargetShipDate,
      'ReturnDeliveryTargetShipTime': instance.returnDeliveryTargetShipTime,
      'ReturnDeliveryDirection': instance.returnDeliveryDirection,
      'ReturnDeliveryAddressType': instance.returnDeliveryAddressType,
      'ReturnDeliveryFromLocation': instance.returnDeliveryFromLocation,
      'ReturnDeliveryFromContact': instance.returnDeliveryFromContact,
      'ReturnDeliveryFromContactPhone': instance.returnDeliveryFromContactPhone,
      'ReturnDeliveryFromAlternateContact':
          instance.returnDeliveryFromAlternateContact,
      'ReturnDeliveryFromAlternateContactPhone':
          instance.returnDeliveryFromAlternateContactPhone,
      'ReturnDeliveryFromAttention': instance.returnDeliveryFromAttention,
      'ReturnDeliveryFromAddress1': instance.returnDeliveryFromAddress1,
      'ReturnDeliveryFromAdd2ress': instance.returnDeliveryFromAdd2ress,
      'ReturnDeliveryFromCity': instance.returnDeliveryFromCity,
      'ReturnDeliveryFromState': instance.returnDeliveryFromState,
      'ReturnDeliveryFromZipCode': instance.returnDeliveryFromZipCode,
      'ReturnDeliveryFromCountry': instance.returnDeliveryFromCountry,
      'ReturnDeliveryFromCountryId': instance.returnDeliveryFromCountryId,
      'ReturnDeliveryFromCrossStreets': instance.returnDeliveryFromCrossStreets,
      'ReturnDeliveryToLocation': instance.returnDeliveryToLocation,
      'ReturnDeliveryToVenue': instance.returnDeliveryToVenue,
      'ReturnDeliveryToVenueId': instance.returnDeliveryToVenueId,
      'ReturnDeliveryToWarehouse': instance.returnDeliveryToWarehouse,
      'ReturnDeliveryToWarehouseId': instance.returnDeliveryToWarehouseId,
      'ReturnDeliveryToContact': instance.returnDeliveryToContact,
      'ReturnDeliveryToContactPhone': instance.returnDeliveryToContactPhone,
      'ReturnDeliveryToAlternateContact':
          instance.returnDeliveryToAlternateContact,
      'ReturnDeliveryToAlternateContactPhone':
          instance.returnDeliveryToAlternateContactPhone,
      'ReturnDeliveryToAttention': instance.returnDeliveryToAttention,
      'ReturnDeliveryToAddress1': instance.returnDeliveryToAddress1,
      'ReturnDeliveryToAddress2': instance.returnDeliveryToAddress2,
      'ReturnDeliveryToCity': instance.returnDeliveryToCity,
      'ReturnDeliveryToState': instance.returnDeliveryToState,
      'ReturnDeliveryToZipCode': instance.returnDeliveryToZipCode,
      'ReturnDeliveryToCountryId': instance.returnDeliveryToCountryId,
      'ReturnDeliveryToCountry': instance.returnDeliveryToCountry,
      'ReturnDeliveryToContactFax': instance.returnDeliveryToContactFax,
      'ReturnDeliveryToCrossStreets': instance.returnDeliveryToCrossStreets,
      'ReturnDeliveryDeliveryNotes': instance.returnDeliveryDeliveryNotes,
      'ReturnDeliveryCarrierId': instance.returnDeliveryCarrierId,
      'ReturnDeliveryCarrier': instance.returnDeliveryCarrier,
      'ReturnDeliveryCarrierAccount': instance.returnDeliveryCarrierAccount,
      'ReturnDeliveryShipViaId': instance.returnDeliveryShipViaId,
      'ReturnDeliveryShipVia': instance.returnDeliveryShipVia,
      'ReturnDeliveryInvoiceId': instance.returnDeliveryInvoiceId,
      'ReturnDeliveryVendorInvoiceId': instance.returnDeliveryVendorInvoiceId,
      'ReturnDeliveryEstimatedFreight': instance.returnDeliveryEstimatedFreight,
      'ReturnDeliveryFreightInvoiceAmount':
          instance.returnDeliveryFreightInvoiceAmount,
      'ReturnDeliveryChargeType': instance.returnDeliveryChargeType,
      'ReturnDeliveryFreightTrackingNumber':
          instance.returnDeliveryFreightTrackingNumber,
      'ReturnDeliveryFreightTrackingUrl':
          instance.returnDeliveryFreightTrackingUrl,
      'ReturnDeliveryVendorRetrieve': instance.returnDeliveryVendorRetrieve,
      'ReturnDeliveryPackageCode': instance.returnDeliveryPackageCode,
      'ReturnDeliveryBillPoFreightOnOrder':
          instance.returnDeliveryBillPoFreightOnOrder,
      'ReturnDeliveryOnlineOrderNumber':
          instance.returnDeliveryOnlineOrderNumber,
      'ReturnDeliveryOnlineOrderStatus':
          instance.returnDeliveryOnlineOrderStatus,
      'ReturnDeliveryDateStamp': instance.returnDeliveryDateStamp,
      'EnableProjects': instance.enableProjects,
      'ProjectId': instance.projectId,
      'ProjectNumber': instance.projectNumber,
      'Project': instance.project,
      'ProjectDrawingsId': instance.projectDrawingsId,
      'ProjectDrawings': instance.projectDrawings,
      'ProjectItemsOrderedId': instance.projectItemsOrderedId,
      'ProjectItemsOrdered': instance.projectItemsOrdered,
      'ProjectDropShipId': instance.projectDropShipId,
      'ProjectDropShip': instance.projectDropShip,
      'ProjectAsBuildId': instance.projectAsBuildId,
      'ProjectAsBuild': instance.projectAsBuild,
      'ProjectCommissioningId': instance.projectCommissioningId,
      'ProjectCommissioning': instance.projectCommissioning,
      'ProjectDepositId': instance.projectDepositId,
      'ProjectDeposit': instance.projectDeposit,
      'Location': instance.location,
      'CurrencyId': instance.currencyId,
      'UpdateAllRatesToNewCurrency': instance.updateAllRatesToNewCurrency,
      'ConfirmUpdateAllRatesToNewCurrency':
          instance.confirmUpdateAllRatesToNewCurrency,
      'CurrencyCode': instance.currencyCode,
      'Currency': instance.currency,
      'CurrencySymbol': instance.currencySymbol,
      'BillingCycleId': instance.billingCycleId,
      'BillingCycle': instance.billingCycle,
      'RemitToAttention1': instance.remitToAttention1,
      'RemitToAttention2': instance.remitToAttention2,
      'RemitToAddress1': instance.remitToAddress1,
      'RemitToAddress2': instance.remitToAddress2,
      'RemitToCity': instance.remitToCity,
      'RemitToState': instance.remitToState,
      'RemitToCountryId': instance.remitToCountryId,
      'RemitToCountry': instance.remitToCountry,
      'RemitToZipCode': instance.remitToZipCode,
      'RemitToEmail': instance.remitToEmail,
      'RemitToPhone': instance.remitToPhone,
      'PaymentTypeId': instance.paymentTypeId,
      'PaymentType': instance.paymentType,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'PaymentTermsDueInDays': instance.paymentTermsDueInDays,
      'TaxOptionId': instance.taxOptionId,
      'TaxOption': instance.taxOption,
      'TaxId': instance.taxId,
      'Tax1Name': instance.tax1Name,
      'Tax2Name': instance.tax2Name,
      'RentalTaxRate1': instance.rentalTaxRate1,
      'SalesTaxRate1': instance.salesTaxRate1,
      'LaborTaxRate1': instance.laborTaxRate1,
      'RentalTaxRate2': instance.rentalTaxRate2,
      'SalesTaxRate2': instance.salesTaxRate2,
      'LaborTaxRate2': instance.laborTaxRate2,
      'HasRentalItem': instance.hasRentalItem,
      'HasSalesItem': instance.hasSalesItem,
      'HasMiscellaneousItem': instance.hasMiscellaneousItem,
      'HasLaborItem': instance.hasLaborItem,
      'HasFacilitiesItem': instance.hasFacilitiesItem,
      'HasLossAndDamageItem': instance.hasLossAndDamageItem,
      'HasRentalSaleItem': instance.hasRentalSaleItem,
      'HasPartsItem': instance.hasPartsItem,
      'RentalDiscountPercent': instance.rentalDiscountPercent,
      'RentalTotal': instance.rentalTotal,
      'RentalTotalIncludesTax': instance.rentalTotalIncludesTax,
      'SalesDiscountPercent': instance.salesDiscountPercent,
      'SalesTotal': instance.salesTotal,
      'SalesTotalIncludesTax': instance.salesTotalIncludesTax,
      'PartsDiscountPercent': instance.partsDiscountPercent,
      'PartsTotal': instance.partsTotal,
      'PartsTotalIncludesTax': instance.partsTotalIncludesTax,
      'VehicleDiscountPercent': instance.vehicleDiscountPercent,
      'VehicleTotal': instance.vehicleTotal,
      'VehicleTotalIncludesTax': instance.vehicleTotalIncludesTax,
      'MiscDiscountPercent': instance.miscDiscountPercent,
      'MiscTotal': instance.miscTotal,
      'MiscTotalIncludesTax': instance.miscTotalIncludesTax,
      'LaborDiscountPercent': instance.laborDiscountPercent,
      'LaborTotal': instance.laborTotal,
      'LaborTotalIncludesTax': instance.laborTotalIncludesTax,
      'SubRentalDaysPerWeek': instance.subRentalDaysPerWeek,
      'SubRentalDiscountPercent': instance.subRentalDiscountPercent,
      'WeeklySubRentalTotal': instance.weeklySubRentalTotal,
      'MonthlySubRentalTotal': instance.monthlySubRentalTotal,
      'PeriodSubRentalTotal': instance.periodSubRentalTotal,
      'WeeklySubRentalTotalIncludesTax':
          instance.weeklySubRentalTotalIncludesTax,
      'MonthlySubRentalTotalIncludesTax':
          instance.monthlySubRentalTotalIncludesTax,
      'PeriodSubRentalTotalIncludesTax':
          instance.periodSubRentalTotalIncludesTax,
      'SubSalesDiscountPercent': instance.subSalesDiscountPercent,
      'SubSalesTotal': instance.subSalesTotal,
      'SubSalesTotalIncludesTax': instance.subSalesTotalIncludesTax,
      'SubVehicleDaysPerWeek': instance.subVehicleDaysPerWeek,
      'SubvehicleDiscountPercent': instance.subvehicleDiscountPercent,
      'WeeklySubVehicleTotal': instance.weeklySubVehicleTotal,
      'MonthlySubVehicleTotal': instance.monthlySubVehicleTotal,
      'PeriodSubVehicleTotal': instance.periodSubVehicleTotal,
      'WeeklySubVehicleTotalIncludesTax':
          instance.weeklySubVehicleTotalIncludesTax,
      'MonthlySubVehicleTotalIncludesTax':
          instance.monthlySubVehicleTotalIncludesTax,
      'PeriodSubVehicleTotalIncludesTax':
          instance.periodSubVehicleTotalIncludesTax,
      'SubMiscDiscountPercent': instance.subMiscDiscountPercent,
      'WeeklySubMiscTotal': instance.weeklySubMiscTotal,
      'MonthlySubMiscTotal': instance.monthlySubMiscTotal,
      'PeriodSubMiscTotal': instance.periodSubMiscTotal,
      'WeeklySubMiscTotalIncludesTax': instance.weeklySubMiscTotalIncludesTax,
      'MonthlySubMiscTotalIncludesTax': instance.monthlySubMiscTotalIncludesTax,
      'PeriodSubMiscTotalIncludesTax': instance.periodSubMiscTotalIncludesTax,
      'SubLaborDiscountPercent': instance.subLaborDiscountPercent,
      'WeeklySubLaborTotal': instance.weeklySubLaborTotal,
      'MonthlySubLaborTotal': instance.monthlySubLaborTotal,
      'PeriodSubLaborTotal': instance.periodSubLaborTotal,
      'WeeklySubLaborTotalIncludesTax': instance.weeklySubLaborTotalIncludesTax,
      'MonthlySubLaborTotalIncludesTax':
          instance.monthlySubLaborTotalIncludesTax,
      'PeriodSubLaborTotalIncludesTax': instance.periodSubLaborTotalIncludesTax,
      'MiscellaneousIsComplete': instance.miscellaneousIsComplete,
      'SubMiscellaneousIsComplete': instance.subMiscellaneousIsComplete,
      'LaborIsComplete': instance.laborIsComplete,
      'SubLaborIsComplete': instance.subLaborIsComplete,
      'CurrencyColor': instance.currencyColor,
      'StatusColor': instance.statusColor,
      'PurchaseOrderNumberColor': instance.purchaseOrderNumberColor,
      'VendorColor': instance.vendorColor,
      'DescriptionColor': instance.descriptionColor,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentPurchaseOrderPurchaseOrderDocument
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderPurchaseOrderDocument(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentToJson(
            WebApiModulesAgentPurchaseOrderPurchaseOrderDocument instance) =>
        <String, dynamic>{
          'PurchaseOrderId': instance.purchaseOrderId,
          'copying': instance.copying,
          'DocumentId': instance.documentId,
          'DocumentTypeId': instance.documentTypeId,
          'UniqueId1': instance.uniqueId1,
          'UniqueId2': instance.uniqueId2,
          'UniqueId1Int': instance.uniqueId1Int,
          'Description': instance.description,
          'InputByUsersId': instance.inputByUsersId,
          'AttachDate': instance.attachDate,
          'AttachTime': instance.attachTime,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'DateStamp': instance.dateStamp,
          'Extension': instance.extension,
          'DocumentType': instance.documentType,
          'InputBy': instance.inputBy,
          'HasImage': instance.hasImage,
          'HasFile': instance.hasFile,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPostRequest
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPostRequest(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPostRequestToJson(
            WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPostRequest
                instance) =>
        <String, dynamic>{
          'PurchaseOrderId': instance.purchaseOrderId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPutRequest
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPutRequest(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPutRequestToJson(
            WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPutRequest
                instance) =>
        <String, dynamic>{
          'PurchaseOrderId': instance.purchaseOrderId,
          'DocumentId': instance.documentId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesRequest
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesRequest(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    contractId: json['ContractId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesRequestToJson(
            WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesRequest
                instance) =>
        <String, dynamic>{
          'PurchaseOrderId': instance.purchaseOrderId,
          'ContractId': instance.contractId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesResponse
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesResponseToJson(
            WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsRequest
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsRequest(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    contractId: json['ContractId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsRequestToJson(
            WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsRequest
                instance) =>
        <String, dynamic>{
          'PurchaseOrderId': instance.purchaseOrderId,
          'ContractId': instance.contractId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsResponse
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsResponse(
    itemsAdded: json['ItemsAdded'] as int?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsResponseToJson(
            WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsResponse
                instance) =>
        <String, dynamic>{
          'ItemsAdded': instance.itemsAdded,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesAgentPurchaseOrderReceiveContractRequest
    _$WebApiModulesAgentPurchaseOrderReceiveContractRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderReceiveContractRequest(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderReceiveContractRequestToJson(
            WebApiModulesAgentPurchaseOrderReceiveContractRequest instance) =>
        <String, dynamic>{
          'PurchaseOrderId': instance.purchaseOrderId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesAgentPurchaseOrderReceiveContractResponse
    _$WebApiModulesAgentPurchaseOrderReceiveContractResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderReceiveContractResponse(
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderReceiveContractResponseToJson(
            WebApiModulesAgentPurchaseOrderReceiveContractResponse instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
        };

WebApiModulesAgentPurchaseOrderReceiveItemRequest
    _$WebApiModulesAgentPurchaseOrderReceiveItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderReceiveItemRequest(
    contractId: json['ContractId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
    quantity: json['Quantity'] as int?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentPurchaseOrderReceiveItemRequestToJson(
        WebApiModulesAgentPurchaseOrderReceiveItemRequest instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'PurchaseOrderId': instance.purchaseOrderId,
      'PurchaseOrderItemId': instance.purchaseOrderItemId,
      'Quantity': instance.quantity,
    };

WebApiModulesAgentPurchaseOrderReceiveItemResponse
    _$WebApiModulesAgentPurchaseOrderReceiveItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderReceiveItemResponse(
    contractId: json['ContractId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
    quantity: json['Quantity'] as int?,
    quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
    quantityReceived: (json['QuantityReceived'] as num?)?.toDouble(),
    quantityNeedBarCode: (json['QuantityNeedBarCode'] as num?)?.toDouble(),
    quantityColor: json['QuantityColor'] as String?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentPurchaseOrderReceiveItemResponseToJson(
        WebApiModulesAgentPurchaseOrderReceiveItemResponse instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'PurchaseOrderId': instance.purchaseOrderId,
      'PurchaseOrderItemId': instance.purchaseOrderItemId,
      'Quantity': instance.quantity,
      'QuantityOrdered': instance.quantityOrdered,
      'QuantityReceived': instance.quantityReceived,
      'QuantityNeedBarCode': instance.quantityNeedBarCode,
      'QuantityColor': instance.quantityColor,
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesAgentPurchaseOrderReturnContractRequest
    _$WebApiModulesAgentPurchaseOrderReturnContractRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderReturnContractRequest(
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderReturnContractRequestToJson(
            WebApiModulesAgentPurchaseOrderReturnContractRequest instance) =>
        <String, dynamic>{
          'PurchaseOrderId': instance.purchaseOrderId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesAgentPurchaseOrderReturnContractResponse
    _$WebApiModulesAgentPurchaseOrderReturnContractResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderReturnContractResponse(
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderReturnContractResponseToJson(
            WebApiModulesAgentPurchaseOrderReturnContractResponse instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
        };

WebApiModulesAgentPurchaseOrderReturnItemRequest
    _$WebApiModulesAgentPurchaseOrderReturnItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderReturnItemRequest(
    contractId: json['ContractId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
    quantity: json['Quantity'] as int?,
    barCode: json['BarCode'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentPurchaseOrderReturnItemRequestToJson(
        WebApiModulesAgentPurchaseOrderReturnItemRequest instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'PurchaseOrderId': instance.purchaseOrderId,
      'PurchaseOrderItemId': instance.purchaseOrderItemId,
      'Quantity': instance.quantity,
      'BarCode': instance.barCode,
    };

WebApiModulesAgentPurchaseOrderReturnItemResponse
    _$WebApiModulesAgentPurchaseOrderReturnItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderReturnItemResponse(
    contractId: json['ContractId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
    quantity: json['Quantity'] as int?,
    quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
    quantityReceived: (json['QuantityReceived'] as num?)?.toDouble(),
    quantityReturned: (json['QuantityReturned'] as num?)?.toDouble(),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentPurchaseOrderReturnItemResponseToJson(
        WebApiModulesAgentPurchaseOrderReturnItemResponse instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'PurchaseOrderId': instance.purchaseOrderId,
      'PurchaseOrderItemId': instance.purchaseOrderItemId,
      'Quantity': instance.quantity,
      'QuantityOrdered': instance.quantityOrdered,
      'QuantityReceived': instance.quantityReceived,
      'QuantityReturned': instance.quantityReturned,
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemRequest
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemRequest(
    contractId: json['ContractId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemRequestToJson(
            WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemRequest
                instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
          'PurchaseOrderId': instance.purchaseOrderId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemResponse
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemResponseToJson(
            WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemRequest
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemRequest(
    contractId: json['ContractId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemRequestToJson(
            WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemRequest
                instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
          'PurchaseOrderId': instance.purchaseOrderId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemResponse
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemResponseToJson(
            WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesAgentQuoteQuote _$WebApiModulesAgentQuoteQuoteFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesAgentQuoteQuote(
    quoteId: json['QuoteId'] as String?,
    quoteNumber: json['QuoteNumber'] as String?,
    quoteDate: json['QuoteDate'] as String?,
    versionNumber: json['VersionNumber'] as int?,
    convertedToOrderId: json['ConvertedToOrderId'] as String?,
    convertedToOrderNumber: json['ConvertedToOrderNumber'] as String?,
    description: json['Description'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    customerNumber: json['CustomerNumber'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    dealNumber: json['DealNumber'] as String?,
    rateType: json['RateType'] as String?,
    rateTypeDisplay: json['RateTypeDisplay'] as String?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    projectManagerId: json['ProjectManagerId'] as String?,
    projectManager: json['ProjectManager'] as String?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    miscellaneous: json['Miscellaneous'] as bool?,
    labor: json['Labor'] as bool?,
    facilities: json['Facilities'] as bool?,
    transportation: json['Transportation'] as bool?,
    rentalSale: json['RentalSale'] as bool?,
    lossAndDamage: json['LossAndDamage'] as bool?,
    repair: json['Repair'] as bool?,
    hasRentalItem: json['HasRentalItem'] as bool?,
    hasSalesItem: json['HasSalesItem'] as bool?,
    hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
    hasLaborItem: json['HasLaborItem'] as bool?,
    hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
    hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
    hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
    hasRepair: json['HasRepair'] as bool?,
    activityDatesAndTimes: (json['ActivityDatesAndTimes'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    pickDate: json['PickDate'] as String?,
    pickTime: json['PickTime'] as String?,
    estimatedStartDate: json['EstimatedStartDate'] as String?,
    estimatedStartTime: json['EstimatedStartTime'] as String?,
    estimatedStopDate: json['EstimatedStopDate'] as String?,
    estimatedStopTime: json['EstimatedStopTime'] as String?,
    pickUpDate: json['PickUpDate'] as String?,
    pickUpTime: json['PickUpTime'] as String?,
    prepDate: json['PrepDate'] as String?,
    prepTime: json['PrepTime'] as String?,
    loadInDate: json['LoadInDate'] as String?,
    loadInTime: json['LoadInTime'] as String?,
    strikeDate: json['StrikeDate'] as String?,
    strikeTime: json['StrikeTime'] as String?,
    testDate: json['TestDate'] as String?,
    testTime: json['TestTime'] as String?,
    orderTypeId: json['OrderTypeId'] as String?,
    orderType: json['OrderType'] as String?,
    orderTypeCombineActivityTabs: json['OrderTypeCombineActivityTabs'] as bool?,
    flatPo: json['FlatPo'] as bool?,
    pendingPo: json['PendingPo'] as bool?,
    poNumber: json['PoNumber'] as String?,
    poAmount: (json['PoAmount'] as num?)?.toDouble(),
    location: json['Location'] as String?,
    orderLocationId: json['OrderLocationId'] as String?,
    orderLocation: json['OrderLocation'] as String?,
    referenceNumber: json['ReferenceNumber'] as String?,
    total: (json['Total'] as num?)?.toDouble(),
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    poApprovalStatusId: json['PoApprovalStatusId'] as String?,
    lockBillingDates: json['LockBillingDates'] as bool?,
    specifyBillingDatesByType: json['SpecifyBillingDatesByType'] as bool?,
    rentalBillingStartDate: json['RentalBillingStartDate'] as String?,
    rentalBillingEndDate: json['RentalBillingEndDate'] as String?,
    laborBillingStartDate: json['LaborBillingStartDate'] as String?,
    laborBillingEndDate: json['LaborBillingEndDate'] as String?,
    miscellaneousBillingStartDate:
        json['MiscellaneousBillingStartDate'] as String?,
    miscellaneousBillingEndDate: json['MiscellaneousBillingEndDate'] as String?,
    facilitiesBillingStartDate: json['FacilitiesBillingStartDate'] as String?,
    facilitiesBillingEndDate: json['FacilitiesBillingEndDate'] as String?,
    vehicleBillingStartDate: json['VehicleBillingStartDate'] as String?,
    vehicleBillingEndDate: json['VehicleBillingEndDate'] as String?,
    delayBillingSearchUntil: json['DelayBillingSearchUntil'] as String?,
    includePrepFeesInRentalRate: json['IncludePrepFeesInRentalRate'] as bool?,
    billingStartDate: json['BillingStartDate'] as String?,
    billingEndDate: json['BillingEndDate'] as String?,
    billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
    billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
    determineQuantitiesToBillBasedOn:
        json['DetermineQuantitiesToBillBasedOn'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    billingCycle: json['BillingCycle'] as String?,
    billingCycleType: json['BillingCycleType'] as String?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    currencyId: json['CurrencyId'] as String?,
    updateAllRatesToNewCurrency: json['UpdateAllRatesToNewCurrency'] as bool?,
    confirmUpdateAllRatesToNewCurrency:
        json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currency: json['Currency'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    tax1Name: json['Tax1Name'] as String?,
    tax2Name: json['Tax2Name'] as String?,
    taxId: json['TaxId'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    noCharge: json['NoCharge'] as bool?,
    noChargeReason: json['NoChargeReason'] as String?,
    printIssuedToAddressFrom: json['PrintIssuedToAddressFrom'] as String?,
    issuedToName: json['IssuedToName'] as String?,
    issuedToAttention: json['IssuedToAttention'] as String?,
    issuedToAttention2: json['IssuedToAttention2'] as String?,
    issuedToAddress1: json['IssuedToAddress1'] as String?,
    issuedToAddress2: json['IssuedToAddress2'] as String?,
    issuedToCity: json['IssuedToCity'] as String?,
    issuedToState: json['IssuedToState'] as String?,
    issuedToZipCode: json['IssuedToZipCode'] as String?,
    issuedToCountryId: json['IssuedToCountryId'] as String?,
    issuedToCountry: json['IssuedToCountry'] as String?,
    billToAddressDifferentFromIssuedToAddress:
        json['BillToAddressDifferentFromIssuedToAddress'] as bool?,
    billToAddressId: json['BillToAddressId'] as String?,
    billToName: json['BillToName'] as String?,
    billToAttention: json['BillToAttention'] as String?,
    billToAttention2: json['BillToAttention2'] as String?,
    billToAddress1: json['BillToAddress1'] as String?,
    billToAddress2: json['BillToAddress2'] as String?,
    billToCity: json['BillToCity'] as String?,
    billToState: json['BillToState'] as String?,
    billToZipCode: json['BillToZipCode'] as String?,
    billToCountryId: json['BillToCountryId'] as String?,
    billToCountry: json['BillToCountry'] as String?,
    discountReasonId: json['DiscountReasonId'] as String?,
    discountReason: json['DiscountReason'] as String?,
    requireContactConfirmation: json['RequireContactConfirmation'] as bool?,
    includeInBillingAnalysis: json['IncludeInBillingAnalysis'] as bool?,
    hiatusDiscountFrom: json['HiatusDiscountFrom'] as String?,
    roundTripRentals: json['RoundTripRentals'] as bool?,
    inGroup: json['InGroup'] as bool?,
    groupNumber: json['GroupNumber'] as int?,
    groupColor: json['GroupColor'] as int?,
    groupOrderBy: (json['GroupOrderBy'] as num?)?.toDouble(),
    coverLetterId: json['CoverLetterId'] as String?,
    coverLetter: json['CoverLetter'] as String?,
    termsConditionsId: json['TermsConditionsId'] as String?,
    termsConditions: json['TermsConditions'] as String?,
    outsideSalesRepresentativeId:
        json['OutsideSalesRepresentativeId'] as String?,
    outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
    marketTypeId: json['MarketTypeId'] as String?,
    marketType: json['MarketType'] as String?,
    marketSegmentId: json['MarketSegmentId'] as String?,
    marketSegment: json['MarketSegment'] as String?,
    marketSegmentJobId: json['MarketSegmentJobId'] as String?,
    marketSegmentJob: json['MarketSegmentJob'] as String?,
    outDeliveryId: json['OutDeliveryId'] as String?,
    outDeliveryDeliveryType: json['OutDeliveryDeliveryType'] as String?,
    outDeliveryRequiredDate: json['OutDeliveryRequiredDate'] as String?,
    outDeliveryRequiredTime: json['OutDeliveryRequiredTime'] as String?,
    outDeliveryTargetShipDate: json['OutDeliveryTargetShipDate'] as String?,
    outDeliveryTargetShipTime: json['OutDeliveryTargetShipTime'] as String?,
    outDeliveryDirection: json['OutDeliveryDirection'] as String?,
    outDeliveryAddressType: json['OutDeliveryAddressType'] as String?,
    outDeliveryFromLocation: json['OutDeliveryFromLocation'] as String?,
    outDeliveryFromContact: json['OutDeliveryFromContact'] as String?,
    outDeliveryFromContactPhone: json['OutDeliveryFromContactPhone'] as String?,
    outDeliveryFromAlternateContact:
        json['OutDeliveryFromAlternateContact'] as String?,
    outDeliveryFromAlternateContactPhone:
        json['OutDeliveryFromAlternateContactPhone'] as String?,
    outDeliveryFromAttention: json['OutDeliveryFromAttention'] as String?,
    outDeliveryFromAddress1: json['OutDeliveryFromAddress1'] as String?,
    outDeliveryFromAdd2ress: json['OutDeliveryFromAdd2ress'] as String?,
    outDeliveryFromCity: json['OutDeliveryFromCity'] as String?,
    outDeliveryFromState: json['OutDeliveryFromState'] as String?,
    outDeliveryFromZipCode: json['OutDeliveryFromZipCode'] as String?,
    outDeliveryFromCountry: json['OutDeliveryFromCountry'] as String?,
    outDeliveryFromCountryId: json['OutDeliveryFromCountryId'] as String?,
    outDeliveryFromCrossStreets: json['OutDeliveryFromCrossStreets'] as String?,
    outDeliveryToLocation: json['OutDeliveryToLocation'] as String?,
    outDeliveryToContact: json['OutDeliveryToContact'] as String?,
    outDeliveryToContactPhone: json['OutDeliveryToContactPhone'] as String?,
    outDeliveryToAlternateContact:
        json['OutDeliveryToAlternateContact'] as String?,
    outDeliveryToAlternateContactPhone:
        json['OutDeliveryToAlternateContactPhone'] as String?,
    outDeliveryToAttention: json['OutDeliveryToAttention'] as String?,
    outDeliveryToAddress1: json['OutDeliveryToAddress1'] as String?,
    outDeliveryToAddress2: json['OutDeliveryToAddress2'] as String?,
    outDeliveryToCity: json['OutDeliveryToCity'] as String?,
    outDeliveryToState: json['OutDeliveryToState'] as String?,
    outDeliveryToZipCode: json['OutDeliveryToZipCode'] as String?,
    outDeliveryToCountryId: json['OutDeliveryToCountryId'] as String?,
    outDeliveryToCountry: json['OutDeliveryToCountry'] as String?,
    outDeliveryToContactFax: json['OutDeliveryToContactFax'] as String?,
    outDeliveryToCrossStreets: json['OutDeliveryToCrossStreets'] as String?,
    outDeliveryDeliveryNotes: json['OutDeliveryDeliveryNotes'] as String?,
    outDeliveryCarrierId: json['OutDeliveryCarrierId'] as String?,
    outDeliveryCarrier: json['OutDeliveryCarrier'] as String?,
    outDeliveryCarrierAccount: json['OutDeliveryCarrierAccount'] as String?,
    outDeliveryShipViaId: json['OutDeliveryShipViaId'] as String?,
    outDeliveryShipVia: json['OutDeliveryShipVia'] as String?,
    outDeliveryInvoiceId: json['OutDeliveryInvoiceId'] as String?,
    outDeliveryVendorInvoiceId: json['OutDeliveryVendorInvoiceId'] as String?,
    outDeliveryEstimatedFreight:
        (json['OutDeliveryEstimatedFreight'] as num?)?.toDouble(),
    outDeliveryFreightInvoiceAmount:
        (json['OutDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    outDeliveryChargeType: json['OutDeliveryChargeType'] as String?,
    outDeliveryFreightTrackingNumber:
        json['OutDeliveryFreightTrackingNumber'] as String?,
    outDeliveryFreightTrackingUrl:
        json['OutDeliveryFreightTrackingUrl'] as String?,
    outDeliveryPackageCode: json['OutDeliveryPackageCode'] as String?,
    outDeliveryBillPoFreightOnOrder:
        json['OutDeliveryBillPoFreightOnOrder'] as bool?,
    outDeliveryOnlineOrderNumber:
        json['OutDeliveryOnlineOrderNumber'] as String?,
    outDeliveryToVenue: json['OutDeliveryToVenue'] as String?,
    outDeliveryToVenueId: json['OutDeliveryToVenueId'] as String?,
    outDeliveryToWarehouse: json['OutDeliveryToWarehouse'] as String?,
    outDeliveryToWarehouseId: json['OutDeliveryToWarehouseId'] as String?,
    outDeliveryDateStamp: json['OutDeliveryDateStamp'] as String?,
    inDeliveryId: json['InDeliveryId'] as String?,
    inDeliveryDeliveryType: json['InDeliveryDeliveryType'] as String?,
    inDeliveryRequiredDate: json['InDeliveryRequiredDate'] as String?,
    inDeliveryRequiredTime: json['InDeliveryRequiredTime'] as String?,
    inDeliveryTargetShipDate: json['InDeliveryTargetShipDate'] as String?,
    inDeliveryTargetShipTime: json['InDeliveryTargetShipTime'] as String?,
    inDeliveryDirection: json['InDeliveryDirection'] as String?,
    inDeliveryAddressType: json['InDeliveryAddressType'] as String?,
    inDeliveryFromLocation: json['InDeliveryFromLocation'] as String?,
    inDeliveryFromContact: json['InDeliveryFromContact'] as String?,
    inDeliveryFromContactPhone: json['InDeliveryFromContactPhone'] as String?,
    inDeliveryFromAlternateContact:
        json['InDeliveryFromAlternateContact'] as String?,
    inDeliveryFromAlternateContactPhone:
        json['InDeliveryFromAlternateContactPhone'] as String?,
    inDeliveryFromAttention: json['InDeliveryFromAttention'] as String?,
    inDeliveryFromAddress1: json['InDeliveryFromAddress1'] as String?,
    inDeliveryFromAdd2ress: json['InDeliveryFromAdd2ress'] as String?,
    inDeliveryFromCity: json['InDeliveryFromCity'] as String?,
    inDeliveryFromState: json['InDeliveryFromState'] as String?,
    inDeliveryFromZipCode: json['InDeliveryFromZipCode'] as String?,
    inDeliveryFromCountry: json['InDeliveryFromCountry'] as String?,
    inDeliveryFromCountryId: json['InDeliveryFromCountryId'] as String?,
    inDeliveryFromCrossStreets: json['InDeliveryFromCrossStreets'] as String?,
    inDeliveryToLocation: json['InDeliveryToLocation'] as String?,
    inDeliveryToContact: json['InDeliveryToContact'] as String?,
    inDeliveryToContactPhone: json['InDeliveryToContactPhone'] as String?,
    inDeliveryToAlternateContact:
        json['InDeliveryToAlternateContact'] as String?,
    inDeliveryToAlternateContactPhone:
        json['InDeliveryToAlternateContactPhone'] as String?,
    inDeliveryToAttention: json['InDeliveryToAttention'] as String?,
    inDeliveryToAddress1: json['InDeliveryToAddress1'] as String?,
    inDeliveryToAddress2: json['InDeliveryToAddress2'] as String?,
    inDeliveryToCity: json['InDeliveryToCity'] as String?,
    inDeliveryToState: json['InDeliveryToState'] as String?,
    inDeliveryToZipCode: json['InDeliveryToZipCode'] as String?,
    inDeliveryToCountryId: json['InDeliveryToCountryId'] as String?,
    inDeliveryToCountry: json['InDeliveryToCountry'] as String?,
    inDeliveryToContactFax: json['InDeliveryToContactFax'] as String?,
    inDeliveryToCrossStreets: json['InDeliveryToCrossStreets'] as String?,
    inDeliveryDeliveryNotes: json['InDeliveryDeliveryNotes'] as String?,
    inDeliveryCarrierId: json['InDeliveryCarrierId'] as String?,
    inDeliveryCarrier: json['InDeliveryCarrier'] as String?,
    inDeliveryCarrierAccount: json['InDeliveryCarrierAccount'] as String?,
    inDeliveryShipViaId: json['InDeliveryShipViaId'] as String?,
    inDeliveryShipVia: json['InDeliveryShipVia'] as String?,
    inDeliveryInvoiceId: json['InDeliveryInvoiceId'] as String?,
    inDeliveryVendorInvoiceId: json['InDeliveryVendorInvoiceId'] as String?,
    inDeliveryEstimatedFreight:
        (json['InDeliveryEstimatedFreight'] as num?)?.toDouble(),
    inDeliveryFreightInvoiceAmount:
        (json['InDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    inDeliveryChargeType: json['InDeliveryChargeType'] as String?,
    inDeliveryFreightTrackingNumber:
        json['InDeliveryFreightTrackingNumber'] as String?,
    inDeliveryFreightTrackingUrl:
        json['InDeliveryFreightTrackingUrl'] as String?,
    inDeliveryPackageCode: json['InDeliveryPackageCode'] as String?,
    inDeliveryBillPoFreightOnOrder:
        json['InDeliveryBillPoFreightOnOrder'] as bool?,
    inDeliveryOnlineOrderNumber: json['InDeliveryOnlineOrderNumber'] as String?,
    inDeliveryOnlineOrderStatus: json['InDeliveryOnlineOrderStatus'] as String?,
    inDeliveryToVenue: json['InDeliveryToVenue'] as String?,
    inDeliveryToVenueId: json['InDeliveryToVenueId'] as String?,
    inDeliveryToWarehouse: json['InDeliveryToWarehouse'] as String?,
    inDeliveryToWarehouseId: json['InDeliveryToWarehouseId'] as String?,
    inDeliveryDateStamp: json['InDeliveryDateStamp'] as String?,
    rentalDaysPerWeek: (json['RentalDaysPerWeek'] as num?)?.toDouble(),
    rentalDiscountPercent: (json['RentalDiscountPercent'] as num?)?.toDouble(),
    weeklyRentalTotal: (json['WeeklyRentalTotal'] as num?)?.toDouble(),
    monthlyRentalTotal: (json['MonthlyRentalTotal'] as num?)?.toDouble(),
    periodRentalTotal: (json['PeriodRentalTotal'] as num?)?.toDouble(),
    weeklyRentalTotalIncludesTax: json['WeeklyRentalTotalIncludesTax'] as bool?,
    monthlyRentalTotalIncludesTax:
        json['MonthlyRentalTotalIncludesTax'] as bool?,
    periodRentalTotalIncludesTax: json['PeriodRentalTotalIncludesTax'] as bool?,
    billLockedTotal: json['BillLockedTotal'] as bool?,
    salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
    salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
    salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
    partsDiscountPercent: (json['PartsDiscountPercent'] as num?)?.toDouble(),
    partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
    partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
    spaceDaysPerWeek: (json['SpaceDaysPerWeek'] as num?)?.toDouble(),
    spaceDiscountPercent: (json['SpaceDiscountPercent'] as num?)?.toDouble(),
    spaceSplitPercent: (json['SpaceSplitPercent'] as num?)?.toDouble(),
    weeklySpaceTotal: (json['WeeklySpaceTotal'] as num?)?.toDouble(),
    monthlySpaceTotal: (json['MonthlySpaceTotal'] as num?)?.toDouble(),
    periodSpaceTotal: (json['PeriodSpaceTotal'] as num?)?.toDouble(),
    weeklySpaceTotalIncludesTax: json['WeeklySpaceTotalIncludesTax'] as bool?,
    monthlySpaceTotalIncludesTax: json['MonthlySpaceTotalIncludesTax'] as bool?,
    periodSpaceTotalIncludesTax: json['PeriodSpaceTotalIncludesTax'] as bool?,
    vehicleDaysPerWeek: (json['VehicleDaysPerWeek'] as num?)?.toDouble(),
    vehicleDiscountPercent:
        (json['VehicleDiscountPercent'] as num?)?.toDouble(),
    weeklyVehicleTotal: (json['WeeklyVehicleTotal'] as num?)?.toDouble(),
    monthlyVehicleTotal: (json['MonthlyVehicleTotal'] as num?)?.toDouble(),
    periodVehicleTotal: (json['PeriodVehicleTotal'] as num?)?.toDouble(),
    weeklyVehicleTotalIncludesTax:
        json['WeeklyVehicleTotalIncludesTax'] as bool?,
    monthlyVehicleTotalIncludesTax:
        json['MonthlyVehicleTotalIncludesTax'] as bool?,
    periodVehicleTotalIncludesTax:
        json['PeriodVehicleTotalIncludesTax'] as bool?,
    miscDiscountPercent: (json['MiscDiscountPercent'] as num?)?.toDouble(),
    weeklyMiscTotal: (json['WeeklyMiscTotal'] as num?)?.toDouble(),
    monthlyMiscTotal: (json['MonthlyMiscTotal'] as num?)?.toDouble(),
    periodMiscTotal: (json['PeriodMiscTotal'] as num?)?.toDouble(),
    weeklyMiscTotalIncludesTax: json['WeeklyMiscTotalIncludesTax'] as bool?,
    monthlyMiscTotalIncludesTax: json['MonthlyMiscTotalIncludesTax'] as bool?,
    periodMiscTotalIncludesTax: json['PeriodMiscTotalIncludesTax'] as bool?,
    laborDiscountPercent: (json['LaborDiscountPercent'] as num?)?.toDouble(),
    weeklyLaborTotal: (json['WeeklyLaborTotal'] as num?)?.toDouble(),
    monthlyLaborTotal: (json['MonthlyLaborTotal'] as num?)?.toDouble(),
    periodLaborTotal: (json['PeriodLaborTotal'] as num?)?.toDouble(),
    weeklyLaborTotalIncludesTax: json['WeeklyLaborTotalIncludesTax'] as bool?,
    monthlyLaborTotalIncludesTax: json['MonthlyLaborTotalIncludesTax'] as bool?,
    periodLaborTotalIncludesTax: json['PeriodLaborTotalIncludesTax'] as bool?,
    rentalSaleDiscountPercent:
        (json['RentalSaleDiscountPercent'] as num?)?.toDouble(),
    rentalSaleTotal: (json['RentalSaleTotal'] as num?)?.toDouble(),
    rentalSaleTotalIncludesTax: json['RentalSaleTotalIncludesTax'] as bool?,
    lossAndDamageDiscountPercent:
        (json['LossAndDamageDiscountPercent'] as num?)?.toDouble(),
    lossAndDamageTotal: (json['LossAndDamageTotal'] as num?)?.toDouble(),
    lossAndDamageTotalIncludesTax:
        json['LossAndDamageTotalIncludesTax'] as bool?,
    combinedDaysPerWeek: (json['CombinedDaysPerWeek'] as num?)?.toDouble(),
    combinedDiscountPercent:
        (json['CombinedDiscountPercent'] as num?)?.toDouble(),
    weeklyCombinedTotal: (json['WeeklyCombinedTotal'] as num?)?.toDouble(),
    monthlyCombinedTotal: (json['MonthlyCombinedTotal'] as num?)?.toDouble(),
    periodCombinedTotal: (json['PeriodCombinedTotal'] as num?)?.toDouble(),
    weeklyCombinedTotalIncludesTax:
        json['WeeklyCombinedTotalIncludesTax'] as bool?,
    monthlyCombinedTotalIncludesTax:
        json['MonthlyCombinedTotalIncludesTax'] as bool?,
    periodCombinedTotalIncludesTax:
        json['PeriodCombinedTotalIncludesTax'] as bool?,
    disableEditingRentalRate: json['DisableEditingRentalRate'] as bool?,
    disableEditingSalesRate: json['DisableEditingSalesRate'] as bool?,
    disableEditingMiscellaneousRate:
        json['DisableEditingMiscellaneousRate'] as bool?,
    disableEditingLaborRate: json['DisableEditingLaborRate'] as bool?,
    disableEditingRentalSaleRate: json['DisableEditingRentalSaleRate'] as bool?,
    disableEditingLossAndDamageRate:
        json['DisableEditingLossAndDamageRate'] as bool?,
    rentalExtendedTotal: (json['RentalExtendedTotal'] as num?)?.toDouble(),
    salesExtendedTotal: (json['SalesExtendedTotal'] as num?)?.toDouble(),
    laborExtendedTotal: (json['LaborExtendedTotal'] as num?)?.toDouble(),
    miscellaneousExtendedTotal:
        (json['MiscellaneousExtendedTotal'] as num?)?.toDouble(),
    rentalSaleExtendedTotal:
        (json['RentalSaleExtendedTotal'] as num?)?.toDouble(),
    lossAndDamageExtendedTotal:
        (json['LossAndDamageExtendedTotal'] as num?)?.toDouble(),
    hasNotes: json['HasNotes'] as bool?,
    hasDocuments: json['HasDocuments'] as bool?,
    hasEmailHistory: json['HasEmailHistory'] as bool?,
    hasContacts: json['HasContacts'] as bool?,
    hasSubPurchaseOrders: json['HasSubPurchaseOrders'] as bool?,
    hasPickLists: json['HasPickLists'] as bool?,
    hasContracts: json['HasContracts'] as bool?,
    hasSuspendedContracts: json['HasSuspendedContracts'] as bool?,
    hasMultiOrderContracts: json['HasMultiOrderContracts'] as bool?,
    hasInvoices: json['HasInvoices'] as bool?,
    hasBillingWorksheets: json['HasBillingWorksheets'] as bool?,
    hasMultiOrderInvoices: json['HasMultiOrderInvoices'] as bool?,
    totalReplacementCost: (json['TotalReplacementCost'] as num?)?.toDouble(),
    presentationLayerId: json['PresentationLayerId'] as String?,
    presentationLayer: json['PresentationLayer'] as String?,
    isManualSort: json['IsManualSort'] as bool?,
    quoteOrderTitle: json['QuoteOrderTitle'] as String?,
    unassignedSubs: json['UnassignedSubs'] as bool?,
    nonTaxable: json['NonTaxable'] as bool?,
    enableProjects: json['EnableProjects'] as bool?,
    projectId: json['ProjectId'] as String?,
    projectNumber: json['ProjectNumber'] as String?,
    project: json['Project'] as String?,
    projectDrawingsId: json['ProjectDrawingsId'] as String?,
    projectDrawings: json['ProjectDrawings'] as String?,
    projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
    projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
    projectDropShipId: json['ProjectDropShipId'] as String?,
    projectDropShip: json['ProjectDropShip'] as String?,
    projectAsBuildId: json['ProjectAsBuildId'] as String?,
    projectAsBuild: json['ProjectAsBuild'] as String?,
    projectCommissioningId: json['ProjectCommissioningId'] as String?,
    projectCommissioning: json['ProjectCommissioning'] as String?,
    projectDepositId: json['ProjectDepositId'] as String?,
    projectDeposit: json['ProjectDeposit'] as String?,
    inputByUserId: json['InputByUserId'] as String?,
    modifiedByUserId: json['ModifiedByUserId'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentQuoteQuoteToJson(
        WebApiModulesAgentQuoteQuote instance) =>
    <String, dynamic>{
      'QuoteId': instance.quoteId,
      'QuoteNumber': instance.quoteNumber,
      'QuoteDate': instance.quoteDate,
      'VersionNumber': instance.versionNumber,
      'ConvertedToOrderId': instance.convertedToOrderId,
      'ConvertedToOrderNumber': instance.convertedToOrderNumber,
      'Description': instance.description,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'CustomerId': instance.customerId,
      'Customer': instance.customer,
      'CustomerNumber': instance.customerNumber,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'DealNumber': instance.dealNumber,
      'RateType': instance.rateType,
      'RateTypeDisplay': instance.rateTypeDisplay,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'ProjectManagerId': instance.projectManagerId,
      'ProjectManager': instance.projectManager,
      'Rental': instance.rental,
      'Sales': instance.sales,
      'Miscellaneous': instance.miscellaneous,
      'Labor': instance.labor,
      'Facilities': instance.facilities,
      'Transportation': instance.transportation,
      'RentalSale': instance.rentalSale,
      'LossAndDamage': instance.lossAndDamage,
      'Repair': instance.repair,
      'HasRentalItem': instance.hasRentalItem,
      'HasSalesItem': instance.hasSalesItem,
      'HasMiscellaneousItem': instance.hasMiscellaneousItem,
      'HasLaborItem': instance.hasLaborItem,
      'HasFacilitiesItem': instance.hasFacilitiesItem,
      'HasLossAndDamageItem': instance.hasLossAndDamageItem,
      'HasRentalSaleItem': instance.hasRentalSaleItem,
      'HasRepair': instance.hasRepair,
      'ActivityDatesAndTimes':
          instance.activityDatesAndTimes?.map((e) => e.toJson()).toList(),
      'PickDate': instance.pickDate,
      'PickTime': instance.pickTime,
      'EstimatedStartDate': instance.estimatedStartDate,
      'EstimatedStartTime': instance.estimatedStartTime,
      'EstimatedStopDate': instance.estimatedStopDate,
      'EstimatedStopTime': instance.estimatedStopTime,
      'PickUpDate': instance.pickUpDate,
      'PickUpTime': instance.pickUpTime,
      'PrepDate': instance.prepDate,
      'PrepTime': instance.prepTime,
      'LoadInDate': instance.loadInDate,
      'LoadInTime': instance.loadInTime,
      'StrikeDate': instance.strikeDate,
      'StrikeTime': instance.strikeTime,
      'TestDate': instance.testDate,
      'TestTime': instance.testTime,
      'OrderTypeId': instance.orderTypeId,
      'OrderType': instance.orderType,
      'OrderTypeCombineActivityTabs': instance.orderTypeCombineActivityTabs,
      'FlatPo': instance.flatPo,
      'PendingPo': instance.pendingPo,
      'PoNumber': instance.poNumber,
      'PoAmount': instance.poAmount,
      'Location': instance.location,
      'OrderLocationId': instance.orderLocationId,
      'OrderLocation': instance.orderLocation,
      'ReferenceNumber': instance.referenceNumber,
      'Total': instance.total,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'PoApprovalStatusId': instance.poApprovalStatusId,
      'LockBillingDates': instance.lockBillingDates,
      'SpecifyBillingDatesByType': instance.specifyBillingDatesByType,
      'RentalBillingStartDate': instance.rentalBillingStartDate,
      'RentalBillingEndDate': instance.rentalBillingEndDate,
      'LaborBillingStartDate': instance.laborBillingStartDate,
      'LaborBillingEndDate': instance.laborBillingEndDate,
      'MiscellaneousBillingStartDate': instance.miscellaneousBillingStartDate,
      'MiscellaneousBillingEndDate': instance.miscellaneousBillingEndDate,
      'FacilitiesBillingStartDate': instance.facilitiesBillingStartDate,
      'FacilitiesBillingEndDate': instance.facilitiesBillingEndDate,
      'VehicleBillingStartDate': instance.vehicleBillingStartDate,
      'VehicleBillingEndDate': instance.vehicleBillingEndDate,
      'DelayBillingSearchUntil': instance.delayBillingSearchUntil,
      'IncludePrepFeesInRentalRate': instance.includePrepFeesInRentalRate,
      'BillingStartDate': instance.billingStartDate,
      'BillingEndDate': instance.billingEndDate,
      'BillingWeeks': instance.billingWeeks,
      'BillingMonths': instance.billingMonths,
      'DetermineQuantitiesToBillBasedOn':
          instance.determineQuantitiesToBillBasedOn,
      'BillingCycleId': instance.billingCycleId,
      'BillingCycle': instance.billingCycle,
      'BillingCycleType': instance.billingCycleType,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'PaymentTypeId': instance.paymentTypeId,
      'PaymentType': instance.paymentType,
      'CurrencyId': instance.currencyId,
      'UpdateAllRatesToNewCurrency': instance.updateAllRatesToNewCurrency,
      'ConfirmUpdateAllRatesToNewCurrency':
          instance.confirmUpdateAllRatesToNewCurrency,
      'CurrencyCode': instance.currencyCode,
      'Currency': instance.currency,
      'CurrencySymbol': instance.currencySymbol,
      'TaxOptionId': instance.taxOptionId,
      'TaxOption': instance.taxOption,
      'Tax1Name': instance.tax1Name,
      'Tax2Name': instance.tax2Name,
      'TaxId': instance.taxId,
      'RentalTaxRate1': instance.rentalTaxRate1,
      'SalesTaxRate1': instance.salesTaxRate1,
      'LaborTaxRate1': instance.laborTaxRate1,
      'RentalTaxRate2': instance.rentalTaxRate2,
      'SalesTaxRate2': instance.salesTaxRate2,
      'LaborTaxRate2': instance.laborTaxRate2,
      'NoCharge': instance.noCharge,
      'NoChargeReason': instance.noChargeReason,
      'PrintIssuedToAddressFrom': instance.printIssuedToAddressFrom,
      'IssuedToName': instance.issuedToName,
      'IssuedToAttention': instance.issuedToAttention,
      'IssuedToAttention2': instance.issuedToAttention2,
      'IssuedToAddress1': instance.issuedToAddress1,
      'IssuedToAddress2': instance.issuedToAddress2,
      'IssuedToCity': instance.issuedToCity,
      'IssuedToState': instance.issuedToState,
      'IssuedToZipCode': instance.issuedToZipCode,
      'IssuedToCountryId': instance.issuedToCountryId,
      'IssuedToCountry': instance.issuedToCountry,
      'BillToAddressDifferentFromIssuedToAddress':
          instance.billToAddressDifferentFromIssuedToAddress,
      'BillToAddressId': instance.billToAddressId,
      'BillToName': instance.billToName,
      'BillToAttention': instance.billToAttention,
      'BillToAttention2': instance.billToAttention2,
      'BillToAddress1': instance.billToAddress1,
      'BillToAddress2': instance.billToAddress2,
      'BillToCity': instance.billToCity,
      'BillToState': instance.billToState,
      'BillToZipCode': instance.billToZipCode,
      'BillToCountryId': instance.billToCountryId,
      'BillToCountry': instance.billToCountry,
      'DiscountReasonId': instance.discountReasonId,
      'DiscountReason': instance.discountReason,
      'RequireContactConfirmation': instance.requireContactConfirmation,
      'IncludeInBillingAnalysis': instance.includeInBillingAnalysis,
      'HiatusDiscountFrom': instance.hiatusDiscountFrom,
      'RoundTripRentals': instance.roundTripRentals,
      'InGroup': instance.inGroup,
      'GroupNumber': instance.groupNumber,
      'GroupColor': instance.groupColor,
      'GroupOrderBy': instance.groupOrderBy,
      'CoverLetterId': instance.coverLetterId,
      'CoverLetter': instance.coverLetter,
      'TermsConditionsId': instance.termsConditionsId,
      'TermsConditions': instance.termsConditions,
      'OutsideSalesRepresentativeId': instance.outsideSalesRepresentativeId,
      'OutsideSalesRepresentative': instance.outsideSalesRepresentative,
      'MarketTypeId': instance.marketTypeId,
      'MarketType': instance.marketType,
      'MarketSegmentId': instance.marketSegmentId,
      'MarketSegment': instance.marketSegment,
      'MarketSegmentJobId': instance.marketSegmentJobId,
      'MarketSegmentJob': instance.marketSegmentJob,
      'OutDeliveryId': instance.outDeliveryId,
      'OutDeliveryDeliveryType': instance.outDeliveryDeliveryType,
      'OutDeliveryRequiredDate': instance.outDeliveryRequiredDate,
      'OutDeliveryRequiredTime': instance.outDeliveryRequiredTime,
      'OutDeliveryTargetShipDate': instance.outDeliveryTargetShipDate,
      'OutDeliveryTargetShipTime': instance.outDeliveryTargetShipTime,
      'OutDeliveryDirection': instance.outDeliveryDirection,
      'OutDeliveryAddressType': instance.outDeliveryAddressType,
      'OutDeliveryFromLocation': instance.outDeliveryFromLocation,
      'OutDeliveryFromContact': instance.outDeliveryFromContact,
      'OutDeliveryFromContactPhone': instance.outDeliveryFromContactPhone,
      'OutDeliveryFromAlternateContact':
          instance.outDeliveryFromAlternateContact,
      'OutDeliveryFromAlternateContactPhone':
          instance.outDeliveryFromAlternateContactPhone,
      'OutDeliveryFromAttention': instance.outDeliveryFromAttention,
      'OutDeliveryFromAddress1': instance.outDeliveryFromAddress1,
      'OutDeliveryFromAdd2ress': instance.outDeliveryFromAdd2ress,
      'OutDeliveryFromCity': instance.outDeliveryFromCity,
      'OutDeliveryFromState': instance.outDeliveryFromState,
      'OutDeliveryFromZipCode': instance.outDeliveryFromZipCode,
      'OutDeliveryFromCountry': instance.outDeliveryFromCountry,
      'OutDeliveryFromCountryId': instance.outDeliveryFromCountryId,
      'OutDeliveryFromCrossStreets': instance.outDeliveryFromCrossStreets,
      'OutDeliveryToLocation': instance.outDeliveryToLocation,
      'OutDeliveryToContact': instance.outDeliveryToContact,
      'OutDeliveryToContactPhone': instance.outDeliveryToContactPhone,
      'OutDeliveryToAlternateContact': instance.outDeliveryToAlternateContact,
      'OutDeliveryToAlternateContactPhone':
          instance.outDeliveryToAlternateContactPhone,
      'OutDeliveryToAttention': instance.outDeliveryToAttention,
      'OutDeliveryToAddress1': instance.outDeliveryToAddress1,
      'OutDeliveryToAddress2': instance.outDeliveryToAddress2,
      'OutDeliveryToCity': instance.outDeliveryToCity,
      'OutDeliveryToState': instance.outDeliveryToState,
      'OutDeliveryToZipCode': instance.outDeliveryToZipCode,
      'OutDeliveryToCountryId': instance.outDeliveryToCountryId,
      'OutDeliveryToCountry': instance.outDeliveryToCountry,
      'OutDeliveryToContactFax': instance.outDeliveryToContactFax,
      'OutDeliveryToCrossStreets': instance.outDeliveryToCrossStreets,
      'OutDeliveryDeliveryNotes': instance.outDeliveryDeliveryNotes,
      'OutDeliveryCarrierId': instance.outDeliveryCarrierId,
      'OutDeliveryCarrier': instance.outDeliveryCarrier,
      'OutDeliveryCarrierAccount': instance.outDeliveryCarrierAccount,
      'OutDeliveryShipViaId': instance.outDeliveryShipViaId,
      'OutDeliveryShipVia': instance.outDeliveryShipVia,
      'OutDeliveryInvoiceId': instance.outDeliveryInvoiceId,
      'OutDeliveryVendorInvoiceId': instance.outDeliveryVendorInvoiceId,
      'OutDeliveryEstimatedFreight': instance.outDeliveryEstimatedFreight,
      'OutDeliveryFreightInvoiceAmount':
          instance.outDeliveryFreightInvoiceAmount,
      'OutDeliveryChargeType': instance.outDeliveryChargeType,
      'OutDeliveryFreightTrackingNumber':
          instance.outDeliveryFreightTrackingNumber,
      'OutDeliveryFreightTrackingUrl': instance.outDeliveryFreightTrackingUrl,
      'OutDeliveryPackageCode': instance.outDeliveryPackageCode,
      'OutDeliveryBillPoFreightOnOrder':
          instance.outDeliveryBillPoFreightOnOrder,
      'OutDeliveryOnlineOrderNumber': instance.outDeliveryOnlineOrderNumber,
      'OutDeliveryToVenue': instance.outDeliveryToVenue,
      'OutDeliveryToVenueId': instance.outDeliveryToVenueId,
      'OutDeliveryToWarehouse': instance.outDeliveryToWarehouse,
      'OutDeliveryToWarehouseId': instance.outDeliveryToWarehouseId,
      'OutDeliveryDateStamp': instance.outDeliveryDateStamp,
      'InDeliveryId': instance.inDeliveryId,
      'InDeliveryDeliveryType': instance.inDeliveryDeliveryType,
      'InDeliveryRequiredDate': instance.inDeliveryRequiredDate,
      'InDeliveryRequiredTime': instance.inDeliveryRequiredTime,
      'InDeliveryTargetShipDate': instance.inDeliveryTargetShipDate,
      'InDeliveryTargetShipTime': instance.inDeliveryTargetShipTime,
      'InDeliveryDirection': instance.inDeliveryDirection,
      'InDeliveryAddressType': instance.inDeliveryAddressType,
      'InDeliveryFromLocation': instance.inDeliveryFromLocation,
      'InDeliveryFromContact': instance.inDeliveryFromContact,
      'InDeliveryFromContactPhone': instance.inDeliveryFromContactPhone,
      'InDeliveryFromAlternateContact': instance.inDeliveryFromAlternateContact,
      'InDeliveryFromAlternateContactPhone':
          instance.inDeliveryFromAlternateContactPhone,
      'InDeliveryFromAttention': instance.inDeliveryFromAttention,
      'InDeliveryFromAddress1': instance.inDeliveryFromAddress1,
      'InDeliveryFromAdd2ress': instance.inDeliveryFromAdd2ress,
      'InDeliveryFromCity': instance.inDeliveryFromCity,
      'InDeliveryFromState': instance.inDeliveryFromState,
      'InDeliveryFromZipCode': instance.inDeliveryFromZipCode,
      'InDeliveryFromCountry': instance.inDeliveryFromCountry,
      'InDeliveryFromCountryId': instance.inDeliveryFromCountryId,
      'InDeliveryFromCrossStreets': instance.inDeliveryFromCrossStreets,
      'InDeliveryToLocation': instance.inDeliveryToLocation,
      'InDeliveryToContact': instance.inDeliveryToContact,
      'InDeliveryToContactPhone': instance.inDeliveryToContactPhone,
      'InDeliveryToAlternateContact': instance.inDeliveryToAlternateContact,
      'InDeliveryToAlternateContactPhone':
          instance.inDeliveryToAlternateContactPhone,
      'InDeliveryToAttention': instance.inDeliveryToAttention,
      'InDeliveryToAddress1': instance.inDeliveryToAddress1,
      'InDeliveryToAddress2': instance.inDeliveryToAddress2,
      'InDeliveryToCity': instance.inDeliveryToCity,
      'InDeliveryToState': instance.inDeliveryToState,
      'InDeliveryToZipCode': instance.inDeliveryToZipCode,
      'InDeliveryToCountryId': instance.inDeliveryToCountryId,
      'InDeliveryToCountry': instance.inDeliveryToCountry,
      'InDeliveryToContactFax': instance.inDeliveryToContactFax,
      'InDeliveryToCrossStreets': instance.inDeliveryToCrossStreets,
      'InDeliveryDeliveryNotes': instance.inDeliveryDeliveryNotes,
      'InDeliveryCarrierId': instance.inDeliveryCarrierId,
      'InDeliveryCarrier': instance.inDeliveryCarrier,
      'InDeliveryCarrierAccount': instance.inDeliveryCarrierAccount,
      'InDeliveryShipViaId': instance.inDeliveryShipViaId,
      'InDeliveryShipVia': instance.inDeliveryShipVia,
      'InDeliveryInvoiceId': instance.inDeliveryInvoiceId,
      'InDeliveryVendorInvoiceId': instance.inDeliveryVendorInvoiceId,
      'InDeliveryEstimatedFreight': instance.inDeliveryEstimatedFreight,
      'InDeliveryFreightInvoiceAmount': instance.inDeliveryFreightInvoiceAmount,
      'InDeliveryChargeType': instance.inDeliveryChargeType,
      'InDeliveryFreightTrackingNumber':
          instance.inDeliveryFreightTrackingNumber,
      'InDeliveryFreightTrackingUrl': instance.inDeliveryFreightTrackingUrl,
      'InDeliveryPackageCode': instance.inDeliveryPackageCode,
      'InDeliveryBillPoFreightOnOrder': instance.inDeliveryBillPoFreightOnOrder,
      'InDeliveryOnlineOrderNumber': instance.inDeliveryOnlineOrderNumber,
      'InDeliveryOnlineOrderStatus': instance.inDeliveryOnlineOrderStatus,
      'InDeliveryToVenue': instance.inDeliveryToVenue,
      'InDeliveryToVenueId': instance.inDeliveryToVenueId,
      'InDeliveryToWarehouse': instance.inDeliveryToWarehouse,
      'InDeliveryToWarehouseId': instance.inDeliveryToWarehouseId,
      'InDeliveryDateStamp': instance.inDeliveryDateStamp,
      'RentalDaysPerWeek': instance.rentalDaysPerWeek,
      'RentalDiscountPercent': instance.rentalDiscountPercent,
      'WeeklyRentalTotal': instance.weeklyRentalTotal,
      'MonthlyRentalTotal': instance.monthlyRentalTotal,
      'PeriodRentalTotal': instance.periodRentalTotal,
      'WeeklyRentalTotalIncludesTax': instance.weeklyRentalTotalIncludesTax,
      'MonthlyRentalTotalIncludesTax': instance.monthlyRentalTotalIncludesTax,
      'PeriodRentalTotalIncludesTax': instance.periodRentalTotalIncludesTax,
      'BillLockedTotal': instance.billLockedTotal,
      'SalesDiscountPercent': instance.salesDiscountPercent,
      'SalesTotal': instance.salesTotal,
      'SalesTotalIncludesTax': instance.salesTotalIncludesTax,
      'PartsDiscountPercent': instance.partsDiscountPercent,
      'PartsTotal': instance.partsTotal,
      'PartsTotalIncludesTax': instance.partsTotalIncludesTax,
      'SpaceDaysPerWeek': instance.spaceDaysPerWeek,
      'SpaceDiscountPercent': instance.spaceDiscountPercent,
      'SpaceSplitPercent': instance.spaceSplitPercent,
      'WeeklySpaceTotal': instance.weeklySpaceTotal,
      'MonthlySpaceTotal': instance.monthlySpaceTotal,
      'PeriodSpaceTotal': instance.periodSpaceTotal,
      'WeeklySpaceTotalIncludesTax': instance.weeklySpaceTotalIncludesTax,
      'MonthlySpaceTotalIncludesTax': instance.monthlySpaceTotalIncludesTax,
      'PeriodSpaceTotalIncludesTax': instance.periodSpaceTotalIncludesTax,
      'VehicleDaysPerWeek': instance.vehicleDaysPerWeek,
      'VehicleDiscountPercent': instance.vehicleDiscountPercent,
      'WeeklyVehicleTotal': instance.weeklyVehicleTotal,
      'MonthlyVehicleTotal': instance.monthlyVehicleTotal,
      'PeriodVehicleTotal': instance.periodVehicleTotal,
      'WeeklyVehicleTotalIncludesTax': instance.weeklyVehicleTotalIncludesTax,
      'MonthlyVehicleTotalIncludesTax': instance.monthlyVehicleTotalIncludesTax,
      'PeriodVehicleTotalIncludesTax': instance.periodVehicleTotalIncludesTax,
      'MiscDiscountPercent': instance.miscDiscountPercent,
      'WeeklyMiscTotal': instance.weeklyMiscTotal,
      'MonthlyMiscTotal': instance.monthlyMiscTotal,
      'PeriodMiscTotal': instance.periodMiscTotal,
      'WeeklyMiscTotalIncludesTax': instance.weeklyMiscTotalIncludesTax,
      'MonthlyMiscTotalIncludesTax': instance.monthlyMiscTotalIncludesTax,
      'PeriodMiscTotalIncludesTax': instance.periodMiscTotalIncludesTax,
      'LaborDiscountPercent': instance.laborDiscountPercent,
      'WeeklyLaborTotal': instance.weeklyLaborTotal,
      'MonthlyLaborTotal': instance.monthlyLaborTotal,
      'PeriodLaborTotal': instance.periodLaborTotal,
      'WeeklyLaborTotalIncludesTax': instance.weeklyLaborTotalIncludesTax,
      'MonthlyLaborTotalIncludesTax': instance.monthlyLaborTotalIncludesTax,
      'PeriodLaborTotalIncludesTax': instance.periodLaborTotalIncludesTax,
      'RentalSaleDiscountPercent': instance.rentalSaleDiscountPercent,
      'RentalSaleTotal': instance.rentalSaleTotal,
      'RentalSaleTotalIncludesTax': instance.rentalSaleTotalIncludesTax,
      'LossAndDamageDiscountPercent': instance.lossAndDamageDiscountPercent,
      'LossAndDamageTotal': instance.lossAndDamageTotal,
      'LossAndDamageTotalIncludesTax': instance.lossAndDamageTotalIncludesTax,
      'CombinedDaysPerWeek': instance.combinedDaysPerWeek,
      'CombinedDiscountPercent': instance.combinedDiscountPercent,
      'WeeklyCombinedTotal': instance.weeklyCombinedTotal,
      'MonthlyCombinedTotal': instance.monthlyCombinedTotal,
      'PeriodCombinedTotal': instance.periodCombinedTotal,
      'WeeklyCombinedTotalIncludesTax': instance.weeklyCombinedTotalIncludesTax,
      'MonthlyCombinedTotalIncludesTax':
          instance.monthlyCombinedTotalIncludesTax,
      'PeriodCombinedTotalIncludesTax': instance.periodCombinedTotalIncludesTax,
      'DisableEditingRentalRate': instance.disableEditingRentalRate,
      'DisableEditingSalesRate': instance.disableEditingSalesRate,
      'DisableEditingMiscellaneousRate':
          instance.disableEditingMiscellaneousRate,
      'DisableEditingLaborRate': instance.disableEditingLaborRate,
      'DisableEditingRentalSaleRate': instance.disableEditingRentalSaleRate,
      'DisableEditingLossAndDamageRate':
          instance.disableEditingLossAndDamageRate,
      'RentalExtendedTotal': instance.rentalExtendedTotal,
      'SalesExtendedTotal': instance.salesExtendedTotal,
      'LaborExtendedTotal': instance.laborExtendedTotal,
      'MiscellaneousExtendedTotal': instance.miscellaneousExtendedTotal,
      'RentalSaleExtendedTotal': instance.rentalSaleExtendedTotal,
      'LossAndDamageExtendedTotal': instance.lossAndDamageExtendedTotal,
      'HasNotes': instance.hasNotes,
      'HasDocuments': instance.hasDocuments,
      'HasEmailHistory': instance.hasEmailHistory,
      'HasContacts': instance.hasContacts,
      'HasSubPurchaseOrders': instance.hasSubPurchaseOrders,
      'HasPickLists': instance.hasPickLists,
      'HasContracts': instance.hasContracts,
      'HasSuspendedContracts': instance.hasSuspendedContracts,
      'HasMultiOrderContracts': instance.hasMultiOrderContracts,
      'HasInvoices': instance.hasInvoices,
      'HasBillingWorksheets': instance.hasBillingWorksheets,
      'HasMultiOrderInvoices': instance.hasMultiOrderInvoices,
      'TotalReplacementCost': instance.totalReplacementCost,
      'PresentationLayerId': instance.presentationLayerId,
      'PresentationLayer': instance.presentationLayer,
      'IsManualSort': instance.isManualSort,
      'QuoteOrderTitle': instance.quoteOrderTitle,
      'UnassignedSubs': instance.unassignedSubs,
      'NonTaxable': instance.nonTaxable,
      'EnableProjects': instance.enableProjects,
      'ProjectId': instance.projectId,
      'ProjectNumber': instance.projectNumber,
      'Project': instance.project,
      'ProjectDrawingsId': instance.projectDrawingsId,
      'ProjectDrawings': instance.projectDrawings,
      'ProjectItemsOrderedId': instance.projectItemsOrderedId,
      'ProjectItemsOrdered': instance.projectItemsOrdered,
      'ProjectDropShipId': instance.projectDropShipId,
      'ProjectDropShip': instance.projectDropShip,
      'ProjectAsBuildId': instance.projectAsBuildId,
      'ProjectAsBuild': instance.projectAsBuild,
      'ProjectCommissioningId': instance.projectCommissioningId,
      'ProjectCommissioning': instance.projectCommissioning,
      'ProjectDepositId': instance.projectDepositId,
      'ProjectDeposit': instance.projectDeposit,
      'InputByUserId': instance.inputByUserId,
      'ModifiedByUserId': instance.modifiedByUserId,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentQuoteQuoteDocument
    _$WebApiModulesAgentQuoteQuoteDocumentFromJson(Map<String, dynamic> json) {
  return WebApiModulesAgentQuoteQuoteDocument(
    quoteId: json['QuoteId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentQuoteQuoteDocumentToJson(
        WebApiModulesAgentQuoteQuoteDocument instance) =>
    <String, dynamic>{
      'QuoteId': instance.quoteId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentQuoteQuoteDocumentPostRequest
    _$WebApiModulesAgentQuoteQuoteDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentQuoteQuoteDocumentPostRequest(
    quoteId: json['QuoteId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentQuoteQuoteDocumentPostRequestToJson(
        WebApiModulesAgentQuoteQuoteDocumentPostRequest instance) =>
    <String, dynamic>{
      'QuoteId': instance.quoteId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesAgentQuoteQuoteDocumentPutRequest
    _$WebApiModulesAgentQuoteQuoteDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentQuoteQuoteDocumentPutRequest(
    quoteId: json['QuoteId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentQuoteQuoteDocumentPutRequestToJson(
        WebApiModulesAgentQuoteQuoteDocumentPutRequest instance) =>
    <String, dynamic>{
      'QuoteId': instance.quoteId,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesAgentVendorVendor _$WebApiModulesAgentVendorVendorFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesAgentVendorVendor(
    vendorId: json['VendorId'] as String?,
    vendorNameType: json['VendorNameType'] as String?,
    vendorNumber: json['VendorNumber'] as String?,
    federalIdNumber: json['FederalIdNumber'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    vendor: json['Vendor'] as String?,
    salutation: json['Salutation'] as String?,
    firstName: json['FirstName'] as String?,
    middleInitial: json['MiddleInitial'] as String?,
    lastName: json['LastName'] as String?,
    vendorDisplayName: json['VendorDisplayName'] as String?,
    address1: json['Address1'] as String?,
    address2: json['Address2'] as String?,
    city: json['City'] as String?,
    state: json['State'] as String?,
    countryId: json['CountryId'] as String?,
    country: json['Country'] as String?,
    zipCode: json['ZipCode'] as String?,
    vendorClassId: json['VendorClassId'] as String?,
    vendorClass: json['VendorClass'] as String?,
    phone: json['Phone'] as String?,
    fax: json['Fax'] as String?,
    phoneTollFree: json['PhoneTollFree'] as String?,
    otherPhone: json['OtherPhone'] as String?,
    webAddress: json['WebAddress'] as String?,
    email: json['Email'] as String?,
    activeDate: json['ActiveDate'] as String?,
    inactiveDate: json['InactiveDate'] as String?,
    subRent: json['SubRent'] as bool?,
    subSales: json['SubSales'] as bool?,
    subMisc: json['SubMisc'] as bool?,
    subLabor: json['SubLabor'] as bool?,
    subVehicle: json['SubVehicle'] as bool?,
    repair: json['Repair'] as bool?,
    rentalInventory: json['RentalInventory'] as bool?,
    salesPartsInventory: json['SalesPartsInventory'] as bool?,
    manufacturer: json['Manufacturer'] as bool?,
    freight: json['Freight'] as bool?,
    insurance: json['Insurance'] as bool?,
    consignment: json['Consignment'] as bool?,
    defaultSubRentDaysPerWeek:
        (json['DefaultSubRentDaysPerWeek'] as num?)?.toDouble(),
    defaultSubRentDiscountPercent:
        (json['DefaultSubRentDiscountPercent'] as num?)?.toDouble(),
    defaultSubSaleDiscountPercent:
        (json['DefaultSubSaleDiscountPercent'] as num?)?.toDouble(),
    defaultRate: json['DefaultRate'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    billingCycle: json['BillingCycle'] as String?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    accountNumber: json['AccountNumber'] as String?,
    defaultPoClassificationId: json['DefaultPoClassificationId'] as String?,
    defaultPoClassification: json['DefaultPoClassification'] as String?,
    organizationTypeId: json['OrganizationTypeId'] as String?,
    organizationType: json['OrganizationType'] as String?,
    multipleCurrencies: json['MultipleCurrencies'] as bool?,
    defaultCurrencyId: json['DefaultCurrencyId'] as String?,
    defaultCurrencyCode: json['DefaultCurrencyCode'] as String?,
    defaultCurrency: json['DefaultCurrency'] as String?,
    defaultCurrencySymbol: json['DefaultCurrencySymbol'] as String?,
    remitAttention1: json['RemitAttention1'] as String?,
    remitAttention2: json['RemitAttention2'] as String?,
    remitAddress1: json['RemitAddress1'] as String?,
    remitAddress2: json['RemitAddress2'] as String?,
    remitCity: json['RemitCity'] as String?,
    remitState: json['RemitState'] as String?,
    remitCountryId: json['RemitCountryId'] as String?,
    remitCountry: json['RemitCountry'] as String?,
    remitZipCode: json['RemitZipCode'] as String?,
    remitPayeeNo: json['RemitPayeeNo'] as String?,
    externalId: json['ExternalId'] as String?,
    automaticallyAdjustContractDates:
        json['AutomaticallyAdjustContractDates'] as bool?,
    shippingTrackingLink: json['ShippingTrackingLink'] as String?,
    defaultOutgoingDeliveryType: json['DefaultOutgoingDeliveryType'] as String?,
    defaultIncomingDeliveryType: json['DefaultIncomingDeliveryType'] as String?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    inputDate: json['InputDate'] as String?,
    lastModifiedDate: json['LastModifiedDate'] as String?,
    primaryContactId: json['PrimaryContactId'] as String?,
    primaryContact: json['PrimaryContact'] as String?,
    primaryContactPhone: json['PrimaryContactPhone'] as String?,
    primaryContactExtension: json['PrimaryContactExtension'] as String?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentVendorVendorToJson(
        WebApiModulesAgentVendorVendor instance) =>
    <String, dynamic>{
      'VendorId': instance.vendorId,
      'VendorNameType': instance.vendorNameType,
      'VendorNumber': instance.vendorNumber,
      'FederalIdNumber': instance.federalIdNumber,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'Vendor': instance.vendor,
      'Salutation': instance.salutation,
      'FirstName': instance.firstName,
      'MiddleInitial': instance.middleInitial,
      'LastName': instance.lastName,
      'VendorDisplayName': instance.vendorDisplayName,
      'Address1': instance.address1,
      'Address2': instance.address2,
      'City': instance.city,
      'State': instance.state,
      'CountryId': instance.countryId,
      'Country': instance.country,
      'ZipCode': instance.zipCode,
      'VendorClassId': instance.vendorClassId,
      'VendorClass': instance.vendorClass,
      'Phone': instance.phone,
      'Fax': instance.fax,
      'PhoneTollFree': instance.phoneTollFree,
      'OtherPhone': instance.otherPhone,
      'WebAddress': instance.webAddress,
      'Email': instance.email,
      'ActiveDate': instance.activeDate,
      'InactiveDate': instance.inactiveDate,
      'SubRent': instance.subRent,
      'SubSales': instance.subSales,
      'SubMisc': instance.subMisc,
      'SubLabor': instance.subLabor,
      'SubVehicle': instance.subVehicle,
      'Repair': instance.repair,
      'RentalInventory': instance.rentalInventory,
      'SalesPartsInventory': instance.salesPartsInventory,
      'Manufacturer': instance.manufacturer,
      'Freight': instance.freight,
      'Insurance': instance.insurance,
      'Consignment': instance.consignment,
      'DefaultSubRentDaysPerWeek': instance.defaultSubRentDaysPerWeek,
      'DefaultSubRentDiscountPercent': instance.defaultSubRentDiscountPercent,
      'DefaultSubSaleDiscountPercent': instance.defaultSubSaleDiscountPercent,
      'DefaultRate': instance.defaultRate,
      'BillingCycleId': instance.billingCycleId,
      'BillingCycle': instance.billingCycle,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'AccountNumber': instance.accountNumber,
      'DefaultPoClassificationId': instance.defaultPoClassificationId,
      'DefaultPoClassification': instance.defaultPoClassification,
      'OrganizationTypeId': instance.organizationTypeId,
      'OrganizationType': instance.organizationType,
      'MultipleCurrencies': instance.multipleCurrencies,
      'DefaultCurrencyId': instance.defaultCurrencyId,
      'DefaultCurrencyCode': instance.defaultCurrencyCode,
      'DefaultCurrency': instance.defaultCurrency,
      'DefaultCurrencySymbol': instance.defaultCurrencySymbol,
      'RemitAttention1': instance.remitAttention1,
      'RemitAttention2': instance.remitAttention2,
      'RemitAddress1': instance.remitAddress1,
      'RemitAddress2': instance.remitAddress2,
      'RemitCity': instance.remitCity,
      'RemitState': instance.remitState,
      'RemitCountryId': instance.remitCountryId,
      'RemitCountry': instance.remitCountry,
      'RemitZipCode': instance.remitZipCode,
      'RemitPayeeNo': instance.remitPayeeNo,
      'ExternalId': instance.externalId,
      'AutomaticallyAdjustContractDates':
          instance.automaticallyAdjustContractDates,
      'ShippingTrackingLink': instance.shippingTrackingLink,
      'DefaultOutgoingDeliveryType': instance.defaultOutgoingDeliveryType,
      'DefaultIncomingDeliveryType': instance.defaultIncomingDeliveryType,
      'CustomerId': instance.customerId,
      'Customer': instance.customer,
      'InputDate': instance.inputDate,
      'LastModifiedDate': instance.lastModifiedDate,
      'PrimaryContactId': instance.primaryContactId,
      'PrimaryContact': instance.primaryContact,
      'PrimaryContactPhone': instance.primaryContactPhone,
      'PrimaryContactExtension': instance.primaryContactExtension,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentVendorVendorDocument
    _$WebApiModulesAgentVendorVendorDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentVendorVendorDocument(
    vendorId: json['VendorId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesAgentVendorVendorDocumentToJson(
        WebApiModulesAgentVendorVendorDocument instance) =>
    <String, dynamic>{
      'VendorId': instance.vendorId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesAgentVendorVendorDocumentPostRequest
    _$WebApiModulesAgentVendorVendorDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentVendorVendorDocumentPostRequest(
    vendorId: json['VendorId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentVendorVendorDocumentPostRequestToJson(
        WebApiModulesAgentVendorVendorDocumentPostRequest instance) =>
    <String, dynamic>{
      'VendorId': instance.vendorId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesAgentVendorVendorDocumentPutRequest
    _$WebApiModulesAgentVendorVendorDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesAgentVendorVendorDocumentPutRequest(
    vendorId: json['VendorId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesAgentVendorVendorDocumentPutRequestToJson(
        WebApiModulesAgentVendorVendorDocumentPutRequest instance) =>
    <String, dynamic>{
      'VendorId': instance.vendorId,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesBillingBankAccountBankAccount
    _$WebApiModulesBillingBankAccountBankAccountFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBankAccountBankAccount(
    bankAccountId: json['BankAccountId'] as int?,
    accountName: json['AccountName'] as String?,
    checkNumber: json['CheckNumber'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    location: json['Location'] as String?,
    currencyId: json['CurrencyId'] as String?,
    currency: json['Currency'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesBillingBankAccountBankAccountToJson(
        WebApiModulesBillingBankAccountBankAccount instance) =>
    <String, dynamic>{
      'BankAccountId': instance.bankAccountId,
      'AccountName': instance.accountName,
      'CheckNumber': instance.checkNumber,
      'OfficeLocationId': instance.officeLocationId,
      'Location': instance.location,
      'CurrencyId': instance.currencyId,
      'Currency': instance.currency,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesBillingBillingBilling _$WebApiModulesBillingBillingBillingFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesBillingBillingBilling(
    sessionId: json['SessionId'] as String?,
    billingId: json['BillingId'] as int?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    flatPoId: json['FlatPoId'] as String?,
    flatPoBillingScheduleId: json['FlatPoBillingScheduleId'] as String?,
    supplementalPoId: json['SupplementalPoId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDate: json['OrderDate'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    status: json['Status'] as String?,
    orderTypeId: json['OrderTypeId'] as String?,
    orderTypeType: json['OrderTypeType'] as String?,
    orderType: json['OrderType'] as String?,
    billingCycleId: json['BillingCycleId'] as String?,
    billingCycle: json['BillingCycle'] as String?,
    billingCycleType: json['BillingCycleType'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    billingStartDate: json['BillingStartDate'] as String?,
    billingStopDate: json['BillingStopDate'] as String?,
    billAsOfDate: json['BillAsOfDate'] as String?,
    isNoCharge: json['IsNoCharge'] as bool?,
    isRepair: json['IsRepair'] as bool?,
    isFlatPo: json['IsFlatPo'] as bool?,
    pendingPo: json['PendingPo'] as bool?,
    poNumber: json['PoNumber'] as String?,
    poAmount: (json['PoAmount'] as num?)?.toDouble(),
    billingPeriodStartDate: json['BillingPeriodStartDate'] as String?,
    billingPeriodEndDate: json['BillingPeriodEndDate'] as String?,
    validchargeno: json['Validchargeno'] as bool?,
    orbitsapchgmajor: json['Orbitsapchgmajor'] as String?,
    orbitsapchgsub: json['Orbitsapchgsub'] as String?,
    orbitsapchgdetail: json['Orbitsapchgdetail'] as String?,
    orbitsapchgdeal: json['Orbitsapchgdeal'] as String?,
    orbitsapchgset: json['Orbitsapchgset'] as String?,
    billingNotes: json['BillingNotes'] as bool?,
    recType: json['RecType'] as String?,
    worksheetId: json['WorksheetId'] as String?,
    billingCycleEvent: json['BillingCycleEvent'] as String?,
    billingCycleEventOrder: json['BillingCycleEventOrder'] as int?,
    inGroup: json['InGroup'] as bool?,
    groupNumber: json['GroupNumber'] as int?,
    groupColor: json['GroupColor'] as int?,
    doNotInvoice: json['DoNotInvoice'] as bool?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    episodeNumber: json['EpisodeNumber'] as int?,
    isFinalLossAndDamage: json['IsFinalLossAndDamage'] as bool?,
    billingTotal: (json['BillingTotal'] as num?)?.toDouble(),
    hasRecurring: json['HasRecurring'] as bool?,
    contractId: json['ContractId'] as String?,
    referenceNumber: json['ReferenceNumber'] as String?,
    billedHiatus: json['BilledHiatus'] as bool?,
    missingCrewBreakTime: json['MissingCrewBreakTime'] as bool?,
    missingCrewWorkTime: json['MissingCrewWorkTime'] as bool?,
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    officeLocationDefaultCurrencyId:
        json['OfficeLocationDefaultCurrencyId'] as String?,
    projectManagerId: json['ProjectManagerId'] as String?,
    projectManager: json['ProjectManager'] as String?,
    outsideSalesRepresentativeId:
        json['OutsideSalesRepresentativeId'] as String?,
    outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
    orderNumberColor: json['OrderNumberColor'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    billingStopDateColor: json['BillingStopDateColor'] as String?,
    orderDateColor: json['OrderDateColor'] as String?,
    purchaseOrderNumberColor: json['PurchaseOrderNumberColor'] as String?,
    totalColor: json['TotalColor'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesBillingBillingBillingToJson(
        WebApiModulesBillingBillingBilling instance) =>
    <String, dynamic>{
      'SessionId': instance.sessionId,
      'BillingId': instance.billingId,
      'CustomerId': instance.customerId,
      'Customer': instance.customer,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'FlatPoId': instance.flatPoId,
      'FlatPoBillingScheduleId': instance.flatPoBillingScheduleId,
      'SupplementalPoId': instance.supplementalPoId,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'OrderDate': instance.orderDate,
      'OrderDescription': instance.orderDescription,
      'Status': instance.status,
      'OrderTypeId': instance.orderTypeId,
      'OrderTypeType': instance.orderTypeType,
      'OrderType': instance.orderType,
      'BillingCycleId': instance.billingCycleId,
      'BillingCycle': instance.billingCycle,
      'BillingCycleType': instance.billingCycleType,
      'OfficeLocationId': instance.officeLocationId,
      'BillingStartDate': instance.billingStartDate,
      'BillingStopDate': instance.billingStopDate,
      'BillAsOfDate': instance.billAsOfDate,
      'IsNoCharge': instance.isNoCharge,
      'IsRepair': instance.isRepair,
      'IsFlatPo': instance.isFlatPo,
      'PendingPo': instance.pendingPo,
      'PoNumber': instance.poNumber,
      'PoAmount': instance.poAmount,
      'BillingPeriodStartDate': instance.billingPeriodStartDate,
      'BillingPeriodEndDate': instance.billingPeriodEndDate,
      'Validchargeno': instance.validchargeno,
      'Orbitsapchgmajor': instance.orbitsapchgmajor,
      'Orbitsapchgsub': instance.orbitsapchgsub,
      'Orbitsapchgdetail': instance.orbitsapchgdetail,
      'Orbitsapchgdeal': instance.orbitsapchgdeal,
      'Orbitsapchgset': instance.orbitsapchgset,
      'BillingNotes': instance.billingNotes,
      'RecType': instance.recType,
      'WorksheetId': instance.worksheetId,
      'BillingCycleEvent': instance.billingCycleEvent,
      'BillingCycleEventOrder': instance.billingCycleEventOrder,
      'InGroup': instance.inGroup,
      'GroupNumber': instance.groupNumber,
      'GroupColor': instance.groupColor,
      'DoNotInvoice': instance.doNotInvoice,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'EpisodeNumber': instance.episodeNumber,
      'IsFinalLossAndDamage': instance.isFinalLossAndDamage,
      'BillingTotal': instance.billingTotal,
      'HasRecurring': instance.hasRecurring,
      'ContractId': instance.contractId,
      'ReferenceNumber': instance.referenceNumber,
      'BilledHiatus': instance.billedHiatus,
      'MissingCrewBreakTime': instance.missingCrewBreakTime,
      'MissingCrewWorkTime': instance.missingCrewWorkTime,
      'CurrencyId': instance.currencyId,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'OfficeLocationDefaultCurrencyId':
          instance.officeLocationDefaultCurrencyId,
      'ProjectManagerId': instance.projectManagerId,
      'ProjectManager': instance.projectManager,
      'OutsideSalesRepresentativeId': instance.outsideSalesRepresentativeId,
      'OutsideSalesRepresentative': instance.outsideSalesRepresentative,
      'OrderNumberColor': instance.orderNumberColor,
      'DescriptionColor': instance.descriptionColor,
      'BillingStopDateColor': instance.billingStopDateColor,
      'OrderDateColor': instance.orderDateColor,
      'PurchaseOrderNumberColor': instance.purchaseOrderNumberColor,
      'TotalColor': instance.totalColor,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesBillingBillingCreateInvoiceEstimateRequest
    _$WebApiModulesBillingBillingCreateInvoiceEstimateRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingCreateInvoiceEstimateRequest(
    orderId: json['OrderId'] as String?,
    periodStart: json['PeriodStart'] == null
        ? null
        : DateTime.parse(json['PeriodStart'] as String),
    periodEnd: json['PeriodEnd'] == null
        ? null
        : DateTime.parse(json['PeriodEnd'] as String),
    includeNotYetOut: json['IncludeNotYetOut'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesBillingBillingCreateInvoiceEstimateRequestToJson(
            WebApiModulesBillingBillingCreateInvoiceEstimateRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'PeriodStart': instance.periodStart?.toIso8601String(),
          'PeriodEnd': instance.periodEnd?.toIso8601String(),
          'IncludeNotYetOut': instance.includeNotYetOut,
        };

WebApiModulesBillingBillingCreateInvoiceEstimateResponse
    _$WebApiModulesBillingBillingCreateInvoiceEstimateResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingCreateInvoiceEstimateResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    invoiceId: json['InvoiceId'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesBillingBillingCreateInvoiceEstimateResponseToJson(
        WebApiModulesBillingBillingCreateInvoiceEstimateResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'InvoiceId': instance.invoiceId,
    };

WebApiModulesBillingBillingCreateInvoicesRequest
    _$WebApiModulesBillingBillingCreateInvoicesRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingCreateInvoicesRequest(
    sessionId: json['SessionId'] as String?,
    billingIds: (json['BillingIds'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesBillingBillingCreateInvoicesRequestToJson(
        WebApiModulesBillingBillingCreateInvoicesRequest instance) =>
    <String, dynamic>{
      'SessionId': instance.sessionId,
      'BillingIds': instance.billingIds,
    };

WebApiModulesBillingBillingCreateInvoicesResponse
    _$WebApiModulesBillingBillingCreateInvoicesResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingCreateInvoicesResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    invoiceCreationBatchId: json['InvoiceCreationBatchId'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesBillingBillingCreateInvoicesResponseToJson(
        WebApiModulesBillingBillingCreateInvoicesResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'InvoiceCreationBatchId': instance.invoiceCreationBatchId,
    };

WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesRequest
    _$WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesRequest(
    orderId: json['OrderId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesRequestToJson(
            WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
        };

WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesResponse
    _$WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    fromDate: json['FromDate'] == null
        ? null
        : DateTime.parse(json['FromDate'] as String),
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
  );
}

Map<String, dynamic>
    _$WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesResponseToJson(
            WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'FromDate': instance.fromDate?.toIso8601String(),
          'ToDate': instance.toDate?.toIso8601String(),
        };

WebApiModulesBillingBillingGetOrderBillingDatesResponse
    _$WebApiModulesBillingBillingGetOrderBillingDatesResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingGetOrderBillingDatesResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    periodStart: json['PeriodStart'] == null
        ? null
        : DateTime.parse(json['PeriodStart'] as String),
    periodEnd: json['PeriodEnd'] == null
        ? null
        : DateTime.parse(json['PeriodEnd'] as String),
  );
}

Map<String, dynamic>
    _$WebApiModulesBillingBillingGetOrderBillingDatesResponseToJson(
            WebApiModulesBillingBillingGetOrderBillingDatesResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'PeriodStart': instance.periodStart?.toIso8601String(),
          'PeriodEnd': instance.periodEnd?.toIso8601String(),
        };

WebApiModulesBillingBillingPopulateBillingRequest
    _$WebApiModulesBillingBillingPopulateBillingRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingPopulateBillingRequest(
    billAsOfDate: json['BillAsOfDate'] == null
        ? null
        : DateTime.parse(json['BillAsOfDate'] as String),
    officeLocationId: json['OfficeLocationId'] as String?,
    customerId: json['CustomerId'] as String?,
    dealId: json['DealId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    agentId: json['AgentId'] as String?,
    orderId: json['OrderId'] as String?,
    showOrdersWithPendingPO: json['ShowOrdersWithPendingPO'] as bool?,
    billIfComplete: json['BillIfComplete'] as bool?,
    combinePeriods: json['CombinePeriods'] as bool?,
  );
}

Map<String, dynamic> _$WebApiModulesBillingBillingPopulateBillingRequestToJson(
        WebApiModulesBillingBillingPopulateBillingRequest instance) =>
    <String, dynamic>{
      'BillAsOfDate': instance.billAsOfDate?.toIso8601String(),
      'OfficeLocationId': instance.officeLocationId,
      'CustomerId': instance.customerId,
      'DealId': instance.dealId,
      'DepartmentId': instance.departmentId,
      'AgentId': instance.agentId,
      'OrderId': instance.orderId,
      'ShowOrdersWithPendingPO': instance.showOrdersWithPendingPO,
      'BillIfComplete': instance.billIfComplete,
      'CombinePeriods': instance.combinePeriods,
    };

WebApiModulesBillingBillingPopulateBillingResponse
    _$WebApiModulesBillingBillingPopulateBillingResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingPopulateBillingResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    sessionId: json['SessionId'] as String?,
    billingMessages: json['BillingMessages'] as int?,
  );
}

Map<String, dynamic> _$WebApiModulesBillingBillingPopulateBillingResponseToJson(
        WebApiModulesBillingBillingPopulateBillingResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'SessionId': instance.sessionId,
      'BillingMessages': instance.billingMessages,
    };

WebApiModulesBillingBillingUpdateBillingWorksheetRequest
    _$WebApiModulesBillingBillingUpdateBillingWorksheetRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingUpdateBillingWorksheetRequest(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    invoiceId: json['InvoiceId'] as String?,
    orderId: json['OrderId'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesBillingBillingUpdateBillingWorksheetRequestToJson(
        WebApiModulesBillingBillingUpdateBillingWorksheetRequest instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'InvoiceId': instance.invoiceId,
      'OrderId': instance.orderId,
    };

WebApiModulesBillingBillingUpdateBillingWorksheetResponse
    _$WebApiModulesBillingBillingUpdateBillingWorksheetResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingUpdateBillingWorksheetResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesBillingBillingUpdateBillingWorksheetResponseToJson(
        WebApiModulesBillingBillingUpdateBillingWorksheetResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesBillingBillingWorksheetBillingWorksheet
    _$WebApiModulesBillingBillingWorksheetBillingWorksheetFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingBillingWorksheetBillingWorksheet(
    billingWorksheetId: json['BillingWorksheetId'] as String?,
    worksheetNumber: json['WorksheetNumber'] as String?,
    worksheetDate: json['WorksheetDate'] as String?,
    billingStartDate: json['BillingStartDate'] as String?,
    billingEndDate: json['BillingEndDate'] as String?,
    orderInvoiceId: json['OrderInvoiceId'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    orderDate: json['OrderDate'] as String?,
    worksheetDescription: json['WorksheetDescription'] as String?,
    customerId: json['CustomerId'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    dealNumber: json['DealNumber'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    taxId: json['TaxId'] as String?,
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    tax1Name: json['Tax1Name'] as String?,
    tax2Name: json['Tax2Name'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    isNoCharge: json['IsNoCharge'] as bool?,
    isAdjusted: json['IsAdjusted'] as bool?,
    isBilledHiatus: json['IsBilledHiatus'] as bool?,
    hasLockedTotal: json['HasLockedTotal'] as bool?,
    isAlteredDates: json['IsAlteredDates'] as bool?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    inputByUserId: json['InputByUserId'] as String?,
    flatPoId: json['FlatPoId'] as String?,
    orderType: json['OrderType'] as String?,
    rateType: json['RateType'] as String?,
    rateTypeDisplay: json['RateTypeDisplay'] as String?,
    resultingInvoiceTotal: (json['ResultingInvoiceTotal'] as num?)?.toDouble(),
    referenceNumber: json['ReferenceNumber'] as String?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    officeLocationDefaultCurrencyId:
        json['OfficeLocationDefaultCurrencyId'] as String?,
    outsideSalesRepresentativeId:
        json['OutsideSalesRepresentativeId'] as String?,
    usageStartDate: json['UsageStartDate'] as String?,
    usageEndDate: json['UsageEndDate'] as String?,
    resultingInvoiceNumber: json['ResultingInvoiceNumber'] as String?,
    resultingInvoiceId: json['ResultingInvoiceId'] as String?,
    rentalTotal: (json['RentalTotal'] as num?)?.toDouble(),
    salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
    facilitiesTotal: (json['FacilitiesTotal'] as num?)?.toDouble(),
    worksheetGrossTotal: (json['WorksheetGrossTotal'] as num?)?.toDouble(),
    worksheetDiscountTotal:
        (json['WorksheetDiscountTotal'] as num?)?.toDouble(),
    worksheetSubTotal: (json['WorksheetSubTotal'] as num?)?.toDouble(),
    worksheetTax1: (json['WorksheetTax1'] as num?)?.toDouble(),
    worksheetTax2: (json['WorksheetTax2'] as num?)?.toDouble(),
    worksheetTax: (json['WorksheetTax'] as num?)?.toDouble(),
    worksheetTotal: (json['WorksheetTotal'] as num?)?.toDouble(),
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesBillingBillingWorksheetBillingWorksheetToJson(
            WebApiModulesBillingBillingWorksheetBillingWorksheet instance) =>
        <String, dynamic>{
          'BillingWorksheetId': instance.billingWorksheetId,
          'WorksheetNumber': instance.worksheetNumber,
          'WorksheetDate': instance.worksheetDate,
          'BillingStartDate': instance.billingStartDate,
          'BillingEndDate': instance.billingEndDate,
          'OrderInvoiceId': instance.orderInvoiceId,
          'OrderId': instance.orderId,
          'OrderNumber': instance.orderNumber,
          'OrderDescription': instance.orderDescription,
          'OrderDate': instance.orderDate,
          'WorksheetDescription': instance.worksheetDescription,
          'CustomerId': instance.customerId,
          'DealId': instance.dealId,
          'Deal': instance.deal,
          'DealNumber': instance.dealNumber,
          'DepartmentId': instance.departmentId,
          'Department': instance.department,
          'TaxId': instance.taxId,
          'TaxOptionId': instance.taxOptionId,
          'TaxOption': instance.taxOption,
          'Tax1Name': instance.tax1Name,
          'Tax2Name': instance.tax2Name,
          'RentalTaxRate1': instance.rentalTaxRate1,
          'SalesTaxRate1': instance.salesTaxRate1,
          'LaborTaxRate1': instance.laborTaxRate1,
          'RentalTaxRate2': instance.rentalTaxRate2,
          'SalesTaxRate2': instance.salesTaxRate2,
          'LaborTaxRate2': instance.laborTaxRate2,
          'PurchaseOrderNumber': instance.purchaseOrderNumber,
          'Status': instance.status,
          'StatusDate': instance.statusDate,
          'IsNoCharge': instance.isNoCharge,
          'IsAdjusted': instance.isAdjusted,
          'IsBilledHiatus': instance.isBilledHiatus,
          'HasLockedTotal': instance.hasLockedTotal,
          'IsAlteredDates': instance.isAlteredDates,
          'OfficeLocationId': instance.officeLocationId,
          'OfficeLocation': instance.officeLocation,
          'InputByUserId': instance.inputByUserId,
          'FlatPoId': instance.flatPoId,
          'OrderType': instance.orderType,
          'RateType': instance.rateType,
          'RateTypeDisplay': instance.rateTypeDisplay,
          'ResultingInvoiceTotal': instance.resultingInvoiceTotal,
          'ReferenceNumber': instance.referenceNumber,
          'AgentId': instance.agentId,
          'Agent': instance.agent,
          'CurrencyId': instance.currencyId,
          'CurrencyCode': instance.currencyCode,
          'OfficeLocationDefaultCurrencyId':
              instance.officeLocationDefaultCurrencyId,
          'OutsideSalesRepresentativeId': instance.outsideSalesRepresentativeId,
          'UsageStartDate': instance.usageStartDate,
          'UsageEndDate': instance.usageEndDate,
          'ResultingInvoiceNumber': instance.resultingInvoiceNumber,
          'ResultingInvoiceId': instance.resultingInvoiceId,
          'RentalTotal': instance.rentalTotal,
          'SalesTotal': instance.salesTotal,
          'FacilitiesTotal': instance.facilitiesTotal,
          'WorksheetGrossTotal': instance.worksheetGrossTotal,
          'WorksheetDiscountTotal': instance.worksheetDiscountTotal,
          'WorksheetSubTotal': instance.worksheetSubTotal,
          'WorksheetTax1': instance.worksheetTax1,
          'WorksheetTax2': instance.worksheetTax2,
          'WorksheetTax': instance.worksheetTax,
          'WorksheetTotal': instance.worksheetTotal,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesBillingInvoiceCreditInvoiceReponse
    _$WebApiModulesBillingInvoiceCreditInvoiceReponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingInvoiceCreditInvoiceReponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    creditId: json['CreditId'] as String?,
    credit: json['credit'] == null
        ? null
        : WebApiModulesBillingInvoiceInvoice.fromJson(
            json['credit'] as Map<String, dynamic>),
  );
}

Map<String, dynamic> _$WebApiModulesBillingInvoiceCreditInvoiceReponseToJson(
        WebApiModulesBillingInvoiceCreditInvoiceReponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'CreditId': instance.creditId,
      'credit': instance.credit?.toJson(),
    };

WebApiModulesBillingInvoiceCreditInvoiceRequest
    _$WebApiModulesBillingInvoiceCreditInvoiceRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingInvoiceCreditInvoiceRequest(
    invoiceId: json['InvoiceId'] as String?,
    percent: (json['Percent'] as num?)?.toDouble(),
    amount: (json['Amount'] as num?)?.toDouble(),
    allocate: json['Allocate'] as bool?,
    usageDays: (json['UsageDays'] as num?)?.toDouble(),
    notes: json['Notes'] as String?,
    taxOnly: json['TaxOnly'] as bool?,
    creditFromDate: json['CreditFromDate'] == null
        ? null
        : DateTime.parse(json['CreditFromDate'] as String),
    creditToDate: json['CreditToDate'] == null
        ? null
        : DateTime.parse(json['CreditToDate'] as String),
    creditMethod: json['CreditMethod'] as String?,
    adjustCost: json['AdjustCost'] as bool?,
  );
}

Map<String, dynamic> _$WebApiModulesBillingInvoiceCreditInvoiceRequestToJson(
        WebApiModulesBillingInvoiceCreditInvoiceRequest instance) =>
    <String, dynamic>{
      'InvoiceId': instance.invoiceId,
      'Percent': instance.percent,
      'Amount': instance.amount,
      'Allocate': instance.allocate,
      'UsageDays': instance.usageDays,
      'Notes': instance.notes,
      'TaxOnly': instance.taxOnly,
      'CreditFromDate': instance.creditFromDate?.toIso8601String(),
      'CreditToDate': instance.creditToDate?.toIso8601String(),
      'CreditMethod': instance.creditMethod,
      'AdjustCost': instance.adjustCost,
    };

WebApiModulesBillingInvoiceInvoice _$WebApiModulesBillingInvoiceInvoiceFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesBillingInvoiceInvoice(
    invoiceId: json['InvoiceId'] as String?,
    invoiceNumber: json['InvoiceNumber'] as String?,
    invoiceDate: json['InvoiceDate'] as String?,
    invoiceDueDate: json['InvoiceDueDate'] as String?,
    invoiceType: json['InvoiceType'] as String?,
    billingStartDate: json['BillingStartDate'] as String?,
    billingEndDate: json['BillingEndDate'] as String?,
    usageStartDate: json['UsageStartDate'] as String?,
    usageEndDate: json['UsageEndDate'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    orderDate: json['OrderDate'] as String?,
    orderLocation: json['OrderLocation'] as String?,
    invoiceDescription: json['InvoiceDescription'] as String?,
    creditingInvoiceId: json['CreditingInvoiceId'] as String?,
    creditingInvoiceNumber: json['CreditingInvoiceNumber'] as String?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    customerTypeId: json['CustomerTypeId'] as String?,
    customerType: json['CustomerType'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    dealNumber: json['DealNumber'] as String?,
    dealTypeId: json['DealTypeId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
    workAuthorizationNumber: json['WorkAuthorizationNumber'] as String?,
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    isNoCharge: json['IsNoCharge'] as bool?,
    isAdjusted: json['IsAdjusted'] as bool?,
    isBilledHiatus: json['IsBilledHiatus'] as bool?,
    episodeNumber: json['EpisodeNumber'] as int?,
    hasLockedTotal: json['HasLockedTotal'] as bool?,
    isAlteredDates: json['IsAlteredDates'] as bool?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    invoiceCreationBatchId: json['InvoiceCreationBatchId'] as String?,
    invoiceCreationBatchNumber: json['InvoiceCreationBatchNumber'] as int?,
    invoiceGroupNumber: json['InvoiceGroupNumber'] as String?,
    rentalSale: json['RentalSale'] as bool?,
    lossAndDamage: json['LossAndDamage'] as bool?,
    repair: json['Repair'] as bool?,
    inputByUserId: json['InputByUserId'] as String?,
    flatPoId: json['FlatPoId'] as String?,
    orderType: json['OrderType'] as String?,
    rebateCustomerId: json['RebateCustomerId'] as String?,
    orbitsapchgmajor: json['Orbitsapchgmajor'] as String?,
    orbitsapchgsub: json['Orbitsapchgsub'] as String?,
    orbitsapchgdetail: json['Orbitsapchgdetail'] as String?,
    orbitsapchgdeal: json['Orbitsapchgdeal'] as String?,
    orbitsapchgset: json['Orbitsapchgset'] as String?,
    excludeFromFlatPo: json['ExcludeFromFlatPo'] as bool?,
    isSplitRental: json['IsSplitRental'] as bool?,
    isRebateRental: json['IsRebateRental'] as bool?,
    invoiceListTotal: (json['InvoiceListTotal'] as num?)?.toDouble(),
    invoiceGrossTotal: (json['InvoiceGrossTotal'] as num?)?.toDouble(),
    invoiceDiscountTotal: (json['InvoiceDiscountTotal'] as num?)?.toDouble(),
    invoiceDaysPerWeekDiscountTotal:
        (json['InvoiceDaysPerWeekDiscountTotal'] as num?)?.toDouble(),
    referenceNumber: json['ReferenceNumber'] as String?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    projectManagerId: json['ProjectManagerId'] as String?,
    projectManager: json['ProjectManager'] as String?,
    billToAddressId: json['BillToAddressId'] as String?,
    billToName: json['BillToName'] as String?,
    billToAttention1: json['BillToAttention1'] as String?,
    billToAttention2: json['BillToAttention2'] as String?,
    billToAddress1: json['BillToAddress1'] as String?,
    billToAddress2: json['BillToAddress2'] as String?,
    billToCity: json['BillToCity'] as String?,
    billToState: json['BillToState'] as String?,
    billToZipCode: json['BillToZipCode'] as String?,
    billToCountryId: json['BillToCountryId'] as String?,
    billToCountry: json['BillToCountry'] as String?,
    invoiceClass: json['InvoiceClass'] as String?,
    printNotes: json['PrintNotes'] as String?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    taxId: json['TaxId'] as String?,
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    tax1Name: json['Tax1Name'] as String?,
    tax2Name: json['Tax2Name'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    taxItemCode: json['TaxItemCode'] as String?,
    taxVendor: json['TaxVendor'] as String?,
    taxCountry: json['TaxCountry'] as String?,
    chargeBatchId: json['ChargeBatchId'] as String?,
    chargeBatchNumber: json['ChargeBatchNumber'] as String?,
    quikPayDiscount: json['QuikPayDiscount'] as bool?,
    quikPayRentalTotal: (json['QuikPayRentalTotal'] as num?)?.toDouble(),
    quikPayTotal: (json['QuikPayTotal'] as num?)?.toDouble(),
    receivedTotal: (json['ReceivedTotal'] as num?)?.toDouble(),
    rateType: json['RateType'] as String?,
    consignmentRevenue: (json['ConsignmentRevenue'] as num?)?.toDouble(),
    isNonBillable: json['IsNonBillable'] as bool?,
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    officeLocationDefaultCurrencyId:
        json['OfficeLocationDefaultCurrencyId'] as String?,
    divisionId: json['DivisionId'] as String?,
    outsideSalesRepresentativeId:
        json['OutsideSalesRepresentativeId'] as String?,
    outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
    exportTaxAsLineItem: json['ExportTaxAsLineItem'] as bool?,
    invoiceNumberColor: json['InvoiceNumberColor'] as String?,
    statusColor: json['StatusColor'] as String?,
    orderNumberColor: json['OrderNumberColor'] as String?,
    purchaseOrderNumberColor: json['PurchaseOrderNumberColor'] as String?,
    dealColor: json['DealColor'] as String?,
    billingStartDateColor: json['BillingStartDateColor'] as String?,
    invoiceTotalColor: json['InvoiceTotalColor'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    hasRentalItem: json['HasRentalItem'] as bool?,
    hasMeterItem: json['HasMeterItem'] as bool?,
    hasSalesItem: json['HasSalesItem'] as bool?,
    hasLaborItem: json['HasLaborItem'] as bool?,
    hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
    hasFacilityItem: json['HasFacilityItem'] as bool?,
    hasTransportationItem: json['HasTransportationItem'] as bool?,
    hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
    hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
    rentalTotal: (json['RentalTotal'] as num?)?.toDouble(),
    salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
    facilitiesTotal: (json['FacilitiesTotal'] as num?)?.toDouble(),
    miscellaneousTotal: (json['MiscellaneousTotal'] as num?)?.toDouble(),
    laborTotal: (json['LaborTotal'] as num?)?.toDouble(),
    partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
    assetSaleTotal: (json['AssetSaleTotal'] as num?)?.toDouble(),
    invoiceSubTotal: (json['InvoiceSubTotal'] as num?)?.toDouble(),
    invoiceTax1: (json['InvoiceTax1'] as num?)?.toDouble(),
    invoiceTax2: (json['InvoiceTax2'] as num?)?.toDouble(),
    invoiceTax: (json['InvoiceTax'] as num?)?.toDouble(),
    invoiceTotal: (json['InvoiceTotal'] as num?)?.toDouble(),
    isStandAloneInvoice: json['IsStandAloneInvoice'] as bool?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesBillingInvoiceInvoiceToJson(
        WebApiModulesBillingInvoiceInvoice instance) =>
    <String, dynamic>{
      'InvoiceId': instance.invoiceId,
      'InvoiceNumber': instance.invoiceNumber,
      'InvoiceDate': instance.invoiceDate,
      'InvoiceDueDate': instance.invoiceDueDate,
      'InvoiceType': instance.invoiceType,
      'BillingStartDate': instance.billingStartDate,
      'BillingEndDate': instance.billingEndDate,
      'UsageStartDate': instance.usageStartDate,
      'UsageEndDate': instance.usageEndDate,
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'OrderDescription': instance.orderDescription,
      'OrderDate': instance.orderDate,
      'OrderLocation': instance.orderLocation,
      'InvoiceDescription': instance.invoiceDescription,
      'CreditingInvoiceId': instance.creditingInvoiceId,
      'CreditingInvoiceNumber': instance.creditingInvoiceNumber,
      'CustomerId': instance.customerId,
      'Customer': instance.customer,
      'CustomerTypeId': instance.customerTypeId,
      'CustomerType': instance.customerType,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'DealNumber': instance.dealNumber,
      'DealTypeId': instance.dealTypeId,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'PurchaseOrderNumber': instance.purchaseOrderNumber,
      'WorkAuthorizationNumber': instance.workAuthorizationNumber,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'IsNoCharge': instance.isNoCharge,
      'IsAdjusted': instance.isAdjusted,
      'IsBilledHiatus': instance.isBilledHiatus,
      'EpisodeNumber': instance.episodeNumber,
      'HasLockedTotal': instance.hasLockedTotal,
      'IsAlteredDates': instance.isAlteredDates,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'InvoiceCreationBatchId': instance.invoiceCreationBatchId,
      'InvoiceCreationBatchNumber': instance.invoiceCreationBatchNumber,
      'InvoiceGroupNumber': instance.invoiceGroupNumber,
      'RentalSale': instance.rentalSale,
      'LossAndDamage': instance.lossAndDamage,
      'Repair': instance.repair,
      'InputByUserId': instance.inputByUserId,
      'FlatPoId': instance.flatPoId,
      'OrderType': instance.orderType,
      'RebateCustomerId': instance.rebateCustomerId,
      'Orbitsapchgmajor': instance.orbitsapchgmajor,
      'Orbitsapchgsub': instance.orbitsapchgsub,
      'Orbitsapchgdetail': instance.orbitsapchgdetail,
      'Orbitsapchgdeal': instance.orbitsapchgdeal,
      'Orbitsapchgset': instance.orbitsapchgset,
      'ExcludeFromFlatPo': instance.excludeFromFlatPo,
      'IsSplitRental': instance.isSplitRental,
      'IsRebateRental': instance.isRebateRental,
      'InvoiceListTotal': instance.invoiceListTotal,
      'InvoiceGrossTotal': instance.invoiceGrossTotal,
      'InvoiceDiscountTotal': instance.invoiceDiscountTotal,
      'InvoiceDaysPerWeekDiscountTotal':
          instance.invoiceDaysPerWeekDiscountTotal,
      'ReferenceNumber': instance.referenceNumber,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'ProjectManagerId': instance.projectManagerId,
      'ProjectManager': instance.projectManager,
      'BillToAddressId': instance.billToAddressId,
      'BillToName': instance.billToName,
      'BillToAttention1': instance.billToAttention1,
      'BillToAttention2': instance.billToAttention2,
      'BillToAddress1': instance.billToAddress1,
      'BillToAddress2': instance.billToAddress2,
      'BillToCity': instance.billToCity,
      'BillToState': instance.billToState,
      'BillToZipCode': instance.billToZipCode,
      'BillToCountryId': instance.billToCountryId,
      'BillToCountry': instance.billToCountry,
      'InvoiceClass': instance.invoiceClass,
      'PrintNotes': instance.printNotes,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'PaymentTypeId': instance.paymentTypeId,
      'PaymentType': instance.paymentType,
      'TaxId': instance.taxId,
      'TaxOptionId': instance.taxOptionId,
      'TaxOption': instance.taxOption,
      'Tax1Name': instance.tax1Name,
      'Tax2Name': instance.tax2Name,
      'RentalTaxRate1': instance.rentalTaxRate1,
      'SalesTaxRate1': instance.salesTaxRate1,
      'LaborTaxRate1': instance.laborTaxRate1,
      'RentalTaxRate2': instance.rentalTaxRate2,
      'SalesTaxRate2': instance.salesTaxRate2,
      'LaborTaxRate2': instance.laborTaxRate2,
      'TaxItemCode': instance.taxItemCode,
      'TaxVendor': instance.taxVendor,
      'TaxCountry': instance.taxCountry,
      'ChargeBatchId': instance.chargeBatchId,
      'ChargeBatchNumber': instance.chargeBatchNumber,
      'QuikPayDiscount': instance.quikPayDiscount,
      'QuikPayRentalTotal': instance.quikPayRentalTotal,
      'QuikPayTotal': instance.quikPayTotal,
      'ReceivedTotal': instance.receivedTotal,
      'RateType': instance.rateType,
      'ConsignmentRevenue': instance.consignmentRevenue,
      'IsNonBillable': instance.isNonBillable,
      'CurrencyId': instance.currencyId,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'OfficeLocationDefaultCurrencyId':
          instance.officeLocationDefaultCurrencyId,
      'DivisionId': instance.divisionId,
      'OutsideSalesRepresentativeId': instance.outsideSalesRepresentativeId,
      'OutsideSalesRepresentative': instance.outsideSalesRepresentative,
      'ExportTaxAsLineItem': instance.exportTaxAsLineItem,
      'InvoiceNumberColor': instance.invoiceNumberColor,
      'StatusColor': instance.statusColor,
      'OrderNumberColor': instance.orderNumberColor,
      'PurchaseOrderNumberColor': instance.purchaseOrderNumberColor,
      'DealColor': instance.dealColor,
      'BillingStartDateColor': instance.billingStartDateColor,
      'InvoiceTotalColor': instance.invoiceTotalColor,
      'DescriptionColor': instance.descriptionColor,
      'HasRentalItem': instance.hasRentalItem,
      'HasMeterItem': instance.hasMeterItem,
      'HasSalesItem': instance.hasSalesItem,
      'HasLaborItem': instance.hasLaborItem,
      'HasMiscellaneousItem': instance.hasMiscellaneousItem,
      'HasFacilityItem': instance.hasFacilityItem,
      'HasTransportationItem': instance.hasTransportationItem,
      'HasRentalSaleItem': instance.hasRentalSaleItem,
      'HasLossAndDamageItem': instance.hasLossAndDamageItem,
      'RentalTotal': instance.rentalTotal,
      'SalesTotal': instance.salesTotal,
      'FacilitiesTotal': instance.facilitiesTotal,
      'MiscellaneousTotal': instance.miscellaneousTotal,
      'LaborTotal': instance.laborTotal,
      'PartsTotal': instance.partsTotal,
      'AssetSaleTotal': instance.assetSaleTotal,
      'InvoiceSubTotal': instance.invoiceSubTotal,
      'InvoiceTax1': instance.invoiceTax1,
      'InvoiceTax2': instance.invoiceTax2,
      'InvoiceTax': instance.invoiceTax,
      'InvoiceTotal': instance.invoiceTotal,
      'IsStandAloneInvoice': instance.isStandAloneInvoice,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesBillingInvoiceToggleInvoiceApprovedResponse
    _$WebApiModulesBillingInvoiceToggleInvoiceApprovedResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingInvoiceToggleInvoiceApprovedResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesBillingInvoiceToggleInvoiceApprovedResponseToJson(
        WebApiModulesBillingInvoiceToggleInvoiceApprovedResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesBillingPaymentPayment _$WebApiModulesBillingPaymentPaymentFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesBillingPaymentPayment(
    paymentId: json['PaymentId'] as String?,
    paymentDate: json['PaymentDate'] as String?,
    locationId: json['LocationId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    locationCode: json['LocationCode'] as String?,
    location: json['Location'] as String?,
    vendorId: json['VendorId'] as String?,
    vendor: json['Vendor'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    bankAccountId: json['BankAccountId'] as int?,
    accountName: json['AccountName'] as String?,
    officeLocationDefaultCurrencyId:
        json['OfficeLocationDefaultCurrencyId'] as String?,
    currencyId: json['CurrencyId'] as String?,
    currency: json['Currency'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    checkNumber: json['CheckNumber'] as String?,
    paymentDocumentNumber: json['PaymentDocumentNumber'] as String?,
    paymentAmount: (json['PaymentAmount'] as num?)?.toDouble(),
    appliedById: json['AppliedById'] as String?,
    appliedBy: json['AppliedBy'] as String?,
    modifiedById: json['ModifiedById'] as String?,
    modifiedBy: json['ModifiedBy'] as String?,
    paymentMemo: json['PaymentMemo'] as String?,
    recType: json['RecType'] as String?,
    chargeBatchId: json['ChargeBatchId'] as String?,
    chargeBatchNumber: json['ChargeBatchNumber'] as String?,
    vendorInvoiceDataList: (json['VendorInvoiceDataList'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesBillingPaymentPaymentVendorInvoice.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesBillingPaymentPaymentToJson(
        WebApiModulesBillingPaymentPayment instance) =>
    <String, dynamic>{
      'PaymentId': instance.paymentId,
      'PaymentDate': instance.paymentDate,
      'LocationId': instance.locationId,
      'DepartmentId': instance.departmentId,
      'LocationCode': instance.locationCode,
      'Location': instance.location,
      'VendorId': instance.vendorId,
      'Vendor': instance.vendor,
      'PaymentTypeId': instance.paymentTypeId,
      'PaymentType': instance.paymentType,
      'BankAccountId': instance.bankAccountId,
      'AccountName': instance.accountName,
      'OfficeLocationDefaultCurrencyId':
          instance.officeLocationDefaultCurrencyId,
      'CurrencyId': instance.currencyId,
      'Currency': instance.currency,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'CheckNumber': instance.checkNumber,
      'PaymentDocumentNumber': instance.paymentDocumentNumber,
      'PaymentAmount': instance.paymentAmount,
      'AppliedById': instance.appliedById,
      'AppliedBy': instance.appliedBy,
      'ModifiedById': instance.modifiedById,
      'ModifiedBy': instance.modifiedBy,
      'PaymentMemo': instance.paymentMemo,
      'RecType': instance.recType,
      'ChargeBatchId': instance.chargeBatchId,
      'ChargeBatchNumber': instance.chargeBatchNumber,
      'VendorInvoiceDataList':
          instance.vendorInvoiceDataList?.map((e) => e.toJson()).toList(),
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesBillingPaymentPaymentVendorInvoice
    _$WebApiModulesBillingPaymentPaymentVendorInvoiceFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingPaymentPaymentVendorInvoice(
    vendorInvoicePaymentId: json['VendorInvoicePaymentId'] as String?,
    vendorInvoiceId: json['VendorInvoiceId'] as String?,
    amount: (json['Amount'] as num?)?.toDouble(),
  );
}

Map<String, dynamic> _$WebApiModulesBillingPaymentPaymentVendorInvoiceToJson(
        WebApiModulesBillingPaymentPaymentVendorInvoice instance) =>
    <String, dynamic>{
      'VendorInvoicePaymentId': instance.vendorInvoicePaymentId,
      'VendorInvoiceId': instance.vendorInvoiceId,
      'Amount': instance.amount,
    };

WebApiModulesBillingReceiptAddDepletingDepositRequest
    _$WebApiModulesBillingReceiptAddDepletingDepositRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingReceiptAddDepletingDepositRequest(
    orderId: json['OrderId'] as String?,
    dealId: json['DealId'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentAmount: (json['PaymentAmount'] as num?)?.toDouble(),
    receiptDate: json['ReceiptDate'] == null
        ? null
        : DateTime.parse(json['ReceiptDate'] as String),
    locationId: json['LocationId'] as String?,
    currencyId: json['CurrencyId'] as String?,
    checkNumber: json['CheckNumber'] as String?,
    paymentMemo: json['PaymentMemo'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesBillingReceiptAddDepletingDepositRequestToJson(
            WebApiModulesBillingReceiptAddDepletingDepositRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'DealId': instance.dealId,
          'PaymentTypeId': instance.paymentTypeId,
          'PaymentAmount': instance.paymentAmount,
          'ReceiptDate': instance.receiptDate?.toIso8601String(),
          'LocationId': instance.locationId,
          'CurrencyId': instance.currencyId,
          'CheckNumber': instance.checkNumber,
          'PaymentMemo': instance.paymentMemo,
        };

WebApiModulesBillingReceiptCreditCardDepletingDepositRequest
    _$WebApiModulesBillingReceiptCreditCardDepletingDepositRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingReceiptCreditCardDepletingDepositRequest(
    orderId: json['OrderId'] as String?,
    amountToPay: (json['AmountToPay'] as num?)?.toDouble(),
    pINPadCode: json['PINPad_Code'] as String?,
    dealNumber: json['DealNumber'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesBillingReceiptCreditCardDepletingDepositRequestToJson(
            WebApiModulesBillingReceiptCreditCardDepletingDepositRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'AmountToPay': instance.amountToPay,
          'PINPad_Code': instance.pINPadCode,
          'DealNumber': instance.dealNumber,
        };

WebApiModulesBillingReceiptCreditCardRefundRequest
    _$WebApiModulesBillingReceiptCreditCardRefundRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingReceiptCreditCardRefundRequest(
    receiptId: json['ReceiptId'] as String?,
    pINPadCode: json['PINPad_Code'] as String?,
    refundAmount: (json['RefundAmount'] as num?)?.toDouble(),
  );
}

Map<String, dynamic> _$WebApiModulesBillingReceiptCreditCardRefundRequestToJson(
        WebApiModulesBillingReceiptCreditCardRefundRequest instance) =>
    <String, dynamic>{
      'ReceiptId': instance.receiptId,
      'PINPad_Code': instance.pINPadCode,
      'RefundAmount': instance.refundAmount,
    };

WebApiModulesBillingReceiptReceipt _$WebApiModulesBillingReceiptReceiptFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesBillingReceiptReceipt(
    receiptId: json['ReceiptId'] as String?,
    receiptDate: json['ReceiptDate'] as String?,
    locationId: json['LocationId'] as String?,
    locationCode: json['LocationCode'] as String?,
    location: json['Location'] as String?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    paymentBy: json['PaymentBy'] as String?,
    customerDeal: json['CustomerDeal'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    paymentTypeType: json['PaymentTypeType'] as String?,
    paymentTypeExportPaymentMethod:
        json['PaymentTypeExportPaymentMethod'] as String?,
    checkNumber: json['CheckNumber'] as String?,
    paymentAmount: (json['PaymentAmount'] as num?)?.toDouble(),
    appliedById: json['AppliedById'] as String?,
    appliedBy: json['AppliedBy'] as String?,
    modifiedById: json['ModifiedById'] as String?,
    modifiedBy: json['ModifiedBy'] as String?,
    paymentMemo: json['PaymentMemo'] as String?,
    recType: json['RecType'] as String?,
    chargeBatchId: json['ChargeBatchId'] as String?,
    chargeBatchNumber: json['ChargeBatchNumber'] as String?,
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    officeLocationDefaultCurrencyId:
        json['OfficeLocationDefaultCurrencyId'] as String?,
    overPaymentId: json['OverPaymentId'] as String?,
    invoiceDataList: (json['InvoiceDataList'] as List<dynamic>?)
            ?.map((e) => WebApiModulesBillingReceiptReceiptInvoice.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    creditDataList: (json['CreditDataList'] as List<dynamic>?)
            ?.map((e) => WebApiModulesBillingReceiptReceiptCredit.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    createOverpayment: json['CreateOverpayment'] as bool?,
    createDepletingDeposit: json['CreateDepletingDeposit'] as bool?,
    dealDepositId: json['DealDepositId'] as String?,
    dealDepositCheckNumber: json['DealDepositCheckNumber'] as String?,
    customerDepositId: json['CustomerDepositId'] as String?,
    customerDepositCheckNumber: json['CustomerDepositCheckNumber'] as String?,
    orderId: json['OrderId'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    authorizationCode: json['AuthorizationCode'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesBillingReceiptReceiptToJson(
        WebApiModulesBillingReceiptReceipt instance) =>
    <String, dynamic>{
      'ReceiptId': instance.receiptId,
      'ReceiptDate': instance.receiptDate,
      'LocationId': instance.locationId,
      'LocationCode': instance.locationCode,
      'Location': instance.location,
      'CustomerId': instance.customerId,
      'Customer': instance.customer,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'PaymentBy': instance.paymentBy,
      'CustomerDeal': instance.customerDeal,
      'PaymentTypeId': instance.paymentTypeId,
      'PaymentType': instance.paymentType,
      'PaymentTypeType': instance.paymentTypeType,
      'PaymentTypeExportPaymentMethod': instance.paymentTypeExportPaymentMethod,
      'CheckNumber': instance.checkNumber,
      'PaymentAmount': instance.paymentAmount,
      'AppliedById': instance.appliedById,
      'AppliedBy': instance.appliedBy,
      'ModifiedById': instance.modifiedById,
      'ModifiedBy': instance.modifiedBy,
      'PaymentMemo': instance.paymentMemo,
      'RecType': instance.recType,
      'ChargeBatchId': instance.chargeBatchId,
      'ChargeBatchNumber': instance.chargeBatchNumber,
      'CurrencyId': instance.currencyId,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'OfficeLocationDefaultCurrencyId':
          instance.officeLocationDefaultCurrencyId,
      'OverPaymentId': instance.overPaymentId,
      'InvoiceDataList':
          instance.invoiceDataList?.map((e) => e.toJson()).toList(),
      'CreditDataList':
          instance.creditDataList?.map((e) => e.toJson()).toList(),
      'CreateOverpayment': instance.createOverpayment,
      'CreateDepletingDeposit': instance.createDepletingDeposit,
      'DealDepositId': instance.dealDepositId,
      'DealDepositCheckNumber': instance.dealDepositCheckNumber,
      'CustomerDepositId': instance.customerDepositId,
      'CustomerDepositCheckNumber': instance.customerDepositCheckNumber,
      'OrderId': instance.orderId,
      'OrderDescription': instance.orderDescription,
      'AuthorizationCode': instance.authorizationCode,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesBillingReceiptReceiptCredit
    _$WebApiModulesBillingReceiptReceiptCreditFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingReceiptReceiptCredit(
    creditReceiptId: json['CreditReceiptId'] as String?,
    creditId: json['CreditId'] as String?,
    amount: (json['Amount'] as num?)?.toDouble(),
  );
}

Map<String, dynamic> _$WebApiModulesBillingReceiptReceiptCreditToJson(
        WebApiModulesBillingReceiptReceiptCredit instance) =>
    <String, dynamic>{
      'CreditReceiptId': instance.creditReceiptId,
      'CreditId': instance.creditId,
      'Amount': instance.amount,
    };

WebApiModulesBillingReceiptReceiptInvoice
    _$WebApiModulesBillingReceiptReceiptInvoiceFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingReceiptReceiptInvoice(
    invoiceReceiptId: json['InvoiceReceiptId'] as String?,
    invoiceId: json['InvoiceId'] as String?,
    amount: (json['Amount'] as num?)?.toDouble(),
  );
}

Map<String, dynamic> _$WebApiModulesBillingReceiptReceiptInvoiceToJson(
        WebApiModulesBillingReceiptReceiptInvoice instance) =>
    <String, dynamic>{
      'InvoiceReceiptId': instance.invoiceReceiptId,
      'InvoiceId': instance.invoiceId,
      'Amount': instance.amount,
    };

WebApiModulesBillingReceiptRemainingDepositAmountsResponse
    _$WebApiModulesBillingReceiptRemainingDepositAmountsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingReceiptRemainingDepositAmountsResponse(
    depletingDeposits: (json['DepletingDeposits'] as num?)?.toDouble(),
    depletingDepositsFormatted: json['DepletingDepositsFormatted'] as String?,
    creditMemos: (json['CreditMemos'] as num?)?.toDouble(),
    creditMemosFormatted: json['CreditMemosFormatted'] as String?,
    overpayments: (json['Overpayments'] as num?)?.toDouble(),
    overpaymentsFormatted: json['OverpaymentsFormatted'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesBillingReceiptRemainingDepositAmountsResponseToJson(
        WebApiModulesBillingReceiptRemainingDepositAmountsResponse instance) =>
    <String, dynamic>{
      'DepletingDeposits': instance.depletingDeposits,
      'DepletingDepositsFormatted': instance.depletingDepositsFormatted,
      'CreditMemos': instance.creditMemos,
      'CreditMemosFormatted': instance.creditMemosFormatted,
      'Overpayments': instance.overpayments,
      'OverpaymentsFormatted': instance.overpaymentsFormatted,
    };

WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedRequest
    _$WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedRequest(
    vendorInvoiceId: json['VendorInvoiceId'] as String?,
    pushChangesToPurchaseOrder: json['PushChangesToPurchaseOrder'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedRequestToJson(
            WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedRequest
                instance) =>
        <String, dynamic>{
          'VendorInvoiceId': instance.vendorInvoiceId,
          'PushChangesToPurchaseOrder': instance.pushChangesToPurchaseOrder,
        };

WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedResponse
    _$WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    promptToUpdatePurchaseOrder: json['PromptToUpdatePurchaseOrder'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedResponseToJson(
            WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'PromptToUpdatePurchaseOrder': instance.promptToUpdatePurchaseOrder,
        };

WebApiModulesBillingVendorInvoiceVendorInvoice
    _$WebApiModulesBillingVendorInvoiceVendorInvoiceFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesBillingVendorInvoiceVendorInvoice(
    vendorInvoiceId: json['VendorInvoiceId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
    purchaseOrderDescription: json['PurchaseOrderDescription'] as String?,
    requistionNumber: json['RequistionNumber'] as String?,
    vendor: json['Vendor'] as String?,
    vendorNumber: json['VendorNumber'] as String?,
    vendorId: json['VendorId'] as String?,
    invoiceBatchId: json['InvoiceBatchId'] as String?,
    inputDate: json['InputDate'] as String?,
    invoiceNumber: json['InvoiceNumber'] as String?,
    invoiceDate: json['InvoiceDate'] as String?,
    invoiceDueDate: json['InvoiceDueDate'] as String?,
    billingStartDate: json['BillingStartDate'] as String?,
    billingEndDate: json['BillingEndDate'] as String?,
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    purchaseOrderDealId: json['PurchaseOrderDealId'] as String?,
    purchaseOrderDealNumber: json['PurchaseOrderDealNumber'] as String?,
    purchaseOrderDeal: json['PurchaseOrderDeal'] as String?,
    purchaseOrderDealNumberDeal: json['PurchaseOrderDealNumberDeal'] as String?,
    purchaseOrderDate: json['PurchaseOrderDate'] as String?,
    purchaseOrderEstimatedStopDate:
        json['PurchaseOrderEstimatedStopDate'] as String?,
    purchaseOrderEstimatedStartDate:
        json['PurchaseOrderEstimatedStartDate'] as String?,
    purchaseOrderBillingCycleId: json['PurchaseOrderBillingCycleId'] as String?,
    purchaseOrderBillingCycle: json['PurchaseOrderBillingCycle'] as String?,
    purchaseOrderPaymentTermsId: json['PurchaseOrderPaymentTermsId'] as String?,
    purchaseOrderPaymentTerms: json['PurchaseOrderPaymentTerms'] as String?,
    approvedDate: json['ApprovedDate'] as String?,
    locationId: json['LocationId'] as String?,
    location: json['Location'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    invoiceTotal: (json['InvoiceTotal'] as num?)?.toDouble(),
    billToAddress1: json['BillToAddress1'] as String?,
    billToAddress2: json['BillToAddress2'] as String?,
    billToCity: json['BillToCity'] as String?,
    billToState: json['BillToState'] as String?,
    billToZipCode: json['BillToZipCode'] as String?,
    billToCountry: json['BillToCountry'] as String?,
    vendorPhone: json['VendorPhone'] as String?,
    vendorFax: json['VendorFax'] as String?,
    invoiceClass: json['InvoiceClass'] as bool?,
    printNotes: json['PrintNotes'] as bool?,
    paymentTermsId: json['PaymentTermsId'] as String?,
    paymentTerms: json['PaymentTerms'] as String?,
    taxId: json['TaxId'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    tax1Name: json['Tax1Name'] as String?,
    tax2Name: json['Tax2Name'] as String?,
    taxItemCode: json['TaxItemCode'] as String?,
    notes: json['Notes'] as String?,
    billedHiatus: json['BilledHiatus'] as bool?,
    invoiceType: json['InvoiceType'] as String?,
    agentId: json['AgentId'] as String?,
    projectManagerId: json['ProjectManagerId'] as String?,
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    officeLocationDefaultCurrencyId:
        json['OfficeLocationDefaultCurrencyId'] as String?,
    dealBilledExtended: (json['DealBilledExtended'] as num?)?.toDouble(),
    credit: (json['Credit'] as num?)?.toDouble(),
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesBillingVendorInvoiceVendorInvoiceToJson(
        WebApiModulesBillingVendorInvoiceVendorInvoice instance) =>
    <String, dynamic>{
      'VendorInvoiceId': instance.vendorInvoiceId,
      'PurchaseOrderId': instance.purchaseOrderId,
      'PurchaseOrderNumber': instance.purchaseOrderNumber,
      'PurchaseOrderDescription': instance.purchaseOrderDescription,
      'RequistionNumber': instance.requistionNumber,
      'Vendor': instance.vendor,
      'VendorNumber': instance.vendorNumber,
      'VendorId': instance.vendorId,
      'InvoiceBatchId': instance.invoiceBatchId,
      'InputDate': instance.inputDate,
      'InvoiceNumber': instance.invoiceNumber,
      'InvoiceDate': instance.invoiceDate,
      'InvoiceDueDate': instance.invoiceDueDate,
      'BillingStartDate': instance.billingStartDate,
      'BillingEndDate': instance.billingEndDate,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'OrderNumber': instance.orderNumber,
      'OrderDescription': instance.orderDescription,
      'PurchaseOrderDealId': instance.purchaseOrderDealId,
      'PurchaseOrderDealNumber': instance.purchaseOrderDealNumber,
      'PurchaseOrderDeal': instance.purchaseOrderDeal,
      'PurchaseOrderDealNumberDeal': instance.purchaseOrderDealNumberDeal,
      'PurchaseOrderDate': instance.purchaseOrderDate,
      'PurchaseOrderEstimatedStopDate': instance.purchaseOrderEstimatedStopDate,
      'PurchaseOrderEstimatedStartDate':
          instance.purchaseOrderEstimatedStartDate,
      'PurchaseOrderBillingCycleId': instance.purchaseOrderBillingCycleId,
      'PurchaseOrderBillingCycle': instance.purchaseOrderBillingCycle,
      'PurchaseOrderPaymentTermsId': instance.purchaseOrderPaymentTermsId,
      'PurchaseOrderPaymentTerms': instance.purchaseOrderPaymentTerms,
      'ApprovedDate': instance.approvedDate,
      'LocationId': instance.locationId,
      'Location': instance.location,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'InvoiceTotal': instance.invoiceTotal,
      'BillToAddress1': instance.billToAddress1,
      'BillToAddress2': instance.billToAddress2,
      'BillToCity': instance.billToCity,
      'BillToState': instance.billToState,
      'BillToZipCode': instance.billToZipCode,
      'BillToCountry': instance.billToCountry,
      'VendorPhone': instance.vendorPhone,
      'VendorFax': instance.vendorFax,
      'InvoiceClass': instance.invoiceClass,
      'PrintNotes': instance.printNotes,
      'PaymentTermsId': instance.paymentTermsId,
      'PaymentTerms': instance.paymentTerms,
      'TaxId': instance.taxId,
      'RentalTaxRate1': instance.rentalTaxRate1,
      'SalesTaxRate1': instance.salesTaxRate1,
      'LaborTaxRate1': instance.laborTaxRate1,
      'RentalTaxRate2': instance.rentalTaxRate2,
      'SalesTaxRate2': instance.salesTaxRate2,
      'LaborTaxRate2': instance.laborTaxRate2,
      'TaxOptionId': instance.taxOptionId,
      'TaxOption': instance.taxOption,
      'Tax1Name': instance.tax1Name,
      'Tax2Name': instance.tax2Name,
      'TaxItemCode': instance.taxItemCode,
      'Notes': instance.notes,
      'BilledHiatus': instance.billedHiatus,
      'InvoiceType': instance.invoiceType,
      'AgentId': instance.agentId,
      'ProjectManagerId': instance.projectManagerId,
      'CurrencyId': instance.currencyId,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'OfficeLocationDefaultCurrencyId':
          instance.officeLocationDefaultCurrencyId,
      'DealBilledExtended': instance.dealBilledExtended,
      'Credit': instance.credit,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesContainersContainerContainer
    _$WebApiModulesContainersContainerContainerFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesContainersContainerContainer(
    containerId: json['ContainerId'] as String?,
    description: json['Description'] as String?,
    rental: json['Rental'] as bool?,
    iCode: json['ICode'] as String?,
    scannableInventoryId: json['ScannableInventoryId'] as String?,
    scannableICode: json['ScannableICode'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesContainersContainerContainerToJson(
        WebApiModulesContainersContainerContainer instance) =>
    <String, dynamic>{
      'ContainerId': instance.containerId,
      'Description': instance.description,
      'Rental': instance.rental,
      'ICode': instance.iCode,
      'ScannableInventoryId': instance.scannableInventoryId,
      'ScannableICode': instance.scannableICode,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsAddressAddress
    _$WebApiModulesHomeControlsAddressAddressFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsAddressAddress(
    addressId: json['AddressId'] as String?,
    name: json['Name'] as String?,
    attention: json['Attention'] as String?,
    attention2: json['Attention2'] as String?,
    address1: json['Address1'] as String?,
    address2: json['Address2'] as String?,
    city: json['City'] as String?,
    state: json['State'] as String?,
    countryId: json['CountryId'] as String?,
    country: json['Country'] as String?,
    zipCode: json['ZipCode'] as String?,
    phone: json['Phone'] as String?,
    fax: json['Fax'] as String?,
    phoneTollFree: json['PhoneTollFree'] as String?,
    phoneOther: json['PhoneOther'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId3: json['UniqueId3'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsAddressAddressToJson(
        WebApiModulesHomeControlsAddressAddress instance) =>
    <String, dynamic>{
      'AddressId': instance.addressId,
      'Name': instance.name,
      'Attention': instance.attention,
      'Attention2': instance.attention2,
      'Address1': instance.address1,
      'Address2': instance.address2,
      'City': instance.city,
      'State': instance.state,
      'CountryId': instance.countryId,
      'Country': instance.country,
      'ZipCode': instance.zipCode,
      'Phone': instance.phone,
      'Fax': instance.fax,
      'PhoneTollFree': instance.phoneTollFree,
      'PhoneOther': instance.phoneOther,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId3': instance.uniqueId3,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescription
    _$WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescription(
    alternativeDescriptionId: json['AlternativeDescriptionId'] as int?,
    internalChar: json['InternalChar'] as bool?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    aka: json['AKA'] as String?,
    allowedOnInvoice: json['AllowedOnInvoice'] as bool?,
    isPrimary: json['IsPrimary'] as bool?,
    inactive: json['Inactive'] as bool?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionToJson(
            WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescription
                instance) =>
        <String, dynamic>{
          'AlternativeDescriptionId': instance.alternativeDescriptionId,
          'InternalChar': instance.internalChar,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'AKA': instance.aka,
          'AllowedOnInvoice': instance.allowedOnInvoice,
          'IsPrimary': instance.isPrimary,
          'Inactive': instance.inactive,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsCompanyCompany
    _$WebApiModulesHomeControlsCompanyCompanyFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsCompanyCompany(
    companyId: json['CompanyId'] as String?,
    companyNumber: json['CompanyNumber'] as String?,
    company: json['Company'] as String?,
    companyType: json['CompanyType'] as String?,
    companyTypeColor: json['CompanyTypeColor'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsCompanyCompanyToJson(
        WebApiModulesHomeControlsCompanyCompany instance) =>
    <String, dynamic>{
      'CompanyId': instance.companyId,
      'CompanyNumber': instance.companyNumber,
      'Company': instance.company,
      'CompanyType': instance.companyType,
      'CompanyTypeColor': instance.companyTypeColor,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsCompanyContactCompanyContact
    _$WebApiModulesHomeControlsCompanyContactCompanyContactFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsCompanyContactCompanyContact(
    companyContactId: json['CompanyContactId'] as String?,
    companyId: json['CompanyId'] as String?,
    company: json['Company'] as String?,
    companyType: json['CompanyType'] as String?,
    companyTypeColor: json['CompanyTypeColor'] as String?,
    contactId: json['ContactId'] as String?,
    salutation: json['Salutation'] as String?,
    nameFirstMiddleLast: json['NameFirstMiddleLast'] as String?,
    person: json['Person'] as String?,
    lastName: json['LastName'] as String?,
    firstName: json['FirstName'] as String?,
    middleInitial: json['MiddleInitial'] as String?,
    jobTitle: json['JobTitle'] as String?,
    contactTitleId: json['ContactTitleId'] as String?,
    contactTitle: json['ContactTitle'] as String?,
    isPrimary: json['IsPrimary'] as bool?,
    activeDate: json['ActiveDate'] as String?,
    inactiveDate: json['InactiveDate'] as String?,
    authorized: json['Authorized'] as bool?,
    orderNotify: json['OrderNotify'] as bool?,
    officePhone: json['OfficePhone'] as String?,
    officeExtension: json['OfficeExtension'] as String?,
    fax: json['Fax'] as String?,
    faxExtension: json['FaxExtension'] as String?,
    email: json['Email'] as String?,
    directPhone: json['DirectPhone'] as String?,
    directExtension: json['DirectExtension'] as String?,
    pager: json['Pager'] as String?,
    pagerPin: json['PagerPin'] as String?,
    printable: json['Printable'] as bool?,
    mobilePhone: json['MobilePhone'] as String?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsCompanyContactCompanyContactToJson(
            WebApiModulesHomeControlsCompanyContactCompanyContact instance) =>
        <String, dynamic>{
          'CompanyContactId': instance.companyContactId,
          'CompanyId': instance.companyId,
          'Company': instance.company,
          'CompanyType': instance.companyType,
          'CompanyTypeColor': instance.companyTypeColor,
          'ContactId': instance.contactId,
          'Salutation': instance.salutation,
          'NameFirstMiddleLast': instance.nameFirstMiddleLast,
          'Person': instance.person,
          'LastName': instance.lastName,
          'FirstName': instance.firstName,
          'MiddleInitial': instance.middleInitial,
          'JobTitle': instance.jobTitle,
          'ContactTitleId': instance.contactTitleId,
          'ContactTitle': instance.contactTitle,
          'IsPrimary': instance.isPrimary,
          'ActiveDate': instance.activeDate,
          'InactiveDate': instance.inactiveDate,
          'Authorized': instance.authorized,
          'OrderNotify': instance.orderNotify,
          'OfficePhone': instance.officePhone,
          'OfficeExtension': instance.officeExtension,
          'Fax': instance.fax,
          'FaxExtension': instance.faxExtension,
          'Email': instance.email,
          'DirectPhone': instance.directPhone,
          'DirectExtension': instance.directExtension,
          'Pager': instance.pager,
          'PagerPin': instance.pagerPin,
          'Printable': instance.printable,
          'MobilePhone': instance.mobilePhone,
          'Inactive': instance.inactive,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOption
    _$WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOption(
    id: json['Id'] as int?,
    internalChar: json['InternalChar'] as String?,
    companyId: json['CompanyId'] as String?,
    locationId: json['LocationId'] as String?,
    location: json['Location'] as String?,
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    taxCountry: json['TaxCountry'] as String?,
    taxRule: json['TaxRule'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    rentalExempt: json['RentalExempt'] as bool?,
    rentalTaxDisplay: json['RentalTaxDisplay'] as String?,
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    salesExempt: json['SalesExempt'] as bool?,
    salesTaxDisplay: json['SalesTaxDisplay'] as String?,
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    laborExempt: json['LaborExempt'] as bool?,
    laborTaxDisplay: json['LaborTaxDisplay'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionToJson(
        WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOption instance) =>
    <String, dynamic>{
      'Id': instance.id,
      'InternalChar': instance.internalChar,
      'CompanyId': instance.companyId,
      'LocationId': instance.locationId,
      'Location': instance.location,
      'TaxOptionId': instance.taxOptionId,
      'TaxOption': instance.taxOption,
      'TaxCountry': instance.taxCountry,
      'TaxRule': instance.taxRule,
      'RentalTaxRate1': instance.rentalTaxRate1,
      'RentalTaxRate2': instance.rentalTaxRate2,
      'RentalExempt': instance.rentalExempt,
      'RentalTaxDisplay': instance.rentalTaxDisplay,
      'SalesTaxRate1': instance.salesTaxRate1,
      'SalesTaxRate2': instance.salesTaxRate2,
      'SalesExempt': instance.salesExempt,
      'SalesTaxDisplay': instance.salesTaxDisplay,
      'LaborTaxRate1': instance.laborTaxRate1,
      'LaborTaxRate2': instance.laborTaxRate2,
      'LaborExempt': instance.laborExempt,
      'LaborTaxDisplay': instance.laborTaxDisplay,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResale
    _$WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResale(
    companyTaxResaleId: json['CompanyTaxResaleId'] as String?,
    companyId: json['CompanyId'] as String?,
    stateId: json['StateId'] as String?,
    stateCode: json['StateCode'] as String?,
    resaleNumber: json['ResaleNumber'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleToJson(
        WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResale instance) =>
    <String, dynamic>{
      'CompanyTaxResaleId': instance.companyTaxResaleId,
      'CompanyId': instance.companyId,
      'StateId': instance.stateId,
      'StateCode': instance.stateCode,
      'ResaleNumber': instance.resaleNumber,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsContactNoteContactNote
    _$WebApiModulesHomeControlsContactNoteContactNoteFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContactNoteContactNote(
    contactNoteId: json['ContactNoteId'] as String?,
    contactId: json['ContactId'] as String?,
    companyId: json['CompanyId'] as String?,
    companyContactId: json['CompanyContactId'] as String?,
    noteDate: json['NoteDate'] as String?,
    notesById: json['NotesById'] as String?,
    notesBy: json['NotesBy'] as String?,
    description: json['Description'] as String?,
    notes: json['Notes'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsContactNoteContactNoteToJson(
        WebApiModulesHomeControlsContactNoteContactNote instance) =>
    <String, dynamic>{
      'ContactNoteId': instance.contactNoteId,
      'ContactId': instance.contactId,
      'CompanyId': instance.companyId,
      'CompanyContactId': instance.companyContactId,
      'NoteDate': instance.noteDate,
      'NotesById': instance.notesById,
      'NotesBy': instance.notesBy,
      'Description': instance.description,
      'Notes': instance.notes,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsContainerItemContainerItem
    _$WebApiModulesHomeControlsContainerItemContainerItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContainerItemContainerItem(
    itemId: json['ItemId'] as String?,
    containerItemId: json['ContainerItemId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    itemDescription: json['ItemDescription'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    availableFor: json['AvailableFor'] as String?,
    availableForDisplay: json['AvailableForDisplay'] as String?,
    unitValue: (json['UnitValue'] as num?)?.toDouble(),
    replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
    classification: json['Classification'] as String?,
    isContainer: json['IsContainer'] as bool?,
    containerId: json['ContainerId'] as String?,
    containerInventoryId: json['ContainerInventoryId'] as String?,
    containerICode: json['ContainerICode'] as String?,
    containerDescription: json['ContainerDescription'] as String?,
    containerPackingListBehavior:
        json['ContainerPackingListBehavior'] as String?,
    containerStatus: json['ContainerStatus'] as String?,
    containerStatusColor: json['ContainerStatusColor'] as String?,
    containerStatusDate: json['ContainerStatusDate'] as String?,
    fixedAsset: json['FixedAsset'] as bool?,
    rank: json['Rank'] as String?,
    statusType: json['StatusType'] as String?,
    statusDate: json['StatusDate'] as String?,
    inventoryStatus: json['InventoryStatus'] as String?,
    inventoryStatusId: json['InventoryStatusId'] as String?,
    color: json['Color'] as String?,
    textColor: json['TextColor'] as String?,
    barCode: json['BarCode'] as String?,
    barCodeForScanning: json['BarCodeForScanning'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    rfId: json['RfId'] as String?,
    oldBarCode: json['OldBarCode'] as String?,
    oldSerialNumber: json['OldSerialNumber'] as String?,
    oldRfid: json['OldRfid'] as String?,
    manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
    manufactureDate: json['ManufactureDate'] as String?,
    trackedByCode: json['TrackedByCode'] as String?,
    availOwnershipSort: json['AvailOwnershipSort'] as int?,
    isNegativeInventory: json['IsNegativeInventory'] as bool?,
    inspectionNo: json['InspectionNo'] as String?,
    inspectionVendorId: json['InspectionVendorId'] as String?,
    inspectionVendor: json['InspectionVendor'] as String?,
    manufacturerModelNumber: json['ManufacturerModelNumber'] as String?,
    purchaseId: json['PurchaseId'] as String?,
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    spaceId: json['SpaceId'] as String?,
    buildingRoom: json['BuildingRoom'] as String?,
    itemNotes: json['ItemNotes'] as String?,
    physicalId: json['PhysicalId'] as String?,
    physicalItemId: json['PhysicalItemId'] as int?,
    physicalDate: json['PhysicalDate'] as String?,
    physicalBy: json['PhysicalBy'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    dealId: json['DealId'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    currentLocation: json['CurrentLocation'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    inventoryTypeOrderBy: json['InventoryTypeOrderBy'] as int?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
    subCategoryId: json['SubCategoryId'] as String?,
    subCategory: json['SubCategory'] as String?,
    subCategoryOrderBy: (json['SubCategoryOrderBy'] as num?)?.toDouble(),
    ownership: json['Ownership'] as String?,
    purchaseVendorId: json['PurchaseVendorId'] as String?,
    purchaseVendor: json['PurchaseVendor'] as String?,
    outsidePurchaseOrderNumber: json['OutsidePurchaseOrderNumber'] as String?,
    purchasePoId: json['PurchasePoId'] as String?,
    purchaseDate: json['PurchaseDate'] as String?,
    receiveDate: json['ReceiveDate'] as String?,
    receiveContractDate: json['ReceiveContractDate'] as String?,
    purchasePoNumber: json['PurchasePoNumber'] as String?,
    purchaseCost: (json['PurchaseCost'] as num?)?.toDouble(),
    invoiceCost: (json['InvoiceCost'] as num?)?.toDouble(),
    purchaseInvoiceNumber: json['PurchaseInvoiceNumber'] as String?,
    purchaseInvoiceDate: json['PurchaseInvoiceDate'] as String?,
    purchaseCurrencyId: json['PurchaseCurrencyId'] as String?,
    purchaseCurrencyCode: json['PurchaseCurrencyCode'] as String?,
    purchaseCurrency: json['PurchaseCurrency'] as String?,
    purchaseCurrencySymbol: json['PurchaseCurrencySymbol'] as String?,
    warehouseCurrencyId: json['WarehouseCurrencyId'] as String?,
    warehouseCurrencyCode: json['WarehouseCurrencyCode'] as String?,
    warehouseCurrency: json['WarehouseCurrency'] as String?,
    warehouseCurrencySymbol: json['WarehouseCurrencySymbol'] as String?,
    purchaseCurrencyExchangeRate:
        (json['PurchaseCurrencyExchangeRate'] as num?)?.toDouble(),
    unitCost: (json['UnitCost'] as num?)?.toDouble(),
    unitCostWithTax: (json['UnitCostWithTax'] as num?)?.toDouble(),
    unitCostCurrencyConverted:
        (json['UnitCostCurrencyConverted'] as num?)?.toDouble(),
    unitCostWithTaxCurrencyConverted:
        (json['UnitCostWithTaxCurrencyConverted'] as num?)?.toDouble(),
    originalEquipmentCost: (json['OriginalEquipmentCost'] as num?)?.toDouble(),
    depreciation: (json['Depreciation'] as num?)?.toDouble(),
    bookValue: (json['BookValue'] as num?)?.toDouble(),
    salvageValue: (json['SalvageValue'] as num?)?.toDouble(),
    consignorId: json['ConsignorId'] as String?,
    consignor: json['Consignor'] as String?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
    consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
    manufacturerId: json['ManufacturerId'] as String?,
    manufacturer: json['Manufacturer'] as String?,
    originalShowId: json['OriginalShowId'] as String?,
    originalShow: json['OriginalShow'] as String?,
    conditionId: json['ConditionId'] as String?,
    condition: json['Condition'] as String?,
    surfaceId: json['SurfaceId'] as String?,
    surface: json['Surface'] as String?,
    wallTypeId: json['WallTypeId'] as String?,
    wallType: json['WallType'] as String?,
    openingId: json['OpeningId'] as String?,
    opening: json['Opening'] as String?,
    responsiblePersonId: json['ResponsiblePersonId'] as String?,
    responsiblePerson: json['ResponsiblePerson'] as String?,
    buyerId: json['BuyerId'] as String?,
    buyer: json['Buyer'] as String?,
    receiptNumber: json['ReceiptNumber'] as String?,
    depreciationMonths: json['DepreciationMonths'] as int?,
    repairId: json['RepairId'] as String?,
    repairNumber: json['RepairNumber'] as String?,
    qcRequired: json['QcRequired'] as bool?,
    widthFt: json['WidthFt'] as int?,
    widthIn: json['WidthIn'] as int?,
    heightFt: json['HeightFt'] as int?,
    heightIn: json['HeightIn'] as int?,
    lengthFt: json['LengthFt'] as int?,
    lengthIn: json['LengthIn'] as int?,
    currentMeter: (json['CurrentMeter'] as num?)?.toDouble(),
    trackAssetUsage: json['TrackAssetUsage'] as bool?,
    trackLampUsage: json['TrackLampUsage'] as bool?,
    trackStrikes: json['TrackStrikes'] as bool?,
    trackCandles: json['TrackCandles'] as bool?,
    assetHours: json['AssetHours'] as int?,
    lampCount: json['LampCount'] as int?,
    lampHours1: json['LampHours1'] as int?,
    lampHours2: json['LampHours2'] as int?,
    lampHours3: json['LampHours3'] as int?,
    lampHours4: json['LampHours4'] as int?,
    strikes: json['Strikes'] as int?,
    footCandles: json['FootCandles'] as int?,
    minimumFootCandles: json['MinimumFootCandles'] as int?,
    softwareVersion: json['SoftwareVersion'] as String?,
    softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
    pattern: json['Pattern'] as String?,
    gender: json['Gender'] as String?,
    label: json['Label'] as String?,
    material: json['Material'] as String?,
    period: json['Period'] as String?,
    cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
    wardrobeSize: json['WardrobeSize'] as String?,
    wardrobePieceCount: json['WardrobePieceCount'] as int?,
    inventoryTypeIsProps: json['InventoryTypeIsProps'] as bool?,
    inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
    orderLocationId: json['OrderLocationId'] as String?,
    containerNumber: json['ContainerNumber'] as String?,
    isWardrobe: json['IsWardrobe'] as bool?,
    isProps: json['IsProps'] as bool?,
    dailyRate: (json['DailyRate'] as num?)?.toDouble(),
    weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
    monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
    location: json['Location'] as String?,
    retiredReason: json['RetiredReason'] as String?,
    warrantyExpiration: json['WarrantyExpiration'] as String?,
    warrantyPeriod: json['WarrantyPeriod'] as int?,
    countryOfOriginId: json['CountryOfOriginId'] as String?,
    countryOfOrigin: json['CountryOfOrigin'] as String?,
    shelfLifeExpirationDate: json['ShelfLifeExpirationDate'] as String?,
    currentDealId: json['CurrentDealId'] as String?,
    currentDeal: json['CurrentDeal'] as String?,
    currentCustomerId: json['CurrentCustomerId'] as String?,
    currentCustomer: json['CurrentCustomer'] as String?,
    currentOrderId: json['CurrentOrderId'] as String?,
    currentOrderNumber: json['CurrentOrderNumber'] as String?,
    currentOrderType: json['CurrentOrderType'] as String?,
    currentOrderDescription: json['CurrentOrderDescription'] as String?,
    currentOrderDate: json['CurrentOrderDate'] as String?,
    currentOrderPickDate: json['CurrentOrderPickDate'] as String?,
    currentOrderFromDate: json['CurrentOrderFromDate'] as String?,
    currentOrderToDate: json['CurrentOrderToDate'] as String?,
    currentOrderAgent: json['CurrentOrderAgent'] as String?,
    lotNumber: json['LotNumber'] as String?,
    lastOrderId: json['LastOrderId'] as String?,
    lastOrderNumber: json['LastOrderNumber'] as String?,
    lastOrderDescription: json['LastOrderDescription'] as String?,
    lastDealId: json['LastDealId'] as String?,
    lastDeal: json['LastDeal'] as String?,
    lastDealNumber: json['LastDealNumber'] as String?,
    lastOutContractId: json['LastOutContractId'] as String?,
    lastOutContractNumber: json['LastOutContractNumber'] as String?,
    lastOutContractDate: json['LastOutContractDate'] as String?,
    lastOutUserId: json['LastOutUserId'] as String?,
    lastOutUserName: json['LastOutUserName'] as String?,
    lastInContractId: json['LastInContractId'] as String?,
    lastInContractNumber: json['LastInContractNumber'] as String?,
    lastInContractDate: json['LastInContractDate'] as String?,
    lastInUserId: json['LastInUserId'] as String?,
    lastInUserName: json['LastInUserName'] as String?,
    depreciationStartDate: json['DepreciationStartDate'] as String?,
    depreciationWarehouseId: json['DepreciationWarehouseId'] as String?,
    depreciationWarehouse: json['DepreciationWarehouse'] as String?,
    depreciationWarehouseCode: json['DepreciationWarehouseCode'] as String?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemContainerItemToJson(
            WebApiModulesHomeControlsContainerItemContainerItem instance) =>
        <String, dynamic>{
          'ItemId': instance.itemId,
          'ContainerItemId': instance.containerItemId,
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'ItemDescription': instance.itemDescription,
          'TrackedBy': instance.trackedBy,
          'AvailableFor': instance.availableFor,
          'AvailableForDisplay': instance.availableForDisplay,
          'UnitValue': instance.unitValue,
          'ReplacementCost': instance.replacementCost,
          'Classification': instance.classification,
          'IsContainer': instance.isContainer,
          'ContainerId': instance.containerId,
          'ContainerInventoryId': instance.containerInventoryId,
          'ContainerICode': instance.containerICode,
          'ContainerDescription': instance.containerDescription,
          'ContainerPackingListBehavior': instance.containerPackingListBehavior,
          'ContainerStatus': instance.containerStatus,
          'ContainerStatusColor': instance.containerStatusColor,
          'ContainerStatusDate': instance.containerStatusDate,
          'FixedAsset': instance.fixedAsset,
          'Rank': instance.rank,
          'StatusType': instance.statusType,
          'StatusDate': instance.statusDate,
          'InventoryStatus': instance.inventoryStatus,
          'InventoryStatusId': instance.inventoryStatusId,
          'Color': instance.color,
          'TextColor': instance.textColor,
          'BarCode': instance.barCode,
          'BarCodeForScanning': instance.barCodeForScanning,
          'SerialNumber': instance.serialNumber,
          'RfId': instance.rfId,
          'OldBarCode': instance.oldBarCode,
          'OldSerialNumber': instance.oldSerialNumber,
          'OldRfid': instance.oldRfid,
          'ManufacturerPartNumber': instance.manufacturerPartNumber,
          'ManufactureDate': instance.manufactureDate,
          'TrackedByCode': instance.trackedByCode,
          'AvailOwnershipSort': instance.availOwnershipSort,
          'IsNegativeInventory': instance.isNegativeInventory,
          'InspectionNo': instance.inspectionNo,
          'InspectionVendorId': instance.inspectionVendorId,
          'InspectionVendor': instance.inspectionVendor,
          'ManufacturerModelNumber': instance.manufacturerModelNumber,
          'PurchaseId': instance.purchaseId,
          'AisleLocation': instance.aisleLocation,
          'ShelfLocation': instance.shelfLocation,
          'SpaceId': instance.spaceId,
          'BuildingRoom': instance.buildingRoom,
          'ItemNotes': instance.itemNotes,
          'PhysicalId': instance.physicalId,
          'PhysicalItemId': instance.physicalItemId,
          'PhysicalDate': instance.physicalDate,
          'PhysicalBy': instance.physicalBy,
          'Warehouse': instance.warehouse,
          'WarehouseCode': instance.warehouseCode,
          'DealId': instance.dealId,
          'OrderId': instance.orderId,
          'OrderNumber': instance.orderNumber,
          'OrderDescription': instance.orderDescription,
          'CurrentLocation': instance.currentLocation,
          'InventoryTypeId': instance.inventoryTypeId,
          'InventoryType': instance.inventoryType,
          'InventoryTypeOrderBy': instance.inventoryTypeOrderBy,
          'CategoryId': instance.categoryId,
          'Category': instance.category,
          'CategoryOrderBy': instance.categoryOrderBy,
          'SubCategoryId': instance.subCategoryId,
          'SubCategory': instance.subCategory,
          'SubCategoryOrderBy': instance.subCategoryOrderBy,
          'Ownership': instance.ownership,
          'PurchaseVendorId': instance.purchaseVendorId,
          'PurchaseVendor': instance.purchaseVendor,
          'OutsidePurchaseOrderNumber': instance.outsidePurchaseOrderNumber,
          'PurchasePoId': instance.purchasePoId,
          'PurchaseDate': instance.purchaseDate,
          'ReceiveDate': instance.receiveDate,
          'ReceiveContractDate': instance.receiveContractDate,
          'PurchasePoNumber': instance.purchasePoNumber,
          'PurchaseCost': instance.purchaseCost,
          'InvoiceCost': instance.invoiceCost,
          'PurchaseInvoiceNumber': instance.purchaseInvoiceNumber,
          'PurchaseInvoiceDate': instance.purchaseInvoiceDate,
          'PurchaseCurrencyId': instance.purchaseCurrencyId,
          'PurchaseCurrencyCode': instance.purchaseCurrencyCode,
          'PurchaseCurrency': instance.purchaseCurrency,
          'PurchaseCurrencySymbol': instance.purchaseCurrencySymbol,
          'WarehouseCurrencyId': instance.warehouseCurrencyId,
          'WarehouseCurrencyCode': instance.warehouseCurrencyCode,
          'WarehouseCurrency': instance.warehouseCurrency,
          'WarehouseCurrencySymbol': instance.warehouseCurrencySymbol,
          'PurchaseCurrencyExchangeRate': instance.purchaseCurrencyExchangeRate,
          'UnitCost': instance.unitCost,
          'UnitCostWithTax': instance.unitCostWithTax,
          'UnitCostCurrencyConverted': instance.unitCostCurrencyConverted,
          'UnitCostWithTaxCurrencyConverted':
              instance.unitCostWithTaxCurrencyConverted,
          'OriginalEquipmentCost': instance.originalEquipmentCost,
          'Depreciation': instance.depreciation,
          'BookValue': instance.bookValue,
          'SalvageValue': instance.salvageValue,
          'ConsignorId': instance.consignorId,
          'Consignor': instance.consignor,
          'ConsignorAgreementId': instance.consignorAgreementId,
          'ConsignorAgreementNumber': instance.consignorAgreementNumber,
          'ManufacturerId': instance.manufacturerId,
          'Manufacturer': instance.manufacturer,
          'OriginalShowId': instance.originalShowId,
          'OriginalShow': instance.originalShow,
          'ConditionId': instance.conditionId,
          'Condition': instance.condition,
          'SurfaceId': instance.surfaceId,
          'Surface': instance.surface,
          'WallTypeId': instance.wallTypeId,
          'WallType': instance.wallType,
          'OpeningId': instance.openingId,
          'Opening': instance.opening,
          'ResponsiblePersonId': instance.responsiblePersonId,
          'ResponsiblePerson': instance.responsiblePerson,
          'BuyerId': instance.buyerId,
          'Buyer': instance.buyer,
          'ReceiptNumber': instance.receiptNumber,
          'DepreciationMonths': instance.depreciationMonths,
          'RepairId': instance.repairId,
          'RepairNumber': instance.repairNumber,
          'QcRequired': instance.qcRequired,
          'WidthFt': instance.widthFt,
          'WidthIn': instance.widthIn,
          'HeightFt': instance.heightFt,
          'HeightIn': instance.heightIn,
          'LengthFt': instance.lengthFt,
          'LengthIn': instance.lengthIn,
          'CurrentMeter': instance.currentMeter,
          'TrackAssetUsage': instance.trackAssetUsage,
          'TrackLampUsage': instance.trackLampUsage,
          'TrackStrikes': instance.trackStrikes,
          'TrackCandles': instance.trackCandles,
          'AssetHours': instance.assetHours,
          'LampCount': instance.lampCount,
          'LampHours1': instance.lampHours1,
          'LampHours2': instance.lampHours2,
          'LampHours3': instance.lampHours3,
          'LampHours4': instance.lampHours4,
          'Strikes': instance.strikes,
          'FootCandles': instance.footCandles,
          'MinimumFootCandles': instance.minimumFootCandles,
          'SoftwareVersion': instance.softwareVersion,
          'SoftwareEffectiveDate': instance.softwareEffectiveDate,
          'Pattern': instance.pattern,
          'Gender': instance.gender,
          'Label': instance.label,
          'Material': instance.material,
          'Period': instance.period,
          'CleaningFeeAmount': instance.cleaningFeeAmount,
          'WardrobeSize': instance.wardrobeSize,
          'WardrobePieceCount': instance.wardrobePieceCount,
          'InventoryTypeIsProps': instance.inventoryTypeIsProps,
          'InventoryTypeIsWardrobe': instance.inventoryTypeIsWardrobe,
          'OrderLocationId': instance.orderLocationId,
          'ContainerNumber': instance.containerNumber,
          'IsWardrobe': instance.isWardrobe,
          'IsProps': instance.isProps,
          'DailyRate': instance.dailyRate,
          'WeeklyRate': instance.weeklyRate,
          'MonthlyRate': instance.monthlyRate,
          'Location': instance.location,
          'RetiredReason': instance.retiredReason,
          'WarrantyExpiration': instance.warrantyExpiration,
          'WarrantyPeriod': instance.warrantyPeriod,
          'CountryOfOriginId': instance.countryOfOriginId,
          'CountryOfOrigin': instance.countryOfOrigin,
          'ShelfLifeExpirationDate': instance.shelfLifeExpirationDate,
          'CurrentDealId': instance.currentDealId,
          'CurrentDeal': instance.currentDeal,
          'CurrentCustomerId': instance.currentCustomerId,
          'CurrentCustomer': instance.currentCustomer,
          'CurrentOrderId': instance.currentOrderId,
          'CurrentOrderNumber': instance.currentOrderNumber,
          'CurrentOrderType': instance.currentOrderType,
          'CurrentOrderDescription': instance.currentOrderDescription,
          'CurrentOrderDate': instance.currentOrderDate,
          'CurrentOrderPickDate': instance.currentOrderPickDate,
          'CurrentOrderFromDate': instance.currentOrderFromDate,
          'CurrentOrderToDate': instance.currentOrderToDate,
          'CurrentOrderAgent': instance.currentOrderAgent,
          'LotNumber': instance.lotNumber,
          'LastOrderId': instance.lastOrderId,
          'LastOrderNumber': instance.lastOrderNumber,
          'LastOrderDescription': instance.lastOrderDescription,
          'LastDealId': instance.lastDealId,
          'LastDeal': instance.lastDeal,
          'LastDealNumber': instance.lastDealNumber,
          'LastOutContractId': instance.lastOutContractId,
          'LastOutContractNumber': instance.lastOutContractNumber,
          'LastOutContractDate': instance.lastOutContractDate,
          'LastOutUserId': instance.lastOutUserId,
          'LastOutUserName': instance.lastOutUserName,
          'LastInContractId': instance.lastInContractId,
          'LastInContractNumber': instance.lastInContractNumber,
          'LastInContractDate': instance.lastInContractDate,
          'LastInUserId': instance.lastInUserId,
          'LastInUserName': instance.lastInUserName,
          'DepreciationStartDate': instance.depreciationStartDate,
          'DepreciationWarehouseId': instance.depreciationWarehouseId,
          'DepreciationWarehouse': instance.depreciationWarehouse,
          'DepreciationWarehouseCode': instance.depreciationWarehouseCode,
          'Inactive': instance.inactive,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsContainerItemEmptyContainerItemResponse
    _$WebApiModulesHomeControlsContainerItemEmptyContainerItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContainerItemEmptyContainerItemResponse(
    inContractId: json['InContractId'] as String?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemEmptyContainerItemResponseToJson(
            WebApiModulesHomeControlsContainerItemEmptyContainerItemResponse
                instance) =>
        <String, dynamic>{
          'InContractId': instance.inContractId,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsContainerItemEmptyContainerRequest
    _$WebApiModulesHomeControlsContainerItemEmptyContainerRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContainerItemEmptyContainerRequest(
    itemId: json['ItemId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    deleteAll: json['DeleteAll'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemEmptyContainerRequestToJson(
            WebApiModulesHomeControlsContainerItemEmptyContainerRequest
                instance) =>
        <String, dynamic>{
          'ItemId': instance.itemId,
          'WarehouseId': instance.warehouseId,
          'DeleteAll': instance.deleteAll,
        };

WebApiModulesHomeControlsContainerItemInstantiateContainerItemResponse
    _$WebApiModulesHomeControlsContainerItemInstantiateContainerItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContainerItemInstantiateContainerItemResponse(
    containerItemId: json['ContainerItemId'] as String?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemInstantiateContainerItemResponseToJson(
            WebApiModulesHomeControlsContainerItemInstantiateContainerItemResponse
                instance) =>
        <String, dynamic>{
          'ContainerItemId': instance.containerItemId,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsContainerItemInstantiateContainerRequest
    _$WebApiModulesHomeControlsContainerItemInstantiateContainerRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContainerItemInstantiateContainerRequest(
    containerId: json['ContainerId'] as String?,
    itemId: json['ItemId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemInstantiateContainerRequestToJson(
            WebApiModulesHomeControlsContainerItemInstantiateContainerRequest
                instance) =>
        <String, dynamic>{
          'ContainerId': instance.containerId,
          'ItemId': instance.itemId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesHomeControlsContainerItemRemoveFromContainerRequest
    _$WebApiModulesHomeControlsContainerItemRemoveFromContainerRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContainerItemRemoveFromContainerRequest(
    containerItemId: json['ContainerItemId'] as String?,
    itemId: json['ItemId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    consignorId: json['ConsignorId'] as String?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemRemoveFromContainerRequestToJson(
            WebApiModulesHomeControlsContainerItemRemoveFromContainerRequest
                instance) =>
        <String, dynamic>{
          'ContainerItemId': instance.containerItemId,
          'ItemId': instance.itemId,
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'ConsignorId': instance.consignorId,
          'ConsignorAgreementId': instance.consignorAgreementId,
          'Quantity': instance.quantity,
        };

WebApiModulesHomeControlsContainerItemRemoveFromContainerResponse
    _$WebApiModulesHomeControlsContainerItemRemoveFromContainerResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContainerItemRemoveFromContainerResponse(
    outputContractId: json['OutputContractId'] as String?,
    quantityRemoved: (json['QuantityRemoved'] as num?)?.toDouble(),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemRemoveFromContainerResponseToJson(
            WebApiModulesHomeControlsContainerItemRemoveFromContainerResponse
                instance) =>
        <String, dynamic>{
          'OutputContractId': instance.outputContractId,
          'QuantityRemoved': instance.quantityRemoved,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsContainerWarehouseContainerWarehouse
    _$WebApiModulesHomeControlsContainerWarehouseContainerWarehouseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContainerWarehouseContainerWarehouse(
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    dailyRate: (json['DailyRate'] as num?)?.toDouble(),
    weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
    monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
    quantity: json['Quantity'] as int?,
    quantityReady: json['QuantityReady'] as int?,
    quantityIncomplete: json['QuantityIncomplete'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerWarehouseContainerWarehouseToJson(
            WebApiModulesHomeControlsContainerWarehouseContainerWarehouse
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'WarehouseCode': instance.warehouseCode,
          'Warehouse': instance.warehouse,
          'DailyRate': instance.dailyRate,
          'WeeklyRate': instance.weeklyRate,
          'MonthlyRate': instance.monthlyRate,
          'Quantity': instance.quantity,
          'QuantityReady': instance.quantityReady,
          'QuantityIncomplete': instance.quantityIncomplete,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsContractItemDetailContractItem
    _$WebApiModulesHomeControlsContractItemDetailContractItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContractItemDetailContractItem(
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    vendorId: json['VendorId'] as String?,
    barCode: json['BarCode'] as String?,
    quantity: json['Quantity'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContractItemDetailContractItemToJson(
            WebApiModulesHomeControlsContractItemDetailContractItem instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
          'VendorId': instance.vendorId,
          'BarCode': instance.barCode,
          'Quantity': instance.quantity,
        };

WebApiModulesHomeControlsContractItemDetailContractItemDetail
    _$WebApiModulesHomeControlsContractItemDetailContractItemDetailFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContractItemDetailContractItemDetail(
    contractId: json['ContractId'] as String?,
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    iCode: json['ICode'] as String?,
    iCodeDisplay: json['ICodeDisplay'] as String?,
    iCodeColor: json['ICodeColor'] as String?,
    description: json['Description'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    barCode: json['BarCode'] as String?,
    manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    categoryId: json['CategoryId'] as String?,
    vendorId: json['VendorId'] as String?,
    vendor: json['Vendor'] as String?,
    vendorColor: json['VendorColor'] as String?,
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    primaryOrderItemId: json['PrimaryOrderItemId'] as String?,
    itemClass: json['ItemClass'] as String?,
    itemOrder: json['ItemOrder'] as String?,
    orderBy: json['OrderBy'] as String?,
    notes: json['Notes'] as String?,
    orderType: json['OrderType'] as String?,
    recType: json['RecType'] as String?,
    recTypeDisplay: json['RecTypeDisplay'] as String?,
    optionColor: json['OptionColor'] as String?,
    usersId: json['UsersId'] as String?,
    userName: json['UserName'] as String?,
    transactionDateTime: json['TransactionDateTime'] as String?,
    parentId: json['ParentId'] as String?,
    accessoryRatio: (json['AccessoryRatio'] as num?)?.toDouble(),
    nestedOrderItemId: json['NestedOrderItemId'] as String?,
    containerItemId: json['ContainerItemId'] as String?,
    containerBarCode: json['ContainerBarCode'] as String?,
    isConsignment: json['IsConsignment'] as bool?,
    consignorId: json['ConsignorId'] as String?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
    isVoid: json['IsVoid'] as bool?,
    nestingLevel: json['NestingLevel'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContractItemDetailContractItemDetailToJson(
            WebApiModulesHomeControlsContractItemDetailContractItemDetail
                instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
          'OrderNumber': instance.orderNumber,
          'OrderDescription': instance.orderDescription,
          'ICode': instance.iCode,
          'ICodeDisplay': instance.iCodeDisplay,
          'ICodeColor': instance.iCodeColor,
          'Description': instance.description,
          'DescriptionColor': instance.descriptionColor,
          'Quantity': instance.quantity,
          'BarCode': instance.barCode,
          'ManufacturerPartNumber': instance.manufacturerPartNumber,
          'TrackedBy': instance.trackedBy,
          'CategoryId': instance.categoryId,
          'VendorId': instance.vendorId,
          'Vendor': instance.vendor,
          'VendorColor': instance.vendorColor,
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'WarehouseCode': instance.warehouseCode,
          'Warehouse': instance.warehouse,
          'PrimaryOrderItemId': instance.primaryOrderItemId,
          'ItemClass': instance.itemClass,
          'ItemOrder': instance.itemOrder,
          'OrderBy': instance.orderBy,
          'Notes': instance.notes,
          'OrderType': instance.orderType,
          'RecType': instance.recType,
          'RecTypeDisplay': instance.recTypeDisplay,
          'OptionColor': instance.optionColor,
          'UsersId': instance.usersId,
          'UserName': instance.userName,
          'TransactionDateTime': instance.transactionDateTime,
          'ParentId': instance.parentId,
          'AccessoryRatio': instance.accessoryRatio,
          'NestedOrderItemId': instance.nestedOrderItemId,
          'ContainerItemId': instance.containerItemId,
          'ContainerBarCode': instance.containerBarCode,
          'IsConsignment': instance.isConsignment,
          'ConsignorId': instance.consignorId,
          'ConsignorAgreementId': instance.consignorAgreementId,
          'IsVoid': instance.isVoid,
          'NestingLevel': instance.nestingLevel,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsContractItemDetailVoidItemsRequest
    _$WebApiModulesHomeControlsContractItemDetailVoidItemsRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContractItemDetailVoidItemsRequest(
    contractId: json['ContractId'] as String?,
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) => WebApiModulesHomeControlsContractItemDetailContractItem
                .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    reason: json['Reason'] as String?,
    returnToInventory: json['ReturnToInventory'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContractItemDetailVoidItemsRequestToJson(
            WebApiModulesHomeControlsContractItemDetailVoidItemsRequest
                instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          'Reason': instance.reason,
          'ReturnToInventory': instance.returnToInventory,
        };

WebApiModulesHomeControlsContractItemDetailVoidItemsResponse
    _$WebApiModulesHomeControlsContractItemDetailVoidItemsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsContractItemDetailVoidItemsResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsContractItemDetailVoidItemsResponseToJson(
            WebApiModulesHomeControlsContractItemDetailVoidItemsResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsCustomerNoteCustomerNote
    _$WebApiModulesHomeControlsCustomerNoteCustomerNoteFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsCustomerNoteCustomerNote(
    customerNoteId: json['CustomerNoteId'] as String?,
    customerId: json['CustomerId'] as String?,
    noteDate: json['NoteDate'] as String?,
    notesById: json['NotesById'] as String?,
    notesBy: json['NotesBy'] as String?,
    description: json['Description'] as String?,
    notes: json['Notes'] as String?,
    notify: json['Notify'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsCustomerNoteCustomerNoteToJson(
        WebApiModulesHomeControlsCustomerNoteCustomerNote instance) =>
    <String, dynamic>{
      'CustomerNoteId': instance.customerNoteId,
      'CustomerId': instance.customerId,
      'NoteDate': instance.noteDate,
      'NotesById': instance.notesById,
      'NotesBy': instance.notesBy,
      'Description': instance.description,
      'Notes': instance.notes,
      'Notify': instance.notify,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsDealNoteDealNote
    _$WebApiModulesHomeControlsDealNoteDealNoteFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsDealNoteDealNote(
    dealNoteId: json['DealNoteId'] as String?,
    dealId: json['DealId'] as String?,
    noteDate: json['NoteDate'] as String?,
    notesById: json['NotesById'] as String?,
    notesBy: json['NotesBy'] as String?,
    description: json['Description'] as String?,
    notes: json['Notes'] as String?,
    notify: json['Notify'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsDealNoteDealNoteToJson(
        WebApiModulesHomeControlsDealNoteDealNote instance) =>
    <String, dynamic>{
      'DealNoteId': instance.dealNoteId,
      'DealId': instance.dealId,
      'NoteDate': instance.noteDate,
      'NotesById': instance.notesById,
      'NotesBy': instance.notesBy,
      'Description': instance.description,
      'Notes': instance.notes,
      'Notify': instance.notify,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsDealOrderDealOrderRecordOrderOnHoldResponse
    _$WebApiModulesHomeControlsDealOrderDealOrderRecordOrderOnHoldResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsDealOrderDealOrderRecordOrderOnHoldResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    order: json['order'] == null
        ? null
        : WebApiModulesAgentOrderOrder.fromJson(
            json['order'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsDealOrderDealOrderRecordOrderOnHoldResponseToJson(
            WebApiModulesHomeControlsDealOrderDealOrderRecordOrderOnHoldResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'order': instance.order?.toJson(),
        };

WebApiModulesHomeControlsDealShipperDealShipper
    _$WebApiModulesHomeControlsDealShipperDealShipperFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsDealShipperDealShipper(
    dealShipperId: json['DealShipperId'] as String?,
    dealId: json['DealId'] as String?,
    vendorId: json['VendorId'] as String?,
    carrierId: json['CarrierId'] as String?,
    carrier: json['Carrier'] as String?,
    shipperAcct: json['ShipperAcct'] as String?,
    isPrimary: json['IsPrimary'] as bool?,
    shipViaId: json['ShipViaId'] as String?,
    shipVia: json['ShipVia'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsDealShipperDealShipperToJson(
        WebApiModulesHomeControlsDealShipperDealShipper instance) =>
    <String, dynamic>{
      'DealShipperId': instance.dealShipperId,
      'DealId': instance.dealId,
      'VendorId': instance.vendorId,
      'CarrierId': instance.carrierId,
      'Carrier': instance.carrier,
      'ShipperAcct': instance.shipperAcct,
      'IsPrimary': instance.isPrimary,
      'ShipViaId': instance.shipViaId,
      'ShipVia': instance.shipVia,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsDeliveryDelivery
    _$WebApiModulesHomeControlsDeliveryDeliveryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsDeliveryDelivery(
    deliveryId: json['DeliveryId'] as String?,
    orderId: json['OrderId'] as String?,
    deliveryType: json['DeliveryType'] as String?,
    requiredDate: json['RequiredDate'] as String?,
    requiredTime: json['RequiredTime'] as String?,
    targetShipDate: json['TargetShipDate'] as String?,
    targetShipTime: json['TargetShipTime'] as String?,
    direction: json['Direction'] as String?,
    addressType: json['AddressType'] as String?,
    fromLocation: json['FromLocation'] as String?,
    fromContact: json['FromContact'] as String?,
    fromContactPhone: json['FromContactPhone'] as String?,
    fromAlternateContact: json['FromAlternateContact'] as String?,
    fromAlternateContactPhone: json['FromAlternateContactPhone'] as String?,
    fromAttention: json['FromAttention'] as String?,
    fromAddress1: json['FromAddress1'] as String?,
    fromAdd2ress: json['FromAdd2ress'] as String?,
    fromCity: json['FromCity'] as String?,
    fromState: json['FromState'] as String?,
    fromZipCode: json['FromZipCode'] as String?,
    fromCountry: json['FromCountry'] as String?,
    fromCountryId: json['FromCountryId'] as String?,
    fromCrossStreets: json['FromCrossStreets'] as String?,
    toLocation: json['ToLocation'] as String?,
    toContact: json['ToContact'] as String?,
    toContactPhone: json['ToContactPhone'] as String?,
    toAlternateContact: json['ToAlternateContact'] as String?,
    toAlternateContactPhone: json['ToAlternateContactPhone'] as String?,
    toAttention: json['ToAttention'] as String?,
    toAddress1: json['ToAddress1'] as String?,
    toAddress2: json['ToAddress2'] as String?,
    toCity: json['ToCity'] as String?,
    toState: json['ToState'] as String?,
    toZipCode: json['ToZipCode'] as String?,
    toCountryId: json['ToCountryId'] as String?,
    toCountry: json['ToCountry'] as String?,
    toContactFax: json['ToContactFax'] as String?,
    toCrossStreets: json['ToCrossStreets'] as String?,
    deliveryNotes: json['DeliveryNotes'] as String?,
    carrierId: json['CarrierId'] as String?,
    carrier: json['Carrier'] as String?,
    carrierAccount: json['CarrierAccount'] as String?,
    shipViaId: json['ShipViaId'] as String?,
    shipVia: json['ShipVia'] as String?,
    invoiceId: json['InvoiceId'] as String?,
    vendorInvoiceId: json['VendorInvoiceId'] as String?,
    estimatedFreight: (json['EstimatedFreight'] as num?)?.toDouble(),
    freightInvoiceAmount: (json['FreightInvoiceAmount'] as num?)?.toDouble(),
    chargeType: json['ChargeType'] as String?,
    freightTrackingNumber: json['FreightTrackingNumber'] as String?,
    dropShip: json['DropShip'] as bool?,
    packageCode: json['PackageCode'] as String?,
    billPoFreightOnOrder: json['BillPoFreightOnOrder'] as bool?,
    onlineOrderNumber: json['OnlineOrderNumber'] as String?,
    onlineOrderStatus: json['OnlineOrderStatus'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsDeliveryDeliveryToJson(
        WebApiModulesHomeControlsDeliveryDelivery instance) =>
    <String, dynamic>{
      'DeliveryId': instance.deliveryId,
      'OrderId': instance.orderId,
      'DeliveryType': instance.deliveryType,
      'RequiredDate': instance.requiredDate,
      'RequiredTime': instance.requiredTime,
      'TargetShipDate': instance.targetShipDate,
      'TargetShipTime': instance.targetShipTime,
      'Direction': instance.direction,
      'AddressType': instance.addressType,
      'FromLocation': instance.fromLocation,
      'FromContact': instance.fromContact,
      'FromContactPhone': instance.fromContactPhone,
      'FromAlternateContact': instance.fromAlternateContact,
      'FromAlternateContactPhone': instance.fromAlternateContactPhone,
      'FromAttention': instance.fromAttention,
      'FromAddress1': instance.fromAddress1,
      'FromAdd2ress': instance.fromAdd2ress,
      'FromCity': instance.fromCity,
      'FromState': instance.fromState,
      'FromZipCode': instance.fromZipCode,
      'FromCountry': instance.fromCountry,
      'FromCountryId': instance.fromCountryId,
      'FromCrossStreets': instance.fromCrossStreets,
      'ToLocation': instance.toLocation,
      'ToContact': instance.toContact,
      'ToContactPhone': instance.toContactPhone,
      'ToAlternateContact': instance.toAlternateContact,
      'ToAlternateContactPhone': instance.toAlternateContactPhone,
      'ToAttention': instance.toAttention,
      'ToAddress1': instance.toAddress1,
      'ToAddress2': instance.toAddress2,
      'ToCity': instance.toCity,
      'ToState': instance.toState,
      'ToZipCode': instance.toZipCode,
      'ToCountryId': instance.toCountryId,
      'ToCountry': instance.toCountry,
      'ToContactFax': instance.toContactFax,
      'ToCrossStreets': instance.toCrossStreets,
      'DeliveryNotes': instance.deliveryNotes,
      'CarrierId': instance.carrierId,
      'Carrier': instance.carrier,
      'CarrierAccount': instance.carrierAccount,
      'ShipViaId': instance.shipViaId,
      'ShipVia': instance.shipVia,
      'InvoiceId': instance.invoiceId,
      'VendorInvoiceId': instance.vendorInvoiceId,
      'EstimatedFreight': instance.estimatedFreight,
      'FreightInvoiceAmount': instance.freightInvoiceAmount,
      'ChargeType': instance.chargeType,
      'FreightTrackingNumber': instance.freightTrackingNumber,
      'DropShip': instance.dropShip,
      'PackageCode': instance.packageCode,
      'BillPoFreightOnOrder': instance.billPoFreightOnOrder,
      'OnlineOrderNumber': instance.onlineOrderNumber,
      'OnlineOrderStatus': instance.onlineOrderStatus,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsDepositPaymentDepositPayment
    _$WebApiModulesHomeControlsDepositPaymentDepositPaymentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsDepositPaymentDepositPayment(
    id: json['Id'] as int?,
    depositId: json['DepositId'] as String?,
    paymentId: json['PaymentId'] as String?,
    applied: (json['Applied'] as num?)?.toDouble(),
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsDepositPaymentDepositPaymentToJson(
            WebApiModulesHomeControlsDepositPaymentDepositPayment instance) =>
        <String, dynamic>{
          'Id': instance.id,
          'DepositId': instance.depositId,
          'PaymentId': instance.paymentId,
          'Applied': instance.applied,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsDepreciationDepreciation
    _$WebApiModulesHomeControlsDepreciationDepreciationFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsDepreciationDepreciation(
    depreciationId: json['DepreciationId'] as int?,
    depreciationDate: json['DepreciationDate'] as String?,
    purchaseId: json['PurchaseId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    purchaseDate: json['PurchaseDate'] as String?,
    receiveDate: json['ReceiveDate'] as String?,
    purchaseWarehouseId: json['PurchaseWarehouseId'] as String?,
    purchaseWarehouseCode: json['PurchaseWarehouseCode'] as String?,
    purchaseWarehouse: json['PurchaseWarehouse'] as String?,
    debitGlAccountId: json['DebitGlAccountId'] as String?,
    debitGlAccountNo: json['DebitGlAccountNo'] as String?,
    debitGlAccountDescription: json['DebitGlAccountDescription'] as String?,
    creditGlAccountId: json['CreditGlAccountId'] as String?,
    creditGlAccountNo: json['CreditGlAccountNo'] as String?,
    creditGlAccountDescription: json['CreditGlAccountDescription'] as String?,
    depreciationQuantity: json['DepreciationQuantity'] as int?,
    unitDepreciationAmount:
        (json['UnitDepreciationAmount'] as num?)?.toDouble(),
    depreciationExtended: (json['DepreciationExtended'] as num?)?.toDouble(),
    isAdjustment: json['IsAdjustment'] as bool?,
    depreciationExtendedColor: json['DepreciationExtendedColor'] as String?,
    currencyId: json['CurrencyId'] as String?,
    currency: json['Currency'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsDepreciationDepreciationToJson(
        WebApiModulesHomeControlsDepreciationDepreciation instance) =>
    <String, dynamic>{
      'DepreciationId': instance.depreciationId,
      'DepreciationDate': instance.depreciationDate,
      'PurchaseId': instance.purchaseId,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'PurchaseDate': instance.purchaseDate,
      'ReceiveDate': instance.receiveDate,
      'PurchaseWarehouseId': instance.purchaseWarehouseId,
      'PurchaseWarehouseCode': instance.purchaseWarehouseCode,
      'PurchaseWarehouse': instance.purchaseWarehouse,
      'DebitGlAccountId': instance.debitGlAccountId,
      'DebitGlAccountNo': instance.debitGlAccountNo,
      'DebitGlAccountDescription': instance.debitGlAccountDescription,
      'CreditGlAccountId': instance.creditGlAccountId,
      'CreditGlAccountNo': instance.creditGlAccountNo,
      'CreditGlAccountDescription': instance.creditGlAccountDescription,
      'DepreciationQuantity': instance.depreciationQuantity,
      'UnitDepreciationAmount': instance.unitDepreciationAmount,
      'DepreciationExtended': instance.depreciationExtended,
      'IsAdjustment': instance.isAdjustment,
      'DepreciationExtendedColor': instance.depreciationExtendedColor,
      'CurrencyId': instance.currencyId,
      'Currency': instance.currency,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsGeneralItemSortGeneralItemRequest
    _$WebApiModulesHomeControlsGeneralItemSortGeneralItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsGeneralItemSortGeneralItemRequest(
    startAtIndex: json['StartAtIndex'] as int?,
    itemIds:
        (json['ItemIds'] as List<dynamic>?)?.map((e) => e as String).toList() ??
            [],
  );
}

Map<String,
    dynamic> _$WebApiModulesHomeControlsGeneralItemSortGeneralItemRequestToJson(
        WebApiModulesHomeControlsGeneralItemSortGeneralItemRequest instance) =>
    <String, dynamic>{
      'StartAtIndex': instance.startAtIndex,
      'ItemIds': instance.itemIds,
    };

WebApiModulesHomeControlsGlManualGlManual
    _$WebApiModulesHomeControlsGlManualGlManualFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsGlManualGlManual(
    id: json['Id'] as int?,
    internalChar: json['InternalChar'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    invoiceId: json['InvoiceId'] as String?,
    receiptId: json['ReceiptId'] as String?,
    vendorInvoiceId: json['VendorInvoiceId'] as String?,
    paymentId: json['PaymentId'] as String?,
    glDate: json['GlDate'] as String?,
    debitGlAccountId: json['DebitGlAccountId'] as String?,
    debitGlAccountNumber: json['DebitGlAccountNumber'] as String?,
    debitGlAccountDescription: json['DebitGlAccountDescription'] as String?,
    creditGlAccountId: json['CreditGlAccountId'] as String?,
    creditGlAccountNumber: json['CreditGlAccountNumber'] as String?,
    creditGlAccountDescription: json['CreditGlAccountDescription'] as String?,
    amount: (json['Amount'] as num?)?.toDouble(),
    groupHeading: json['GroupHeading'] as String?,
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currency: json['Currency'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsGlManualGlManualToJson(
        WebApiModulesHomeControlsGlManualGlManual instance) =>
    <String, dynamic>{
      'Id': instance.id,
      'InternalChar': instance.internalChar,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'InvoiceId': instance.invoiceId,
      'ReceiptId': instance.receiptId,
      'VendorInvoiceId': instance.vendorInvoiceId,
      'PaymentId': instance.paymentId,
      'GlDate': instance.glDate,
      'DebitGlAccountId': instance.debitGlAccountId,
      'DebitGlAccountNumber': instance.debitGlAccountNumber,
      'DebitGlAccountDescription': instance.debitGlAccountDescription,
      'CreditGlAccountId': instance.creditGlAccountId,
      'CreditGlAccountNumber': instance.creditGlAccountNumber,
      'CreditGlAccountDescription': instance.creditGlAccountDescription,
      'Amount': instance.amount,
      'GroupHeading': instance.groupHeading,
      'CurrencyId': instance.currencyId,
      'CurrencyCode': instance.currencyCode,
      'Currency': instance.currency,
      'CurrencySymbol': instance.currencySymbol,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValue
    _$WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValue(
    inventoryAttributeValueId: json['InventoryAttributeValueId'] as String?,
    attributeId: json['AttributeId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    attribute: json['Attribute'] as String?,
    attributeValueId: json['AttributeValueId'] as String?,
    attributeValue: json['AttributeValue'] as String?,
    numericValue: (json['NumericValue'] as num?)?.toDouble(),
    numericOnly: json['NumericOnly'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueToJson(
            WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValue
                instance) =>
        <String, dynamic>{
          'InventoryAttributeValueId': instance.inventoryAttributeValueId,
          'AttributeId': instance.attributeId,
          'InventoryId': instance.inventoryId,
          'Attribute': instance.attribute,
          'AttributeValueId': instance.attributeValueId,
          'AttributeValue': instance.attributeValue,
          'NumericValue': instance.numericValue,
          'NumericOnly': instance.numericOnly,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryAvailabilityAvailabilityCalendarAndScheduleRequest
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityCalendarAndScheduleRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityAvailabilityCalendarAndScheduleRequest(
    inventoryId: json['InventoryId'] as String?,
    warehouseId: (json['WarehouseId'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    regionId: json['RegionId'] as String?,
    fromDate: json['FromDate'] == null
        ? null
        : DateTime.parse(json['FromDate'] as String),
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
    includeHours: json['IncludeHours'] as bool?,
    yearView: json['YearView'] as bool?,
    sortReservationsBy: json['SortReservationsBy'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityCalendarAndScheduleRequestToJson(
            WebApiModulesHomeControlsInventoryAvailabilityAvailabilityCalendarAndScheduleRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'RegionId': instance.regionId,
          'FromDate': instance.fromDate?.toIso8601String(),
          'ToDate': instance.toDate?.toIso8601String(),
          'IncludeHours': instance.includeHours,
          'YearView': instance.yearView,
          'SortReservationsBy': instance.sortReservationsBy,
        };

WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictRequest
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictRequest(
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
    availableFor: json['AvailableFor'] as String?,
    conflictType: json['ConflictType'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    categoryId: json['CategoryId'] as String?,
    subCategoryId: json['SubCategoryId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    description: json['Description'] as String?,
    orderId: json['OrderId'] as String?,
    dealId: json['DealId'] as String?,
    ranks: (json['Ranks'] as List<dynamic>?)
            ?.map((e) => FwStandardModelsSelectedCheckBoxListItem.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
    showRegionAvailability: json['ShowRegionAvailability'] as bool?,
    showOtherWarehouseAvailability:
        json['ShowOtherWarehouseAvailability'] as bool?,
    otherWarehouseIds: json['OtherWarehouseIds'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictRequestToJson(
            WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictRequest
                instance) =>
        <String, dynamic>{
          'ToDate': instance.toDate?.toIso8601String(),
          'AvailableFor': instance.availableFor,
          'ConflictType': instance.conflictType,
          'WarehouseId': instance.warehouseId,
          'InventoryTypeId': instance.inventoryTypeId,
          'CategoryId': instance.categoryId,
          'SubCategoryId': instance.subCategoryId,
          'InventoryId': instance.inventoryId,
          'Description': instance.description,
          'OrderId': instance.orderId,
          'DealId': instance.dealId,
          'Ranks': instance.ranks?.map((e) => e.toJson()).toList(),
          'ShowRegionAvailability': instance.showRegionAvailability,
          'ShowOtherWarehouseAvailability':
              instance.showOtherWarehouseAvailability,
          'OtherWarehouseIds': instance.otherWarehouseIds,
        };

WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictResponseItem
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictResponseItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictResponseItem(
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    subCategoryId: json['SubCategoryId'] as String?,
    subCategory: json['SubCategory'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    itemDescription: json['ItemDescription'] as String?,
    orderId: json['OrderId'] as String?,
    orderType: json['OrderType'] as String?,
    orderTypeDescription: json['OrderTypeDescription'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    quantityReserved: (json['QuantityReserved'] as num?)?.toDouble(),
    quantitySub: (json['QuantitySub'] as num?)?.toDouble(),
    quantityAvailable: (json['QuantityAvailable'] as num?)?.toDouble(),
    availabilityState: json['AvailabilityState'] as String?,
    quantityAvailableRegion:
        (json['QuantityAvailableRegion'] as num?)?.toDouble(),
    availabilityStateRegion: json['AvailabilityStateRegion'] as String?,
    otherWarehouses: (json['OtherWarehouses'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouse
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    quantityLate: (json['QuantityLate'] as num?)?.toDouble(),
    quantityIn: (json['QuantityIn'] as num?)?.toDouble(),
    quantityQc: (json['QuantityQc'] as num?)?.toDouble(),
    quantityInRepair: (json['QuantityInRepair'] as num?)?.toDouble(),
    fromDateTime: json['FromDateTime'] == null
        ? null
        : DateTime.parse(json['FromDateTime'] as String),
    toDateTime: json['ToDateTime'] == null
        ? null
        : DateTime.parse(json['ToDateTime'] as String),
    fromDateTimeString: json['FromDateTimeString'] as String?,
    toDateTimeString: json['ToDateTimeString'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictResponseItemToJson(
            WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictResponseItem
                instance) =>
        <String, dynamic>{
          'Warehouse': instance.warehouse,
          'WarehouseCode': instance.warehouseCode,
          'InventoryTypeId': instance.inventoryTypeId,
          'InventoryType': instance.inventoryType,
          'CategoryId': instance.categoryId,
          'Category': instance.category,
          'SubCategoryId': instance.subCategoryId,
          'SubCategory': instance.subCategory,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'ItemDescription': instance.itemDescription,
          'OrderId': instance.orderId,
          'OrderType': instance.orderType,
          'OrderTypeDescription': instance.orderTypeDescription,
          'OrderNumber': instance.orderNumber,
          'OrderDescription': instance.orderDescription,
          'DealId': instance.dealId,
          'Deal': instance.deal,
          'QuantityReserved': instance.quantityReserved,
          'QuantitySub': instance.quantitySub,
          'QuantityAvailable': instance.quantityAvailable,
          'AvailabilityState': instance.availabilityState,
          'QuantityAvailableRegion': instance.quantityAvailableRegion,
          'AvailabilityStateRegion': instance.availabilityStateRegion,
          'OtherWarehouses':
              instance.otherWarehouses?.map((e) => e.toJson()).toList(),
          'QuantityLate': instance.quantityLate,
          'QuantityIn': instance.quantityIn,
          'QuantityQc': instance.quantityQc,
          'QuantityInRepair': instance.quantityInRepair,
          'FromDateTime': instance.fromDateTime?.toIso8601String(),
          'ToDateTime': instance.toDateTime?.toIso8601String(),
          'FromDateTimeString': instance.fromDateTimeString,
          'ToDateTimeString': instance.toDateTimeString,
        };

WebApiModulesHomeControlsInventoryAvailabilityAvailabilityInventoryWarehouseRequest
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityInventoryWarehouseRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityAvailabilityInventoryWarehouseRequest(
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    fromDate: json['FromDate'] == null
        ? null
        : DateTime.parse(json['FromDate'] as String),
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
    refreshIfNeeded: json['RefreshIfNeeded'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityInventoryWarehouseRequestToJson(
            WebApiModulesHomeControlsInventoryAvailabilityAvailabilityInventoryWarehouseRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'FromDate': instance.fromDate?.toIso8601String(),
          'ToDate': instance.toDate?.toIso8601String(),
          'RefreshIfNeeded': instance.refreshIfNeeded,
        };

WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouse
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouse(
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    quantityAvailable: (json['QuantityAvailable'] as num?)?.toDouble(),
    availabilityState: json['AvailabilityState'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouseToJson(
            WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouse
                instance) =>
        <String, dynamic>{
          'WarehouseId': instance.warehouseId,
          'WarehouseCode': instance.warehouseCode,
          'QuantityAvailable': instance.quantityAvailable,
          'AvailabilityState': instance.availabilityState,
        };

WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarAndScheduleResponse
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarAndScheduleResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarAndScheduleResponse(
    inventoryData: json['InventoryData'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailability
            .fromJson(json['InventoryData'] as Map<String, dynamic>),
    dates: (json['Dates'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDate
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    inventoryAvailabilityCalendarEvents: (json[
                'InventoryAvailabilityCalendarEvents'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEvent
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    inventoryAvailabilityScheduleResources: (json[
                'InventoryAvailabilityScheduleResources'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResource
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    inventoryAvailabilityScheduleEvents: (json[
                'InventoryAvailabilityScheduleEvents'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEvent
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarAndScheduleResponseToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarAndScheduleResponse
                instance) =>
        <String, dynamic>{
          'InventoryData': instance.inventoryData?.toJson(),
          'Dates': instance.dates?.map((e) => e.toJson()).toList(),
          'InventoryAvailabilityCalendarEvents': instance
              .inventoryAvailabilityCalendarEvents
              ?.map((e) => e.toJson())
              .toList(),
          'InventoryAvailabilityScheduleResources': instance
              .inventoryAvailabilityScheduleResources
              ?.map((e) => e.toJson())
              .toList(),
          'InventoryAvailabilityScheduleEvents': instance
              .inventoryAvailabilityScheduleEvents
              ?.map((e) => e.toJson())
              .toList(),
        };

WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDate
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDateFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDate(
    theDate: json['TheDate'] == null
        ? null
        : DateTime.parse(json['TheDate'] as String),
    reservations: (json['Reservations'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservation
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDateToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDate
                instance) =>
        <String, dynamic>{
          'TheDate': instance.theDate?.toIso8601String(),
          'Reservations':
              instance.reservations?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEvent
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEventFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEvent(
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    start: json['start'] as String?,
    end: json['end'] as String?,
    text: json['text'] as String?,
    backColor: json['backColor'] as String?,
    textColor: json['textColor'] as String?,
    id: json['id'] as String?,
    resource: json['resource'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEventToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEvent
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'start': instance.start,
          'end': instance.end,
          'text': instance.text,
          'backColor': instance.backColor,
          'textColor': instance.textColor,
          'id': instance.id,
          'resource': instance.resource,
        };

WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEvent
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEventFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEvent(
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    start: json['start'] as String?,
    end: json['end'] as String?,
    startdisplay: json['startdisplay'] as String?,
    enddisplay: json['enddisplay'] as String?,
    text: json['text'] as String?,
    total: json['total'] as String?,
    backColor: json['backColor'] as String?,
    barColor: json['barColor'] as String?,
    textColor: json['textColor'] as String?,
    id: json['id'] as String?,
    resource: json['resource'] as String?,
    orderId: json['orderId'] as String?,
    orderNumber: json['orderNumber'] as String?,
    orderType: json['orderType'] as String?,
    orderStatus: json['orderStatus'] as String?,
    orderDescription: json['orderDescription'] as String?,
    deal: json['deal'] as String?,
    subPoNumber: json['subPoNumber'] as String?,
    subPoVendor: json['subPoVendor'] as String?,
    contractId: json['contractId'] as String?,
    isWarehouseTotal: json['isWarehouseTotal'] as bool?,
    isGrandTotal: json['isGrandTotal'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEventToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEvent
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'start': instance.start,
          'end': instance.end,
          'startdisplay': instance.startdisplay,
          'enddisplay': instance.enddisplay,
          'text': instance.text,
          'total': instance.total,
          'backColor': instance.backColor,
          'barColor': instance.barColor,
          'textColor': instance.textColor,
          'id': instance.id,
          'resource': instance.resource,
          'orderId': instance.orderId,
          'orderNumber': instance.orderNumber,
          'orderType': instance.orderType,
          'orderStatus': instance.orderStatus,
          'orderDescription': instance.orderDescription,
          'deal': instance.deal,
          'subPoNumber': instance.subPoNumber,
          'subPoVendor': instance.subPoVendor,
          'contractId': instance.contractId,
          'isWarehouseTotal': instance.isWarehouseTotal,
          'isGrandTotal': instance.isGrandTotal,
        };

WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResource
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResourceFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResource(
    name: json['name'] as String?,
    id: json['id'] as String?,
    backColor: json['backColor'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResourceToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResource
                instance) =>
        <String, dynamic>{
          'name': instance.name,
          'id': instance.id,
          'backColor': instance.backColor,
        };

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouse
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouse(
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    subCategoryId: json['SubCategoryId'] as String?,
    subCategory: json['SubCategory'] as String?,
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    regionId: json['RegionId'] as String?,
    availableFor: json['AvailableFor'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    classification: json['Classification'] as String?,
    hourlyAvailability: json['HourlyAvailability'] as bool?,
    noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
    lowAvailabilityPercent: json['LowAvailabilityPercent'] as int?,
    lowAvailabilityQuantity: json['LowAvailabilityQuantity'] as int?,
    dailyRate: json['DailyRate'] as String?,
    weeklyRate: json['WeeklyRate'] as String?,
    week2Rate: json['Week2Rate'] as String?,
    week3Rate: json['Week3Rate'] as String?,
    week4Rate: json['Week4Rate'] as String?,
    monthlyRate: json['MonthlyRate'] as String?,
    accessories: (json['Accessories'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessory
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    combinedKey: json['CombinedKey'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouse
                instance) =>
        <String, dynamic>{
          'InventoryTypeId': instance.inventoryTypeId,
          'InventoryType': instance.inventoryType,
          'CategoryId': instance.categoryId,
          'Category': instance.category,
          'SubCategoryId': instance.subCategoryId,
          'SubCategory': instance.subCategory,
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'RegionId': instance.regionId,
          'AvailableFor': instance.availableFor,
          'ICode': instance.iCode,
          'Description': instance.description,
          'WarehouseCode': instance.warehouseCode,
          'Warehouse': instance.warehouse,
          'Classification': instance.classification,
          'HourlyAvailability': instance.hourlyAvailability,
          'NoAvailabilityCheck': instance.noAvailabilityCheck,
          'LowAvailabilityPercent': instance.lowAvailabilityPercent,
          'LowAvailabilityQuantity': instance.lowAvailabilityQuantity,
          'DailyRate': instance.dailyRate,
          'WeeklyRate': instance.weeklyRate,
          'Week2Rate': instance.week2Rate,
          'Week3Rate': instance.week3Rate,
          'Week4Rate': instance.week4Rate,
          'MonthlyRate': instance.monthlyRate,
          'Accessories': instance.accessories?.map((e) => e.toJson()).toList(),
          'CombinedKey': instance.combinedKey,
        };

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailability
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailability(
    total: json['Total'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['Total'] as Map<String, dynamic>),
    $in: json['In'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['In'] as Map<String, dynamic>),
    staged: json['Staged'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['Staged'] as Map<String, dynamic>),
    out: json['Out'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['Out'] as Map<String, dynamic>),
    inRepair: json['InRepair'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['InRepair'] as Map<String, dynamic>),
    inTransit: json['InTransit'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['InTransit'] as Map<String, dynamic>),
    inContainer: json['InContainer'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['InContainer'] as Map<String, dynamic>),
    onTruck: json['OnTruck'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['OnTruck'] as Map<String, dynamic>),
    qcRequired: json['QcRequired'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['QcRequired'] as Map<String, dynamic>),
    late: json['Late'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['Late'] as Map<String, dynamic>),
    inventoryWarehouse: json['InventoryWarehouse'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouse
            .fromJson(json['InventoryWarehouse'] as Map<String, dynamic>),
    calculatedDateTime: json['CalculatedDateTime'] == null
        ? null
        : DateTime.parse(json['CalculatedDateTime'] as String),
    availDataFromDateTime: json['AvailDataFromDateTime'] == null
        ? null
        : DateTime.parse(json['AvailDataFromDateTime'] as String),
    availDataToDateTime: json['AvailDataToDateTime'] == null
        ? null
        : DateTime.parse(json['AvailDataToDateTime'] as String),
    enableQcDelay: json['EnableQcDelay'] as bool?,
    qcDelayDays: json['QcDelayDays'] as int?,
    qcToDateTime: json['QcToDateTime'] == null
        ? null
        : DateTime.parse(json['QcToDateTime'] as String),
    reservations: (json['Reservations'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservation
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    availabilityDatesAndTimes: json['AvailabilityDatesAndTimes'],
    hasPositiveConflict: json['HasPositiveConflict'] as bool?,
    hasNegativeConflict: json['HasNegativeConflict'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailability
                instance) =>
        <String, dynamic>{
          'Total': instance.total?.toJson(),
          'In': instance.$in?.toJson(),
          'Staged': instance.staged?.toJson(),
          'Out': instance.out?.toJson(),
          'InRepair': instance.inRepair?.toJson(),
          'InTransit': instance.inTransit?.toJson(),
          'InContainer': instance.inContainer?.toJson(),
          'OnTruck': instance.onTruck?.toJson(),
          'QcRequired': instance.qcRequired?.toJson(),
          'Late': instance.late?.toJson(),
          'InventoryWarehouse': instance.inventoryWarehouse?.toJson(),
          'CalculatedDateTime': instance.calculatedDateTime?.toIso8601String(),
          'AvailDataFromDateTime':
              instance.availDataFromDateTime?.toIso8601String(),
          'AvailDataToDateTime':
              instance.availDataToDateTime?.toIso8601String(),
          'EnableQcDelay': instance.enableQcDelay,
          'QcDelayDays': instance.qcDelayDays,
          'QcToDateTime': instance.qcToDateTime?.toIso8601String(),
          'Reservations':
              instance.reservations?.map((e) => e.toJson()).toList(),
          'AvailabilityDatesAndTimes': instance.availabilityDatesAndTimes,
          'HasPositiveConflict': instance.hasPositiveConflict,
          'HasNegativeConflict': instance.hasNegativeConflict,
        };

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityDateTime
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityDateTimeFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityDateTime(
    availabilityDateTime: json['AvailabilityDateTime'] == null
        ? null
        : DateTime.parse(json['AvailabilityDateTime'] as String),
    available: json['Available'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['Available'] as Map<String, dynamic>),
    reserved: json['Reserved'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['Reserved'] as Map<String, dynamic>),
    returning: json['Returning'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['Returning'] as Map<String, dynamic>),
    becomingAvailable: json['BecomingAvailable'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['BecomingAvailable'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityDateTimeToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityDateTime
                instance) =>
        <String, dynamic>{
          'AvailabilityDateTime':
              instance.availabilityDateTime?.toIso8601String(),
          'Available': instance.available?.toJson(),
          'Reserved': instance.reserved?.toJson(),
          'Returning': instance.returning?.toJson(),
          'BecomingAvailable': instance.becomingAvailable?.toJson(),
        };

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantityFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity(
    owned: (json['Owned'] as num?)?.toDouble(),
    subbed: (json['Subbed'] as num?)?.toDouble(),
    consigned: (json['Consigned'] as num?)?.toDouble(),
    ownedAndConsigned: (json['OwnedAndConsigned'] as num?)?.toDouble(),
    total: (json['Total'] as num?)?.toDouble(),
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantityToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                instance) =>
        <String, dynamic>{
          'Owned': instance.owned,
          'Subbed': instance.subbed,
          'Consigned': instance.consigned,
          'OwnedAndConsigned': instance.ownedAndConsigned,
          'Total': instance.total,
        };

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservation
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservationFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservation(
    quantityReserved: json['QuantityReserved'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['QuantityReserved'] as Map<String, dynamic>),
    quantityStaged: json['QuantityStaged'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['QuantityStaged'] as Map<String, dynamic>),
    quantityOut: json['QuantityOut'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['QuantityOut'] as Map<String, dynamic>),
    quantityIn: json['QuantityIn'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['QuantityIn'] as Map<String, dynamic>),
    quantityInRepair: json['QuantityInRepair'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['QuantityInRepair'] as Map<String, dynamic>),
    quantityLate: json['QuantityLate'] == null
        ? null
        : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            .fromJson(json['QuantityLate'] as Map<String, dynamic>),
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    returnToWarehouseId: json['ReturnToWarehouseId'] as String?,
    returnToWarehouseCode: json['ReturnToWarehouseCode'] as String?,
    returnToWarehouse: json['ReturnToWarehouse'] as String?,
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    recType: json['RecType'] as String?,
    orderType: json['OrderType'] as String?,
    orderTypeDescription: json['OrderTypeDescription'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    orderStatus: json['OrderStatus'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    fromDateTime: json['FromDateTime'] == null
        ? null
        : DateTime.parse(json['FromDateTime'] as String),
    fromDateTimeDisplay: json['FromDateTimeDisplay'] as String?,
    toDateTime: json['ToDateTime'] == null
        ? null
        : DateTime.parse(json['ToDateTime'] as String),
    toDateTimeDisplay: json['ToDateTimeDisplay'] as String?,
    roundTripRental: json['RoundTripRental'] as bool?,
    late: json['Late'] as bool?,
    lateButReturning: json['LateButReturning'] as bool?,
    qcRequired: json['QcRequired'] as bool?,
    enableQcDelay: json['EnableQcDelay'] as bool?,
    qcDelayDays: json['QcDelayDays'] as int?,
    qcDelayExcludeWeekend: json['QcDelayExcludeWeekend'] as bool?,
    qcDelayExcludeHoliday: json['QcDelayExcludeHoliday'] as bool?,
    qcDelayIndefinite: json['QcDelayIndefinite'] as bool?,
    qcDelayFromDateTime: json['QcDelayFromDateTime'] == null
        ? null
        : DateTime.parse(json['QcDelayFromDateTime'] as String),
    qcDelayToDateTime: json['QcDelayToDateTime'] == null
        ? null
        : DateTime.parse(json['QcDelayToDateTime'] as String),
    qcQuantity: (json['QcQuantity'] as num?)?.toDouble(),
    containerBarCode: json['ContainerBarCode'] as String?,
    availableWhileInContainer: json['AvailableWhileInContainer'] as bool?,
    contractId: json['ContractId'] as String?,
    quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
    quantitySub: (json['QuantitySub'] as num?)?.toDouble(),
    quantityConsigned: (json['QuantityConsigned'] as num?)?.toDouble(),
    isPositiveConflict: json['IsPositiveConflict'] as bool?,
    isNegativeConflict: json['IsNegativeConflict'] as bool?,
    subPurchaseOrderId: json['SubPurchaseOrderId'] as String?,
    subPurchaseOrderNumber: json['SubPurchaseOrderNumber'] as String?,
    subPurchaseOrderDescription: json['SubPurchaseOrderDescription'] as String?,
    subPurchaseOrderVendor: json['SubPurchaseOrderVendor'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservationToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservation
                instance) =>
        <String, dynamic>{
          'QuantityReserved': instance.quantityReserved?.toJson(),
          'QuantityStaged': instance.quantityStaged?.toJson(),
          'QuantityOut': instance.quantityOut?.toJson(),
          'QuantityIn': instance.quantityIn?.toJson(),
          'QuantityInRepair': instance.quantityInRepair?.toJson(),
          'QuantityLate': instance.quantityLate?.toJson(),
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'WarehouseCode': instance.warehouseCode,
          'Warehouse': instance.warehouse,
          'ReturnToWarehouseId': instance.returnToWarehouseId,
          'ReturnToWarehouseCode': instance.returnToWarehouseCode,
          'ReturnToWarehouse': instance.returnToWarehouse,
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
          'RecType': instance.recType,
          'OrderType': instance.orderType,
          'OrderTypeDescription': instance.orderTypeDescription,
          'OrderNumber': instance.orderNumber,
          'OrderDescription': instance.orderDescription,
          'OrderStatus': instance.orderStatus,
          'DepartmentId': instance.departmentId,
          'Department': instance.department,
          'DealId': instance.dealId,
          'Deal': instance.deal,
          'FromDateTime': instance.fromDateTime?.toIso8601String(),
          'FromDateTimeDisplay': instance.fromDateTimeDisplay,
          'ToDateTime': instance.toDateTime?.toIso8601String(),
          'ToDateTimeDisplay': instance.toDateTimeDisplay,
          'RoundTripRental': instance.roundTripRental,
          'Late': instance.late,
          'LateButReturning': instance.lateButReturning,
          'QcRequired': instance.qcRequired,
          'EnableQcDelay': instance.enableQcDelay,
          'QcDelayDays': instance.qcDelayDays,
          'QcDelayExcludeWeekend': instance.qcDelayExcludeWeekend,
          'QcDelayExcludeHoliday': instance.qcDelayExcludeHoliday,
          'QcDelayIndefinite': instance.qcDelayIndefinite,
          'QcDelayFromDateTime':
              instance.qcDelayFromDateTime?.toIso8601String(),
          'QcDelayToDateTime': instance.qcDelayToDateTime?.toIso8601String(),
          'QcQuantity': instance.qcQuantity,
          'ContainerBarCode': instance.containerBarCode,
          'AvailableWhileInContainer': instance.availableWhileInContainer,
          'ContractId': instance.contractId,
          'QuantityOrdered': instance.quantityOrdered,
          'QuantitySub': instance.quantitySub,
          'QuantityConsigned': instance.quantityConsigned,
          'IsPositiveConflict': instance.isPositiveConflict,
          'IsNegativeConflict': instance.isNegativeConflict,
          'SubPurchaseOrderId': instance.subPurchaseOrderId,
          'SubPurchaseOrderNumber': instance.subPurchaseOrderNumber,
          'SubPurchaseOrderDescription': instance.subPurchaseOrderDescription,
          'SubPurchaseOrderVendor': instance.subPurchaseOrderVendor,
        };

WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessory
    _$WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessoryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessory(
    inventoryId: json['InventoryId'] as String?,
    defaultQuantity: (json['DefaultQuantity'] as num?)?.toDouble(),
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessoryToJson(
            WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessory
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'DefaultQuantity': instance.defaultQuantity,
        };

WebApiModulesHomeControlsInventoryColorInventoryColor
    _$WebApiModulesHomeControlsInventoryColorInventoryColorFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryColorInventoryColor(
    inventoryColorId: json['InventoryColorId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    colorId: json['ColorId'] as String?,
    color: json['Color'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryColorInventoryColorToJson(
            WebApiModulesHomeControlsInventoryColorInventoryColor instance) =>
        <String, dynamic>{
          'InventoryColorId': instance.inventoryColorId,
          'InventoryId': instance.inventoryId,
          'ColorId': instance.colorId,
          'Color': instance.color,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryCompatibleInventoryCompatible
    _$WebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryCompatibleInventoryCompatible(
    inventoryCompatibleId: json['InventoryCompatibleId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    compatibleWithInventoryId: json['CompatibleWithInventoryId'] as String?,
    compatibleWithICode: json['CompatibleWithICode'] as String?,
    compatibleWithDescription: json['CompatibleWithDescription'] as String?,
    compatibleWithClassification:
        json['CompatibleWithClassification'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleToJson(
            WebApiModulesHomeControlsInventoryCompatibleInventoryCompatible
                instance) =>
        <String, dynamic>{
          'InventoryCompatibleId': instance.inventoryCompatibleId,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'CompatibleWithInventoryId': instance.compatibleWithInventoryId,
          'CompatibleWithICode': instance.compatibleWithICode,
          'CompatibleWithDescription': instance.compatibleWithDescription,
          'CompatibleWithClassification': instance.compatibleWithClassification,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryCompleteKitCreateCompleteResponse
    _$WebApiModulesHomeControlsInventoryCompleteKitCreateCompleteResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryCompleteKitCreateCompleteResponse(
    packageId: json['PackageId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryCompleteKitCreateCompleteResponseToJson(
            WebApiModulesHomeControlsInventoryCompleteKitCreateCompleteResponse
                instance) =>
        <String, dynamic>{
          'PackageId': instance.packageId,
        };

WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKit
    _$WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKit(
    inventoryId: json['InventoryId'] as String?,
    packageId: json['PackageId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    itemClass: json['ItemClass'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    subCategoryId: json['SubCategoryId'] as String?,
    subCategory: json['SubCategory'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitToJson(
            WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKit
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'PackageId': instance.packageId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'ItemClass': instance.itemClass,
          'InventoryTypeId': instance.inventoryTypeId,
          'InventoryType': instance.inventoryType,
          'CategoryId': instance.categoryId,
          'Category': instance.category,
          'SubCategoryId': instance.subCategoryId,
          'SubCategory': instance.subCategory,
          'WarehouseId': instance.warehouseId,
          'Warehouse': instance.warehouse,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryConsignorInventoryConsignor
    _$WebApiModulesHomeControlsInventoryConsignorInventoryConsignorFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryConsignorInventoryConsignor(
    consignorId: json['ConsignorId'] as String?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
    consignor: json['Consignor'] as String?,
    agreementNumber: json['AgreementNumber'] as String?,
    agreementDescription: json['AgreementDescription'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    treatConsignedQtyAsOwned: json['TreatConsignedQtyAsOwned'] as bool?,
    qtyConsigned: json['QtyConsigned'] as int?,
    consignorPercent: json['ConsignorPercent'] as int?,
    housePercent: json['HousePercent'] as int?,
    flatRate: json['FlatRate'] as bool?,
    flatRateAmount: (json['FlatRateAmount'] as num?)?.toDouble(),
    itemId: json['ItemId'] as String?,
    barCode: json['BarCode'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    inventoryStatusId: json['InventoryStatusId'] as String?,
    inventoryStatus: json['InventoryStatus'] as String?,
    inventoryStatusType: json['InventoryStatusType'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    textColor: json['TextColor'] as String?,
    color: json['Color'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryConsignorInventoryConsignorToJson(
            WebApiModulesHomeControlsInventoryConsignorInventoryConsignor
                instance) =>
        <String, dynamic>{
          'ConsignorId': instance.consignorId,
          'ConsignorAgreementId': instance.consignorAgreementId,
          'Consignor': instance.consignor,
          'AgreementNumber': instance.agreementNumber,
          'AgreementDescription': instance.agreementDescription,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'TrackedBy': instance.trackedBy,
          'TreatConsignedQtyAsOwned': instance.treatConsignedQtyAsOwned,
          'QtyConsigned': instance.qtyConsigned,
          'ConsignorPercent': instance.consignorPercent,
          'HousePercent': instance.housePercent,
          'FlatRate': instance.flatRate,
          'FlatRateAmount': instance.flatRateAmount,
          'ItemId': instance.itemId,
          'BarCode': instance.barCode,
          'SerialNumber': instance.serialNumber,
          'InventoryStatusId': instance.inventoryStatusId,
          'InventoryStatus': instance.inventoryStatus,
          'InventoryStatusType': instance.inventoryStatusType,
          'WarehouseId': instance.warehouseId,
          'Warehouse': instance.warehouse,
          'WarehouseCode': instance.warehouseCode,
          'TextColor': instance.textColor,
          'Color': instance.color,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItem
    _$WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItem(
    containerItemId: json['ContainerItemId'] as String?,
    packageId: json['PackageId'] as String?,
    containerId: json['ContainerId'] as String?,
    rowNumber: json['RowNumber'] as int?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
    price: (json['Price'] as num?)?.toDouble(),
    notes: json['Notes'] as String?,
    inventoryId: json['InventoryId'] as String?,
    recType: json['RecType'] as String?,
    ident: json['Ident'] as int?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemToJson(
            WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItem
                instance) =>
        <String, dynamic>{
          'ContainerItemId': instance.containerItemId,
          'PackageId': instance.packageId,
          'ContainerId': instance.containerId,
          'RowNumber': instance.rowNumber,
          'ICode': instance.iCode,
          'Description': instance.description,
          'TrackedBy': instance.trackedBy,
          'QuantityOrdered': instance.quantityOrdered,
          'Price': instance.price,
          'Notes': instance.notes,
          'InventoryId': instance.inventoryId,
          'RecType': instance.recType,
          'Ident': instance.ident,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryContainerItemSortContainerItemsRequest
    _$WebApiModulesHomeControlsInventoryContainerItemSortContainerItemsRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryContainerItemSortContainerItemsRequest(
    startAtIndex: json['StartAtIndex'] as int?,
    containerItemIds: (json['ContainerItemIds'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryContainerItemSortContainerItemsRequestToJson(
            WebApiModulesHomeControlsInventoryContainerItemSortContainerItemsRequest
                instance) =>
        <String, dynamic>{
          'StartAtIndex': instance.startAtIndex,
          'ContainerItemIds': instance.containerItemIds,
        };

WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTax
    _$WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTax(
    inventoryId: json['InventoryId'] as String?,
    id: json['Id'] as int?,
    internalChar: json['InternalChar'] as String?,
    locationId: json['LocationId'] as String?,
    location: json['Location'] as String?,
    taxable: json['Taxable'] as bool?,
    modByUsersId: json['ModByUsersId'] as String?,
    modByUser: json['ModByUser'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxToJson(
            WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTax
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'Id': instance.id,
          'InternalChar': instance.internalChar,
          'LocationId': instance.locationId,
          'Location': instance.location,
          'Taxable': instance.taxable,
          'ModByUsersId': instance.modByUsersId,
          'ModByUser': instance.modByUser,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryMaterialInventoryMaterial
    _$WebApiModulesHomeControlsInventoryMaterialInventoryMaterialFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryMaterialInventoryMaterial(
    inventoryMaterialId: json['InventoryMaterialId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    materialId: json['MaterialId'] as String?,
    description: json['Description'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryMaterialInventoryMaterialToJson(
            WebApiModulesHomeControlsInventoryMaterialInventoryMaterial
                instance) =>
        <String, dynamic>{
          'InventoryMaterialId': instance.inventoryMaterialId,
          'InventoryId': instance.inventoryId,
          'MaterialId': instance.materialId,
          'Description': instance.description,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventory
    _$WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventory(
    deletingWarehouseSpecific: json['deletingWarehouseSpecific'] as bool?,
    inventoryPackageInventoryId: json['InventoryPackageInventoryId'] as String?,
    packageId: json['PackageId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    iCodeColor: json['ICodeColor'] as String?,
    lineColor: json['LineColor'] as String?,
    description: json['Description'] as String?,
    isPrimary: json['IsPrimary'] as bool?,
    defaultQuantity: (json['DefaultQuantity'] as num?)?.toDouble(),
    isOption: json['IsOption'] as bool?,
    charge: json['Charge'] as bool?,
    isRequired: json['IsRequired'] as bool?,
    optionColor: json['OptionColor'] as String?,
    itemClass: json['ItemClass'] as String?,
    itemTrackedBy: json['ItemTrackedBy'] as String?,
    availFor: json['AvailFor'] as String?,
    availFrom: json['AvailFrom'] as String?,
    categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
    orderBy: json['OrderBy'] as int?,
    itemColor: json['ItemColor'] as int?,
    isNestedComplete: json['IsNestedComplete'] as bool?,
    inactive: json['Inactive'] as bool?,
    warehouseId: json['WarehouseId'] as String?,
    parentId: json['ParentId'] as String?,
    packageItemClass: json['PackageItemClass'] as String?,
    itemNonDiscountable: json['ItemNonDiscountable'] as bool?,
    primaryInventoryId: json['PrimaryInventoryId'] as String?,
    unitId: json['UnitId'] as String?,
    dailyRate: (json['DailyRate'] as num?)?.toDouble(),
    weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
    monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
    price: (json['Price'] as num?)?.toDouble(),
    retail: (json['Retail'] as num?)?.toDouble(),
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryToJson(
            WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventory
                instance) =>
        <String, dynamic>{
          'deletingWarehouseSpecific': instance.deletingWarehouseSpecific,
          'InventoryPackageInventoryId': instance.inventoryPackageInventoryId,
          'PackageId': instance.packageId,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'ICodeColor': instance.iCodeColor,
          'LineColor': instance.lineColor,
          'Description': instance.description,
          'IsPrimary': instance.isPrimary,
          'DefaultQuantity': instance.defaultQuantity,
          'IsOption': instance.isOption,
          'Charge': instance.charge,
          'IsRequired': instance.isRequired,
          'OptionColor': instance.optionColor,
          'ItemClass': instance.itemClass,
          'ItemTrackedBy': instance.itemTrackedBy,
          'AvailFor': instance.availFor,
          'AvailFrom': instance.availFrom,
          'CategoryOrderBy': instance.categoryOrderBy,
          'OrderBy': instance.orderBy,
          'ItemColor': instance.itemColor,
          'IsNestedComplete': instance.isNestedComplete,
          'Inactive': instance.inactive,
          'WarehouseId': instance.warehouseId,
          'ParentId': instance.parentId,
          'PackageItemClass': instance.packageItemClass,
          'ItemNonDiscountable': instance.itemNonDiscountable,
          'PrimaryInventoryId': instance.primaryInventoryId,
          'UnitId': instance.unitId,
          'DailyRate': instance.dailyRate,
          'WeeklyRate': instance.weeklyRate,
          'MonthlyRate': instance.monthlyRate,
          'Price': instance.price,
          'Retail': instance.retail,
          'CurrencyId': instance.currencyId,
          'CurrencyCode': instance.currencyCode,
          'CurrencySymbol': instance.currencySymbol,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryPackageInventorySortInventoryPackageInventorysRequest
    _$WebApiModulesHomeControlsInventoryPackageInventorySortInventoryPackageInventorysRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryPackageInventorySortInventoryPackageInventorysRequest(
    startAtIndex: json['StartAtIndex'] as int?,
    inventoryPackageInventoryIds:
        (json['InventoryPackageInventoryIds'] as List<dynamic>?)
                ?.map((e) => e as String)
                .toList() ??
            [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryPackageInventorySortInventoryPackageInventorysRequestToJson(
            WebApiModulesHomeControlsInventoryPackageInventorySortInventoryPackageInventorysRequest
                instance) =>
        <String, dynamic>{
          'StartAtIndex': instance.startAtIndex,
          'InventoryPackageInventoryIds': instance.inventoryPackageInventoryIds,
        };

WebApiModulesHomeControlsInventoryPrepInventoryPrep
    _$WebApiModulesHomeControlsInventoryPrepInventoryPrepFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryPrepInventoryPrep(
    inventoryPrepId: json['InventoryPrepId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    prepRateId: json['PrepRateId'] as String?,
    prepICode: json['PrepICode'] as String?,
    prepDescription: json['PrepDescription'] as String?,
    prepUnit: json['PrepUnit'] as String?,
    prepUnitType: json['PrepUnitType'] as String?,
    isDefault: json['IsDefault'] as bool?,
    prepRate: (json['PrepRate'] as num?)?.toDouble(),
    prepTime: json['PrepTime'] as String?,
    prepExtended: (json['PrepExtended'] as num?)?.toDouble(),
    qtyOrdered: (json['QtyOrdered'] as num?)?.toDouble(),
    price: (json['Price'] as num?)?.toDouble(),
    orderId: json['OrderId'] as bool?,
    masteritemId: json['MasteritemId'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryPrepInventoryPrepToJson(
            WebApiModulesHomeControlsInventoryPrepInventoryPrep instance) =>
        <String, dynamic>{
          'InventoryPrepId': instance.inventoryPrepId,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'PrepRateId': instance.prepRateId,
          'PrepICode': instance.prepICode,
          'PrepDescription': instance.prepDescription,
          'PrepUnit': instance.prepUnit,
          'PrepUnitType': instance.prepUnitType,
          'IsDefault': instance.isDefault,
          'PrepRate': instance.prepRate,
          'PrepTime': instance.prepTime,
          'PrepExtended': instance.prepExtended,
          'QtyOrdered': instance.qtyOrdered,
          'Price': instance.price,
          'OrderId': instance.orderId,
          'MasteritemId': instance.masteritemId,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItem
    _$WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItem(
    inventoryPurchaseItemId: json['InventoryPurchaseItemId'] as int?,
    sessionId: json['SessionId'] as String?,
    barCode: json['BarCode'] as String?,
    manufactureDate: json['ManufactureDate'] as String?,
    printQuantity: json['PrintQuantity'] as int?,
    serialNumber: json['SerialNumber'] as String?,
    rfId: json['RfId'] as String?,
    serialNumberIsMixedCase: json['SerialNumberIsMixedCase'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemToJson(
            WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItem
                instance) =>
        <String, dynamic>{
          'InventoryPurchaseItemId': instance.inventoryPurchaseItemId,
          'SessionId': instance.sessionId,
          'BarCode': instance.barCode,
          'ManufactureDate': instance.manufactureDate,
          'PrintQuantity': instance.printQuantity,
          'SerialNumber': instance.serialNumber,
          'RfId': instance.rfId,
          'SerialNumberIsMixedCase': instance.serialNumberIsMixedCase,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventorySearchInventorySearch
    _$WebApiModulesHomeControlsInventorySearchInventorySearchFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventorySearchInventorySearch(
    sessionId: json['SessionId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    id: json['Id'] as int?,
    lineage: json['Lineage'] as String?,
    packageItemId: json['PackageItemId'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    fromDate: json['FromDate'] == null
        ? null
        : DateTime.parse(json['FromDate'] as String),
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
    quantityAvailable: (json['QuantityAvailable'] as num?)?.toDouble(),
    conflictDate: json['ConflictDate'] == null
        ? null
        : DateTime.parse(json['ConflictDate'] as String),
    availabilityState: json['AvailabilityState'] as String?,
    quantityAvailableRegion:
        (json['QuantityAvailableRegion'] as num?)?.toDouble(),
    conflictDateRegion: json['ConflictDateRegion'] == null
        ? null
        : DateTime.parse(json['ConflictDateRegion'] as String),
    availabilityStateRegion: json['AvailabilityStateRegion'] as String?,
    quantityAvailableAllWarehouses:
        (json['QuantityAvailableAllWarehouses'] as num?)?.toDouble(),
    conflictDateAllWarehouses: json['ConflictDateAllWarehouses'] == null
        ? null
        : DateTime.parse(json['ConflictDateAllWarehouses'] as String),
    availabilityStateAllWarehouses:
        json['AvailabilityStateAllWarehouses'] as String?,
    totalQuantityInSession:
        (json['TotalQuantityInSession'] as num?)?.toDouble(),
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchToJson(
            WebApiModulesHomeControlsInventorySearchInventorySearch instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'Id': instance.id,
          'Lineage': instance.lineage,
          'PackageItemId': instance.packageItemId,
          'Quantity': instance.quantity,
          'FromDate': instance.fromDate?.toIso8601String(),
          'ToDate': instance.toDate?.toIso8601String(),
          'QuantityAvailable': instance.quantityAvailable,
          'ConflictDate': instance.conflictDate?.toIso8601String(),
          'AvailabilityState': instance.availabilityState,
          'QuantityAvailableRegion': instance.quantityAvailableRegion,
          'ConflictDateRegion': instance.conflictDateRegion?.toIso8601String(),
          'AvailabilityStateRegion': instance.availabilityStateRegion,
          'QuantityAvailableAllWarehouses':
              instance.quantityAvailableAllWarehouses,
          'ConflictDateAllWarehouses':
              instance.conflictDateAllWarehouses?.toIso8601String(),
          'AvailabilityStateAllWarehouses':
              instance.availabilityStateAllWarehouses,
          'TotalQuantityInSession': instance.totalQuantityInSession,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventorySearchInventorySearchAccessoriesRequest
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAccessoriesRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventorySearchInventorySearchAccessoriesRequest(
    sessionId: json['SessionId'] as String?,
    orderId: json['OrderId'] as String?,
    lineage: json['Lineage'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    showAvailability: json['ShowAvailability'] as bool?,
    fromDate: json['FromDate'] == null
        ? null
        : DateTime.parse(json['FromDate'] as String),
    fromTime: json['FromTime'] as String?,
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
    toTime: json['ToTime'] as String?,
    showImages: json['ShowImages'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAccessoriesRequestToJson(
            WebApiModulesHomeControlsInventorySearchInventorySearchAccessoriesRequest
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'OrderId': instance.orderId,
          'Lineage': instance.lineage,
          'WarehouseId': instance.warehouseId,
          'ShowAvailability': instance.showAvailability,
          'FromDate': instance.fromDate?.toIso8601String(),
          'FromTime': instance.fromTime,
          'ToDate': instance.toDate?.toIso8601String(),
          'ToTime': instance.toTime,
          'ShowImages': instance.showImages,
        };

WebApiModulesHomeControlsInventorySearchInventorySearchAddToCompleteKitContainerRequest
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAddToCompleteKitContainerRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventorySearchInventorySearchAddToCompleteKitContainerRequest(
    inventoryId: json['InventoryId'] as String?,
    sessionId: json['SessionId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAddToCompleteKitContainerRequestToJson(
            WebApiModulesHomeControlsInventorySearchInventorySearchAddToCompleteKitContainerRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'SessionId': instance.sessionId,
        };

WebApiModulesHomeControlsInventorySearchInventorySearchAddToOrderRequest
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAddToOrderRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventorySearchInventorySearchAddToOrderRequest(
    orderId: json['OrderId'] as String?,
    insertAtIndex: json['InsertAtIndex'] as int?,
    sessionId: json['SessionId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAddToOrderRequestToJson(
            WebApiModulesHomeControlsInventorySearchInventorySearchAddToOrderRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'InsertAtIndex': instance.insertAtIndex,
          'SessionId': instance.sessionId,
        };

WebApiModulesHomeControlsInventorySearchInventorySearchGetTotalResponse
    _$WebApiModulesHomeControlsInventorySearchInventorySearchGetTotalResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventorySearchInventorySearchGetTotalResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    totalQuantityInSession:
        (json['TotalQuantityInSession'] as num?)?.toDouble(),
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchGetTotalResponseToJson(
            WebApiModulesHomeControlsInventorySearchInventorySearchGetTotalResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'TotalQuantityInSession': instance.totalQuantityInSession,
        };

WebApiModulesHomeControlsInventorySearchInventorySearchRequest
    _$WebApiModulesHomeControlsInventorySearchInventorySearchRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventorySearchInventorySearchRequest(
    sessionId: json['SessionId'] as String?,
    orderId: json['OrderId'] as String?,
    availableFor: json['AvailableFor'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    currencyId: json['CurrencyId'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    categoryId: json['CategoryId'] as String?,
    subCategoryId: json['SubCategoryId'] as String?,
    classification: json['Classification'] as String?,
    searchText: json['SearchText'] as String?,
    attributeId: json['AttributeId'] as String?,
    attributeValueId: json['AttributeValueId'] as String?,
    attributeValueRange: json['AttributeValueRange'] as String?,
    showAvailability: json['ShowAvailability'] as bool?,
    fromDate: json['FromDate'] == null
        ? null
        : DateTime.parse(json['FromDate'] as String),
    fromTime: json['FromTime'] as String?,
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
    toTime: json['ToTime'] as String?,
    showImages: json['ShowImages'] as bool?,
    hideInventoryWithZeroQuantity:
        json['HideInventoryWithZeroQuantity'] as bool?,
    sortBy: json['SortBy'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchRequestToJson(
            WebApiModulesHomeControlsInventorySearchInventorySearchRequest
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'OrderId': instance.orderId,
          'AvailableFor': instance.availableFor,
          'WarehouseId': instance.warehouseId,
          'CurrencyId': instance.currencyId,
          'InventoryTypeId': instance.inventoryTypeId,
          'CategoryId': instance.categoryId,
          'SubCategoryId': instance.subCategoryId,
          'Classification': instance.classification,
          'SearchText': instance.searchText,
          'AttributeId': instance.attributeId,
          'AttributeValueId': instance.attributeValueId,
          'AttributeValueRange': instance.attributeValueRange,
          'ShowAvailability': instance.showAvailability,
          'FromDate': instance.fromDate?.toIso8601String(),
          'FromTime': instance.fromTime,
          'ToDate': instance.toDate?.toIso8601String(),
          'ToTime': instance.toTime,
          'ShowImages': instance.showImages,
          'HideInventoryWithZeroQuantity':
              instance.hideInventoryWithZeroQuantity,
          'SortBy': instance.sortBy,
        };

WebApiModulesHomeControlsInventorySearchInventorySearchSaveNoteRequest
    _$WebApiModulesHomeControlsInventorySearchInventorySearchSaveNoteRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventorySearchInventorySearchSaveNoteRequest(
    sessionId: json['SessionId'] as String?,
    quikSearchId: json['QuikSearchId'] as int?,
    note: json['Note'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchSaveNoteRequestToJson(
            WebApiModulesHomeControlsInventorySearchInventorySearchSaveNoteRequest
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'QuikSearchId': instance.quikSearchId,
          'Note': instance.note,
        };

WebApiModulesHomeControlsInventorySearchPreviewInventorySearchPreview
    _$WebApiModulesHomeControlsInventorySearchPreviewInventorySearchPreviewFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventorySearchPreviewInventorySearchPreview(
    id: json['Id'] as String?,
    sessionId: json['SessionId'] as String?,
    parentId: json['ParentId'] as String?,
    grandParentId: json['GrandParentId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    note: json['Note'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchPreviewInventorySearchPreviewToJson(
            WebApiModulesHomeControlsInventorySearchPreviewInventorySearchPreview
                instance) =>
        <String, dynamic>{
          'Id': instance.id,
          'SessionId': instance.sessionId,
          'ParentId': instance.parentId,
          'GrandParentId': instance.grandParentId,
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'Quantity': instance.quantity,
          'Note': instance.note,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventorySubstituteInventorySubstitute
    _$WebApiModulesHomeControlsInventorySubstituteInventorySubstituteFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventorySubstituteInventorySubstitute(
    inventorySubstituteId: json['InventorySubstituteId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    substituteInventoryId: json['SubstituteInventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    manufacturerId: json['ManufacturerId'] as String?,
    manufacturer: json['Manufacturer'] as String?,
    rate: (json['Rate'] as num?)?.toDouble(),
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySubstituteInventorySubstituteToJson(
            WebApiModulesHomeControlsInventorySubstituteInventorySubstitute
                instance) =>
        <String, dynamic>{
          'InventorySubstituteId': instance.inventorySubstituteId,
          'InventoryId': instance.inventoryId,
          'SubstituteInventoryId': instance.substituteInventoryId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'ManufacturerId': instance.manufacturerId,
          'Manufacturer': instance.manufacturer,
          'Rate': instance.rate,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryVendorInventoryVendor
    _$WebApiModulesHomeControlsInventoryVendorInventoryVendorFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryVendorInventoryVendor(
    inventoryVendorId: json['InventoryVendorId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    vendorId: json['VendorId'] as String?,
    vendor: json['Vendor'] as String?,
    contactName: json['ContactName'] as String?,
    contactOfficePhone: json['ContactOfficePhone'] as String?,
    contactEmail: json['ContactEmail'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryVendorInventoryVendorToJson(
            WebApiModulesHomeControlsInventoryVendorInventoryVendor instance) =>
        <String, dynamic>{
          'InventoryVendorId': instance.inventoryVendorId,
          'InventoryId': instance.inventoryId,
          'VendorId': instance.vendorId,
          'Vendor': instance.vendor,
          'ContactName': instance.contactName,
          'ContactOfficePhone': instance.contactOfficePhone,
          'ContactEmail': instance.contactEmail,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse
    _$WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse(
    inventoryId: json['InventoryId'] as String?,
    hourlyRate: (json['HourlyRate'] as num?)?.toDouble(),
    hourlyCost: (json['HourlyCost'] as num?)?.toDouble(),
    dailyRate: (json['DailyRate'] as num?)?.toDouble(),
    dailyCost: (json['DailyCost'] as num?)?.toDouble(),
    weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
    weeklyCost: (json['WeeklyCost'] as num?)?.toDouble(),
    week2Rate: (json['Week2Rate'] as num?)?.toDouble(),
    week3Rate: (json['Week3Rate'] as num?)?.toDouble(),
    week4Rate: (json['Week4Rate'] as num?)?.toDouble(),
    monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
    monthlyCost: (json['MonthlyCost'] as num?)?.toDouble(),
    retail: (json['Retail'] as num?)?.toDouble(),
    price: (json['Price'] as num?)?.toDouble(),
    defaultCost: (json['DefaultCost'] as num?)?.toDouble(),
    averageCost: (json['AverageCost'] as num?)?.toDouble(),
    markupPercent: (json['MarkupPercent'] as num?)?.toDouble(),
    reorderPoint: json['ReorderPoint'] as int?,
    reorderQuantity: json['ReorderQuantity'] as int?,
    maximumDiscount: (json['MaximumDiscount'] as num?)?.toDouble(),
    minimumDaysPerWeek: (json['MinimumDaysPerWeek'] as num?)?.toDouble(),
    hasTieredCost: json['HasTieredCost'] as bool?,
    restockingFee: (json['RestockingFee'] as num?)?.toDouble(),
    restockingPercent: (json['RestockingPercent'] as num?)?.toDouble(),
    dateOfLastPhysicalInventory: json['DateOfLastPhysicalInventory'] as String?,
    qty: (json['Qty'] as num?)?.toDouble(),
    qtyConsigned: (json['QtyConsigned'] as num?)?.toDouble(),
    qtyIn: (json['QtyIn'] as num?)?.toDouble(),
    qtyInContainer: (json['QtyInContainer'] as num?)?.toDouble(),
    qtyQcRequired: json['QtyQcRequired'] as int?,
    qtyStaged: (json['QtyStaged'] as num?)?.toDouble(),
    qtyOut: (json['QtyOut'] as num?)?.toDouble(),
    qtyInRepair: (json['QtyInRepair'] as num?)?.toDouble(),
    qtyOnPo: (json['QtyOnPo'] as num?)?.toDouble(),
    qtyAllocated: (json['QtyAllocated'] as num?)?.toDouble(),
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    availabilityByHour: json['AvailabilityByHour'] as bool?,
    availabilityByDeal: json['AvailabilityByDeal'] as bool?,
    availabilityByAsset: json['AvailabilityByAsset'] as bool?,
    qcRequired: json['QcRequired'] as bool?,
    availabilityQcDelay: json['AvailabilityQcDelay'] as int?,
    allowAllUsersAddToOrder: json['AllowAllUsersAddToOrder'] as bool?,
    unitValue: (json['UnitValue'] as num?)?.toDouble(),
    replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
    markupReplacementCost: json['MarkupReplacementCost'] as bool?,
    replacementCostMarkupPercent:
        (json['ReplacementCostMarkupPercent'] as num?)?.toDouble(),
    isWarehouseSpecific: json['IsWarehouseSpecific'] as bool?,
    itemDescription: json['ItemDescription'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseOrderBy: json['WarehouseOrderBy'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseToJson(
            WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'HourlyRate': instance.hourlyRate,
          'HourlyCost': instance.hourlyCost,
          'DailyRate': instance.dailyRate,
          'DailyCost': instance.dailyCost,
          'WeeklyRate': instance.weeklyRate,
          'WeeklyCost': instance.weeklyCost,
          'Week2Rate': instance.week2Rate,
          'Week3Rate': instance.week3Rate,
          'Week4Rate': instance.week4Rate,
          'MonthlyRate': instance.monthlyRate,
          'MonthlyCost': instance.monthlyCost,
          'Retail': instance.retail,
          'Price': instance.price,
          'DefaultCost': instance.defaultCost,
          'AverageCost': instance.averageCost,
          'MarkupPercent': instance.markupPercent,
          'ReorderPoint': instance.reorderPoint,
          'ReorderQuantity': instance.reorderQuantity,
          'MaximumDiscount': instance.maximumDiscount,
          'MinimumDaysPerWeek': instance.minimumDaysPerWeek,
          'HasTieredCost': instance.hasTieredCost,
          'RestockingFee': instance.restockingFee,
          'RestockingPercent': instance.restockingPercent,
          'DateOfLastPhysicalInventory': instance.dateOfLastPhysicalInventory,
          'Qty': instance.qty,
          'QtyConsigned': instance.qtyConsigned,
          'QtyIn': instance.qtyIn,
          'QtyInContainer': instance.qtyInContainer,
          'QtyQcRequired': instance.qtyQcRequired,
          'QtyStaged': instance.qtyStaged,
          'QtyOut': instance.qtyOut,
          'QtyInRepair': instance.qtyInRepair,
          'QtyOnPo': instance.qtyOnPo,
          'QtyAllocated': instance.qtyAllocated,
          'AisleLocation': instance.aisleLocation,
          'ShelfLocation': instance.shelfLocation,
          'AvailabilityByHour': instance.availabilityByHour,
          'AvailabilityByDeal': instance.availabilityByDeal,
          'AvailabilityByAsset': instance.availabilityByAsset,
          'QcRequired': instance.qcRequired,
          'AvailabilityQcDelay': instance.availabilityQcDelay,
          'AllowAllUsersAddToOrder': instance.allowAllUsersAddToOrder,
          'UnitValue': instance.unitValue,
          'ReplacementCost': instance.replacementCost,
          'MarkupReplacementCost': instance.markupReplacementCost,
          'ReplacementCostMarkupPercent': instance.replacementCostMarkupPercent,
          'IsWarehouseSpecific': instance.isWarehouseSpecific,
          'ItemDescription': instance.itemDescription,
          'WarehouseId': instance.warehouseId,
          'WarehouseCode': instance.warehouseCode,
          'Warehouse': instance.warehouse,
          'WarehouseOrderBy': instance.warehouseOrderBy,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecific
    _$WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecific(
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificToJson(
            WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecific
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'Warehouse': instance.warehouse,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatch
    _$WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatch(
    invoiceCreationBatchId: json['InvoiceCreationBatchId'] as String?,
    batchNumber: json['BatchNumber'] as int?,
    batchNumberAsString: json['BatchNumberAsString'] as String?,
    batchDate: json['BatchDate'] as String?,
    batchType: json['BatchType'] as String?,
    invoiceCount: json['InvoiceCount'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchToJson(
            WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatch
                instance) =>
        <String, dynamic>{
          'InvoiceCreationBatchId': instance.invoiceCreationBatchId,
          'BatchNumber': instance.batchNumber,
          'BatchNumberAsString': instance.batchNumberAsString,
          'BatchDate': instance.batchDate,
          'BatchType': instance.batchType,
          'InvoiceCount': instance.invoiceCount,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsInvoiceItemInvoiceItem
    _$WebApiModulesHomeControlsInvoiceItemInvoiceItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInvoiceItemInvoiceItem(
    invoiceItemId: json['InvoiceItemId'] as String?,
    invoiceId: json['InvoiceId'] as String?,
    itemId: json['ItemId'] as String?,
    itemClass: json['ItemClass'] as String?,
    itemOrder: json['ItemOrder'] as String?,
    inventoryId: json['InventoryId'] as String?,
    orderId: json['OrderId'] as String?,
    parentId: json['ParentId'] as String?,
    repairId: json['RepairId'] as String?,
    repairNumber: json['RepairNumber'] as String?,
    recType: json['RecType'] as String?,
    availableFor: json['AvailableFor'] as String?,
    bold: json['Bold'] as bool?,
    optionColor: json['OptionColor'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    nestedOrderItemId: json['NestedOrderItemId'] as String?,
    isAdjusted: json['IsAdjusted'] as bool?,
    isRecurring: json['IsRecurring'] as bool?,
    isManualBill: json['IsManualBill'] as bool?,
    voidInvoiceItemId: json['VoidInvoiceItemId'] as String?,
    isProfitCenter: json['IsProfitCenter'] as bool?,
    profitCenterChargeCode1: json['ProfitCenterChargeCode1'] as String?,
    profitCenterChargeCode2: json['ProfitCenterChargeCode2'] as String?,
    profitCenterChargeCode: json['ProfitCenterChargeCode'] as String?,
    activity: json['Activity'] as String?,
    activityExportCode: json['ActivityExportCode'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    barCode: json['BarCode'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    fromDate: json['FromDate'] as String?,
    fromTime: json['FromTime'] as String?,
    toDate: json['ToDate'] as String?,
    toTime: json['ToTime'] as String?,
    days: (json['Days'] as num?)?.toDouble(),
    billableDays: (json['BillableDays'] as num?)?.toDouble(),
    quantity: (json['Quantity'] as num?)?.toDouble(),
    cost: (json['Cost'] as num?)?.toDouble(),
    rate: (json['Rate'] as num?)?.toDouble(),
    unit: json['Unit'] as String?,
    daysPerWeek: (json['DaysPerWeek'] as num?)?.toDouble(),
    discountPercent: (json['DiscountPercent'] as num?)?.toDouble(),
    discountAmount: (json['DiscountAmount'] as num?)?.toDouble(),
    split: json['Split'] as int?,
    hours: (json['Hours'] as num?)?.toDouble(),
    hoursOvertime: (json['HoursOvertime'] as num?)?.toDouble(),
    hoursDoubletime: (json['HoursDoubletime'] as num?)?.toDouble(),
    crewActualHours: json['CrewActualHours'] as bool?,
    meterOut: (json['MeterOut'] as num?)?.toDouble(),
    meterIn: (json['MeterIn'] as num?)?.toDouble(),
    lineTotalBeforeDiscount:
        (json['LineTotalBeforeDiscount'] as num?)?.toDouble(),
    extended: (json['Extended'] as num?)?.toDouble(),
    lineTotal: (json['LineTotal'] as num?)?.toDouble(),
    taxable: json['Taxable'] as bool?,
    tax: (json['Tax'] as num?)?.toDouble(),
    tax2: (json['Tax2'] as num?)?.toDouble(),
    lineTotalWithTax: (json['LineTotalWithTax'] as num?)?.toDouble(),
    adjustment: (json['Adjustment'] as num?)?.toDouble(),
    rebateAmount: (json['RebateAmount'] as num?)?.toDouble(),
    adjustedRevenue: (json['AdjustedRevenue'] as num?)?.toDouble(),
    quikPayExtended: (json['QuikPayExtended'] as num?)?.toDouble(),
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    nestingLevel: json['NestingLevel'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsInvoiceItemInvoiceItemToJson(
        WebApiModulesHomeControlsInvoiceItemInvoiceItem instance) =>
    <String, dynamic>{
      'InvoiceItemId': instance.invoiceItemId,
      'InvoiceId': instance.invoiceId,
      'ItemId': instance.itemId,
      'ItemClass': instance.itemClass,
      'ItemOrder': instance.itemOrder,
      'InventoryId': instance.inventoryId,
      'OrderId': instance.orderId,
      'ParentId': instance.parentId,
      'RepairId': instance.repairId,
      'RepairNumber': instance.repairNumber,
      'RecType': instance.recType,
      'AvailableFor': instance.availableFor,
      'Bold': instance.bold,
      'OptionColor': instance.optionColor,
      'OrderItemId': instance.orderItemId,
      'NestedOrderItemId': instance.nestedOrderItemId,
      'IsAdjusted': instance.isAdjusted,
      'IsRecurring': instance.isRecurring,
      'IsManualBill': instance.isManualBill,
      'VoidInvoiceItemId': instance.voidInvoiceItemId,
      'IsProfitCenter': instance.isProfitCenter,
      'ProfitCenterChargeCode1': instance.profitCenterChargeCode1,
      'ProfitCenterChargeCode2': instance.profitCenterChargeCode2,
      'ProfitCenterChargeCode': instance.profitCenterChargeCode,
      'Activity': instance.activity,
      'ActivityExportCode': instance.activityExportCode,
      'OrderNumber': instance.orderNumber,
      'ICode': instance.iCode,
      'Description': instance.description,
      'BarCode': instance.barCode,
      'SerialNumber': instance.serialNumber,
      'FromDate': instance.fromDate,
      'FromTime': instance.fromTime,
      'ToDate': instance.toDate,
      'ToTime': instance.toTime,
      'Days': instance.days,
      'BillableDays': instance.billableDays,
      'Quantity': instance.quantity,
      'Cost': instance.cost,
      'Rate': instance.rate,
      'Unit': instance.unit,
      'DaysPerWeek': instance.daysPerWeek,
      'DiscountPercent': instance.discountPercent,
      'DiscountAmount': instance.discountAmount,
      'Split': instance.split,
      'Hours': instance.hours,
      'HoursOvertime': instance.hoursOvertime,
      'HoursDoubletime': instance.hoursDoubletime,
      'CrewActualHours': instance.crewActualHours,
      'MeterOut': instance.meterOut,
      'MeterIn': instance.meterIn,
      'LineTotalBeforeDiscount': instance.lineTotalBeforeDiscount,
      'Extended': instance.extended,
      'LineTotal': instance.lineTotal,
      'Taxable': instance.taxable,
      'Tax': instance.tax,
      'Tax2': instance.tax2,
      'LineTotalWithTax': instance.lineTotalWithTax,
      'Adjustment': instance.adjustment,
      'RebateAmount': instance.rebateAmount,
      'AdjustedRevenue': instance.adjustedRevenue,
      'QuikPayExtended': instance.quikPayExtended,
      'CurrencyId': instance.currencyId,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'NestingLevel': instance.nestingLevel,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsInvoiceNoteInvoiceNote
    _$WebApiModulesHomeControlsInvoiceNoteInvoiceNoteFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInvoiceNoteInvoiceNote(
    invoiceNoteId: json['InvoiceNoteId'] as String?,
    invoiceId: json['InvoiceId'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    noteDate: json['NoteDate'] as String?,
    description: json['Description'] as String?,
    notesById: json['NotesById'] as String?,
    notesBy: json['NotesBy'] as String?,
    notes: json['Notes'] as String?,
    printOnInvoice: json['PrintOnInvoice'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsInvoiceNoteInvoiceNoteToJson(
        WebApiModulesHomeControlsInvoiceNoteInvoiceNote instance) =>
    <String, dynamic>{
      'InvoiceNoteId': instance.invoiceNoteId,
      'InvoiceId': instance.invoiceId,
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'NoteDate': instance.noteDate,
      'Description': instance.description,
      'NotesById': instance.notesById,
      'NotesBy': instance.notesBy,
      'Notes': instance.notes,
      'PrintOnInvoice': instance.printOnInvoice,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsInvoiceReceiptInvoiceReceipt
    _$WebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsInvoiceReceiptInvoiceReceipt(
    invoiceReceiptId: json['InvoiceReceiptId'] as int?,
    invoiceId: json['InvoiceId'] as String?,
    receiptId: json['ReceiptId'] as String?,
    receiptDate: json['ReceiptDate'] as String?,
    paymentTypeId: json['PaymentTypeId'] as String?,
    paymentType: json['PaymentType'] as String?,
    checkNumber: json['CheckNumber'] as String?,
    recType: json['RecType'] as bool?,
    paymentBy: json['PaymentBy'] as String?,
    receiptCustomerId: json['ReceiptCustomerId'] as String?,
    receiptCustomer: json['ReceiptCustomer'] as String?,
    receiptDealId: json['ReceiptDealId'] as String?,
    receiptDeal: json['ReceiptDeal'] as String?,
    invoiceNumber: json['InvoiceNumber'] as String?,
    invoiceDate: json['InvoiceDate'] as String?,
    invoiceDescription: json['InvoiceDescription'] as String?,
    invoiceDealId: json['InvoiceDealId'] as String?,
    invoiceDeal: json['InvoiceDeal'] as String?,
    amount: (json['Amount'] as num?)?.toDouble(),
    appliedById: json['AppliedById'] as String?,
    appliedBy: json['AppliedBy'] as String?,
    paymentMemo: json['PaymentMemo'] as String?,
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptToJson(
            WebApiModulesHomeControlsInvoiceReceiptInvoiceReceipt instance) =>
        <String, dynamic>{
          'InvoiceReceiptId': instance.invoiceReceiptId,
          'InvoiceId': instance.invoiceId,
          'ReceiptId': instance.receiptId,
          'ReceiptDate': instance.receiptDate,
          'PaymentTypeId': instance.paymentTypeId,
          'PaymentType': instance.paymentType,
          'CheckNumber': instance.checkNumber,
          'RecType': instance.recType,
          'PaymentBy': instance.paymentBy,
          'ReceiptCustomerId': instance.receiptCustomerId,
          'ReceiptCustomer': instance.receiptCustomer,
          'ReceiptDealId': instance.receiptDealId,
          'ReceiptDeal': instance.receiptDeal,
          'InvoiceNumber': instance.invoiceNumber,
          'InvoiceDate': instance.invoiceDate,
          'InvoiceDescription': instance.invoiceDescription,
          'InvoiceDealId': instance.invoiceDealId,
          'InvoiceDeal': instance.invoiceDeal,
          'Amount': instance.amount,
          'AppliedById': instance.appliedById,
          'AppliedBy': instance.appliedBy,
          'PaymentMemo': instance.paymentMemo,
          'CurrencyId': instance.currencyId,
          'CurrencyCode': instance.currencyCode,
          'CurrencySymbol': instance.currencySymbol,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsItemAttributeValueItemAttributeValue
    _$WebApiModulesHomeControlsItemAttributeValueItemAttributeValueFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsItemAttributeValueItemAttributeValue(
    itemAttributeValueId: json['ItemAttributeValueId'] as String?,
    attributeId: json['AttributeId'] as String?,
    itemId: json['ItemId'] as String?,
    attribute: json['Attribute'] as String?,
    attributeValueId: json['AttributeValueId'] as String?,
    attributeValue: json['AttributeValue'] as String?,
    numericValue: (json['NumericValue'] as num?)?.toDouble(),
    numericOnly: json['NumericOnly'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsItemAttributeValueItemAttributeValueToJson(
            WebApiModulesHomeControlsItemAttributeValueItemAttributeValue
                instance) =>
        <String, dynamic>{
          'ItemAttributeValueId': instance.itemAttributeValueId,
          'AttributeId': instance.attributeId,
          'ItemId': instance.itemId,
          'Attribute': instance.attribute,
          'AttributeValueId': instance.attributeValueId,
          'AttributeValue': instance.attributeValue,
          'NumericValue': instance.numericValue,
          'NumericOnly': instance.numericOnly,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsItemQcItemQc
    _$WebApiModulesHomeControlsItemQcItemQcFromJson(Map<String, dynamic> json) {
  return WebApiModulesHomeControlsItemQcItemQc(
    itemQcId: json['ItemQcId'] as String?,
    itemId: json['ItemId'] as String?,
    qcRequiredAsOf: json['QcRequiredAsOf'] as String?,
    qcByUsersId: json['QcByUsersId'] as String?,
    qcByUser: json['QcByUser'] as String?,
    qcDateTime: json['QcDateTime'] as String?,
    lastOrderId: json['LastOrderId'] as String?,
    lastOrderNumber: json['LastOrderNumber'] as String?,
    lastOrderDescription: json['LastOrderDescription'] as String?,
    lastDealId: json['LastDealId'] as String?,
    lastDealNumber: json['LastDealNumber'] as String?,
    lastDeal: json['LastDeal'] as String?,
    conditionId: json['ConditionId'] as String?,
    inContractId: json['InContractId'] as String?,
    condition: json['Condition'] as String?,
    note: json['Note'] as String?,
    hasImage: json['HasImage'] as bool?,
    qcAppImageId: json['QcAppImageId'] as String?,
    datstamp: json['Datstamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsItemQcItemQcToJson(
        WebApiModulesHomeControlsItemQcItemQc instance) =>
    <String, dynamic>{
      'ItemQcId': instance.itemQcId,
      'ItemId': instance.itemId,
      'QcRequiredAsOf': instance.qcRequiredAsOf,
      'QcByUsersId': instance.qcByUsersId,
      'QcByUser': instance.qcByUser,
      'QcDateTime': instance.qcDateTime,
      'LastOrderId': instance.lastOrderId,
      'LastOrderNumber': instance.lastOrderNumber,
      'LastOrderDescription': instance.lastOrderDescription,
      'LastDealId': instance.lastDealId,
      'LastDealNumber': instance.lastDealNumber,
      'LastDeal': instance.lastDeal,
      'ConditionId': instance.conditionId,
      'InContractId': instance.inContractId,
      'Condition': instance.condition,
      'Note': instance.note,
      'HasImage': instance.hasImage,
      'QcAppImageId': instance.qcAppImageId,
      'Datstamp': instance.datstamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionRequest
    _$WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionRequest(
    sourceOrderId: json['SourceOrderId'] as String?,
    sessionId: json['SessionId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionRequestToJson(
            WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionRequest
                instance) =>
        <String, dynamic>{
          'SourceOrderId': instance.sourceOrderId,
          'SessionId': instance.sessionId,
        };

WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionResponse
    _$WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionResponseToJson(
            WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsLossAndDamageCreateLossAndDamageOrderFromRepairResponse
    _$WebApiModulesHomeControlsLossAndDamageCreateLossAndDamageOrderFromRepairResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageCreateLossAndDamageOrderFromRepairResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    order: json['Order'] == null
        ? null
        : WebApiModulesAgentOrderOrder.fromJson(
            json['Order'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageCreateLossAndDamageOrderFromRepairResponseToJson(
            WebApiModulesHomeControlsLossAndDamageCreateLossAndDamageOrderFromRepairResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'Order': instance.order?.toJson(),
        };

WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemRequest
    _$WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemRequest(
    orderId: json['OrderId'] as String?,
    locationId: json['LocationId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemRequestToJson(
            WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'LocationId': instance.locationId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemResponse
    _$WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemResponseToJson(
            WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'ContractId': instance.contractId,
        };

WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemRequest
    _$WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemRequest(
    sessionId: json['SessionId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemRequestToJson(
            WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemRequest
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
        };

WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemResponse
    _$WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemResponseToJson(
            WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionRequest
    _$WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionRequest(
    dealId: json['DealId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    orderIds: json['OrderIds'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionRequestToJson(
            WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionRequest
                instance) =>
        <String, dynamic>{
          'DealId': instance.dealId,
          'WarehouseId': instance.warehouseId,
          'OrderIds': instance.orderIds,
        };

WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionResponse
    _$WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionResponse(
    sessionId: json['SessionId'] as String?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionResponseToJson(
            WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionResponse
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemRequest
    _$WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemRequest(
    sessionId: json['SessionId'] as String?,
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    barCode: json['BarCode'] as String?,
    quantity: json['Quantity'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemRequestToJson(
            WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemRequest
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
          'BarCode': instance.barCode,
          'Quantity': instance.quantity,
        };

WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemResponse
    _$WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemResponse(
    newQuantity: json['NewQuantity'] as int?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemResponseToJson(
            WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemResponse
                instance) =>
        <String, dynamic>{
          'NewQuantity': instance.newQuantity,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsManifestManifest
    _$WebApiModulesHomeControlsManifestManifestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsManifestManifest(
    manifestId: json['ManifestId'] as String?,
    manifestNumber: json['ManifestNumber'] as String?,
    manifestDate: json['ManifestDate'] as String?,
    contractType: json['ContractType'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    locationId: json['LocationId'] as String?,
    location: json['Location'] as String?,
    locationCode: json['LocationCode'] as String?,
    nameFirstMiddleLast: json['NameFirstMiddleLast'] as String?,
    transferId: json['TransferId'] as String?,
    transferNumber: json['TransferNumber'] as String?,
    transferDescription: json['TransferDescription'] as String?,
    hasVoid: json['HasVoid'] as bool?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    exchange: json['Exchange'] as bool?,
    manifestTime: json['ManifestTime'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsManifestManifestToJson(
        WebApiModulesHomeControlsManifestManifest instance) =>
    <String, dynamic>{
      'ManifestId': instance.manifestId,
      'ManifestNumber': instance.manifestNumber,
      'ManifestDate': instance.manifestDate,
      'ContractType': instance.contractType,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'LocationId': instance.locationId,
      'Location': instance.location,
      'LocationCode': instance.locationCode,
      'NameFirstMiddleLast': instance.nameFirstMiddleLast,
      'TransferId': instance.transferId,
      'TransferNumber': instance.transferNumber,
      'TransferDescription': instance.transferDescription,
      'HasVoid': instance.hasVoid,
      'Rental': instance.rental,
      'Sales': instance.sales,
      'Exchange': instance.exchange,
      'ManifestTime': instance.manifestTime,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsOrderContactOrderContact
    _$WebApiModulesHomeControlsOrderContactOrderContactFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderContactOrderContact(
    orderContactId: json['OrderContactId'] as int?,
    orderId: json['OrderId'] as String?,
    contactId: json['ContactId'] as String?,
    nameFml: json['NameFml'] as String?,
    nameLfm: json['NameLfm'] as String?,
    person: json['Person'] as String?,
    personColor: json['PersonColor'] as String?,
    firstName: json['FirstName'] as String?,
    middleInitial: json['MiddleInitial'] as String?,
    lastName: json['LastName'] as String?,
    contactTitle: json['ContactTitle'] as String?,
    officePhone: json['OfficePhone'] as String?,
    officeExtension: json['OfficeExtension'] as String?,
    mobilePhone: json['MobilePhone'] as String?,
    email: json['Email'] as String?,
    pager: json['Pager'] as String?,
    pagerPin: json['PagerPin'] as String?,
    jobTitle: json['JobTitle'] as String?,
    contactTitleId: json['ContactTitleId'] as String?,
    companyContactId: json['CompanyContactId'] as String?,
    companyId: json['CompanyId'] as String?,
    isPrimary: json['IsPrimary'] as bool?,
    countryId: json['CountryId'] as String?,
    isOrderedBy: json['IsOrderedBy'] as bool?,
    isProductionContact: json['IsProductionContact'] as bool?,
    isPrintable: json['IsPrintable'] as bool?,
    contactOnOrder: json['ContactOnOrder'] as bool?,
    inactive: json['Inactive'] as bool?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsOrderContactOrderContactToJson(
        WebApiModulesHomeControlsOrderContactOrderContact instance) =>
    <String, dynamic>{
      'OrderContactId': instance.orderContactId,
      'OrderId': instance.orderId,
      'ContactId': instance.contactId,
      'NameFml': instance.nameFml,
      'NameLfm': instance.nameLfm,
      'Person': instance.person,
      'PersonColor': instance.personColor,
      'FirstName': instance.firstName,
      'MiddleInitial': instance.middleInitial,
      'LastName': instance.lastName,
      'ContactTitle': instance.contactTitle,
      'OfficePhone': instance.officePhone,
      'OfficeExtension': instance.officeExtension,
      'MobilePhone': instance.mobilePhone,
      'Email': instance.email,
      'Pager': instance.pager,
      'PagerPin': instance.pagerPin,
      'JobTitle': instance.jobTitle,
      'ContactTitleId': instance.contactTitleId,
      'CompanyContactId': instance.companyContactId,
      'CompanyId': instance.companyId,
      'IsPrimary': instance.isPrimary,
      'CountryId': instance.countryId,
      'IsOrderedBy': instance.isOrderedBy,
      'IsProductionContact': instance.isProductionContact,
      'IsPrintable': instance.isPrintable,
      'ContactOnOrder': instance.contactOnOrder,
      'Inactive': instance.inactive,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsOrderDatesOrderDates
    _$WebApiModulesHomeControlsOrderDatesOrderDatesFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderDatesOrderDates(
    orderId: json['OrderId'] as String?,
    orderTypeId: json['OrderTypeId'] as String?,
    orderTypeDateTypeId: json['OrderTypeDateTypeId'] as String?,
    isSystemType: json['IsSystemType'] as bool?,
    activityTypeId: json['ActivityTypeId'] as String?,
    activityType: json['ActivityType'] as String?,
    activity: json['Activity'] as String?,
    activityDisplay: json['ActivityDisplay'] as String?,
    description: json['Description'] as String?,
    descriptionDisplay: json['DescriptionDisplay'] as String?,
    descriptionDisplayTitleCase: json['DescriptionDisplayTitleCase'] as String?,
    isEnabled: json['IsEnabled'] as bool?,
    date: json['Date'] as String?,
    time: json['Time'] as String?,
    dateAndTime: json['DateAndTime'] as String?,
    dayOfWeek: json['DayOfWeek'] as String?,
    actualDate: json['ActualDate'] as String?,
    actualTime: json['ActualTime'] as String?,
    actualDayOfWeek: json['ActualDayOfWeek'] as String?,
    isRequired: json['IsRequired'] as bool?,
    isProductionActivity: json['IsProductionActivity'] as bool?,
    isMilestone: json['IsMilestone'] as bool?,
    orderBy: (json['OrderBy'] as num?)?.toDouble(),
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsOrderDatesOrderDatesToJson(
        WebApiModulesHomeControlsOrderDatesOrderDates instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'OrderTypeId': instance.orderTypeId,
      'OrderTypeDateTypeId': instance.orderTypeDateTypeId,
      'IsSystemType': instance.isSystemType,
      'ActivityTypeId': instance.activityTypeId,
      'ActivityType': instance.activityType,
      'Activity': instance.activity,
      'ActivityDisplay': instance.activityDisplay,
      'Description': instance.description,
      'DescriptionDisplay': instance.descriptionDisplay,
      'DescriptionDisplayTitleCase': instance.descriptionDisplayTitleCase,
      'IsEnabled': instance.isEnabled,
      'Date': instance.date,
      'Time': instance.time,
      'DateAndTime': instance.dateAndTime,
      'DayOfWeek': instance.dayOfWeek,
      'ActualDate': instance.actualDate,
      'ActualTime': instance.actualTime,
      'ActualDayOfWeek': instance.actualDayOfWeek,
      'IsRequired': instance.isRequired,
      'IsProductionActivity': instance.isProductionActivity,
      'IsMilestone': instance.isMilestone,
      'OrderBy': instance.orderBy,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsOrderItemCompleteKitOption
    _$WebApiModulesHomeControlsOrderItemCompleteKitOptionFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderItemCompleteKitOption(
    inventoryId: json['InventoryId'] as String?,
    inventoryPackageInventoryId: json['InventoryPackageInventoryId'] as String?,
    quantity: json['Quantity'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemCompleteKitOptionToJson(
            WebApiModulesHomeControlsOrderItemCompleteKitOption instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'InventoryPackageInventoryId': instance.inventoryPackageInventoryId,
          'Quantity': instance.quantity,
        };

WebApiModulesHomeControlsOrderItemInsertLineItemRequest
    _$WebApiModulesHomeControlsOrderItemInsertLineItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderItemInsertLineItemRequest(
    orderId: json['OrderId'] as String?,
    belowOrderItemId: json['BelowOrderItemId'] as String?,
    primaryItemId: json['PrimaryItemId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemInsertLineItemRequestToJson(
            WebApiModulesHomeControlsOrderItemInsertLineItemRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'BelowOrderItemId': instance.belowOrderItemId,
          'PrimaryItemId': instance.primaryItemId,
        };

WebApiModulesHomeControlsOrderItemInsertOptionRequest
    _$WebApiModulesHomeControlsOrderItemInsertOptionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderItemInsertOptionRequest(
    orderId: json['OrderId'] as String?,
    parentOrderItemId: json['ParentOrderItemId'] as String?,
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsOrderItemCompleteKitOption.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemInsertOptionRequestToJson(
            WebApiModulesHomeControlsOrderItemInsertOptionRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'ParentOrderItemId': instance.parentOrderItemId,
          'Items': instance.items?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsOrderItemOrderItem
    _$WebApiModulesHomeControlsOrderItemOrderItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderItemOrderItem(
    orderItemId: json['OrderItemId'] as String?,
    orderId: json['OrderId'] as String?,
    rowsRolledUp: json['RowsRolledUp'] as bool?,
    rolledUpIds: json['RolledUpIds'] as String?,
    orderType: json['OrderType'] as String?,
    recType: json['RecType'] as String?,
    recTypeDisplay: json['RecTypeDisplay'] as String?,
    rowNumber: json['RowNumber'] as int?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    iCodeColor: json['ICodeColor'] as String?,
    description: json['Description'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    pickDate: json['PickDate'] as String?,
    pickTime: json['PickTime'] as String?,
    fromDate: json['FromDate'] as String?,
    fromTime: json['FromTime'] as String?,
    toDate: json['ToDate'] as String?,
    toTime: json['ToTime'] as String?,
    billablePeriods: (json['BillablePeriods'] as num?)?.toDouble(),
    quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
    quantityColor: json['QuantityColor'] as String?,
    subQuantity: (json['SubQuantity'] as num?)?.toDouble(),
    subQuantityColor: json['SubQuantityColor'] as String?,
    consignQuantity: json['ConsignQuantity'] as int?,
    reservedItemQuantity: json['ReservedItemQuantity'] as int?,
    availableQuantity: (json['AvailableQuantity'] as num?)?.toDouble(),
    availabilityState: json['AvailabilityState'] as String?,
    availableAllWarehousesQuantity:
        (json['AvailableAllWarehousesQuantity'] as num?)?.toDouble(),
    conflictDate: json['ConflictDate'] as String?,
    conflictDateAllWarehouses: json['ConflictDateAllWarehouses'] as String?,
    conflictDateConsignment: json['ConflictDateConsignment'] as String?,
    unitId: json['UnitId'] as String?,
    unit: json['Unit'] as String?,
    unitType: json['UnitType'] as String?,
    unitCost: (json['UnitCost'] as num?)?.toDouble(),
    marginPercent: (json['MarginPercent'] as num?)?.toDouble(),
    markupPercent: (json['MarkupPercent'] as num?)?.toDouble(),
    premiumPercent: (json['PremiumPercent'] as num?)?.toDouble(),
    crewContactId: json['CrewContactId'] as String?,
    crewName: json['CrewName'] as String?,
    hours: (json['Hours'] as num?)?.toDouble(),
    hoursOvertime: (json['HoursOvertime'] as num?)?.toDouble(),
    hoursDoubletime: (json['HoursDoubletime'] as num?)?.toDouble(),
    price: (json['Price'] as num?)?.toDouble(),
    price2: (json['Price2'] as num?)?.toDouble(),
    price3: (json['Price3'] as num?)?.toDouble(),
    price4: (json['Price4'] as num?)?.toDouble(),
    price5: (json['Price5'] as num?)?.toDouble(),
    daysPerWeek: (json['DaysPerWeek'] as num?)?.toDouble(),
    discountPercent: (json['DiscountPercent'] as num?)?.toDouble(),
    discountPercentDisplay:
        (json['DiscountPercentDisplay'] as num?)?.toDouble(),
    unitExtendedNoDiscount:
        (json['UnitExtendedNoDiscount'] as num?)?.toDouble(),
    unitDiscountAmount: (json['UnitDiscountAmount'] as num?)?.toDouble(),
    unitExtended: (json['UnitExtended'] as num?)?.toDouble(),
    weeklyExtendedNoDiscount:
        (json['WeeklyExtendedNoDiscount'] as num?)?.toDouble(),
    weeklyDiscountAmount: (json['WeeklyDiscountAmount'] as num?)?.toDouble(),
    weeklyExtended: (json['WeeklyExtended'] as num?)?.toDouble(),
    weeklyCostExtended: (json['WeeklyCostExtended'] as num?)?.toDouble(),
    weeklyTax: (json['WeeklyTax'] as num?)?.toDouble(),
    weeklyTax1: (json['WeeklyTax1'] as num?)?.toDouble(),
    weeklyTax2: (json['WeeklyTax2'] as num?)?.toDouble(),
    weeklyTotal: (json['WeeklyTotal'] as num?)?.toDouble(),
    week2Extended: (json['Week2Extended'] as num?)?.toDouble(),
    week3Extended: (json['Week3Extended'] as num?)?.toDouble(),
    weeks1Through3Extended:
        (json['Weeks1Through3Extended'] as num?)?.toDouble(),
    weeks4PlusExtended: (json['Weeks4PlusExtended'] as num?)?.toDouble(),
    week4Extended: (json['Week4Extended'] as num?)?.toDouble(),
    averageWeekly: (json['AverageWeekly'] as num?)?.toDouble(),
    averageWeeklyExtended: (json['AverageWeeklyExtended'] as num?)?.toDouble(),
    averageWeeklyExtendedNoDiscount:
        (json['AverageWeeklyExtendedNoDiscount'] as num?)?.toDouble(),
    averageWeeklyDiscountAmount:
        (json['AverageWeeklyDiscountAmount'] as num?)?.toDouble(),
    averageWeeklyTax: (json['AverageWeeklyTax'] as num?)?.toDouble(),
    averageWeeklyTax1: (json['AverageWeeklyTax1'] as num?)?.toDouble(),
    averageWeeklyTax2: (json['AverageWeeklyTax2'] as num?)?.toDouble(),
    averageWeeklyTotal: (json['AverageWeeklyTotal'] as num?)?.toDouble(),
    episodes: json['Episodes'] as int?,
    monthlyExtendedNoDiscount:
        (json['MonthlyExtendedNoDiscount'] as num?)?.toDouble(),
    monthlyDiscountAmount: (json['MonthlyDiscountAmount'] as num?)?.toDouble(),
    monthlyExtended: (json['MonthlyExtended'] as num?)?.toDouble(),
    monthlyCostExtended: (json['MonthlyCostExtended'] as num?)?.toDouble(),
    monthlyTax: (json['MonthlyTax'] as num?)?.toDouble(),
    monthlyTax1: (json['MonthlyTax1'] as num?)?.toDouble(),
    monthlyTax2: (json['MonthlyTax2'] as num?)?.toDouble(),
    monthlyTotal: (json['MonthlyTotal'] as num?)?.toDouble(),
    periodExtendedNoDiscount:
        (json['PeriodExtendedNoDiscount'] as num?)?.toDouble(),
    periodCostExtended: (json['PeriodCostExtended'] as num?)?.toDouble(),
    periodDiscountAmount: (json['PeriodDiscountAmount'] as num?)?.toDouble(),
    periodExtended: (json['PeriodExtended'] as num?)?.toDouble(),
    periodTax: (json['PeriodTax'] as num?)?.toDouble(),
    periodTax1: (json['PeriodTax1'] as num?)?.toDouble(),
    periodTax2: (json['PeriodTax2'] as num?)?.toDouble(),
    periodTotal: (json['PeriodTotal'] as num?)?.toDouble(),
    periodVarianceExtended:
        (json['PeriodVarianceExtended'] as num?)?.toDouble(),
    variancePercent: (json['VariancePercent'] as num?)?.toDouble(),
    minimumDaysPerWeek: (json['MinimumDaysPerWeek'] as num?)?.toDouble(),
    bold: json['Bold'] as bool?,
    locked: json['Locked'] as bool?,
    taxable: json['Taxable'] as bool?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    returnToWarehouseId: json['ReturnToWarehouseId'] as String?,
    returnToWarehouseCode: json['ReturnToWarehouseCode'] as String?,
    notes: json['Notes'] as String?,
    itemOrder: json['ItemOrder'] as String?,
    parentId: json['ParentId'] as String?,
    nestedOrderItemId: json['NestedOrderItemId'] as String?,
    itemClass: json['ItemClass'] as String?,
    inventoryClass: json['InventoryClass'] as String?,
    retiredReasonId: json['RetiredReasonId'] as String?,
    retiredReason: json['RetiredReason'] as String?,
    itemId: json['ItemId'] as String?,
    barCode: json['BarCode'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
    poSubOrderId: json['PoSubOrderId'] as String?,
    poSubOrderItemId: json['PoSubOrderItemId'] as String?,
    poSubOrderNumber: json['PoSubOrderNumber'] as String?,
    lossAndDamageOrderId: json['LossAndDamageOrderId'] as String?,
    lossAndDamageOrderItemId: json['LossAndDamageOrderItemId'] as String?,
    lossAndDamageOrderNumber: json['LossAndDamageOrderNumber'] as String?,
    modifiedAtStaging: json['ModifiedAtStaging'] as bool?,
    mute: json['Mute'] as bool?,
    availabilityByHour: json['AvailabilityByHour'] as bool?,
    printNoteOnQuote: json['PrintNoteOnQuote'] as bool?,
    printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
    printNoteOnPickList: json['PrintNoteOnPickList'] as bool?,
    printNoteOnOutContract: json['PrintNoteOnOutContract'] as bool?,
    printNoteOnInContract: json['PrintNoteOnInContract'] as bool?,
    printNoteOnReturnList: json['PrintNoteOnReturnList'] as bool?,
    printNoteOnInvoice: json['PrintNoteOnInvoice'] as bool?,
    printNoteOnPurchaseOrder: json['PrintNoteOnPurchaseOrder'] as bool?,
    printNoteOnReceiveContract: json['PrintNoteOnReceiveContract'] as bool?,
    printNoteOnReturnContract: json['PrintNoteOnReturnContract'] as bool?,
    printNoteOnVendorReceiveList: json['PrintNoteOnVendorReceiveList'] as bool?,
    printNoteOnVendorReturnList: json['PrintNoteOnVendorReturnList'] as bool?,
    defaultHourlyRate: (json['DefaultHourlyRate'] as num?)?.toDouble(),
    defaultDailyRate: (json['DefaultDailyRate'] as num?)?.toDouble(),
    defaultWeeklyRate: (json['DefaultWeeklyRate'] as num?)?.toDouble(),
    defaultMonthlyRate: (json['DefaultMonthlyRate'] as num?)?.toDouble(),
    nestingLevel: json['NestingLevel'] as int?,
    repairId: json['RepairId'] as String?,
    repairNumber: json['RepairNumber'] as String?,
    accessoryRatio: (json['AccessoryRatio'] as num?)?.toDouble(),
    isOption: json['IsOption'] as bool?,
    optionColor: json['OptionColor'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsOrderItemOrderItemToJson(
        WebApiModulesHomeControlsOrderItemOrderItem instance) =>
    <String, dynamic>{
      'OrderItemId': instance.orderItemId,
      'OrderId': instance.orderId,
      'RowsRolledUp': instance.rowsRolledUp,
      'RolledUpIds': instance.rolledUpIds,
      'OrderType': instance.orderType,
      'RecType': instance.recType,
      'RecTypeDisplay': instance.recTypeDisplay,
      'RowNumber': instance.rowNumber,
      'InventoryId': instance.inventoryId,
      'ICode': instance.iCode,
      'ICodeColor': instance.iCodeColor,
      'Description': instance.description,
      'DescriptionColor': instance.descriptionColor,
      'PickDate': instance.pickDate,
      'PickTime': instance.pickTime,
      'FromDate': instance.fromDate,
      'FromTime': instance.fromTime,
      'ToDate': instance.toDate,
      'ToTime': instance.toTime,
      'BillablePeriods': instance.billablePeriods,
      'QuantityOrdered': instance.quantityOrdered,
      'QuantityColor': instance.quantityColor,
      'SubQuantity': instance.subQuantity,
      'SubQuantityColor': instance.subQuantityColor,
      'ConsignQuantity': instance.consignQuantity,
      'ReservedItemQuantity': instance.reservedItemQuantity,
      'AvailableQuantity': instance.availableQuantity,
      'AvailabilityState': instance.availabilityState,
      'AvailableAllWarehousesQuantity': instance.availableAllWarehousesQuantity,
      'ConflictDate': instance.conflictDate,
      'ConflictDateAllWarehouses': instance.conflictDateAllWarehouses,
      'ConflictDateConsignment': instance.conflictDateConsignment,
      'UnitId': instance.unitId,
      'Unit': instance.unit,
      'UnitType': instance.unitType,
      'UnitCost': instance.unitCost,
      'MarginPercent': instance.marginPercent,
      'MarkupPercent': instance.markupPercent,
      'PremiumPercent': instance.premiumPercent,
      'CrewContactId': instance.crewContactId,
      'CrewName': instance.crewName,
      'Hours': instance.hours,
      'HoursOvertime': instance.hoursOvertime,
      'HoursDoubletime': instance.hoursDoubletime,
      'Price': instance.price,
      'Price2': instance.price2,
      'Price3': instance.price3,
      'Price4': instance.price4,
      'Price5': instance.price5,
      'DaysPerWeek': instance.daysPerWeek,
      'DiscountPercent': instance.discountPercent,
      'DiscountPercentDisplay': instance.discountPercentDisplay,
      'UnitExtendedNoDiscount': instance.unitExtendedNoDiscount,
      'UnitDiscountAmount': instance.unitDiscountAmount,
      'UnitExtended': instance.unitExtended,
      'WeeklyExtendedNoDiscount': instance.weeklyExtendedNoDiscount,
      'WeeklyDiscountAmount': instance.weeklyDiscountAmount,
      'WeeklyExtended': instance.weeklyExtended,
      'WeeklyCostExtended': instance.weeklyCostExtended,
      'WeeklyTax': instance.weeklyTax,
      'WeeklyTax1': instance.weeklyTax1,
      'WeeklyTax2': instance.weeklyTax2,
      'WeeklyTotal': instance.weeklyTotal,
      'Week2Extended': instance.week2Extended,
      'Week3Extended': instance.week3Extended,
      'Weeks1Through3Extended': instance.weeks1Through3Extended,
      'Weeks4PlusExtended': instance.weeks4PlusExtended,
      'Week4Extended': instance.week4Extended,
      'AverageWeekly': instance.averageWeekly,
      'AverageWeeklyExtended': instance.averageWeeklyExtended,
      'AverageWeeklyExtendedNoDiscount':
          instance.averageWeeklyExtendedNoDiscount,
      'AverageWeeklyDiscountAmount': instance.averageWeeklyDiscountAmount,
      'AverageWeeklyTax': instance.averageWeeklyTax,
      'AverageWeeklyTax1': instance.averageWeeklyTax1,
      'AverageWeeklyTax2': instance.averageWeeklyTax2,
      'AverageWeeklyTotal': instance.averageWeeklyTotal,
      'Episodes': instance.episodes,
      'MonthlyExtendedNoDiscount': instance.monthlyExtendedNoDiscount,
      'MonthlyDiscountAmount': instance.monthlyDiscountAmount,
      'MonthlyExtended': instance.monthlyExtended,
      'MonthlyCostExtended': instance.monthlyCostExtended,
      'MonthlyTax': instance.monthlyTax,
      'MonthlyTax1': instance.monthlyTax1,
      'MonthlyTax2': instance.monthlyTax2,
      'MonthlyTotal': instance.monthlyTotal,
      'PeriodExtendedNoDiscount': instance.periodExtendedNoDiscount,
      'PeriodCostExtended': instance.periodCostExtended,
      'PeriodDiscountAmount': instance.periodDiscountAmount,
      'PeriodExtended': instance.periodExtended,
      'PeriodTax': instance.periodTax,
      'PeriodTax1': instance.periodTax1,
      'PeriodTax2': instance.periodTax2,
      'PeriodTotal': instance.periodTotal,
      'PeriodVarianceExtended': instance.periodVarianceExtended,
      'VariancePercent': instance.variancePercent,
      'MinimumDaysPerWeek': instance.minimumDaysPerWeek,
      'Bold': instance.bold,
      'Locked': instance.locked,
      'Taxable': instance.taxable,
      'WarehouseId': instance.warehouseId,
      'WarehouseCode': instance.warehouseCode,
      'ReturnToWarehouseId': instance.returnToWarehouseId,
      'ReturnToWarehouseCode': instance.returnToWarehouseCode,
      'Notes': instance.notes,
      'ItemOrder': instance.itemOrder,
      'ParentId': instance.parentId,
      'NestedOrderItemId': instance.nestedOrderItemId,
      'ItemClass': instance.itemClass,
      'InventoryClass': instance.inventoryClass,
      'RetiredReasonId': instance.retiredReasonId,
      'RetiredReason': instance.retiredReason,
      'ItemId': instance.itemId,
      'BarCode': instance.barCode,
      'SerialNumber': instance.serialNumber,
      'ManufacturerPartNumber': instance.manufacturerPartNumber,
      'PoSubOrderId': instance.poSubOrderId,
      'PoSubOrderItemId': instance.poSubOrderItemId,
      'PoSubOrderNumber': instance.poSubOrderNumber,
      'LossAndDamageOrderId': instance.lossAndDamageOrderId,
      'LossAndDamageOrderItemId': instance.lossAndDamageOrderItemId,
      'LossAndDamageOrderNumber': instance.lossAndDamageOrderNumber,
      'ModifiedAtStaging': instance.modifiedAtStaging,
      'Mute': instance.mute,
      'AvailabilityByHour': instance.availabilityByHour,
      'PrintNoteOnQuote': instance.printNoteOnQuote,
      'PrintNoteOnOrder': instance.printNoteOnOrder,
      'PrintNoteOnPickList': instance.printNoteOnPickList,
      'PrintNoteOnOutContract': instance.printNoteOnOutContract,
      'PrintNoteOnInContract': instance.printNoteOnInContract,
      'PrintNoteOnReturnList': instance.printNoteOnReturnList,
      'PrintNoteOnInvoice': instance.printNoteOnInvoice,
      'PrintNoteOnPurchaseOrder': instance.printNoteOnPurchaseOrder,
      'PrintNoteOnReceiveContract': instance.printNoteOnReceiveContract,
      'PrintNoteOnReturnContract': instance.printNoteOnReturnContract,
      'PrintNoteOnVendorReceiveList': instance.printNoteOnVendorReceiveList,
      'PrintNoteOnVendorReturnList': instance.printNoteOnVendorReturnList,
      'DefaultHourlyRate': instance.defaultHourlyRate,
      'DefaultDailyRate': instance.defaultDailyRate,
      'DefaultWeeklyRate': instance.defaultWeeklyRate,
      'DefaultMonthlyRate': instance.defaultMonthlyRate,
      'NestingLevel': instance.nestingLevel,
      'RepairId': instance.repairId,
      'RepairNumber': instance.repairNumber,
      'AccessoryRatio': instance.accessoryRatio,
      'IsOption': instance.isOption,
      'OptionColor': instance.optionColor,
      'CurrencySymbol': instance.currencySymbol,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsOrderItemSortOrderItemsRequest
    _$WebApiModulesHomeControlsOrderItemSortOrderItemsRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderItemSortOrderItemsRequest(
    startAtIndex: json['StartAtIndex'] as int?,
    orderItemIds: (json['OrderItemIds'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemSortOrderItemsRequestToJson(
            WebApiModulesHomeControlsOrderItemSortOrderItemsRequest instance) =>
        <String, dynamic>{
          'StartAtIndex': instance.startAtIndex,
          'OrderItemIds': instance.orderItemIds,
        };

WebApiModulesHomeControlsOrderItemSplitOrderItemRequest
    _$WebApiModulesHomeControlsOrderItemSplitOrderItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderItemSplitOrderItemRequest(
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    splitQuantity: (json['SplitQuantity'] as num?)?.toDouble(),
    splitEntirePackage: json['SplitEntirePackage'] as bool?,
    stagedOutOnly: json['StagedOutOnly'] as bool?,
    outOnly: json['OutOnly'] as bool?,
    inOnly: json['InOnly'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemSplitOrderItemRequestToJson(
            WebApiModulesHomeControlsOrderItemSplitOrderItemRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
          'SplitQuantity': instance.splitQuantity,
          'SplitEntirePackage': instance.splitEntirePackage,
          'StagedOutOnly': instance.stagedOutOnly,
          'OutOnly': instance.outOnly,
          'InOnly': instance.inOnly,
        };

WebApiModulesHomeControlsOrderItemSplitOrderItemResponse
    _$WebApiModulesHomeControlsOrderItemSplitOrderItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderItemSplitOrderItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    orderItemId: json['OrderItemId'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesHomeControlsOrderItemSplitOrderItemResponseToJson(
        WebApiModulesHomeControlsOrderItemSplitOrderItemResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'OrderItemId': instance.orderItemId,
    };

WebApiModulesHomeControlsOrderNoteOrderNote
    _$WebApiModulesHomeControlsOrderNoteOrderNoteFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderNoteOrderNote(
    orderNoteId: json['OrderNoteId'] as String?,
    orderId: json['OrderId'] as String?,
    noteDate: json['NoteDate'] as String?,
    userId: json['UserId'] as String?,
    notesDescription: json['NotesDescription'] as String?,
    billing: json['Billing'] as bool?,
    printOnOrder: json['PrintOnOrder'] as bool?,
    copyToInvoice: json['CopyToInvoice'] as bool?,
    scheduleNote: json['ScheduleNote'] as bool?,
    scheduleNoteDate: json['ScheduleNoteDate'] as String?,
    pickList: json['PickList'] as bool?,
    userName: json['UserName'] as String?,
    notes: json['Notes'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsOrderNoteOrderNoteToJson(
        WebApiModulesHomeControlsOrderNoteOrderNote instance) =>
    <String, dynamic>{
      'OrderNoteId': instance.orderNoteId,
      'OrderId': instance.orderId,
      'NoteDate': instance.noteDate,
      'UserId': instance.userId,
      'NotesDescription': instance.notesDescription,
      'Billing': instance.billing,
      'PrintOnOrder': instance.printOnOrder,
      'CopyToInvoice': instance.copyToInvoice,
      'ScheduleNote': instance.scheduleNote,
      'ScheduleNoteDate': instance.scheduleNoteDate,
      'PickList': instance.pickList,
      'UserName': instance.userName,
      'Notes': instance.notes,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistory
    _$WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistory(
    id: json['Id'] as int?,
    internalchar: json['Internalchar'] as String?,
    orderId: json['OrderId'] as String?,
    statusDateTime: json['StatusDateTime'] as String?,
    status: json['Status'] as String?,
    userId: json['UserId'] as String?,
    userFullName: json['UserFullName'] as String?,
    functionName: json['FunctionName'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryToJson(
            WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistory
                instance) =>
        <String, dynamic>{
          'Id': instance.id,
          'Internalchar': instance.internalchar,
          'OrderId': instance.orderId,
          'StatusDateTime': instance.statusDateTime,
          'Status': instance.status,
          'UserId': instance.userId,
          'UserFullName': instance.userFullName,
          'FunctionName': instance.functionName,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsOrderStatusSummaryOrderStatusSummary
    _$WebApiModulesHomeControlsOrderStatusSummaryOrderStatusSummaryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderStatusSummaryOrderStatusSummary(
    orderId: json['OrderId'] as String?,
    iCode: json['ICode'] as String?,
    iCodeDisplay: json['ICodeDisplay'] as String?,
    iCodeColor: json['ICodeColor'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    categoryId: json['CategoryId'] as String?,
    subCategoryId: json['SubCategoryId'] as String?,
    description: json['Description'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    inventoryId: json['InventoryId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    nestedOrderItemId: json['NestedOrderItemId'] as String?,
    parentId: json['ParentId'] as String?,
    outWarehouseId: json['OutWarehouseId'] as String?,
    outWarehouseCode: json['OutWarehouseCode'] as String?,
    outWarehouse: json['OutWarehouse'] as String?,
    inWarehouseId: json['InWarehouseId'] as String?,
    inWarehouseCode: json['InWarehouseCode'] as String?,
    inWarehouse: json['InWarehouse'] as String?,
    quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
    quantityOrderedColor: json['QuantityOrderedColor'] as String?,
    subQuantity: (json['SubQuantity'] as num?)?.toDouble(),
    stagedQuantity: (json['StagedQuantity'] as num?)?.toDouble(),
    stagedQuantityFilter: (json['StagedQuantityFilter'] as num?)?.toDouble(),
    stagedQuantityColor: json['StagedQuantityColor'] as String?,
    outQuantity: (json['OutQuantity'] as num?)?.toDouble(),
    outQuantityfilter: (json['OutQuantityfilter'] as num?)?.toDouble(),
    outQuantityColor: json['OutQuantityColor'] as String?,
    isSuspendOut: json['IsSuspendOut'] as bool?,
    inQuantity: (json['InQuantity'] as num?)?.toDouble(),
    inQuantityFilter: (json['InQuantityFilter'] as num?)?.toDouble(),
    inQuantityColor: json['InQuantityColor'] as String?,
    isSuspendIn: json['IsSuspendIn'] as bool?,
    returnedQuantity: (json['ReturnedQuantity'] as num?)?.toDouble(),
    activityQuantity: (json['ActivityQuantity'] as num?)?.toDouble(),
    subActivityQuantity: (json['SubActivityQuantity'] as num?)?.toDouble(),
    quantityReceived: (json['QuantityReceived'] as num?)?.toDouble(),
    quantityReturned: (json['QuantityReturned'] as num?)?.toDouble(),
    notYetStagedQuantity: (json['NotYetStagedQuantity'] as num?)?.toDouble(),
    tooManyStagedOut: json['TooManyStagedOut'] as bool?,
    notYetStagedQuantityFilter:
        (json['NotYetStagedQuantityFilter'] as num?)?.toDouble(),
    stillOutQuantity: (json['StillOutQuantity'] as num?)?.toDouble(),
    stillOutQuantityColor: json['StillOutQuantityColor'] as String?,
    itemOrder: json['ItemOrder'] as String?,
    itemClass: json['ItemClass'] as String?,
    recType: json['RecType'] as String?,
    isReturn: json['IsReturn'] as String?,
    poOrderId: json['PoOrderId'] as String?,
    poMasteritemId: json['PoMasteritemId'] as String?,
    recTypeDisplay: json['RecTypeDisplay'] as String?,
    recTypeColor: json['RecTypeColor'] as String?,
    optionColor: json['OptionColor'] as String?,
    bold: json['Bold'] as bool?,
    hasPoItem: json['HasPoItem'] as bool?,
    vendorId: json['VendorId'] as String?,
    notes: json['Notes'] as String?,
    manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
    orderBy: json['OrderBy'] as String?,
    isWardrobe: json['IsWardrobe'] as bool?,
    isProps: json['IsProps'] as bool?,
    unitCost: (json['UnitCost'] as num?)?.toDouble(),
    stagedOutExtendedCost: (json['StagedOutExtendedCost'] as num?)?.toDouble(),
    unitPrice: (json['UnitPrice'] as num?)?.toDouble(),
    stagedOutExtendedPrice:
        (json['StagedOutExtendedPrice'] as num?)?.toDouble(),
    nestingLevel: json['NestingLevel'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderStatusSummaryOrderStatusSummaryToJson(
            WebApiModulesHomeControlsOrderStatusSummaryOrderStatusSummary
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'ICode': instance.iCode,
          'ICodeDisplay': instance.iCodeDisplay,
          'ICodeColor': instance.iCodeColor,
          'InventoryTypeId': instance.inventoryTypeId,
          'CategoryId': instance.categoryId,
          'SubCategoryId': instance.subCategoryId,
          'Description': instance.description,
          'DescriptionColor': instance.descriptionColor,
          'InventoryId': instance.inventoryId,
          'OrderItemId': instance.orderItemId,
          'NestedOrderItemId': instance.nestedOrderItemId,
          'ParentId': instance.parentId,
          'OutWarehouseId': instance.outWarehouseId,
          'OutWarehouseCode': instance.outWarehouseCode,
          'OutWarehouse': instance.outWarehouse,
          'InWarehouseId': instance.inWarehouseId,
          'InWarehouseCode': instance.inWarehouseCode,
          'InWarehouse': instance.inWarehouse,
          'QuantityOrdered': instance.quantityOrdered,
          'QuantityOrderedColor': instance.quantityOrderedColor,
          'SubQuantity': instance.subQuantity,
          'StagedQuantity': instance.stagedQuantity,
          'StagedQuantityFilter': instance.stagedQuantityFilter,
          'StagedQuantityColor': instance.stagedQuantityColor,
          'OutQuantity': instance.outQuantity,
          'OutQuantityfilter': instance.outQuantityfilter,
          'OutQuantityColor': instance.outQuantityColor,
          'IsSuspendOut': instance.isSuspendOut,
          'InQuantity': instance.inQuantity,
          'InQuantityFilter': instance.inQuantityFilter,
          'InQuantityColor': instance.inQuantityColor,
          'IsSuspendIn': instance.isSuspendIn,
          'ReturnedQuantity': instance.returnedQuantity,
          'ActivityQuantity': instance.activityQuantity,
          'SubActivityQuantity': instance.subActivityQuantity,
          'QuantityReceived': instance.quantityReceived,
          'QuantityReturned': instance.quantityReturned,
          'NotYetStagedQuantity': instance.notYetStagedQuantity,
          'TooManyStagedOut': instance.tooManyStagedOut,
          'NotYetStagedQuantityFilter': instance.notYetStagedQuantityFilter,
          'StillOutQuantity': instance.stillOutQuantity,
          'StillOutQuantityColor': instance.stillOutQuantityColor,
          'ItemOrder': instance.itemOrder,
          'ItemClass': instance.itemClass,
          'RecType': instance.recType,
          'IsReturn': instance.isReturn,
          'PoOrderId': instance.poOrderId,
          'PoMasteritemId': instance.poMasteritemId,
          'RecTypeDisplay': instance.recTypeDisplay,
          'RecTypeColor': instance.recTypeColor,
          'OptionColor': instance.optionColor,
          'Bold': instance.bold,
          'HasPoItem': instance.hasPoItem,
          'VendorId': instance.vendorId,
          'Notes': instance.notes,
          'ManufacturerPartNumber': instance.manufacturerPartNumber,
          'OrderBy': instance.orderBy,
          'IsWardrobe': instance.isWardrobe,
          'IsProps': instance.isProps,
          'UnitCost': instance.unitCost,
          'StagedOutExtendedCost': instance.stagedOutExtendedCost,
          'UnitPrice': instance.unitPrice,
          'StagedOutExtendedPrice': instance.stagedOutExtendedPrice,
          'NestingLevel': instance.nestingLevel,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsOrderSummaryOrderSummary
    _$WebApiModulesHomeControlsOrderSummaryOrderSummaryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsOrderSummaryOrderSummary(
    orderId: json['OrderId'] as String?,
    totalType: json['TotalType'] as String?,
    rentalPrice: (json['RentalPrice'] as num?)?.toDouble(),
    rentalDiscount: (json['RentalDiscount'] as num?)?.toDouble(),
    rentalCost: (json['RentalCost'] as num?)?.toDouble(),
    rentalProfit: (json['RentalProfit'] as num?)?.toDouble(),
    rentalMarkup: (json['RentalMarkup'] as num?)?.toDouble(),
    rentalMargin: (json['RentalMargin'] as num?)?.toDouble(),
    rentalSubTotal: (json['RentalSubTotal'] as num?)?.toDouble(),
    rentalTax: (json['RentalTax'] as num?)?.toDouble(),
    rentalTotal: (json['RentalTotal'] as num?)?.toDouble(),
    salesPrice: (json['SalesPrice'] as num?)?.toDouble(),
    salesDiscount: (json['SalesDiscount'] as num?)?.toDouble(),
    salesCost: (json['SalesCost'] as num?)?.toDouble(),
    salesProfit: (json['SalesProfit'] as num?)?.toDouble(),
    salesMarkup: (json['SalesMarkup'] as num?)?.toDouble(),
    salesMargin: (json['SalesMargin'] as num?)?.toDouble(),
    salesSubTotal: (json['SalesSubTotal'] as num?)?.toDouble(),
    salesTax: (json['SalesTax'] as num?)?.toDouble(),
    salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
    partsPrice: (json['PartsPrice'] as num?)?.toDouble(),
    partsDiscount: (json['PartsDiscount'] as num?)?.toDouble(),
    partsCost: (json['PartsCost'] as num?)?.toDouble(),
    partsProfit: (json['PartsProfit'] as num?)?.toDouble(),
    partsMarkup: (json['PartsMarkup'] as num?)?.toDouble(),
    partsMargin: (json['PartsMargin'] as num?)?.toDouble(),
    partsSubTotal: (json['PartsSubTotal'] as num?)?.toDouble(),
    partsTax: (json['PartsTax'] as num?)?.toDouble(),
    partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
    facilitiesPrice: (json['FacilitiesPrice'] as num?)?.toDouble(),
    facilitiesDiscount: (json['FacilitiesDiscount'] as num?)?.toDouble(),
    facilitiesCost: (json['FacilitiesCost'] as num?)?.toDouble(),
    facilitiesProfit: (json['FacilitiesProfit'] as num?)?.toDouble(),
    facilitiesMarkup: (json['FacilitiesMarkup'] as num?)?.toDouble(),
    facilitiesMargin: (json['FacilitiesMargin'] as num?)?.toDouble(),
    facilitiesSubTotal: (json['FacilitiesSubTotal'] as num?)?.toDouble(),
    facilitiesTax: (json['FacilitiesTax'] as num?)?.toDouble(),
    facilitiesTotal: (json['FacilitiesTotal'] as num?)?.toDouble(),
    transportationPrice: (json['TransportationPrice'] as num?)?.toDouble(),
    transportationDiscount:
        (json['TransportationDiscount'] as num?)?.toDouble(),
    transportationCost: (json['TransportationCost'] as num?)?.toDouble(),
    transportationProfit: (json['TransportationProfit'] as num?)?.toDouble(),
    transportationMarkup: (json['TransportationMarkup'] as num?)?.toDouble(),
    transportationMargin: (json['TransportationMargin'] as num?)?.toDouble(),
    transportationSubTotal:
        (json['TransportationSubTotal'] as num?)?.toDouble(),
    transportationTax: (json['TransportationTax'] as num?)?.toDouble(),
    transportationTotal: (json['TransportationTotal'] as num?)?.toDouble(),
    laborPrice: (json['LaborPrice'] as num?)?.toDouble(),
    laborDiscount: (json['LaborDiscount'] as num?)?.toDouble(),
    laborCost: (json['LaborCost'] as num?)?.toDouble(),
    laborProfit: (json['LaborProfit'] as num?)?.toDouble(),
    laborMarkup: (json['LaborMarkup'] as num?)?.toDouble(),
    laborMargin: (json['LaborMargin'] as num?)?.toDouble(),
    laborSubTotal: (json['LaborSubTotal'] as num?)?.toDouble(),
    laborTax: (json['LaborTax'] as num?)?.toDouble(),
    laborTotal: (json['LaborTotal'] as num?)?.toDouble(),
    miscPrice: (json['MiscPrice'] as num?)?.toDouble(),
    miscDiscount: (json['MiscDiscount'] as num?)?.toDouble(),
    miscCost: (json['MiscCost'] as num?)?.toDouble(),
    miscProfit: (json['MiscProfit'] as num?)?.toDouble(),
    miscMarkup: (json['MiscMarkup'] as num?)?.toDouble(),
    miscMargin: (json['MiscMargin'] as num?)?.toDouble(),
    miscSubTotal: (json['MiscSubTotal'] as num?)?.toDouble(),
    miscTax: (json['MiscTax'] as num?)?.toDouble(),
    miscTotal: (json['MiscTotal'] as num?)?.toDouble(),
    rentalSalePrice: (json['RentalSalePrice'] as num?)?.toDouble(),
    rentalSaleDiscount: (json['RentalSaleDiscount'] as num?)?.toDouble(),
    rentalSaleCost: (json['RentalSaleCost'] as num?)?.toDouble(),
    rentalSaleProfit: (json['RentalSaleProfit'] as num?)?.toDouble(),
    rentalSaleMarkup: (json['RentalSaleMarkup'] as num?)?.toDouble(),
    rentalSaleMargin: (json['RentalSaleMargin'] as num?)?.toDouble(),
    rentalSaleSubTotal: (json['RentalSaleSubTotal'] as num?)?.toDouble(),
    rentalSaleTax: (json['RentalSaleTax'] as num?)?.toDouble(),
    rentalSaleTotal: (json['RentalSaleTotal'] as num?)?.toDouble(),
    subRentalPrice: (json['SubRentalPrice'] as num?)?.toDouble(),
    subRentalDiscount: (json['SubRentalDiscount'] as num?)?.toDouble(),
    subRentalSubTotal: (json['SubRentalSubTotal'] as num?)?.toDouble(),
    subRentalTotal: (json['SubRentalTotal'] as num?)?.toDouble(),
    subSalePrice: (json['SubSalePrice'] as num?)?.toDouble(),
    subSaleDiscount: (json['SubSaleDiscount'] as num?)?.toDouble(),
    subSaleSubTotal: (json['SubSaleSubTotal'] as num?)?.toDouble(),
    subSaleTotal: (json['SubSaleTotal'] as num?)?.toDouble(),
    subLaborPrice: (json['SubLaborPrice'] as num?)?.toDouble(),
    subLaborDiscount: (json['SubLaborDiscount'] as num?)?.toDouble(),
    subLaborSubTotal: (json['SubLaborSubTotal'] as num?)?.toDouble(),
    subLaborTotal: (json['SubLaborTotal'] as num?)?.toDouble(),
    subMiscPrice: (json['SubMiscPrice'] as num?)?.toDouble(),
    subMiscDiscount: (json['SubMiscDiscount'] as num?)?.toDouble(),
    subMiscSubTotal: (json['SubMiscSubTotal'] as num?)?.toDouble(),
    subMiscTotal: (json['SubMiscTotal'] as num?)?.toDouble(),
    totalPrice: (json['TotalPrice'] as num?)?.toDouble(),
    totalDiscount: (json['TotalDiscount'] as num?)?.toDouble(),
    totalCost: (json['TotalCost'] as num?)?.toDouble(),
    totalProfit: (json['TotalProfit'] as num?)?.toDouble(),
    totalMarkup: (json['TotalMarkup'] as num?)?.toDouble(),
    totalMargin: (json['TotalMargin'] as num?)?.toDouble(),
    totalSubTotal: (json['TotalSubTotal'] as num?)?.toDouble(),
    totalTax: (json['TotalTax'] as num?)?.toDouble(),
    totalTotal: (json['TotalTotal'] as num?)?.toDouble(),
    taxCost: (json['TaxCost'] as num?)?.toDouble(),
    replacementCostTotal: (json['ReplacementCostTotal'] as num?)?.toDouble(),
    valueTotal: (json['ValueTotal'] as num?)?.toDouble(),
    replacementCostOwned: (json['ReplacementCostOwned'] as num?)?.toDouble(),
    valueOwned: (json['ValueOwned'] as num?)?.toDouble(),
    replacementCostSubs: (json['ReplacementCostSubs'] as num?)?.toDouble(),
    valueSubs: (json['ValueSubs'] as num?)?.toDouble(),
    weightPounds: json['WeightPounds'] as int?,
    weightOunces: json['WeightOunces'] as int?,
    weightKilograms: json['WeightKilograms'] as int?,
    weightGrams: json['WeightGrams'] as int?,
    weightInCasePounds: json['WeightInCasePounds'] as int?,
    weightInCaseOunces: json['WeightInCaseOunces'] as int?,
    weightInCaseKilograms: json['WeightInCaseKilograms'] as int?,
    weightInCaseGrams: json['WeightInCaseGrams'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsOrderSummaryOrderSummaryToJson(
        WebApiModulesHomeControlsOrderSummaryOrderSummary instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'TotalType': instance.totalType,
      'RentalPrice': instance.rentalPrice,
      'RentalDiscount': instance.rentalDiscount,
      'RentalCost': instance.rentalCost,
      'RentalProfit': instance.rentalProfit,
      'RentalMarkup': instance.rentalMarkup,
      'RentalMargin': instance.rentalMargin,
      'RentalSubTotal': instance.rentalSubTotal,
      'RentalTax': instance.rentalTax,
      'RentalTotal': instance.rentalTotal,
      'SalesPrice': instance.salesPrice,
      'SalesDiscount': instance.salesDiscount,
      'SalesCost': instance.salesCost,
      'SalesProfit': instance.salesProfit,
      'SalesMarkup': instance.salesMarkup,
      'SalesMargin': instance.salesMargin,
      'SalesSubTotal': instance.salesSubTotal,
      'SalesTax': instance.salesTax,
      'SalesTotal': instance.salesTotal,
      'PartsPrice': instance.partsPrice,
      'PartsDiscount': instance.partsDiscount,
      'PartsCost': instance.partsCost,
      'PartsProfit': instance.partsProfit,
      'PartsMarkup': instance.partsMarkup,
      'PartsMargin': instance.partsMargin,
      'PartsSubTotal': instance.partsSubTotal,
      'PartsTax': instance.partsTax,
      'PartsTotal': instance.partsTotal,
      'FacilitiesPrice': instance.facilitiesPrice,
      'FacilitiesDiscount': instance.facilitiesDiscount,
      'FacilitiesCost': instance.facilitiesCost,
      'FacilitiesProfit': instance.facilitiesProfit,
      'FacilitiesMarkup': instance.facilitiesMarkup,
      'FacilitiesMargin': instance.facilitiesMargin,
      'FacilitiesSubTotal': instance.facilitiesSubTotal,
      'FacilitiesTax': instance.facilitiesTax,
      'FacilitiesTotal': instance.facilitiesTotal,
      'TransportationPrice': instance.transportationPrice,
      'TransportationDiscount': instance.transportationDiscount,
      'TransportationCost': instance.transportationCost,
      'TransportationProfit': instance.transportationProfit,
      'TransportationMarkup': instance.transportationMarkup,
      'TransportationMargin': instance.transportationMargin,
      'TransportationSubTotal': instance.transportationSubTotal,
      'TransportationTax': instance.transportationTax,
      'TransportationTotal': instance.transportationTotal,
      'LaborPrice': instance.laborPrice,
      'LaborDiscount': instance.laborDiscount,
      'LaborCost': instance.laborCost,
      'LaborProfit': instance.laborProfit,
      'LaborMarkup': instance.laborMarkup,
      'LaborMargin': instance.laborMargin,
      'LaborSubTotal': instance.laborSubTotal,
      'LaborTax': instance.laborTax,
      'LaborTotal': instance.laborTotal,
      'MiscPrice': instance.miscPrice,
      'MiscDiscount': instance.miscDiscount,
      'MiscCost': instance.miscCost,
      'MiscProfit': instance.miscProfit,
      'MiscMarkup': instance.miscMarkup,
      'MiscMargin': instance.miscMargin,
      'MiscSubTotal': instance.miscSubTotal,
      'MiscTax': instance.miscTax,
      'MiscTotal': instance.miscTotal,
      'RentalSalePrice': instance.rentalSalePrice,
      'RentalSaleDiscount': instance.rentalSaleDiscount,
      'RentalSaleCost': instance.rentalSaleCost,
      'RentalSaleProfit': instance.rentalSaleProfit,
      'RentalSaleMarkup': instance.rentalSaleMarkup,
      'RentalSaleMargin': instance.rentalSaleMargin,
      'RentalSaleSubTotal': instance.rentalSaleSubTotal,
      'RentalSaleTax': instance.rentalSaleTax,
      'RentalSaleTotal': instance.rentalSaleTotal,
      'SubRentalPrice': instance.subRentalPrice,
      'SubRentalDiscount': instance.subRentalDiscount,
      'SubRentalSubTotal': instance.subRentalSubTotal,
      'SubRentalTotal': instance.subRentalTotal,
      'SubSalePrice': instance.subSalePrice,
      'SubSaleDiscount': instance.subSaleDiscount,
      'SubSaleSubTotal': instance.subSaleSubTotal,
      'SubSaleTotal': instance.subSaleTotal,
      'SubLaborPrice': instance.subLaborPrice,
      'SubLaborDiscount': instance.subLaborDiscount,
      'SubLaborSubTotal': instance.subLaborSubTotal,
      'SubLaborTotal': instance.subLaborTotal,
      'SubMiscPrice': instance.subMiscPrice,
      'SubMiscDiscount': instance.subMiscDiscount,
      'SubMiscSubTotal': instance.subMiscSubTotal,
      'SubMiscTotal': instance.subMiscTotal,
      'TotalPrice': instance.totalPrice,
      'TotalDiscount': instance.totalDiscount,
      'TotalCost': instance.totalCost,
      'TotalProfit': instance.totalProfit,
      'TotalMarkup': instance.totalMarkup,
      'TotalMargin': instance.totalMargin,
      'TotalSubTotal': instance.totalSubTotal,
      'TotalTax': instance.totalTax,
      'TotalTotal': instance.totalTotal,
      'TaxCost': instance.taxCost,
      'ReplacementCostTotal': instance.replacementCostTotal,
      'ValueTotal': instance.valueTotal,
      'ReplacementCostOwned': instance.replacementCostOwned,
      'ValueOwned': instance.valueOwned,
      'ReplacementCostSubs': instance.replacementCostSubs,
      'ValueSubs': instance.valueSubs,
      'WeightPounds': instance.weightPounds,
      'WeightOunces': instance.weightOunces,
      'WeightKilograms': instance.weightKilograms,
      'WeightGrams': instance.weightGrams,
      'WeightInCasePounds': instance.weightInCasePounds,
      'WeightInCaseOunces': instance.weightInCaseOunces,
      'WeightInCaseKilograms': instance.weightInCaseKilograms,
      'WeightInCaseGrams': instance.weightInCaseGrams,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsPersonalEventPersonalEvent
    _$WebApiModulesHomeControlsPersonalEventPersonalEventFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPersonalEventPersonalEvent(
    personalEventId: json['PersonalEventId'] as String?,
    contactId: json['ContactId'] as String?,
    person: json['Person'] as String?,
    contactEventId: json['ContactEventId'] as String?,
    contactEvent: json['ContactEvent'] as String?,
    eventDate: json['EventDate'] as String?,
    color: json['Color'] as String?,
    recurring: json['Recurring'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPersonalEventPersonalEventToJson(
            WebApiModulesHomeControlsPersonalEventPersonalEvent instance) =>
        <String, dynamic>{
          'PersonalEventId': instance.personalEventId,
          'ContactId': instance.contactId,
          'Person': instance.person,
          'ContactEventId': instance.contactEventId,
          'ContactEvent': instance.contactEvent,
          'EventDate': instance.eventDate,
          'Color': instance.color,
          'Recurring': instance.recurring,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventory
    _$WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventory(
    id: json['Id'] as int?,
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    consignorId: json['ConsignorId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    availableFor: json['AvailableFor'] as String?,
    availableForDisplay: json['AvailableForDisplay'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    rank: json['Rank'] as String?,
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryToJson(
            WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventory
                instance) =>
        <String, dynamic>{
          'Id': instance.id,
          'PhysicalInventoryId': instance.physicalInventoryId,
          'InventoryId': instance.inventoryId,
          'ConsignorId': instance.consignorId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'AvailableFor': instance.availableFor,
          'AvailableForDisplay': instance.availableForDisplay,
          'TrackedBy': instance.trackedBy,
          'Rank': instance.rank,
          'AisleLocation': instance.aisleLocation,
          'ShelfLocation': instance.shelfLocation,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventory
    _$WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventory(
    id: json['Id'] as int?,
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    availableFor: json['AvailableFor'] as String?,
    availableForDisplay: json['AvailableForDisplay'] as String?,
    quantityOwned: (json['QuantityOwned'] as num?)?.toDouble(),
    trackedBy: json['TrackedBy'] as String?,
    unitCost: (json['UnitCost'] as num?)?.toDouble(),
    isRecount: json['IsRecount'] as bool?,
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    isNegativeInventory: json['IsNegativeInventory'] as int?,
    quantityAdded: (json['QuantityAdded'] as num?)?.toDouble(),
    quantityRetired: (json['QuantityRetired'] as num?)?.toDouble(),
    lastPurchaseUnitCost: (json['LastPurchaseUnitCost'] as num?)?.toDouble(),
    newUnitCost: (json['NewUnitCost'] as num?)?.toDouble(),
    currentSpaceId: json['CurrentSpaceId'] as String?,
    consignorId: json['ConsignorId'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryToJson(
            WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventory
                instance) =>
        <String, dynamic>{
          'Id': instance.id,
          'PhysicalInventoryId': instance.physicalInventoryId,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'AvailableFor': instance.availableFor,
          'AvailableForDisplay': instance.availableForDisplay,
          'QuantityOwned': instance.quantityOwned,
          'TrackedBy': instance.trackedBy,
          'UnitCost': instance.unitCost,
          'IsRecount': instance.isRecount,
          'AisleLocation': instance.aisleLocation,
          'ShelfLocation': instance.shelfLocation,
          'IsNegativeInventory': instance.isNegativeInventory,
          'QuantityAdded': instance.quantityAdded,
          'QuantityRetired': instance.quantityRetired,
          'LastPurchaseUnitCost': instance.lastPurchaseUnitCost,
          'NewUnitCost': instance.newUnitCost,
          'CurrentSpaceId': instance.currentSpaceId,
          'ConsignorId': instance.consignorId,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsPickListItemPickListItem
    _$WebApiModulesHomeControlsPickListItemPickListItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPickListItemPickListItem(
    pickListItemId: json['PickListItemId'] as String?,
    pickListId: json['PickListId'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    masterItemId: json['MasterItemId'] as String?,
    usersId: json['UsersId'] as String?,
    pickQuantity: json['PickQuantity'] as int?,
    quantityOrdered: json['QuantityOrdered'] as int?,
    consignQuantity: json['ConsignQuantity'] as int?,
    stagedQuantity: json['StagedQuantity'] as int?,
    outQuantity: json['OutQuantity'] as int?,
    inLocationQuantity: json['InLocationQuantity'] as int?,
    masterId: json['MasterId'] as String?,
    iCode: json['ICode'] as String?,
    iCodeColor: json['ICodeColor'] as String?,
    description: json['Description'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    optionColor: json['OptionColor'] as String?,
    itemClass: json['ItemClass'] as String?,
    itemOrder: json['ItemOrder'] as String?,
    pickDate: json['PickDate'] as String?,
    pickTime: json['PickTime'] as String?,
    recType: json['RecType'] as String?,
    vendorId: json['VendorId'] as String?,
    vendorColor: json['VendorColor'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    categoryId: json['CategoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    conflict: json['Conflict'] as bool?,
    bold: json['Bold'] as bool?,
    itemOrderPickList: json['ItemOrderPickList'] as String?,
    notes: json['Notes'] as String?,
    barCode: json['BarCode'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    rfId: json['RfId'] as String?,
    nestingLevel: json['NestingLevel'] as int?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsPickListItemPickListItemToJson(
        WebApiModulesHomeControlsPickListItemPickListItem instance) =>
    <String, dynamic>{
      'PickListItemId': instance.pickListItemId,
      'PickListId': instance.pickListId,
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'MasterItemId': instance.masterItemId,
      'UsersId': instance.usersId,
      'PickQuantity': instance.pickQuantity,
      'QuantityOrdered': instance.quantityOrdered,
      'ConsignQuantity': instance.consignQuantity,
      'StagedQuantity': instance.stagedQuantity,
      'OutQuantity': instance.outQuantity,
      'InLocationQuantity': instance.inLocationQuantity,
      'MasterId': instance.masterId,
      'ICode': instance.iCode,
      'ICodeColor': instance.iCodeColor,
      'Description': instance.description,
      'DescriptionColor': instance.descriptionColor,
      'OptionColor': instance.optionColor,
      'ItemClass': instance.itemClass,
      'ItemOrder': instance.itemOrder,
      'PickDate': instance.pickDate,
      'PickTime': instance.pickTime,
      'RecType': instance.recType,
      'VendorId': instance.vendorId,
      'VendorColor': instance.vendorColor,
      'InventoryTypeId': instance.inventoryTypeId,
      'CategoryId': instance.categoryId,
      'WarehouseId': instance.warehouseId,
      'Conflict': instance.conflict,
      'Bold': instance.bold,
      'ItemOrderPickList': instance.itemOrderPickList,
      'Notes': instance.notes,
      'BarCode': instance.barCode,
      'SerialNumber': instance.serialNumber,
      'RfId': instance.rfId,
      'NestingLevel': instance.nestingLevel,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsPickListUtilityItemApplyPickListSessionItemsRequest
    _$WebApiModulesHomeControlsPickListUtilityItemApplyPickListSessionItemsRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPickListUtilityItemApplyPickListSessionItemsRequest(
    sessionId: json['SessionId'] as String?,
    itemsNotYetStaged: json['ItemsNotYetStaged'] as bool?,
    itemsStaged: json['ItemsStaged'] as bool?,
    itemsOut: json['ItemsOut'] as bool?,
    pickDateFrom: json['PickDateFrom'] == null
        ? null
        : DateTime.parse(json['PickDateFrom'] as String),
    pickDateTo: json['PickDateTo'] == null
        ? null
        : DateTime.parse(json['PickDateTo'] as String),
    rentalItems: json['RentalItems'] as bool?,
    salesItems: json['SalesItems'] as bool?,
    vendorItems: json['VendorItems'] as bool?,
    laborItems: json['LaborItems'] as bool?,
    warehouseId: json['WarehouseId'] as String?,
    completeKitMains: json['CompleteKitMains'] as bool?,
    completeKitAccessories: json['CompleteKitAccessories'] as bool?,
    completeKitOptions: json['CompleteKitOptions'] as bool?,
    standAloneItems: json['StandAloneItems'] as bool?,
    itemsOnOtherPickLists: json['ItemsOnOtherPickLists'] as bool?,
    reduceQuantityAlreadyPicked: json['ReduceQuantityAlreadyPicked'] as bool?,
    summarizeByICode: json['SummarizeByICode'] as bool?,
    summarizeCompleteKitItems: json['SummarizeCompleteKitItems'] as bool?,
    honorCompleteKitItemTypes: json['HonorCompleteKitItemTypes'] as bool?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    selectAll: json['SelectAll'] as bool?,
    selectNone: json['SelectNone'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemApplyPickListSessionItemsRequestToJson(
            WebApiModulesHomeControlsPickListUtilityItemApplyPickListSessionItemsRequest
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'ItemsNotYetStaged': instance.itemsNotYetStaged,
          'ItemsStaged': instance.itemsStaged,
          'ItemsOut': instance.itemsOut,
          'PickDateFrom': instance.pickDateFrom?.toIso8601String(),
          'PickDateTo': instance.pickDateTo?.toIso8601String(),
          'RentalItems': instance.rentalItems,
          'SalesItems': instance.salesItems,
          'VendorItems': instance.vendorItems,
          'LaborItems': instance.laborItems,
          'WarehouseId': instance.warehouseId,
          'CompleteKitMains': instance.completeKitMains,
          'CompleteKitAccessories': instance.completeKitAccessories,
          'CompleteKitOptions': instance.completeKitOptions,
          'StandAloneItems': instance.standAloneItems,
          'ItemsOnOtherPickLists': instance.itemsOnOtherPickLists,
          'ReduceQuantityAlreadyPicked': instance.reduceQuantityAlreadyPicked,
          'SummarizeByICode': instance.summarizeByICode,
          'SummarizeCompleteKitItems': instance.summarizeCompleteKitItems,
          'HonorCompleteKitItemTypes': instance.honorCompleteKitItemTypes,
          'InventoryTypeId': instance.inventoryTypeId,
          'SelectAll': instance.selectAll,
          'SelectNone': instance.selectNone,
        };

WebApiModulesHomeControlsPickListUtilityItemCompleteSessionRequest
    _$WebApiModulesHomeControlsPickListUtilityItemCompleteSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPickListUtilityItemCompleteSessionRequest(
    sessionId: json['SessionId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemCompleteSessionRequestToJson(
            WebApiModulesHomeControlsPickListUtilityItemCompleteSessionRequest
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
        };

WebApiModulesHomeControlsPickListUtilityItemCompleteSessionResponse
    _$WebApiModulesHomeControlsPickListUtilityItemCompleteSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPickListUtilityItemCompleteSessionResponse(
    pickListId: json['PickListId'] as String?,
    pickListNumber: json['PickListNumber'] as String?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemCompleteSessionResponseToJson(
            WebApiModulesHomeControlsPickListUtilityItemCompleteSessionResponse
                instance) =>
        <String, dynamic>{
          'PickListId': instance.pickListId,
          'PickListNumber': instance.pickListNumber,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsPickListUtilityItemPickListUtilityItem
    _$WebApiModulesHomeControlsPickListUtilityItemPickListUtilityItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPickListUtilityItemPickListUtilityItem(
    sessionId: json['SessionId'] as String?,
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    parentId: json['ParentId'] as String?,
    parentParentId: json['ParentParentId'] as String?,
    accessoryRatio: (json['AccessoryRatio'] as num?)?.toDouble(),
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    inventoryTypeIdNoParent: json['InventoryTypeIdNoParent'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    locationId: json['LocationId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    dealId: json['DealId'] as String?,
    orderType: json['OrderType'] as String?,
    orderStatus: json['OrderStatus'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
    subQuantity: (json['SubQuantity'] as num?)?.toDouble(),
    consignQuantity: (json['ConsignQuantity'] as num?)?.toDouble(),
    quantityInLocation: (json['QuantityInLocation'] as num?)?.toDouble(),
    pickDate: json['PickDate'] as String?,
    pickQuantity: (json['PickQuantity'] as num?)?.toDouble(),
    stagedQuantity: (json['StagedQuantity'] as num?)?.toDouble(),
    outQuantity: (json['OutQuantity'] as num?)?.toDouble(),
    remainingQuantity: (json['RemainingQuantity'] as num?)?.toDouble(),
    pickedQuantity: (json['PickedQuantity'] as num?)?.toDouble(),
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    recType: json['RecType'] as String?,
    recTypeDisplay: json['RecTypeDisplay'] as String?,
    itemClass: json['ItemClass'] as String?,
    itemOrder: json['ItemOrder'] as String?,
    optionColor: json['OptionColor'] as bool?,
    itemId: json['ItemId'] as String?,
    barCode: json['BarCode'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    subVendorId: json['SubVendorId'] as String?,
    consignorId: json['ConsignorId'] as String?,
    vendor: json['Vendor'] as String?,
    nestedOrderItemId: json['NestedOrderItemId'] as String?,
    nestingLevel: json['NestingLevel'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemPickListUtilityItemToJson(
            WebApiModulesHomeControlsPickListUtilityItemPickListUtilityItem
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
          'ParentId': instance.parentId,
          'ParentParentId': instance.parentParentId,
          'AccessoryRatio': instance.accessoryRatio,
          'InventoryTypeId': instance.inventoryTypeId,
          'InventoryType': instance.inventoryType,
          'InventoryTypeIdNoParent': instance.inventoryTypeIdNoParent,
          'OrderNumber': instance.orderNumber,
          'LocationId': instance.locationId,
          'DepartmentId': instance.departmentId,
          'DealId': instance.dealId,
          'OrderType': instance.orderType,
          'OrderStatus': instance.orderStatus,
          'ICode': instance.iCode,
          'Description': instance.description,
          'QuantityOrdered': instance.quantityOrdered,
          'SubQuantity': instance.subQuantity,
          'ConsignQuantity': instance.consignQuantity,
          'QuantityInLocation': instance.quantityInLocation,
          'PickDate': instance.pickDate,
          'PickQuantity': instance.pickQuantity,
          'StagedQuantity': instance.stagedQuantity,
          'OutQuantity': instance.outQuantity,
          'RemainingQuantity': instance.remainingQuantity,
          'PickedQuantity': instance.pickedQuantity,
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'Warehouse': instance.warehouse,
          'WarehouseCode': instance.warehouseCode,
          'RecType': instance.recType,
          'RecTypeDisplay': instance.recTypeDisplay,
          'ItemClass': instance.itemClass,
          'ItemOrder': instance.itemOrder,
          'OptionColor': instance.optionColor,
          'ItemId': instance.itemId,
          'BarCode': instance.barCode,
          'SerialNumber': instance.serialNumber,
          'SubVendorId': instance.subVendorId,
          'ConsignorId': instance.consignorId,
          'Vendor': instance.vendor,
          'NestedOrderItemId': instance.nestedOrderItemId,
          'NestingLevel': instance.nestingLevel,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsPickListUtilityItemStartSessionRequest
    _$WebApiModulesHomeControlsPickListUtilityItemStartSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPickListUtilityItemStartSessionRequest(
    orderId: json['OrderId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemStartSessionRequestToJson(
            WebApiModulesHomeControlsPickListUtilityItemStartSessionRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
        };

WebApiModulesHomeControlsPickListUtilityItemStartSessionResponse
    _$WebApiModulesHomeControlsPickListUtilityItemStartSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPickListUtilityItemStartSessionResponse(
    sessionId: json['SessionId'] as String?,
    inventoryTypes: json['InventoryTypes'] as String?,
    inventoryTypeIds: json['InventoryTypeIds'] as String?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemStartSessionResponseToJson(
            WebApiModulesHomeControlsPickListUtilityItemStartSessionResponse
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'InventoryTypes': instance.inventoryTypes,
          'InventoryTypeIds': instance.inventoryTypeIds,
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsPricingPricing
    _$WebApiModulesHomeControlsPricingPricingFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPricingPricing(
    inventoryId: json['InventoryId'] as String?,
    rateId: json['RateId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouseDefaultCurrencyId: json['WarehouseDefaultCurrencyId'] as String?,
    currencyId: json['CurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    isCurrencyDefined: json['IsCurrencyDefined'] as bool?,
    defaultPurchaseCurrencyId: json['DefaultPurchaseCurrencyId'] as String?,
    convertFromCurrencyId: json['ConvertFromCurrencyId'] as String?,
    hourlyRate: (json['HourlyRate'] as num?)?.toDouble(),
    dailyRate: (json['DailyRate'] as num?)?.toDouble(),
    weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
    week2Rate: (json['Week2Rate'] as num?)?.toDouble(),
    week3Rate: (json['Week3Rate'] as num?)?.toDouble(),
    week4Rate: (json['Week4Rate'] as num?)?.toDouble(),
    week5Rate: (json['Week5Rate'] as num?)?.toDouble(),
    monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
    seriesRate: (json['SeriesRate'] as num?)?.toDouble(),
    year2LeaseRate: (json['Year2LeaseRate'] as num?)?.toDouble(),
    year3LeaseRate: (json['Year3LeaseRate'] as num?)?.toDouble(),
    year4LeaseRate: (json['Year4LeaseRate'] as num?)?.toDouble(),
    hourlyMarkup: (json['HourlyMarkup'] as num?)?.toDouble(),
    dailyMarkup: (json['DailyMarkup'] as num?)?.toDouble(),
    weeklyMarkup: (json['WeeklyMarkup'] as num?)?.toDouble(),
    monthlyMarkup: (json['MonthlyMarkup'] as num?)?.toDouble(),
    retail: (json['Retail'] as num?)?.toDouble(),
    price: (json['Price'] as num?)?.toDouble(),
    cost: (json['Cost'] as num?)?.toDouble(),
    hourlyCost: (json['HourlyCost'] as num?)?.toDouble(),
    dailyCost: (json['DailyCost'] as num?)?.toDouble(),
    weeklyCost: (json['WeeklyCost'] as num?)?.toDouble(),
    monthlyCost: (json['MonthlyCost'] as num?)?.toDouble(),
    defaultCost: (json['DefaultCost'] as num?)?.toDouble(),
    defaultCostConverted: (json['DefaultCostConverted'] as num?)?.toDouble(),
    markup: (json['Markup'] as num?)?.toDouble(),
    markupCostBasis: (json['MarkupCostBasis'] as num?)?.toDouble(),
    classification: json['Classification'] as String?,
    maximumDiscount: (json['MaximumDiscount'] as num?)?.toDouble(),
    maxDaysPerWeek: (json['MaxDaysPerWeek'] as num?)?.toDouble(),
    minimumDaysPerWeek: (json['MinimumDaysPerWeek'] as num?)?.toDouble(),
    availableFor: json['AvailableFor'] as String?,
    defaultRentalRates: json['DefaultRentalRates'] as bool?,
    defaultDailyRate: (json['DefaultDailyRate'] as num?)?.toDouble(),
    defaultWeeklyRate: (json['DefaultWeeklyRate'] as num?)?.toDouble(),
    hours: json['Hours'] as String?,
    hasTieredCost: json['HasTieredCost'] as bool?,
    replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
    unitValue: (json['UnitValue'] as num?)?.toDouble(),
    replacementCostConverted:
        (json['ReplacementCostConverted'] as num?)?.toDouble(),
    unitCostConverted: (json['UnitCostConverted'] as num?)?.toDouble(),
    markupReplacementCost: json['MarkupReplacementCost'] as bool?,
    replacementCostMarkupPercent:
        (json['ReplacementCostMarkupPercent'] as num?)?.toDouble(),
    restockingFee: (json['RestockingFee'] as num?)?.toDouble(),
    restockingPercent: (json['RestockingPercent'] as num?)?.toDouble(),
    calculateMonthlyRate: json['CalculateMonthlyRate'] as bool?,
    calculateSeriesWeeklyRate: json['CalculateSeriesWeeklyRate'] as bool?,
    calculate2YearLeaseWeeklyRate:
        json['Calculate2YearLeaseWeeklyRate'] as bool?,
    calculate3YearLeaseWeeklyRate:
        json['Calculate3YearLeaseWeeklyRate'] as bool?,
    warehouseOrderBy: json['WarehouseOrderBy'] as int?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsPricingPricingToJson(
        WebApiModulesHomeControlsPricingPricing instance) =>
    <String, dynamic>{
      'InventoryId': instance.inventoryId,
      'RateId': instance.rateId,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'WarehouseDefaultCurrencyId': instance.warehouseDefaultCurrencyId,
      'CurrencyId': instance.currencyId,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'IsCurrencyDefined': instance.isCurrencyDefined,
      'DefaultPurchaseCurrencyId': instance.defaultPurchaseCurrencyId,
      'ConvertFromCurrencyId': instance.convertFromCurrencyId,
      'HourlyRate': instance.hourlyRate,
      'DailyRate': instance.dailyRate,
      'WeeklyRate': instance.weeklyRate,
      'Week2Rate': instance.week2Rate,
      'Week3Rate': instance.week3Rate,
      'Week4Rate': instance.week4Rate,
      'Week5Rate': instance.week5Rate,
      'MonthlyRate': instance.monthlyRate,
      'SeriesRate': instance.seriesRate,
      'Year2LeaseRate': instance.year2LeaseRate,
      'Year3LeaseRate': instance.year3LeaseRate,
      'Year4LeaseRate': instance.year4LeaseRate,
      'HourlyMarkup': instance.hourlyMarkup,
      'DailyMarkup': instance.dailyMarkup,
      'WeeklyMarkup': instance.weeklyMarkup,
      'MonthlyMarkup': instance.monthlyMarkup,
      'Retail': instance.retail,
      'Price': instance.price,
      'Cost': instance.cost,
      'HourlyCost': instance.hourlyCost,
      'DailyCost': instance.dailyCost,
      'WeeklyCost': instance.weeklyCost,
      'MonthlyCost': instance.monthlyCost,
      'DefaultCost': instance.defaultCost,
      'DefaultCostConverted': instance.defaultCostConverted,
      'Markup': instance.markup,
      'MarkupCostBasis': instance.markupCostBasis,
      'Classification': instance.classification,
      'MaximumDiscount': instance.maximumDiscount,
      'MaxDaysPerWeek': instance.maxDaysPerWeek,
      'MinimumDaysPerWeek': instance.minimumDaysPerWeek,
      'AvailableFor': instance.availableFor,
      'DefaultRentalRates': instance.defaultRentalRates,
      'DefaultDailyRate': instance.defaultDailyRate,
      'DefaultWeeklyRate': instance.defaultWeeklyRate,
      'Hours': instance.hours,
      'HasTieredCost': instance.hasTieredCost,
      'ReplacementCost': instance.replacementCost,
      'UnitValue': instance.unitValue,
      'ReplacementCostConverted': instance.replacementCostConverted,
      'UnitCostConverted': instance.unitCostConverted,
      'MarkupReplacementCost': instance.markupReplacementCost,
      'ReplacementCostMarkupPercent': instance.replacementCostMarkupPercent,
      'RestockingFee': instance.restockingFee,
      'RestockingPercent': instance.restockingPercent,
      'CalculateMonthlyRate': instance.calculateMonthlyRate,
      'CalculateSeriesWeeklyRate': instance.calculateSeriesWeeklyRate,
      'Calculate2YearLeaseWeeklyRate': instance.calculate2YearLeaseWeeklyRate,
      'Calculate3YearLeaseWeeklyRate': instance.calculate3YearLeaseWeeklyRate,
      'WarehouseOrderBy': instance.warehouseOrderBy,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsProjectContactProjectContact
    _$WebApiModulesHomeControlsProjectContactProjectContactFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsProjectContactProjectContact(
    projectContactId: json['ProjectContactId'] as int?,
    projectId: json['ProjectId'] as String?,
    contactId: json['ContactId'] as String?,
    nameFml: json['NameFml'] as String?,
    nameLfm: json['NameLfm'] as String?,
    person: json['Person'] as String?,
    personColor: json['PersonColor'] as String?,
    firstName: json['FirstName'] as String?,
    middleInitial: json['MiddleInitial'] as String?,
    lastName: json['LastName'] as String?,
    contactTitle: json['ContactTitle'] as String?,
    officePhone: json['OfficePhone'] as String?,
    officeExtension: json['OfficeExtension'] as String?,
    mobilePhone: json['MobilePhone'] as String?,
    email: json['Email'] as String?,
    pager: json['Pager'] as String?,
    pagerPin: json['PagerPin'] as String?,
    jobTitle: json['JobTitle'] as String?,
    contactTitleId: json['ContactTitleId'] as String?,
    companyContactId: json['CompanyContactId'] as String?,
    companyId: json['CompanyId'] as String?,
    isPrimary: json['IsPrimary'] as bool?,
    countryId: json['CountryId'] as String?,
    isProjectFor: json['IsProjectFor'] as bool?,
    isProductionContact: json['IsProductionContact'] as bool?,
    isPrintable: json['IsPrintable'] as bool?,
    contactOnProject: json['ContactOnProject'] as bool?,
    inactive: json['Inactive'] as bool?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsProjectContactProjectContactToJson(
            WebApiModulesHomeControlsProjectContactProjectContact instance) =>
        <String, dynamic>{
          'ProjectContactId': instance.projectContactId,
          'ProjectId': instance.projectId,
          'ContactId': instance.contactId,
          'NameFml': instance.nameFml,
          'NameLfm': instance.nameLfm,
          'Person': instance.person,
          'PersonColor': instance.personColor,
          'FirstName': instance.firstName,
          'MiddleInitial': instance.middleInitial,
          'LastName': instance.lastName,
          'ContactTitle': instance.contactTitle,
          'OfficePhone': instance.officePhone,
          'OfficeExtension': instance.officeExtension,
          'MobilePhone': instance.mobilePhone,
          'Email': instance.email,
          'Pager': instance.pager,
          'PagerPin': instance.pagerPin,
          'JobTitle': instance.jobTitle,
          'ContactTitleId': instance.contactTitleId,
          'CompanyContactId': instance.companyContactId,
          'CompanyId': instance.companyId,
          'IsPrimary': instance.isPrimary,
          'CountryId': instance.countryId,
          'IsProjectFor': instance.isProjectFor,
          'IsProductionContact': instance.isProductionContact,
          'IsPrintable': instance.isPrintable,
          'ContactOnProject': instance.contactOnProject,
          'Inactive': instance.inactive,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsProjectNoteProjectNote
    _$WebApiModulesHomeControlsProjectNoteProjectNoteFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsProjectNoteProjectNote(
    projectNoteId: json['ProjectNoteId'] as String?,
    projectId: json['ProjectId'] as String?,
    noteDate: json['NoteDate'] as String?,
    userId: json['UserId'] as String?,
    notesDescription: json['NotesDescription'] as String?,
    printOnProject: json['PrintOnProject'] as bool?,
    userName: json['UserName'] as String?,
    notes: json['Notes'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsProjectNoteProjectNoteToJson(
        WebApiModulesHomeControlsProjectNoteProjectNote instance) =>
    <String, dynamic>{
      'ProjectNoteId': instance.projectNoteId,
      'ProjectId': instance.projectId,
      'NoteDate': instance.noteDate,
      'UserId': instance.userId,
      'NotesDescription': instance.notesDescription,
      'PrintOnProject': instance.printOnProject,
      'UserName': instance.userName,
      'Notes': instance.notes,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCode
    _$WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCode(
    purchaseOrderReceiveBarCodeId:
        json['PurchaseOrderReceiveBarCodeId'] as int?,
    barCode: json['BarCode'] as String?,
    inspectionNumber: json['InspectionNumber'] as String?,
    inspectionVendorId: json['InspectionVendorId'] as String?,
    inspectionVendor: json['InspectionVendor'] as String?,
    manufactureDate: json['ManufactureDate'] as String?,
    printQuantity: json['PrintQuantity'] as int?,
    serialNumber: json['SerialNumber'] as String?,
    rfId: json['RfId'] as String?,
    purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    orderTranId: json['OrderTranId'] as int?,
    internalChar: json['InternalChar'] as String?,
    receiveContractId: json['ReceiveContractId'] as String?,
    receiveContractNumber: json['ReceiveContractNumber'] as String?,
    returnContractId: json['ReturnContractId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    scannableBarCode: json['ScannableBarCode'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    iCodeDescription: json['ICodeDescription'] as String?,
    packingSlipNumber: json['PackingSlipNumber'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    itemId: json['ItemId'] as String?,
    purchaseId: json['PurchaseId'] as String?,
    availableFor: json['AvailableFor'] as String?,
    availableForDisplay: json['AvailableForDisplay'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    serialNumberIsMixedCase: json['SerialNumberIsMixedCase'] as bool?,
    itemOrder: json['ItemOrder'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeToJson(
            WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCode
                instance) =>
        <String, dynamic>{
          'PurchaseOrderReceiveBarCodeId':
              instance.purchaseOrderReceiveBarCodeId,
          'BarCode': instance.barCode,
          'InspectionNumber': instance.inspectionNumber,
          'InspectionVendorId': instance.inspectionVendorId,
          'InspectionVendor': instance.inspectionVendor,
          'ManufactureDate': instance.manufactureDate,
          'PrintQuantity': instance.printQuantity,
          'SerialNumber': instance.serialNumber,
          'RfId': instance.rfId,
          'PurchaseOrderItemId': instance.purchaseOrderItemId,
          'PurchaseOrderId': instance.purchaseOrderId,
          'OrderTranId': instance.orderTranId,
          'InternalChar': instance.internalChar,
          'ReceiveContractId': instance.receiveContractId,
          'ReceiveContractNumber': instance.receiveContractNumber,
          'ReturnContractId': instance.returnContractId,
          'InventoryId': instance.inventoryId,
          'ScannableBarCode': instance.scannableBarCode,
          'ICode': instance.iCode,
          'Description': instance.description,
          'ICodeDescription': instance.iCodeDescription,
          'PackingSlipNumber': instance.packingSlipNumber,
          'WarehouseId': instance.warehouseId,
          'ItemId': instance.itemId,
          'PurchaseId': instance.purchaseId,
          'AvailableFor': instance.availableFor,
          'AvailableForDisplay': instance.availableForDisplay,
          'TrackedBy': instance.trackedBy,
          'SerialNumberIsMixedCase': instance.serialNumberIsMixedCase,
          'ItemOrder': instance.itemOrder,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCode
    _$WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCode(
    purchaseOrderReturnBarCodeId: json['PurchaseOrderReturnBarCodeId'] as int?,
    barCode: json['BarCode'] as String?,
    inspectionNumber: json['InspectionNumber'] as String?,
    inspectionVendorId: json['InspectionVendorId'] as String?,
    inspectionVendor: json['InspectionVendor'] as String?,
    manufactureDate: json['ManufactureDate'] as String?,
    printQuantity: json['PrintQuantity'] as int?,
    serialNumber: json['SerialNumber'] as String?,
    rfId: json['RfId'] as String?,
    purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    orderTranId: json['OrderTranId'] as int?,
    internalChar: json['InternalChar'] as String?,
    returnContractId: json['ReturnContractId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    scannableBarCode: json['ScannableBarCode'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    iCodeDescription: json['ICodeDescription'] as String?,
    packingSlipNumber: json['PackingSlipNumber'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    itemId: json['ItemId'] as String?,
    purchaseId: json['PurchaseId'] as String?,
    availableFor: json['AvailableFor'] as String?,
    availableForDisplay: json['AvailableForDisplay'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    serialNumberIsMixedCase: json['SerialNumberIsMixedCase'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeToJson(
            WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCode
                instance) =>
        <String, dynamic>{
          'PurchaseOrderReturnBarCodeId': instance.purchaseOrderReturnBarCodeId,
          'BarCode': instance.barCode,
          'InspectionNumber': instance.inspectionNumber,
          'InspectionVendorId': instance.inspectionVendorId,
          'InspectionVendor': instance.inspectionVendor,
          'ManufactureDate': instance.manufactureDate,
          'PrintQuantity': instance.printQuantity,
          'SerialNumber': instance.serialNumber,
          'RfId': instance.rfId,
          'PurchaseOrderItemId': instance.purchaseOrderItemId,
          'PurchaseOrderId': instance.purchaseOrderId,
          'OrderTranId': instance.orderTranId,
          'InternalChar': instance.internalChar,
          'ReturnContractId': instance.returnContractId,
          'InventoryId': instance.inventoryId,
          'ScannableBarCode': instance.scannableBarCode,
          'ICode': instance.iCode,
          'Description': instance.description,
          'ICodeDescription': instance.iCodeDescription,
          'PackingSlipNumber': instance.packingSlipNumber,
          'WarehouseId': instance.warehouseId,
          'ItemId': instance.itemId,
          'PurchaseId': instance.purchaseId,
          'AvailableFor': instance.availableFor,
          'AvailableForDisplay': instance.availableForDisplay,
          'TrackedBy': instance.trackedBy,
          'SerialNumberIsMixedCase': instance.serialNumberIsMixedCase,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItem
    _$WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItem(
    purchaseId: json['PurchaseId'] as String?,
    vendorInvoiceId: json['VendorInvoiceId'] as String?,
    vendorInvoiceItemId: json['VendorInvoiceItemId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
    invoiceNumber: json['InvoiceNumber'] as String?,
    invoiceDate: json['InvoiceDate'] as String?,
    quantity: json['Quantity'] as int?,
    unitCost: (json['UnitCost'] as num?)?.toDouble(),
    extended: (json['Extended'] as num?)?.toDouble(),
    currencyId: json['CurrencyId'] as String?,
    currency: json['Currency'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemToJson(
            WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItem
                instance) =>
        <String, dynamic>{
          'PurchaseId': instance.purchaseId,
          'VendorInvoiceId': instance.vendorInvoiceId,
          'VendorInvoiceItemId': instance.vendorInvoiceItemId,
          'PurchaseOrderId': instance.purchaseOrderId,
          'PurchaseOrderItemId': instance.purchaseOrderItemId,
          'InvoiceNumber': instance.invoiceNumber,
          'InvoiceDate': instance.invoiceDate,
          'Quantity': instance.quantity,
          'UnitCost': instance.unitCost,
          'Extended': instance.extended,
          'CurrencyId': instance.currencyId,
          'Currency': instance.currency,
          'CurrencyCode': instance.currencyCode,
          'CurrencySymbol': instance.currencySymbol,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsRepairCostRepairCost
    _$WebApiModulesHomeControlsRepairCostRepairCostFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsRepairCostRepairCost(
    repairCostId: json['RepairCostId'] as String?,
    repairId: json['RepairId'] as String?,
    rateId: json['RateId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    unit: json['Unit'] as String?,
    rate: (json['Rate'] as num?)?.toDouble(),
    grossTotal: (json['GrossTotal'] as num?)?.toDouble(),
    discountAmount: (json['DiscountAmount'] as num?)?.toDouble(),
    extended: (json['Extended'] as num?)?.toDouble(),
    taxable: json['Taxable'] as bool?,
    tax: (json['Tax'] as num?)?.toDouble(),
    total: (json['Total'] as num?)?.toDouble(),
    billable: json['Billable'] as bool?,
    note: json['Note'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsRepairCostRepairCostToJson(
        WebApiModulesHomeControlsRepairCostRepairCost instance) =>
    <String, dynamic>{
      'RepairCostId': instance.repairCostId,
      'RepairId': instance.repairId,
      'RateId': instance.rateId,
      'ICode': instance.iCode,
      'Description': instance.description,
      'Quantity': instance.quantity,
      'Unit': instance.unit,
      'Rate': instance.rate,
      'GrossTotal': instance.grossTotal,
      'DiscountAmount': instance.discountAmount,
      'Extended': instance.extended,
      'Taxable': instance.taxable,
      'Tax': instance.tax,
      'Total': instance.total,
      'Billable': instance.billable,
      'Note': instance.note,
      'CurrencySymbol': instance.currencySymbol,
      'OrderId': instance.orderId,
      'OrderItemId': instance.orderItemId,
      'OrderNumber': instance.orderNumber,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsRepairPartRepairPart
    _$WebApiModulesHomeControlsRepairPartRepairPartFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsRepairPartRepairPart(
    repairPartId: json['RepairPartId'] as String?,
    repairId: json['RepairId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    iCode: json['ICode'] as String?,
    iCodeColor: json['ICodeColor'] as String?,
    description: json['Description'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    unit: json['Unit'] as String?,
    price: (json['Price'] as num?)?.toDouble(),
    grossTotal: (json['GrossTotal'] as num?)?.toDouble(),
    discountAmount: (json['DiscountAmount'] as num?)?.toDouble(),
    extended: (json['Extended'] as num?)?.toDouble(),
    taxable: json['Taxable'] as bool?,
    tax: (json['Tax'] as num?)?.toDouble(),
    total: (json['Total'] as num?)?.toDouble(),
    billable: json['Billable'] as bool?,
    itemClass: json['ItemClass'] as String?,
    itemOrder: json['ItemOrder'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsRepairPartRepairPartToJson(
        WebApiModulesHomeControlsRepairPartRepairPart instance) =>
    <String, dynamic>{
      'RepairPartId': instance.repairPartId,
      'RepairId': instance.repairId,
      'InventoryId': instance.inventoryId,
      'WarehouseId': instance.warehouseId,
      'WarehouseCode': instance.warehouseCode,
      'Warehouse': instance.warehouse,
      'ICode': instance.iCode,
      'ICodeColor': instance.iCodeColor,
      'Description': instance.description,
      'DescriptionColor': instance.descriptionColor,
      'Quantity': instance.quantity,
      'Unit': instance.unit,
      'Price': instance.price,
      'GrossTotal': instance.grossTotal,
      'DiscountAmount': instance.discountAmount,
      'Extended': instance.extended,
      'Taxable': instance.taxable,
      'Tax': instance.tax,
      'Total': instance.total,
      'Billable': instance.billable,
      'ItemClass': instance.itemClass,
      'ItemOrder': instance.itemOrder,
      'CurrencySymbol': instance.currencySymbol,
      'OrderId': instance.orderId,
      'OrderItemId': instance.orderItemId,
      'OrderNumber': instance.orderNumber,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsRepairReleaseRepairRelease
    _$WebApiModulesHomeControlsRepairReleaseRepairReleaseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsRepairReleaseRepairRelease(
    repairReleaseId: json['RepairReleaseId'] as String?,
    repairId: json['RepairId'] as String?,
    releaseDate: json['ReleaseDate'] as String?,
    usersId: json['UsersId'] as String?,
    releasedBy: json['ReleasedBy'] as String?,
    releaseQuantity: (json['ReleaseQuantity'] as num?)?.toDouble(),
    staging: json['Staging'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsRepairReleaseRepairReleaseToJson(
            WebApiModulesHomeControlsRepairReleaseRepairRelease instance) =>
        <String, dynamic>{
          'RepairReleaseId': instance.repairReleaseId,
          'RepairId': instance.repairId,
          'ReleaseDate': instance.releaseDate,
          'UsersId': instance.usersId,
          'ReleasedBy': instance.releasedBy,
          'ReleaseQuantity': instance.releaseQuantity,
          'Staging': instance.staging,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionRequest
    _$WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionRequest(
    sourceOrderId: json['SourceOrderId'] as String?,
    sessionId: json['SessionId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionRequestToJson(
            WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionRequest
                instance) =>
        <String, dynamic>{
          'SourceOrderId': instance.sourceOrderId,
          'SessionId': instance.sessionId,
        };

WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionResponse
    _$WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionResponseToJson(
            WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsServiceOrderItemCreateServiceOrderFromRepairResponse
    _$WebApiModulesHomeControlsServiceOrderItemCreateServiceOrderFromRepairResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsServiceOrderItemCreateServiceOrderFromRepairResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    order: json['order'] == null
        ? null
        : WebApiModulesAgentOrderOrder.fromJson(
            json['order'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemCreateServiceOrderFromRepairResponseToJson(
            WebApiModulesHomeControlsServiceOrderItemCreateServiceOrderFromRepairResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'order': instance.order?.toJson(),
        };

WebApiModulesHomeControlsServiceOrderItemServiceOrderItem
    _$WebApiModulesHomeControlsServiceOrderItemServiceOrderItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsServiceOrderItemServiceOrderItem(
    serviceOrderItemId: json['ServiceOrderItemId'] as String?,
    repairId: json['RepairId'] as String?,
    repairNumber: json['RepairNumber'] as String?,
    barCode: json['BarCode'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    repairICode: json['RepairICode'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    repairDescription: json['RepairDescription'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    repairInventoryId: json['RepairInventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    repairCostId: json['RepairCostId'] as String?,
    repairPartId: json['RepairPartId'] as String?,
    itemOrder: json['ItemOrder'] as String?,
    notes: json['Notes'] as String?,
    recType: json['RecType'] as String?,
    recTypeDisplay: json['RecTypeDisplay'] as String?,
    consignorId: json['ConsignorId'] as String?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesHomeControlsServiceOrderItemServiceOrderItemToJson(
        WebApiModulesHomeControlsServiceOrderItemServiceOrderItem instance) =>
    <String, dynamic>{
      'ServiceOrderItemId': instance.serviceOrderItemId,
      'RepairId': instance.repairId,
      'RepairNumber': instance.repairNumber,
      'BarCode': instance.barCode,
      'SerialNumber': instance.serialNumber,
      'RepairICode': instance.repairICode,
      'TrackedBy': instance.trackedBy,
      'RepairDescription': instance.repairDescription,
      'Quantity': instance.quantity,
      'RepairInventoryId': instance.repairInventoryId,
      'WarehouseId': instance.warehouseId,
      'WarehouseCode': instance.warehouseCode,
      'Warehouse': instance.warehouse,
      'RepairCostId': instance.repairCostId,
      'RepairPartId': instance.repairPartId,
      'ItemOrder': instance.itemOrder,
      'Notes': instance.notes,
      'RecType': instance.recType,
      'RecTypeDisplay': instance.recTypeDisplay,
      'ConsignorId': instance.consignorId,
      'ConsignorAgreementId': instance.consignorAgreementId,
      'InventoryId': instance.inventoryId,
      'ICode': instance.iCode,
      'Description': instance.description,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionRequest
    _$WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionRequest(
    repairIds: json['RepairIds'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionRequestToJson(
            WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionRequest
                instance) =>
        <String, dynamic>{
          'RepairIds': instance.repairIds,
        };

WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionResponse
    _$WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    sessionId: json['SessionId'] as String?,
    items: json['Items'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionResponseToJson(
            WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'SessionId': instance.sessionId,
          'Items': instance.items,
        };

WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemRequest
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemRequest(
    sessionId: json['SessionId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemRequestToJson(
            WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemRequest
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
        };

WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemResponse
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemResponseToJson(
            WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItem
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItem(
    sessionId: json['SessionId'] as String?,
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    parentId: json['ParentId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    iCodeColor: json['ICodeColor'] as String?,
    description: json['Description'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    nonDiscountable: json['NonDiscountable'] as bool?,
    isRecurring: json['IsRecurring'] as bool?,
    prorateWeeks: json['ProrateWeeks'] as bool?,
    prorateMonths: json['ProrateMonths'] as bool?,
    prorate: json['Prorate'] as bool?,
    prorateMonthsBy: json['ProrateMonthsBy'] as String?,
    recurringRateType: json['RecurringRateType'] as bool?,
    isCrewPositionHourly: json['IsCrewPositionHourly'] as bool?,
    fromDate: json['FromDate'] as String?,
    toDate: json['ToDate'] as String?,
    hours: (json['Hours'] as num?)?.toDouble(),
    overTimeHours: (json['OverTimeHours'] as num?)?.toDouble(),
    doubleTimeHours: (json['DoubleTimeHours'] as num?)?.toDouble(),
    subQuantity: (json['SubQuantity'] as num?)?.toDouble(),
    quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
    vendorRate: (json['VendorRate'] as num?)?.toDouble(),
    vendorDaysPerWeek: (json['VendorDaysPerWeek'] as num?)?.toDouble(),
    vendorDiscountPercent: (json['VendorDiscountPercent'] as num?)?.toDouble(),
    vendorDiscountPercentDisplay:
        (json['VendorDiscountPercentDisplay'] as num?)?.toDouble(),
    vendorBillablePeriods: (json['VendorBillablePeriods'] as num?)?.toDouble(),
    vendorWeeklySubTotal: (json['VendorWeeklySubTotal'] as num?)?.toDouble(),
    vendorWeeklyDiscount: (json['VendorWeeklyDiscount'] as num?)?.toDouble(),
    vendorWeeklyExtended: (json['VendorWeeklyExtended'] as num?)?.toDouble(),
    vendorWeeklyTax: (json['VendorWeeklyTax'] as num?)?.toDouble(),
    vendorWeeklyTotal: (json['VendorWeeklyTotal'] as num?)?.toDouble(),
    vendorMonthlySubTotal: (json['VendorMonthlySubTotal'] as num?)?.toDouble(),
    vendorMonthlyDiscount: (json['VendorMonthlyDiscount'] as num?)?.toDouble(),
    vendorMonthlyExtended: (json['VendorMonthlyExtended'] as num?)?.toDouble(),
    vendorMonthlyTax: (json['VendorMonthlyTax'] as num?)?.toDouble(),
    vendorMonthlyTotal: (json['VendorMonthlyTotal'] as num?)?.toDouble(),
    vendorPeriodSubTotal: (json['VendorPeriodSubTotal'] as num?)?.toDouble(),
    vendorPeriodDiscount: (json['VendorPeriodDiscount'] as num?)?.toDouble(),
    vendorPeriodExtended: (json['VendorPeriodExtended'] as num?)?.toDouble(),
    vendorPeriodTax: (json['VendorPeriodTax'] as num?)?.toDouble(),
    vendorPeriodTotal: (json['VendorPeriodTotal'] as num?)?.toDouble(),
    dealRate: (json['DealRate'] as num?)?.toDouble(),
    dealDaysPerWeek: (json['DealDaysPerWeek'] as num?)?.toDouble(),
    dealDiscountPercent: (json['DealDiscountPercent'] as num?)?.toDouble(),
    dealDiscountPercentDisplay:
        (json['DealDiscountPercentDisplay'] as num?)?.toDouble(),
    dealBillablePeriods: (json['DealBillablePeriods'] as num?)?.toDouble(),
    dealWeeklySubTotal: (json['DealWeeklySubTotal'] as num?)?.toDouble(),
    dealWeeklyDiscount: (json['DealWeeklyDiscount'] as num?)?.toDouble(),
    dealWeeklyExtended: (json['DealWeeklyExtended'] as num?)?.toDouble(),
    dealMonthlySubTotal: (json['DealMonthlySubTotal'] as num?)?.toDouble(),
    dealMonthlyDiscount: (json['DealMonthlyDiscount'] as num?)?.toDouble(),
    dealMonthlyExtended: (json['DealMonthlyExtended'] as num?)?.toDouble(),
    dealPeriodSubTotal: (json['DealPeriodSubTotal'] as num?)?.toDouble(),
    dealPeriodDiscount: (json['DealPeriodDiscount'] as num?)?.toDouble(),
    dealPeriodExtended: (json['DealPeriodExtended'] as num?)?.toDouble(),
    variance: (json['Variance'] as num?)?.toDouble(),
    varianceColor: json['VarianceColor'] as String?,
    markupPercent: (json['MarkupPercent'] as num?)?.toDouble(),
    marginPercent: (json['MarginPercent'] as num?)?.toDouble(),
    itemClass: json['ItemClass'] as String?,
    itemOrder: json['ItemOrder'] as String?,
    optionColor: json['OptionColor'] as bool?,
    recType: json['RecType'] as String?,
    taxable: json['Taxable'] as bool?,
    unitId: json['UnitId'] as String?,
    nestedOrderItemId: json['NestedOrderItemId'] as String?,
    accessoryRatio: (json['AccessoryRatio'] as num?)?.toDouble(),
    vendorCurrencyId: json['VendorCurrencyId'] as String?,
    vendorCurrencyCode: json['VendorCurrencyCode'] as String?,
    vendorCurrencySymbol: json['VendorCurrencySymbol'] as String?,
    dealCurrencyId: json['DealCurrencyId'] as String?,
    dealCurrencyCode: json['DealCurrencyCode'] as String?,
    dealCurrencySymbol: json['DealCurrencySymbol'] as String?,
    currencyExchangeRate: (json['CurrencyExchangeRate'] as num?)?.toDouble(),
    currencyConvertedRate: (json['CurrencyConvertedRate'] as num?)?.toDouble(),
    currencyConvertedWeeklyExtended:
        (json['CurrencyConvertedWeeklyExtended'] as num?)?.toDouble(),
    currencyConvertedMonthlyExtended:
        (json['CurrencyConvertedMonthlyExtended'] as num?)?.toDouble(),
    currencyConvertedPeriodExtended:
        (json['CurrencyConvertedPeriodExtended'] as num?)?.toDouble(),
    nestingLevel: json['NestingLevel'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemToJson(
            WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItem
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
          'ParentId': instance.parentId,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'ICodeColor': instance.iCodeColor,
          'Description': instance.description,
          'DescriptionColor': instance.descriptionColor,
          'NonDiscountable': instance.nonDiscountable,
          'IsRecurring': instance.isRecurring,
          'ProrateWeeks': instance.prorateWeeks,
          'ProrateMonths': instance.prorateMonths,
          'Prorate': instance.prorate,
          'ProrateMonthsBy': instance.prorateMonthsBy,
          'RecurringRateType': instance.recurringRateType,
          'IsCrewPositionHourly': instance.isCrewPositionHourly,
          'FromDate': instance.fromDate,
          'ToDate': instance.toDate,
          'Hours': instance.hours,
          'OverTimeHours': instance.overTimeHours,
          'DoubleTimeHours': instance.doubleTimeHours,
          'SubQuantity': instance.subQuantity,
          'QuantityOrdered': instance.quantityOrdered,
          'VendorRate': instance.vendorRate,
          'VendorDaysPerWeek': instance.vendorDaysPerWeek,
          'VendorDiscountPercent': instance.vendorDiscountPercent,
          'VendorDiscountPercentDisplay': instance.vendorDiscountPercentDisplay,
          'VendorBillablePeriods': instance.vendorBillablePeriods,
          'VendorWeeklySubTotal': instance.vendorWeeklySubTotal,
          'VendorWeeklyDiscount': instance.vendorWeeklyDiscount,
          'VendorWeeklyExtended': instance.vendorWeeklyExtended,
          'VendorWeeklyTax': instance.vendorWeeklyTax,
          'VendorWeeklyTotal': instance.vendorWeeklyTotal,
          'VendorMonthlySubTotal': instance.vendorMonthlySubTotal,
          'VendorMonthlyDiscount': instance.vendorMonthlyDiscount,
          'VendorMonthlyExtended': instance.vendorMonthlyExtended,
          'VendorMonthlyTax': instance.vendorMonthlyTax,
          'VendorMonthlyTotal': instance.vendorMonthlyTotal,
          'VendorPeriodSubTotal': instance.vendorPeriodSubTotal,
          'VendorPeriodDiscount': instance.vendorPeriodDiscount,
          'VendorPeriodExtended': instance.vendorPeriodExtended,
          'VendorPeriodTax': instance.vendorPeriodTax,
          'VendorPeriodTotal': instance.vendorPeriodTotal,
          'DealRate': instance.dealRate,
          'DealDaysPerWeek': instance.dealDaysPerWeek,
          'DealDiscountPercent': instance.dealDiscountPercent,
          'DealDiscountPercentDisplay': instance.dealDiscountPercentDisplay,
          'DealBillablePeriods': instance.dealBillablePeriods,
          'DealWeeklySubTotal': instance.dealWeeklySubTotal,
          'DealWeeklyDiscount': instance.dealWeeklyDiscount,
          'DealWeeklyExtended': instance.dealWeeklyExtended,
          'DealMonthlySubTotal': instance.dealMonthlySubTotal,
          'DealMonthlyDiscount': instance.dealMonthlyDiscount,
          'DealMonthlyExtended': instance.dealMonthlyExtended,
          'DealPeriodSubTotal': instance.dealPeriodSubTotal,
          'DealPeriodDiscount': instance.dealPeriodDiscount,
          'DealPeriodExtended': instance.dealPeriodExtended,
          'Variance': instance.variance,
          'VarianceColor': instance.varianceColor,
          'MarkupPercent': instance.markupPercent,
          'MarginPercent': instance.marginPercent,
          'ItemClass': instance.itemClass,
          'ItemOrder': instance.itemOrder,
          'OptionColor': instance.optionColor,
          'RecType': instance.recType,
          'Taxable': instance.taxable,
          'UnitId': instance.unitId,
          'NestedOrderItemId': instance.nestedOrderItemId,
          'AccessoryRatio': instance.accessoryRatio,
          'VendorCurrencyId': instance.vendorCurrencyId,
          'VendorCurrencyCode': instance.vendorCurrencyCode,
          'VendorCurrencySymbol': instance.vendorCurrencySymbol,
          'DealCurrencyId': instance.dealCurrencyId,
          'DealCurrencyCode': instance.dealCurrencyCode,
          'DealCurrencySymbol': instance.dealCurrencySymbol,
          'CurrencyExchangeRate': instance.currencyExchangeRate,
          'CurrencyConvertedRate': instance.currencyConvertedRate,
          'CurrencyConvertedWeeklyExtended':
              instance.currencyConvertedWeeklyExtended,
          'CurrencyConvertedMonthlyExtended':
              instance.currencyConvertedMonthlyExtended,
          'CurrencyConvertedPeriodExtended':
              instance.currencyConvertedPeriodExtended,
          'NestingLevel': instance.nestingLevel,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsSuspendedSessionSuspendedSession
    _$WebApiModulesHomeControlsSuspendedSessionSuspendedSessionFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsSuspendedSessionSuspendedSession(
    contractId: json['ContractId'] as String?,
    sessionNumber: json['SessionNumber'] as int?,
    deal: json['Deal'] as String?,
    dealNumber: json['DealNumber'] as String?,
    dealOrVendor: json['DealOrVendor'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    orderId: json['OrderId'] as String?,
    userName: json['UserName'] as String?,
    userNameFirstMiddleLast: json['UserNameFirstMiddleLast'] as String?,
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    usersId: json['UsersId'] as String?,
    contractDate: json['ContractDate'] as String?,
    contractTime: json['ContractTime'] as String?,
    dealId: json['DealId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    exchangeContractId: json['ExchangeContractId'] as String?,
    contractType: json['ContractType'] as String?,
    isForcedSuspend: json['IsForcedSuspend'] as bool?,
    containerItemId: json['ContainerItemId'] as String?,
    containerScannableItemId: json['ContainerScannableItemId'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesHomeControlsSuspendedSessionSuspendedSessionToJson(
        WebApiModulesHomeControlsSuspendedSessionSuspendedSession instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'SessionNumber': instance.sessionNumber,
      'Deal': instance.deal,
      'DealNumber': instance.dealNumber,
      'DealOrVendor': instance.dealOrVendor,
      'OrderNumber': instance.orderNumber,
      'OrderDescription': instance.orderDescription,
      'OrderId': instance.orderId,
      'UserName': instance.userName,
      'UserNameFirstMiddleLast': instance.userNameFirstMiddleLast,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'UsersId': instance.usersId,
      'ContractDate': instance.contractDate,
      'ContractTime': instance.contractTime,
      'DealId': instance.dealId,
      'DepartmentId': instance.departmentId,
      'OfficeLocationId': instance.officeLocationId,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'ExchangeContractId': instance.exchangeContractId,
      'ContractType': instance.contractType,
      'IsForcedSuspend': instance.isForcedSuspend,
      'ContainerItemId': instance.containerItemId,
      'ContainerScannableItemId': instance.containerScannableItemId,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsTaxableTaxable
    _$WebApiModulesHomeControlsTaxableTaxableFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsTaxableTaxable(
    masterId: json['MasterId'] as String?,
    locationId: json['LocationId'] as String?,
    location: json['Location'] as String?,
    taxable: json['Taxable'] as bool?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsTaxableTaxableToJson(
        WebApiModulesHomeControlsTaxableTaxable instance) =>
    <String, dynamic>{
      'MasterId': instance.masterId,
      'LocationId': instance.locationId,
      'Location': instance.location,
      'Taxable': instance.taxable,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItem
    _$WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItem(
    vendorInvoiceItemId: json['VendorInvoiceItemId'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    nestedOrderItemId: json['NestedOrderItemId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    iCodeDisplay: json['ICodeDisplay'] as String?,
    iCodeColor: json['ICodeColor'] as String?,
    categoryId: json['CategoryId'] as String?,
    description: json['Description'] as String?,
    descriptionColor: json['DescriptionColor'] as String?,
    fromDate: json['FromDate'] as String?,
    toDate: json['ToDate'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    quantityApproved: (json['QuantityApproved'] as num?)?.toDouble(),
    amountApproved: (json['AmountApproved'] as num?)?.toDouble(),
    unitId: json['UnitId'] as String?,
    unit: json['Unit'] as String?,
    cost: (json['Cost'] as num?)?.toDouble(),
    extended: (json['Extended'] as num?)?.toDouble(),
    adjustment: (json['Adjustment'] as num?)?.toDouble(),
    lineTotal: (json['LineTotal'] as num?)?.toDouble(),
    lineTotalPerQuantity: (json['LineTotalPerQuantity'] as num?)?.toDouble(),
    taxableExtended: (json['TaxableExtended'] as num?)?.toDouble(),
    taxable: json['Taxable'] as bool?,
    tax: (json['Tax'] as num?)?.toDouble(),
    tax1: (json['Tax1'] as num?)?.toDouble(),
    tax2: (json['Tax2'] as num?)?.toDouble(),
    lineTotalWithTax: (json['LineTotalWithTax'] as num?)?.toDouble(),
    note: json['Note'] as String?,
    itemClass: json['ItemClass'] as String?,
    recType: json['RecType'] as String?,
    recTypeDisplay: json['RecTypeDisplay'] as String?,
    invoiceNumber: json['InvoiceNumber'] as String?,
    invoiceType: json['InvoiceType'] as String?,
    invoiceDate: json['InvoiceDate'] as String?,
    statusDate: json['StatusDate'] as String?,
    vendorInvoiceNumber: json['VendorInvoiceNumber'] as int?,
    inputDate: json['InputDate'] as String?,
    glAccountId: json['GlAccountId'] as String?,
    glAccountNo: json['GlAccountNo'] as String?,
    incomeAccountId: json['IncomeAccountId'] as String?,
    dealBilledQuantity: (json['DealBilledQuantity'] as num?)?.toDouble(),
    dealBilledExtended: (json['DealBilledExtended'] as num?)?.toDouble(),
    orderId: json['OrderId'] as String?,
    orderOrderItemId: json['OrderOrderItemId'] as String?,
    purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    dealTypeId: json['DealTypeId'] as String?,
    orderTypeId: json['OrderTypeId'] as String?,
    quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
    quantityReceived: (json['QuantityReceived'] as num?)?.toDouble(),
    quantityCanceled: (json['QuantityCanceled'] as num?)?.toDouble(),
    quantityReturned: (json['QuantityReturned'] as num?)?.toDouble(),
    purchaseOrderRate: (json['PurchaseOrderRate'] as num?)?.toDouble(),
    purchaseOrderDiscountPercent:
        (json['PurchaseOrderDiscountPercent'] as num?)?.toDouble(),
    purchaseOrderDaysPerWeek:
        (json['PurchaseOrderDaysPerWeek'] as num?)?.toDouble(),
    purchaseOrderPeriodExtended:
        (json['PurchaseOrderPeriodExtended'] as num?)?.toDouble(),
    itemOrder: json['ItemOrder'] as String?,
    lineType: json['LineType'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    chargeType: json['ChargeType'] as String?,
    poItemBillingStartDate: json['PoItemBillingStartDate'] as String?,
    poItemBillingEndDate: json['PoItemBillingEndDate'] as String?,
    vendorInvoiceId: json['VendorInvoiceId'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    nestingLevel: json['NestingLevel'] as int?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemToJson(
            WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItem
                instance) =>
        <String, dynamic>{
          'VendorInvoiceItemId': instance.vendorInvoiceItemId,
          'PurchaseOrderId': instance.purchaseOrderId,
          'OrderItemId': instance.orderItemId,
          'NestedOrderItemId': instance.nestedOrderItemId,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'ICodeDisplay': instance.iCodeDisplay,
          'ICodeColor': instance.iCodeColor,
          'CategoryId': instance.categoryId,
          'Description': instance.description,
          'DescriptionColor': instance.descriptionColor,
          'FromDate': instance.fromDate,
          'ToDate': instance.toDate,
          'Quantity': instance.quantity,
          'QuantityApproved': instance.quantityApproved,
          'AmountApproved': instance.amountApproved,
          'UnitId': instance.unitId,
          'Unit': instance.unit,
          'Cost': instance.cost,
          'Extended': instance.extended,
          'Adjustment': instance.adjustment,
          'LineTotal': instance.lineTotal,
          'LineTotalPerQuantity': instance.lineTotalPerQuantity,
          'TaxableExtended': instance.taxableExtended,
          'Taxable': instance.taxable,
          'Tax': instance.tax,
          'Tax1': instance.tax1,
          'Tax2': instance.tax2,
          'LineTotalWithTax': instance.lineTotalWithTax,
          'Note': instance.note,
          'ItemClass': instance.itemClass,
          'RecType': instance.recType,
          'RecTypeDisplay': instance.recTypeDisplay,
          'InvoiceNumber': instance.invoiceNumber,
          'InvoiceType': instance.invoiceType,
          'InvoiceDate': instance.invoiceDate,
          'StatusDate': instance.statusDate,
          'VendorInvoiceNumber': instance.vendorInvoiceNumber,
          'InputDate': instance.inputDate,
          'GlAccountId': instance.glAccountId,
          'GlAccountNo': instance.glAccountNo,
          'IncomeAccountId': instance.incomeAccountId,
          'DealBilledQuantity': instance.dealBilledQuantity,
          'DealBilledExtended': instance.dealBilledExtended,
          'OrderId': instance.orderId,
          'OrderOrderItemId': instance.orderOrderItemId,
          'PurchaseOrderNumber': instance.purchaseOrderNumber,
          'OrderNumber': instance.orderNumber,
          'DealId': instance.dealId,
          'Deal': instance.deal,
          'DealTypeId': instance.dealTypeId,
          'OrderTypeId': instance.orderTypeId,
          'QuantityOrdered': instance.quantityOrdered,
          'QuantityReceived': instance.quantityReceived,
          'QuantityCanceled': instance.quantityCanceled,
          'QuantityReturned': instance.quantityReturned,
          'PurchaseOrderRate': instance.purchaseOrderRate,
          'PurchaseOrderDiscountPercent': instance.purchaseOrderDiscountPercent,
          'PurchaseOrderDaysPerWeek': instance.purchaseOrderDaysPerWeek,
          'PurchaseOrderPeriodExtended': instance.purchaseOrderPeriodExtended,
          'ItemOrder': instance.itemOrder,
          'LineType': instance.lineType,
          'WarehouseId': instance.warehouseId,
          'Warehouse': instance.warehouse,
          'WarehouseCode': instance.warehouseCode,
          'ChargeType': instance.chargeType,
          'PoItemBillingStartDate': instance.poItemBillingStartDate,
          'PoItemBillingEndDate': instance.poItemBillingEndDate,
          'VendorInvoiceId': instance.vendorInvoiceId,
          'CurrencySymbol': instance.currencySymbol,
          'NestingLevel': instance.nestingLevel,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNote
    _$WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNote(
    vendorInvoiceNoteId: json['VendorInvoiceNoteId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    notes: json['Notes'] as String?,
    noteDate: json['NoteDate'] as String?,
    usersId: json['UsersId'] as String?,
    name: json['Name'] as String?,
    noteDescription: json['NoteDescription'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteToJson(
            WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNote
                instance) =>
        <String, dynamic>{
          'VendorInvoiceNoteId': instance.vendorInvoiceNoteId,
          'UniqueId1': instance.uniqueId1,
          'UniqueId2': instance.uniqueId2,
          'Notes': instance.notes,
          'NoteDate': instance.noteDate,
          'UsersId': instance.usersId,
          'Name': instance.name,
          'NoteDescription': instance.noteDescription,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesHomeControlsVendorNoteVendorNote
    _$WebApiModulesHomeControlsVendorNoteVendorNoteFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesHomeControlsVendorNoteVendorNote(
    vendorNoteId: json['VendorNoteId'] as String?,
    vendorId: json['VendorId'] as String?,
    noteDate: json['NoteDate'] as String?,
    description: json['Description'] as String?,
    notes: json['Notes'] as String?,
    notify: json['Notify'] as bool?,
    notesById: json['NotesById'] as String?,
    notesBy: json['NotesBy'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesHomeControlsVendorNoteVendorNoteToJson(
        WebApiModulesHomeControlsVendorNoteVendorNote instance) =>
    <String, dynamic>{
      'VendorNoteId': instance.vendorNoteId,
      'VendorId': instance.vendorId,
      'NoteDate': instance.noteDate,
      'Description': instance.description,
      'Notes': instance.notes,
      'Notify': instance.notify,
      'NotesById': instance.notesById,
      'NotesBy': instance.notesBy,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventoryAssetAssetDocument
    _$WebApiModulesInventoryAssetAssetDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryAssetAssetDocument(
    itemId: json['ItemId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesInventoryAssetAssetDocumentToJson(
        WebApiModulesInventoryAssetAssetDocument instance) =>
    <String, dynamic>{
      'ItemId': instance.itemId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventoryAssetAssetDocumentPostRequest
    _$WebApiModulesInventoryAssetAssetDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryAssetAssetDocumentPostRequest(
    itemId: json['ItemId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryAssetAssetDocumentPostRequestToJson(
            WebApiModulesInventoryAssetAssetDocumentPostRequest instance) =>
        <String, dynamic>{
          'ItemId': instance.itemId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesInventoryAssetAssetDocumentPutRequest
    _$WebApiModulesInventoryAssetAssetDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryAssetAssetDocumentPutRequest(
    itemId: json['ItemId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesInventoryAssetAssetDocumentPutRequestToJson(
        WebApiModulesInventoryAssetAssetDocumentPutRequest instance) =>
    <String, dynamic>{
      'ItemId': instance.itemId,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesInventoryAssetItem _$WebApiModulesInventoryAssetItemFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesInventoryAssetItem(
    itemId: json['ItemId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    itemDescription: json['ItemDescription'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    availableFor: json['AvailableFor'] as String?,
    availableForDisplay: json['AvailableForDisplay'] as String?,
    unitValue: (json['UnitValue'] as num?)?.toDouble(),
    replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
    classification: json['Classification'] as String?,
    isContainer: json['IsContainer'] as bool?,
    containerId: json['ContainerId'] as String?,
    containerInventoryId: json['ContainerInventoryId'] as String?,
    containerICode: json['ContainerICode'] as String?,
    containerDescription: json['ContainerDescription'] as String?,
    containerPackingListBehavior:
        json['ContainerPackingListBehavior'] as String?,
    containerStatus: json['ContainerStatus'] as String?,
    containerStatusColor: json['ContainerStatusColor'] as String?,
    containerItemId: json['ContainerItemId'] as String?,
    containerStatusDate: json['ContainerStatusDate'] as String?,
    fixedAsset: json['FixedAsset'] as bool?,
    rank: json['Rank'] as String?,
    statusType: json['StatusType'] as String?,
    statusDate: json['StatusDate'] as String?,
    inventoryStatus: json['InventoryStatus'] as String?,
    inventoryStatusId: json['InventoryStatusId'] as String?,
    color: json['Color'] as String?,
    textColor: json['TextColor'] as String?,
    barCode: json['BarCode'] as String?,
    barCodeForScanning: json['BarCodeForScanning'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    rfId: json['RfId'] as String?,
    oldBarCode: json['OldBarCode'] as String?,
    oldSerialNumber: json['OldSerialNumber'] as String?,
    oldRfid: json['OldRfid'] as String?,
    manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
    manufactureDate: json['ManufactureDate'] as String?,
    trackedByCode: json['TrackedByCode'] as String?,
    availOwnershipSort: json['AvailOwnershipSort'] as int?,
    isNegativeInventory: json['IsNegativeInventory'] as bool?,
    inspectionNo: json['InspectionNo'] as String?,
    inspectionVendorId: json['InspectionVendorId'] as String?,
    inspectionVendor: json['InspectionVendor'] as String?,
    manufacturerModelNumber: json['ManufacturerModelNumber'] as String?,
    purchaseId: json['PurchaseId'] as String?,
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    spaceId: json['SpaceId'] as String?,
    buildingRoom: json['BuildingRoom'] as String?,
    itemNotes: json['ItemNotes'] as String?,
    physicalId: json['PhysicalId'] as String?,
    physicalItemId: json['PhysicalItemId'] as int?,
    physicalDate: json['PhysicalDate'] as String?,
    physicalBy: json['PhysicalBy'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    dealId: json['DealId'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    currentLocation: json['CurrentLocation'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    inventoryTypeOrderBy: json['InventoryTypeOrderBy'] as int?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
    subCategoryId: json['SubCategoryId'] as String?,
    subCategory: json['SubCategory'] as String?,
    subCategoryOrderBy: (json['SubCategoryOrderBy'] as num?)?.toDouble(),
    ownership: json['Ownership'] as String?,
    purchaseVendorId: json['PurchaseVendorId'] as String?,
    purchaseVendor: json['PurchaseVendor'] as String?,
    outsidePurchaseOrderNumber: json['OutsidePurchaseOrderNumber'] as String?,
    purchasePoId: json['PurchasePoId'] as String?,
    purchaseDate: json['PurchaseDate'] as String?,
    receiveDate: json['ReceiveDate'] as String?,
    receiveContractDate: json['ReceiveContractDate'] as String?,
    purchasePoNumber: json['PurchasePoNumber'] as String?,
    purchaseCost: (json['PurchaseCost'] as num?)?.toDouble(),
    invoiceCost: (json['InvoiceCost'] as num?)?.toDouble(),
    purchaseInvoiceNumber: json['PurchaseInvoiceNumber'] as String?,
    purchaseInvoiceDate: json['PurchaseInvoiceDate'] as String?,
    purchaseCurrencyId: json['PurchaseCurrencyId'] as String?,
    purchaseCurrencyCode: json['PurchaseCurrencyCode'] as String?,
    purchaseCurrency: json['PurchaseCurrency'] as String?,
    purchaseCurrencySymbol: json['PurchaseCurrencySymbol'] as String?,
    warehouseCurrencyId: json['WarehouseCurrencyId'] as String?,
    warehouseCurrencyCode: json['WarehouseCurrencyCode'] as String?,
    warehouseCurrency: json['WarehouseCurrency'] as String?,
    warehouseCurrencySymbol: json['WarehouseCurrencySymbol'] as String?,
    purchaseCurrencyExchangeRate:
        (json['PurchaseCurrencyExchangeRate'] as num?)?.toDouble(),
    unitCost: (json['UnitCost'] as num?)?.toDouble(),
    unitCostWithTax: (json['UnitCostWithTax'] as num?)?.toDouble(),
    unitCostCurrencyConverted:
        (json['UnitCostCurrencyConverted'] as num?)?.toDouble(),
    unitCostWithTaxCurrencyConverted:
        (json['UnitCostWithTaxCurrencyConverted'] as num?)?.toDouble(),
    originalEquipmentCost: (json['OriginalEquipmentCost'] as num?)?.toDouble(),
    depreciation: (json['Depreciation'] as num?)?.toDouble(),
    bookValue: (json['BookValue'] as num?)?.toDouble(),
    salvageValue: (json['SalvageValue'] as num?)?.toDouble(),
    consignorId: json['ConsignorId'] as String?,
    consignor: json['Consignor'] as String?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
    consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
    manufacturerId: json['ManufacturerId'] as String?,
    manufacturer: json['Manufacturer'] as String?,
    originalShowId: json['OriginalShowId'] as String?,
    originalShow: json['OriginalShow'] as String?,
    conditionId: json['ConditionId'] as String?,
    condition: json['Condition'] as String?,
    surfaceId: json['SurfaceId'] as String?,
    surface: json['Surface'] as String?,
    wallTypeId: json['WallTypeId'] as String?,
    wallType: json['WallType'] as String?,
    openingId: json['OpeningId'] as String?,
    opening: json['Opening'] as String?,
    responsiblePersonId: json['ResponsiblePersonId'] as String?,
    responsiblePerson: json['ResponsiblePerson'] as String?,
    buyerId: json['BuyerId'] as String?,
    buyer: json['Buyer'] as String?,
    receiptNumber: json['ReceiptNumber'] as String?,
    depreciationMonths: json['DepreciationMonths'] as int?,
    repairId: json['RepairId'] as String?,
    repairNumber: json['RepairNumber'] as String?,
    qcRequired: json['QcRequired'] as bool?,
    widthFt: json['WidthFt'] as int?,
    widthIn: json['WidthIn'] as int?,
    heightFt: json['HeightFt'] as int?,
    heightIn: json['HeightIn'] as int?,
    lengthFt: json['LengthFt'] as int?,
    lengthIn: json['LengthIn'] as int?,
    currentMeter: (json['CurrentMeter'] as num?)?.toDouble(),
    trackAssetUsage: json['TrackAssetUsage'] as bool?,
    trackLampUsage: json['TrackLampUsage'] as bool?,
    trackStrikes: json['TrackStrikes'] as bool?,
    trackCandles: json['TrackCandles'] as bool?,
    assetHours: json['AssetHours'] as int?,
    lampCount: json['LampCount'] as int?,
    lampHours1: json['LampHours1'] as int?,
    lampHours2: json['LampHours2'] as int?,
    lampHours3: json['LampHours3'] as int?,
    lampHours4: json['LampHours4'] as int?,
    strikes: json['Strikes'] as int?,
    footCandles: json['FootCandles'] as int?,
    minimumFootCandles: json['MinimumFootCandles'] as int?,
    softwareVersion: json['SoftwareVersion'] as String?,
    softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
    pattern: json['Pattern'] as String?,
    gender: json['Gender'] as String?,
    label: json['Label'] as String?,
    material: json['Material'] as String?,
    period: json['Period'] as String?,
    cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
    wardrobeSize: json['WardrobeSize'] as String?,
    wardrobePieceCount: json['WardrobePieceCount'] as int?,
    inventoryTypeIsProps: json['InventoryTypeIsProps'] as bool?,
    inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
    orderLocationId: json['OrderLocationId'] as String?,
    containerNumber: json['ContainerNumber'] as String?,
    isWardrobe: json['IsWardrobe'] as bool?,
    isProps: json['IsProps'] as bool?,
    dailyRate: (json['DailyRate'] as num?)?.toDouble(),
    weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
    monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
    location: json['Location'] as String?,
    retiredReason: json['RetiredReason'] as String?,
    warrantyExpiration: json['WarrantyExpiration'] as String?,
    warrantyPeriod: json['WarrantyPeriod'] as int?,
    countryOfOriginId: json['CountryOfOriginId'] as String?,
    countryOfOrigin: json['CountryOfOrigin'] as String?,
    shelfLifeExpirationDate: json['ShelfLifeExpirationDate'] as String?,
    currentDealId: json['CurrentDealId'] as String?,
    currentDeal: json['CurrentDeal'] as String?,
    currentCustomerId: json['CurrentCustomerId'] as String?,
    currentCustomer: json['CurrentCustomer'] as String?,
    currentOrderId: json['CurrentOrderId'] as String?,
    currentOrderNumber: json['CurrentOrderNumber'] as String?,
    currentOrderType: json['CurrentOrderType'] as String?,
    currentOrderDescription: json['CurrentOrderDescription'] as String?,
    currentOrderDate: json['CurrentOrderDate'] as String?,
    currentOrderPickDate: json['CurrentOrderPickDate'] as String?,
    currentOrderFromDate: json['CurrentOrderFromDate'] as String?,
    currentOrderToDate: json['CurrentOrderToDate'] as String?,
    currentOrderAgent: json['CurrentOrderAgent'] as String?,
    lotNumber: json['LotNumber'] as String?,
    lastOrderId: json['LastOrderId'] as String?,
    lastOrderNumber: json['LastOrderNumber'] as String?,
    lastOrderDescription: json['LastOrderDescription'] as String?,
    lastDealId: json['LastDealId'] as String?,
    lastDeal: json['LastDeal'] as String?,
    lastDealNumber: json['LastDealNumber'] as String?,
    lastOutContractId: json['LastOutContractId'] as String?,
    lastOutContractNumber: json['LastOutContractNumber'] as String?,
    lastOutContractDate: json['LastOutContractDate'] as String?,
    lastOutUserId: json['LastOutUserId'] as String?,
    lastOutUserName: json['LastOutUserName'] as String?,
    lastInContractId: json['LastInContractId'] as String?,
    lastInContractNumber: json['LastInContractNumber'] as String?,
    lastInContractDate: json['LastInContractDate'] as String?,
    lastInUserId: json['LastInUserId'] as String?,
    lastInUserName: json['LastInUserName'] as String?,
    depreciationStartDate: json['DepreciationStartDate'] as String?,
    depreciationWarehouseId: json['DepreciationWarehouseId'] as String?,
    depreciationWarehouse: json['DepreciationWarehouse'] as String?,
    depreciationWarehouseCode: json['DepreciationWarehouseCode'] as String?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesInventoryAssetItemToJson(
        WebApiModulesInventoryAssetItem instance) =>
    <String, dynamic>{
      'ItemId': instance.itemId,
      'InventoryId': instance.inventoryId,
      'WarehouseId': instance.warehouseId,
      'ICode': instance.iCode,
      'Description': instance.description,
      'ItemDescription': instance.itemDescription,
      'TrackedBy': instance.trackedBy,
      'AvailableFor': instance.availableFor,
      'AvailableForDisplay': instance.availableForDisplay,
      'UnitValue': instance.unitValue,
      'ReplacementCost': instance.replacementCost,
      'Classification': instance.classification,
      'IsContainer': instance.isContainer,
      'ContainerId': instance.containerId,
      'ContainerInventoryId': instance.containerInventoryId,
      'ContainerICode': instance.containerICode,
      'ContainerDescription': instance.containerDescription,
      'ContainerPackingListBehavior': instance.containerPackingListBehavior,
      'ContainerStatus': instance.containerStatus,
      'ContainerStatusColor': instance.containerStatusColor,
      'ContainerItemId': instance.containerItemId,
      'ContainerStatusDate': instance.containerStatusDate,
      'FixedAsset': instance.fixedAsset,
      'Rank': instance.rank,
      'StatusType': instance.statusType,
      'StatusDate': instance.statusDate,
      'InventoryStatus': instance.inventoryStatus,
      'InventoryStatusId': instance.inventoryStatusId,
      'Color': instance.color,
      'TextColor': instance.textColor,
      'BarCode': instance.barCode,
      'BarCodeForScanning': instance.barCodeForScanning,
      'SerialNumber': instance.serialNumber,
      'RfId': instance.rfId,
      'OldBarCode': instance.oldBarCode,
      'OldSerialNumber': instance.oldSerialNumber,
      'OldRfid': instance.oldRfid,
      'ManufacturerPartNumber': instance.manufacturerPartNumber,
      'ManufactureDate': instance.manufactureDate,
      'TrackedByCode': instance.trackedByCode,
      'AvailOwnershipSort': instance.availOwnershipSort,
      'IsNegativeInventory': instance.isNegativeInventory,
      'InspectionNo': instance.inspectionNo,
      'InspectionVendorId': instance.inspectionVendorId,
      'InspectionVendor': instance.inspectionVendor,
      'ManufacturerModelNumber': instance.manufacturerModelNumber,
      'PurchaseId': instance.purchaseId,
      'AisleLocation': instance.aisleLocation,
      'ShelfLocation': instance.shelfLocation,
      'SpaceId': instance.spaceId,
      'BuildingRoom': instance.buildingRoom,
      'ItemNotes': instance.itemNotes,
      'PhysicalId': instance.physicalId,
      'PhysicalItemId': instance.physicalItemId,
      'PhysicalDate': instance.physicalDate,
      'PhysicalBy': instance.physicalBy,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'DealId': instance.dealId,
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'OrderDescription': instance.orderDescription,
      'CurrentLocation': instance.currentLocation,
      'InventoryTypeId': instance.inventoryTypeId,
      'InventoryType': instance.inventoryType,
      'InventoryTypeOrderBy': instance.inventoryTypeOrderBy,
      'CategoryId': instance.categoryId,
      'Category': instance.category,
      'CategoryOrderBy': instance.categoryOrderBy,
      'SubCategoryId': instance.subCategoryId,
      'SubCategory': instance.subCategory,
      'SubCategoryOrderBy': instance.subCategoryOrderBy,
      'Ownership': instance.ownership,
      'PurchaseVendorId': instance.purchaseVendorId,
      'PurchaseVendor': instance.purchaseVendor,
      'OutsidePurchaseOrderNumber': instance.outsidePurchaseOrderNumber,
      'PurchasePoId': instance.purchasePoId,
      'PurchaseDate': instance.purchaseDate,
      'ReceiveDate': instance.receiveDate,
      'ReceiveContractDate': instance.receiveContractDate,
      'PurchasePoNumber': instance.purchasePoNumber,
      'PurchaseCost': instance.purchaseCost,
      'InvoiceCost': instance.invoiceCost,
      'PurchaseInvoiceNumber': instance.purchaseInvoiceNumber,
      'PurchaseInvoiceDate': instance.purchaseInvoiceDate,
      'PurchaseCurrencyId': instance.purchaseCurrencyId,
      'PurchaseCurrencyCode': instance.purchaseCurrencyCode,
      'PurchaseCurrency': instance.purchaseCurrency,
      'PurchaseCurrencySymbol': instance.purchaseCurrencySymbol,
      'WarehouseCurrencyId': instance.warehouseCurrencyId,
      'WarehouseCurrencyCode': instance.warehouseCurrencyCode,
      'WarehouseCurrency': instance.warehouseCurrency,
      'WarehouseCurrencySymbol': instance.warehouseCurrencySymbol,
      'PurchaseCurrencyExchangeRate': instance.purchaseCurrencyExchangeRate,
      'UnitCost': instance.unitCost,
      'UnitCostWithTax': instance.unitCostWithTax,
      'UnitCostCurrencyConverted': instance.unitCostCurrencyConverted,
      'UnitCostWithTaxCurrencyConverted':
          instance.unitCostWithTaxCurrencyConverted,
      'OriginalEquipmentCost': instance.originalEquipmentCost,
      'Depreciation': instance.depreciation,
      'BookValue': instance.bookValue,
      'SalvageValue': instance.salvageValue,
      'ConsignorId': instance.consignorId,
      'Consignor': instance.consignor,
      'ConsignorAgreementId': instance.consignorAgreementId,
      'ConsignorAgreementNumber': instance.consignorAgreementNumber,
      'ManufacturerId': instance.manufacturerId,
      'Manufacturer': instance.manufacturer,
      'OriginalShowId': instance.originalShowId,
      'OriginalShow': instance.originalShow,
      'ConditionId': instance.conditionId,
      'Condition': instance.condition,
      'SurfaceId': instance.surfaceId,
      'Surface': instance.surface,
      'WallTypeId': instance.wallTypeId,
      'WallType': instance.wallType,
      'OpeningId': instance.openingId,
      'Opening': instance.opening,
      'ResponsiblePersonId': instance.responsiblePersonId,
      'ResponsiblePerson': instance.responsiblePerson,
      'BuyerId': instance.buyerId,
      'Buyer': instance.buyer,
      'ReceiptNumber': instance.receiptNumber,
      'DepreciationMonths': instance.depreciationMonths,
      'RepairId': instance.repairId,
      'RepairNumber': instance.repairNumber,
      'QcRequired': instance.qcRequired,
      'WidthFt': instance.widthFt,
      'WidthIn': instance.widthIn,
      'HeightFt': instance.heightFt,
      'HeightIn': instance.heightIn,
      'LengthFt': instance.lengthFt,
      'LengthIn': instance.lengthIn,
      'CurrentMeter': instance.currentMeter,
      'TrackAssetUsage': instance.trackAssetUsage,
      'TrackLampUsage': instance.trackLampUsage,
      'TrackStrikes': instance.trackStrikes,
      'TrackCandles': instance.trackCandles,
      'AssetHours': instance.assetHours,
      'LampCount': instance.lampCount,
      'LampHours1': instance.lampHours1,
      'LampHours2': instance.lampHours2,
      'LampHours3': instance.lampHours3,
      'LampHours4': instance.lampHours4,
      'Strikes': instance.strikes,
      'FootCandles': instance.footCandles,
      'MinimumFootCandles': instance.minimumFootCandles,
      'SoftwareVersion': instance.softwareVersion,
      'SoftwareEffectiveDate': instance.softwareEffectiveDate,
      'Pattern': instance.pattern,
      'Gender': instance.gender,
      'Label': instance.label,
      'Material': instance.material,
      'Period': instance.period,
      'CleaningFeeAmount': instance.cleaningFeeAmount,
      'WardrobeSize': instance.wardrobeSize,
      'WardrobePieceCount': instance.wardrobePieceCount,
      'InventoryTypeIsProps': instance.inventoryTypeIsProps,
      'InventoryTypeIsWardrobe': instance.inventoryTypeIsWardrobe,
      'OrderLocationId': instance.orderLocationId,
      'ContainerNumber': instance.containerNumber,
      'IsWardrobe': instance.isWardrobe,
      'IsProps': instance.isProps,
      'DailyRate': instance.dailyRate,
      'WeeklyRate': instance.weeklyRate,
      'MonthlyRate': instance.monthlyRate,
      'Location': instance.location,
      'RetiredReason': instance.retiredReason,
      'WarrantyExpiration': instance.warrantyExpiration,
      'WarrantyPeriod': instance.warrantyPeriod,
      'CountryOfOriginId': instance.countryOfOriginId,
      'CountryOfOrigin': instance.countryOfOrigin,
      'ShelfLifeExpirationDate': instance.shelfLifeExpirationDate,
      'CurrentDealId': instance.currentDealId,
      'CurrentDeal': instance.currentDeal,
      'CurrentCustomerId': instance.currentCustomerId,
      'CurrentCustomer': instance.currentCustomer,
      'CurrentOrderId': instance.currentOrderId,
      'CurrentOrderNumber': instance.currentOrderNumber,
      'CurrentOrderType': instance.currentOrderType,
      'CurrentOrderDescription': instance.currentOrderDescription,
      'CurrentOrderDate': instance.currentOrderDate,
      'CurrentOrderPickDate': instance.currentOrderPickDate,
      'CurrentOrderFromDate': instance.currentOrderFromDate,
      'CurrentOrderToDate': instance.currentOrderToDate,
      'CurrentOrderAgent': instance.currentOrderAgent,
      'LotNumber': instance.lotNumber,
      'LastOrderId': instance.lastOrderId,
      'LastOrderNumber': instance.lastOrderNumber,
      'LastOrderDescription': instance.lastOrderDescription,
      'LastDealId': instance.lastDealId,
      'LastDeal': instance.lastDeal,
      'LastDealNumber': instance.lastDealNumber,
      'LastOutContractId': instance.lastOutContractId,
      'LastOutContractNumber': instance.lastOutContractNumber,
      'LastOutContractDate': instance.lastOutContractDate,
      'LastOutUserId': instance.lastOutUserId,
      'LastOutUserName': instance.lastOutUserName,
      'LastInContractId': instance.lastInContractId,
      'LastInContractNumber': instance.lastInContractNumber,
      'LastInContractDate': instance.lastInContractDate,
      'LastInUserId': instance.lastInUserId,
      'LastInUserName': instance.lastInUserName,
      'DepreciationStartDate': instance.depreciationStartDate,
      'DepreciationWarehouseId': instance.depreciationWarehouseId,
      'DepreciationWarehouse': instance.depreciationWarehouse,
      'DepreciationWarehouseCode': instance.depreciationWarehouseCode,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventoryAssetItemByBarCodeResponse
    _$WebApiModulesInventoryAssetItemByBarCodeResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryAssetItemByBarCodeResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    item: json['Item'] == null
        ? null
        : WebApiModulesInventoryAssetItem.fromJson(
            json['Item'] as Map<String, dynamic>),
  );
}

Map<String, dynamic> _$WebApiModulesInventoryAssetItemByBarCodeResponseToJson(
        WebApiModulesInventoryAssetItemByBarCodeResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'Item': instance.item?.toJson(),
    };

WebApiModulesInventoryCompleteQcCompleteQcItemRequest
    _$WebApiModulesInventoryCompleteQcCompleteQcItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryCompleteQcCompleteQcItemRequest(
    code: json['Code'] as String?,
    qcAnyway: json['QcAnyway'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryCompleteQcCompleteQcItemRequestToJson(
            WebApiModulesInventoryCompleteQcCompleteQcItemRequest instance) =>
        <String, dynamic>{
          'Code': instance.code,
          'QcAnyway': instance.qcAnyway,
        };

WebApiModulesInventoryCompleteQcCompleteQcItemResponse
    _$WebApiModulesInventoryCompleteQcCompleteQcItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryCompleteQcCompleteQcItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    conditionId: json['ConditionId'] as String?,
    condition: json['Condition'] as String?,
    itemId: json['ItemId'] as String?,
    itemQcId: json['ItemQcId'] as String?,
    cannotQcItemBecauseOfStatus: json['CannotQcItemBecauseOfStatus'] as bool?,
    itemDoesNotNeedQc: json['ItemDoesNotNeedQc'] as bool?,
    showFootCandles: json['ShowFootCandles'] as bool?,
    requiredFootCandles: json['RequiredFootCandles'] as int?,
    showSoftwareVersion: json['ShowSoftwareVersion'] as bool?,
    requiredSoftwareVersion: json['RequiredSoftwareVersion'] as String?,
    showAssetUsage: json['ShowAssetUsage'] as bool?,
    showLampUsage: json['ShowLampUsage'] as bool?,
    showStrikes: json['ShowStrikes'] as bool?,
    lampCount: json['LampCount'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryCompleteQcCompleteQcItemResponseToJson(
            WebApiModulesInventoryCompleteQcCompleteQcItemResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'ConditionId': instance.conditionId,
          'Condition': instance.condition,
          'ItemId': instance.itemId,
          'ItemQcId': instance.itemQcId,
          'CannotQcItemBecauseOfStatus': instance.cannotQcItemBecauseOfStatus,
          'ItemDoesNotNeedQc': instance.itemDoesNotNeedQc,
          'ShowFootCandles': instance.showFootCandles,
          'RequiredFootCandles': instance.requiredFootCandles,
          'ShowSoftwareVersion': instance.showSoftwareVersion,
          'RequiredSoftwareVersion': instance.requiredSoftwareVersion,
          'ShowAssetUsage': instance.showAssetUsage,
          'ShowLampUsage': instance.showLampUsage,
          'ShowStrikes': instance.showStrikes,
          'LampCount': instance.lampCount,
        };

WebApiModulesInventoryCompleteQcUpdateQcItemRequest
    _$WebApiModulesInventoryCompleteQcUpdateQcItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryCompleteQcUpdateQcItemRequest(
    itemId: json['ItemId'] as String?,
    itemQcId: json['ItemQcId'] as String?,
    conditionId: json['ConditionId'] as String?,
    currentFootCandles: json['CurrentFootCandles'] as String?,
    currentSoftwareVersion: json['CurrentSoftwareVersion'] as String?,
    softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
    note: json['Note'] as String?,
    assetHours: json['AssetHours'] as int?,
    strikes: json['Strikes'] as int?,
    lampHours1: json['LampHours1'] as int?,
    lampHours2: json['LampHours2'] as int?,
    lampHours3: json['LampHours3'] as int?,
    lampHours4: json['LampHours4'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryCompleteQcUpdateQcItemRequestToJson(
            WebApiModulesInventoryCompleteQcUpdateQcItemRequest instance) =>
        <String, dynamic>{
          'ItemId': instance.itemId,
          'ItemQcId': instance.itemQcId,
          'ConditionId': instance.conditionId,
          'CurrentFootCandles': instance.currentFootCandles,
          'CurrentSoftwareVersion': instance.currentSoftwareVersion,
          'SoftwareEffectiveDate': instance.softwareEffectiveDate,
          'Note': instance.note,
          'AssetHours': instance.assetHours,
          'Strikes': instance.strikes,
          'LampHours1': instance.lampHours1,
          'LampHours2': instance.lampHours2,
          'LampHours3': instance.lampHours3,
          'LampHours4': instance.lampHours4,
        };

WebApiModulesInventoryCompleteQcUpdateQcItemResponse
    _$WebApiModulesInventoryCompleteQcUpdateQcItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryCompleteQcUpdateQcItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryCompleteQcUpdateQcItemResponseToJson(
            WebApiModulesInventoryCompleteQcUpdateQcItemResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesInventoryInventoryCopyInventoryRequest
    _$WebApiModulesInventoryInventoryCopyInventoryRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryInventoryCopyInventoryRequest(
    inventoryId: json['InventoryId'] as String?,
    newICode: json['NewICode'] as String?,
    newDescription: json['NewDescription'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryInventoryCopyInventoryRequestToJson(
            WebApiModulesInventoryInventoryCopyInventoryRequest instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'NewICode': instance.newICode,
          'NewDescription': instance.newDescription,
        };

WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageRequest
    _$WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageRequest(
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    isWarehouseSpecific: json['IsWarehouseSpecific'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageRequestToJson(
            WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'WarehouseId': instance.warehouseId,
          'IsWarehouseSpecific': instance.isWarehouseSpecific,
        };

WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageResponse
    _$WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageResponseToJson(
            WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesRequest
    _$WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesRequest(
    inventoryId: json['InventoryId'] as String?,
    qcRequired: json['QcRequired'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesRequestToJson(
            WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'QcRequired': instance.qcRequired,
        };

WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesResponse
    _$WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesResponseToJson(
            WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesInventoryPartsInventoryPartsInventory
    _$WebApiModulesInventoryPartsInventoryPartsInventoryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPartsInventoryPartsInventory(
    price: (json['Price'] as num?)?.toDouble(),
    defaultCost: (json['DefaultCost'] as num?)?.toDouble(),
    averageCost: (json['AverageCost'] as num?)?.toDouble(),
    inventoryId: json['InventoryId'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    availableFrom: json['AvailableFrom'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    confirmTrackedBy: json['ConfirmTrackedBy'] as String?,
    rank: json['Rank'] as String?,
    manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
    manufacturerId: json['ManufacturerId'] as String?,
    manufacturer: json['Manufacturer'] as String?,
    manufacturerUrl: json['ManufacturerUrl'] as String?,
    excludeImageFromQuoteOrderPrint:
        json['ExcludeImageFromQuoteOrderPrint'] as bool?,
    noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
    availabilityManuallyResolveConflicts:
        json['AvailabilityManuallyResolveConflicts'] as bool?,
    sendAvailabilityAlert: json['SendAvailabilityAlert'] as bool?,
    primaryDimensionUniqueId: json['PrimaryDimensionUniqueId'] as String?,
    defaultImperialMetric: json['DefaultImperialMetric'] as String?,
    primaryDimensionDescription: json['PrimaryDimensionDescription'] as String?,
    primaryDimensionShipWeightLbs:
        json['PrimaryDimensionShipWeightLbs'] as int?,
    primaryDimensionShipWeightOz: json['PrimaryDimensionShipWeightOz'] as int?,
    primaryDimensionWeightInCaseLbs:
        json['PrimaryDimensionWeightInCaseLbs'] as int?,
    primaryDimensionWeightInCaseOz:
        json['PrimaryDimensionWeightInCaseOz'] as int?,
    primaryDimensionWidthFt: json['PrimaryDimensionWidthFt'] as int?,
    primaryDimensionWidthIn: json['PrimaryDimensionWidthIn'] as int?,
    primaryDimensionHeightFt: json['PrimaryDimensionHeightFt'] as int?,
    primaryDimensionHeightIn: json['PrimaryDimensionHeightIn'] as int?,
    primaryDimensionLengthFt: json['PrimaryDimensionLengthFt'] as int?,
    primaryDimensionLengthIn: json['PrimaryDimensionLengthIn'] as int?,
    primaryDimensionShipWeightKg: json['PrimaryDimensionShipWeightKg'] as int?,
    primaryDimensionShipWeightG: json['PrimaryDimensionShipWeightG'] as int?,
    primaryDimensionWeightInCaseKg:
        json['PrimaryDimensionWeightInCaseKg'] as int?,
    primaryDimensionWeightInCaseG:
        json['PrimaryDimensionWeightInCaseG'] as int?,
    primaryDimensionWidthM: json['PrimaryDimensionWidthM'] as int?,
    primaryDimensionWidthCm: json['PrimaryDimensionWidthCm'] as int?,
    primaryDimensionHeightM: json['PrimaryDimensionHeightM'] as int?,
    primaryDimensionHeightCm: json['PrimaryDimensionHeightCm'] as int?,
    primaryDimensionLengthM: json['PrimaryDimensionLengthM'] as int?,
    primaryDimensionLengthCm: json['PrimaryDimensionLengthCm'] as int?,
    hasSecondaryDimensions: json['HasSecondaryDimensions'] as bool?,
    secondaryDimensionUniqueId: json['SecondaryDimensionUniqueId'] as String?,
    secondaryDimensionDescription:
        json['SecondaryDimensionDescription'] as String?,
    secondaryDimensionShipWeightLbs:
        json['SecondaryDimensionShipWeightLbs'] as int?,
    secondaryDimensionShipWeightOz:
        json['SecondaryDimensionShipWeightOz'] as int?,
    secondaryDimensionWeightInCaseLbs:
        json['SecondaryDimensionWeightInCaseLbs'] as int?,
    secondaryDimensionWeightInCaseOz:
        json['SecondaryDimensionWeightInCaseOz'] as int?,
    secondaryDimensionWidthFt: json['SecondaryDimensionWidthFt'] as int?,
    secondaryDimensionWidthIn: json['SecondaryDimensionWidthIn'] as int?,
    secondaryDimensionHeightFt: json['SecondaryDimensionHeightFt'] as int?,
    secondaryDimensionHeightIn: json['SecondaryDimensionHeightIn'] as int?,
    secondaryDimensionLengthFt: json['SecondaryDimensionLengthFt'] as int?,
    secondaryDimensionLengthIn: json['SecondaryDimensionLengthIn'] as int?,
    secondaryDimensionShipWeightKg:
        json['SecondaryDimensionShipWeightKg'] as int?,
    secondaryDimensionShipWeightG:
        json['SecondaryDimensionShipWeightG'] as int?,
    secondaryDimensionWeightInCaseKg:
        json['SecondaryDimensionWeightInCaseKg'] as int?,
    secondaryDimensionWeightInCaseG:
        json['SecondaryDimensionWeightInCaseG'] as int?,
    secondaryDimensionWidthM: json['SecondaryDimensionWidthM'] as int?,
    secondaryDimensionWidthCm: json['SecondaryDimensionWidthCm'] as int?,
    secondaryDimensionHeightM: json['SecondaryDimensionHeightM'] as int?,
    secondaryDimensionHeightCm: json['SecondaryDimensionHeightCm'] as int?,
    secondaryDimensionLengthM: json['SecondaryDimensionLengthM'] as int?,
    secondaryDimensionLengthCm: json['SecondaryDimensionLengthCm'] as int?,
    countryOfOriginId: json['CountryOfOriginId'] as String?,
    countryOfOrigin: json['CountryOfOrigin'] as String?,
    displayInSummaryModeWhenRateIsZero:
        json['DisplayInSummaryModeWhenRateIsZero'] as bool?,
    qcRequired: json['QcRequired'] as bool?,
    qcTime: json['QcTime'] as String?,
    copyAttributesAsNote: json['CopyAttributesAsNote'] as bool?,
    trackAssetUsage: json['TrackAssetUsage'] as bool?,
    trackLampUsage: json['TrackLampUsage'] as bool?,
    trackStrikes: json['TrackStrikes'] as bool?,
    trackCandles: json['TrackCandles'] as bool?,
    lampCount: json['LampCount'] as int?,
    minimumFootCandles: json['MinimumFootCandles'] as int?,
    trackSoftware: json['TrackSoftware'] as bool?,
    softwareVersion: json['SoftwareVersion'] as String?,
    softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
    warehouseSpecificPackage: json['WarehouseSpecificPackage'] as bool?,
    completePackagePrice: json['CompletePackagePrice'] as String?,
    kitPackagePrice: json['KitPackagePrice'] as String?,
    separatePackageOnQuoteOrder: json['SeparatePackageOnQuoteOrder'] as bool?,
    containerId: json['ContainerId'] as String?,
    containerScannableInventoryId:
        json['ContainerScannableInventoryId'] as String?,
    containerScannableICode: json['ContainerScannableICode'] as String?,
    containerScannableDescription:
        json['ContainerScannableDescription'] as String?,
    automaticallyRebuildContainerAtCheckIn:
        json['AutomaticallyRebuildContainerAtCheckIn'] as bool?,
    automaticallyRebuildContainerAtTransferIn:
        json['AutomaticallyRebuildContainerAtTransferIn'] as bool?,
    containerStagingRule: json['ContainerStagingRule'] as String?,
    excludeContainedItemsFromAvailability:
        json['ExcludeContainedItemsFromAvailability'] as bool?,
    useContainerNumber: json['UseContainerNumber'] as bool?,
    containerPackingListBehavior:
        json['ContainerPackingListBehavior'] as String?,
    inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
    inventoryTypeIsSets: json['InventoryTypeIsSets'] as bool?,
    patternId: json['PatternId'] as String?,
    pattern: json['Pattern'] as String?,
    periodId: json['PeriodId'] as String?,
    period: json['Period'] as String?,
    materialId: json['MaterialId'] as String?,
    material: json['Material'] as String?,
    genderId: json['GenderId'] as String?,
    gender: json['Gender'] as String?,
    labelId: json['LabelId'] as String?,
    label: json['Label'] as String?,
    wardrobeSize: json['WardrobeSize'] as String?,
    wardrobePieceCount: json['WardrobePieceCount'] as int?,
    dyed: json['Dyed'] as bool?,
    wardrobeSourceId: json['WardrobeSourceId'] as String?,
    wardrobeSource: json['WardrobeSource'] as String?,
    wardrobeCareId: json['WardrobeCareId'] as String?,
    wardrobeCare: json['WardrobeCare'] as String?,
    cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
    wardrobeDetailedDescription: json['WardrobeDetailedDescription'] as String?,
    webDetailedDescription: json['WebDetailedDescription'] as String?,
    overrideSystemDefaultRevenueAllocationBehavior:
        json['OverrideSystemDefaultRevenueAllocationBehavior'] as bool?,
    allocateRevenueForAccessories:
        json['AllocateRevenueForAccessories'] as bool?,
    packageRevenueCalculationFormula:
        json['PackageRevenueCalculationFormula'] as String?,
    isHazardousMaterial: json['IsHazardousMaterial'] as bool?,
    descriptionWithAkas: json['DescriptionWithAkas'] as String?,
    costCalculation: json['CostCalculation'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    taxable: json['Taxable'] as bool?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    availFor: json['AvailFor'] as String?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    subCategoryCount: json['SubCategoryCount'] as int?,
    subCategoryId: json['SubCategoryId'] as String?,
    subCategory: json['SubCategory'] as String?,
    classification: json['Classification'] as String?,
    classificationDescription: json['ClassificationDescription'] as String?,
    classificationColor: json['ClassificationColor'] as String?,
    unitId: json['UnitId'] as String?,
    unit: json['Unit'] as String?,
    unitType: json['UnitType'] as String?,
    nonDiscountable: json['NonDiscountable'] as bool?,
    overrideProfitAndLossCategory:
        json['OverrideProfitAndLossCategory'] as bool?,
    profitAndLossCategoryId: json['ProfitAndLossCategoryId'] as String?,
    profitAndLossCategory: json['ProfitAndLossCategory'] as String?,
    autoCopyNotesToQuoteOrder: json['AutoCopyNotesToQuoteOrder'] as bool?,
    note: json['Note'] as String?,
    printNoteOnInContract: json['PrintNoteOnInContract'] as bool?,
    printNoteOnOutContract: json['PrintNoteOnOutContract'] as bool?,
    printNoteOnReceiveContract: json['PrintNoteOnReceiveContract'] as bool?,
    printNoteOnReturnContract: json['PrintNoteOnReturnContract'] as bool?,
    printNoteOnInvoice: json['PrintNoteOnInvoice'] as bool?,
    printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
    printNoteOnPickList: json['PrintNoteOnPickList'] as bool?,
    printNoteOnPO: json['PrintNoteOnPO'] as bool?,
    printNoteOnQuote: json['PrintNoteOnQuote'] as bool?,
    printNoteOnReturnList: json['PrintNoteOnReturnList'] as bool?,
    printNoteOnPoReceiveList: json['PrintNoteOnPoReceiveList'] as bool?,
    printNoteOnPoReturnList: json['PrintNoteOnPoReturnList'] as bool?,
    assetAccountId: json['AssetAccountId'] as String?,
    assetAccountNo: json['AssetAccountNo'] as String?,
    assetAccountDescription: json['AssetAccountDescription'] as String?,
    incomeAccountId: json['IncomeAccountId'] as String?,
    incomeAccountNo: json['IncomeAccountNo'] as String?,
    incomeAccountDescription: json['IncomeAccountDescription'] as String?,
    subIncomeAccountId: json['SubIncomeAccountId'] as String?,
    subIncomeAccountNo: json['SubIncomeAccountNo'] as String?,
    subIncomeAccountDescription: json['SubIncomeAccountDescription'] as String?,
    consignmentIncomeAccountId: json['ConsignmentIncomeAccountId'] as String?,
    consignmentIncomeAccountNo: json['ConsignmentIncomeAccountNo'] as String?,
    consignmentIncomeAccountDescription:
        json['ConsignmentIncomeAccountDescription'] as String?,
    ldIncomeAccountId: json['LdIncomeAccountId'] as String?,
    ldIncomeAccountNo: json['LdIncomeAccountNo'] as String?,
    ldIncomeAccountDescription: json['LdIncomeAccountDescription'] as String?,
    equipmentSaleIncomeAccountId:
        json['EquipmentSaleIncomeAccountId'] as String?,
    equipmentSaleIncomeAccountNo:
        json['EquipmentSaleIncomeAccountNo'] as String?,
    equipmentSaleIncomeAccountDescription:
        json['EquipmentSaleIncomeAccountDescription'] as String?,
    expenseAccountId: json['ExpenseAccountId'] as String?,
    expenseAccountNo: json['ExpenseAccountNo'] as String?,
    expenseAccountDescription: json['ExpenseAccountDescription'] as String?,
    costOfGoodsSoldExpenseAccountId:
        json['CostOfGoodsSoldExpenseAccountId'] as String?,
    costOfGoodsSoldExpenseAccountNo:
        json['CostOfGoodsSoldExpenseAccountNo'] as String?,
    costOfGoodsSoldExpenseAccountDescription:
        json['CostOfGoodsSoldExpenseAccountDescription'] as String?,
    costOfGoodsRentedExpenseAccountId:
        json['CostOfGoodsRentedExpenseAccountId'] as String?,
    costOfGoodsRentedExpenseAccountNo:
        json['CostOfGoodsRentedExpenseAccountNo'] as String?,
    costOfGoodsRentedExpenseAccountDescription:
        json['CostOfGoodsRentedExpenseAccountDescription'] as String?,
    depreciationExpenseAccountId:
        json['DepreciationExpenseAccountId'] as String?,
    depreciationExpenseAccountNo:
        json['DepreciationExpenseAccountNo'] as String?,
    depreciationExpenseAccountDescription:
        json['DepreciationExpenseAccountDescription'] as String?,
    accumulatedDepreciationExpenseAccountId:
        json['AccumulatedDepreciationExpenseAccountId'] as String?,
    accumulatedDepreciationExpenseAccountNo:
        json['AccumulatedDepreciationExpenseAccountNo'] as String?,
    accumulatedDepreciationExpenseAccountDescription:
        json['AccumulatedDepreciationExpenseAccountDescription'] as String?,
    originalShowId: json['OriginalShowId'] as String?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    manifestShippingContainer: json['ManifestShippingContainer'] as bool?,
    manifestStandAloneItem: json['ManifestStandAloneItem'] as bool?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesInventoryPartsInventoryPartsInventoryToJson(
        WebApiModulesInventoryPartsInventoryPartsInventory instance) =>
    <String, dynamic>{
      'Price': instance.price,
      'DefaultCost': instance.defaultCost,
      'AverageCost': instance.averageCost,
      'InventoryId': instance.inventoryId,
      'InventoryTypeId': instance.inventoryTypeId,
      'InventoryType': instance.inventoryType,
      'AvailableFrom': instance.availableFrom,
      'TrackedBy': instance.trackedBy,
      'ConfirmTrackedBy': instance.confirmTrackedBy,
      'Rank': instance.rank,
      'ManufacturerPartNumber': instance.manufacturerPartNumber,
      'ManufacturerId': instance.manufacturerId,
      'Manufacturer': instance.manufacturer,
      'ManufacturerUrl': instance.manufacturerUrl,
      'ExcludeImageFromQuoteOrderPrint':
          instance.excludeImageFromQuoteOrderPrint,
      'NoAvailabilityCheck': instance.noAvailabilityCheck,
      'AvailabilityManuallyResolveConflicts':
          instance.availabilityManuallyResolveConflicts,
      'SendAvailabilityAlert': instance.sendAvailabilityAlert,
      'PrimaryDimensionUniqueId': instance.primaryDimensionUniqueId,
      'DefaultImperialMetric': instance.defaultImperialMetric,
      'PrimaryDimensionDescription': instance.primaryDimensionDescription,
      'PrimaryDimensionShipWeightLbs': instance.primaryDimensionShipWeightLbs,
      'PrimaryDimensionShipWeightOz': instance.primaryDimensionShipWeightOz,
      'PrimaryDimensionWeightInCaseLbs':
          instance.primaryDimensionWeightInCaseLbs,
      'PrimaryDimensionWeightInCaseOz': instance.primaryDimensionWeightInCaseOz,
      'PrimaryDimensionWidthFt': instance.primaryDimensionWidthFt,
      'PrimaryDimensionWidthIn': instance.primaryDimensionWidthIn,
      'PrimaryDimensionHeightFt': instance.primaryDimensionHeightFt,
      'PrimaryDimensionHeightIn': instance.primaryDimensionHeightIn,
      'PrimaryDimensionLengthFt': instance.primaryDimensionLengthFt,
      'PrimaryDimensionLengthIn': instance.primaryDimensionLengthIn,
      'PrimaryDimensionShipWeightKg': instance.primaryDimensionShipWeightKg,
      'PrimaryDimensionShipWeightG': instance.primaryDimensionShipWeightG,
      'PrimaryDimensionWeightInCaseKg': instance.primaryDimensionWeightInCaseKg,
      'PrimaryDimensionWeightInCaseG': instance.primaryDimensionWeightInCaseG,
      'PrimaryDimensionWidthM': instance.primaryDimensionWidthM,
      'PrimaryDimensionWidthCm': instance.primaryDimensionWidthCm,
      'PrimaryDimensionHeightM': instance.primaryDimensionHeightM,
      'PrimaryDimensionHeightCm': instance.primaryDimensionHeightCm,
      'PrimaryDimensionLengthM': instance.primaryDimensionLengthM,
      'PrimaryDimensionLengthCm': instance.primaryDimensionLengthCm,
      'HasSecondaryDimensions': instance.hasSecondaryDimensions,
      'SecondaryDimensionUniqueId': instance.secondaryDimensionUniqueId,
      'SecondaryDimensionDescription': instance.secondaryDimensionDescription,
      'SecondaryDimensionShipWeightLbs':
          instance.secondaryDimensionShipWeightLbs,
      'SecondaryDimensionShipWeightOz': instance.secondaryDimensionShipWeightOz,
      'SecondaryDimensionWeightInCaseLbs':
          instance.secondaryDimensionWeightInCaseLbs,
      'SecondaryDimensionWeightInCaseOz':
          instance.secondaryDimensionWeightInCaseOz,
      'SecondaryDimensionWidthFt': instance.secondaryDimensionWidthFt,
      'SecondaryDimensionWidthIn': instance.secondaryDimensionWidthIn,
      'SecondaryDimensionHeightFt': instance.secondaryDimensionHeightFt,
      'SecondaryDimensionHeightIn': instance.secondaryDimensionHeightIn,
      'SecondaryDimensionLengthFt': instance.secondaryDimensionLengthFt,
      'SecondaryDimensionLengthIn': instance.secondaryDimensionLengthIn,
      'SecondaryDimensionShipWeightKg': instance.secondaryDimensionShipWeightKg,
      'SecondaryDimensionShipWeightG': instance.secondaryDimensionShipWeightG,
      'SecondaryDimensionWeightInCaseKg':
          instance.secondaryDimensionWeightInCaseKg,
      'SecondaryDimensionWeightInCaseG':
          instance.secondaryDimensionWeightInCaseG,
      'SecondaryDimensionWidthM': instance.secondaryDimensionWidthM,
      'SecondaryDimensionWidthCm': instance.secondaryDimensionWidthCm,
      'SecondaryDimensionHeightM': instance.secondaryDimensionHeightM,
      'SecondaryDimensionHeightCm': instance.secondaryDimensionHeightCm,
      'SecondaryDimensionLengthM': instance.secondaryDimensionLengthM,
      'SecondaryDimensionLengthCm': instance.secondaryDimensionLengthCm,
      'CountryOfOriginId': instance.countryOfOriginId,
      'CountryOfOrigin': instance.countryOfOrigin,
      'DisplayInSummaryModeWhenRateIsZero':
          instance.displayInSummaryModeWhenRateIsZero,
      'QcRequired': instance.qcRequired,
      'QcTime': instance.qcTime,
      'CopyAttributesAsNote': instance.copyAttributesAsNote,
      'TrackAssetUsage': instance.trackAssetUsage,
      'TrackLampUsage': instance.trackLampUsage,
      'TrackStrikes': instance.trackStrikes,
      'TrackCandles': instance.trackCandles,
      'LampCount': instance.lampCount,
      'MinimumFootCandles': instance.minimumFootCandles,
      'TrackSoftware': instance.trackSoftware,
      'SoftwareVersion': instance.softwareVersion,
      'SoftwareEffectiveDate': instance.softwareEffectiveDate,
      'WarehouseSpecificPackage': instance.warehouseSpecificPackage,
      'CompletePackagePrice': instance.completePackagePrice,
      'KitPackagePrice': instance.kitPackagePrice,
      'SeparatePackageOnQuoteOrder': instance.separatePackageOnQuoteOrder,
      'ContainerId': instance.containerId,
      'ContainerScannableInventoryId': instance.containerScannableInventoryId,
      'ContainerScannableICode': instance.containerScannableICode,
      'ContainerScannableDescription': instance.containerScannableDescription,
      'AutomaticallyRebuildContainerAtCheckIn':
          instance.automaticallyRebuildContainerAtCheckIn,
      'AutomaticallyRebuildContainerAtTransferIn':
          instance.automaticallyRebuildContainerAtTransferIn,
      'ContainerStagingRule': instance.containerStagingRule,
      'ExcludeContainedItemsFromAvailability':
          instance.excludeContainedItemsFromAvailability,
      'UseContainerNumber': instance.useContainerNumber,
      'ContainerPackingListBehavior': instance.containerPackingListBehavior,
      'InventoryTypeIsWardrobe': instance.inventoryTypeIsWardrobe,
      'InventoryTypeIsSets': instance.inventoryTypeIsSets,
      'PatternId': instance.patternId,
      'Pattern': instance.pattern,
      'PeriodId': instance.periodId,
      'Period': instance.period,
      'MaterialId': instance.materialId,
      'Material': instance.material,
      'GenderId': instance.genderId,
      'Gender': instance.gender,
      'LabelId': instance.labelId,
      'Label': instance.label,
      'WardrobeSize': instance.wardrobeSize,
      'WardrobePieceCount': instance.wardrobePieceCount,
      'Dyed': instance.dyed,
      'WardrobeSourceId': instance.wardrobeSourceId,
      'WardrobeSource': instance.wardrobeSource,
      'WardrobeCareId': instance.wardrobeCareId,
      'WardrobeCare': instance.wardrobeCare,
      'CleaningFeeAmount': instance.cleaningFeeAmount,
      'WardrobeDetailedDescription': instance.wardrobeDetailedDescription,
      'WebDetailedDescription': instance.webDetailedDescription,
      'OverrideSystemDefaultRevenueAllocationBehavior':
          instance.overrideSystemDefaultRevenueAllocationBehavior,
      'AllocateRevenueForAccessories': instance.allocateRevenueForAccessories,
      'PackageRevenueCalculationFormula':
          instance.packageRevenueCalculationFormula,
      'IsHazardousMaterial': instance.isHazardousMaterial,
      'DescriptionWithAkas': instance.descriptionWithAkas,
      'CostCalculation': instance.costCalculation,
      'Quantity': instance.quantity,
      'AisleLocation': instance.aisleLocation,
      'ShelfLocation': instance.shelfLocation,
      'Taxable': instance.taxable,
      'ICode': instance.iCode,
      'Description': instance.description,
      'AvailFor': instance.availFor,
      'CategoryId': instance.categoryId,
      'Category': instance.category,
      'SubCategoryCount': instance.subCategoryCount,
      'SubCategoryId': instance.subCategoryId,
      'SubCategory': instance.subCategory,
      'Classification': instance.classification,
      'ClassificationDescription': instance.classificationDescription,
      'ClassificationColor': instance.classificationColor,
      'UnitId': instance.unitId,
      'Unit': instance.unit,
      'UnitType': instance.unitType,
      'NonDiscountable': instance.nonDiscountable,
      'OverrideProfitAndLossCategory': instance.overrideProfitAndLossCategory,
      'ProfitAndLossCategoryId': instance.profitAndLossCategoryId,
      'ProfitAndLossCategory': instance.profitAndLossCategory,
      'AutoCopyNotesToQuoteOrder': instance.autoCopyNotesToQuoteOrder,
      'Note': instance.note,
      'PrintNoteOnInContract': instance.printNoteOnInContract,
      'PrintNoteOnOutContract': instance.printNoteOnOutContract,
      'PrintNoteOnReceiveContract': instance.printNoteOnReceiveContract,
      'PrintNoteOnReturnContract': instance.printNoteOnReturnContract,
      'PrintNoteOnInvoice': instance.printNoteOnInvoice,
      'PrintNoteOnOrder': instance.printNoteOnOrder,
      'PrintNoteOnPickList': instance.printNoteOnPickList,
      'PrintNoteOnPO': instance.printNoteOnPO,
      'PrintNoteOnQuote': instance.printNoteOnQuote,
      'PrintNoteOnReturnList': instance.printNoteOnReturnList,
      'PrintNoteOnPoReceiveList': instance.printNoteOnPoReceiveList,
      'PrintNoteOnPoReturnList': instance.printNoteOnPoReturnList,
      'AssetAccountId': instance.assetAccountId,
      'AssetAccountNo': instance.assetAccountNo,
      'AssetAccountDescription': instance.assetAccountDescription,
      'IncomeAccountId': instance.incomeAccountId,
      'IncomeAccountNo': instance.incomeAccountNo,
      'IncomeAccountDescription': instance.incomeAccountDescription,
      'SubIncomeAccountId': instance.subIncomeAccountId,
      'SubIncomeAccountNo': instance.subIncomeAccountNo,
      'SubIncomeAccountDescription': instance.subIncomeAccountDescription,
      'ConsignmentIncomeAccountId': instance.consignmentIncomeAccountId,
      'ConsignmentIncomeAccountNo': instance.consignmentIncomeAccountNo,
      'ConsignmentIncomeAccountDescription':
          instance.consignmentIncomeAccountDescription,
      'LdIncomeAccountId': instance.ldIncomeAccountId,
      'LdIncomeAccountNo': instance.ldIncomeAccountNo,
      'LdIncomeAccountDescription': instance.ldIncomeAccountDescription,
      'EquipmentSaleIncomeAccountId': instance.equipmentSaleIncomeAccountId,
      'EquipmentSaleIncomeAccountNo': instance.equipmentSaleIncomeAccountNo,
      'EquipmentSaleIncomeAccountDescription':
          instance.equipmentSaleIncomeAccountDescription,
      'ExpenseAccountId': instance.expenseAccountId,
      'ExpenseAccountNo': instance.expenseAccountNo,
      'ExpenseAccountDescription': instance.expenseAccountDescription,
      'CostOfGoodsSoldExpenseAccountId':
          instance.costOfGoodsSoldExpenseAccountId,
      'CostOfGoodsSoldExpenseAccountNo':
          instance.costOfGoodsSoldExpenseAccountNo,
      'CostOfGoodsSoldExpenseAccountDescription':
          instance.costOfGoodsSoldExpenseAccountDescription,
      'CostOfGoodsRentedExpenseAccountId':
          instance.costOfGoodsRentedExpenseAccountId,
      'CostOfGoodsRentedExpenseAccountNo':
          instance.costOfGoodsRentedExpenseAccountNo,
      'CostOfGoodsRentedExpenseAccountDescription':
          instance.costOfGoodsRentedExpenseAccountDescription,
      'DepreciationExpenseAccountId': instance.depreciationExpenseAccountId,
      'DepreciationExpenseAccountNo': instance.depreciationExpenseAccountNo,
      'DepreciationExpenseAccountDescription':
          instance.depreciationExpenseAccountDescription,
      'AccumulatedDepreciationExpenseAccountId':
          instance.accumulatedDepreciationExpenseAccountId,
      'AccumulatedDepreciationExpenseAccountNo':
          instance.accumulatedDepreciationExpenseAccountNo,
      'AccumulatedDepreciationExpenseAccountDescription':
          instance.accumulatedDepreciationExpenseAccountDescription,
      'OriginalShowId': instance.originalShowId,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'ManifestShippingContainer': instance.manifestShippingContainer,
      'ManifestStandAloneItem': instance.manifestStandAloneItem,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventoryPartsInventoryPartsInventoryDocument
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPartsInventoryPartsInventoryDocument(
    inventoryId: json['InventoryId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentToJson(
        WebApiModulesInventoryPartsInventoryPartsInventoryDocument instance) =>
    <String, dynamic>{
      'InventoryId': instance.inventoryId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPostRequest
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPostRequest(
    inventoryId: json['InventoryId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPostRequestToJson(
            WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPostRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPutRequest
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPutRequest(
    inventoryId: json['InventoryId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPutRequestToJson(
            WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPutRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'DocumentId': instance.documentId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventory
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventory(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    officeLocationCode: json['OfficeLocationCode'] as String?,
    dealId: json['DealId'] as String?,
    scheduleDate: json['ScheduleDate'] as String?,
    preScanDateTime: json['PreScanDateTime'] as String?,
    initiateDateTime: json['InitiateDateTime'] as String?,
    physicalInventoryNumber: json['PhysicalInventoryNumber'] as String?,
    description: json['Description'] as String?,
    countType: json['CountType'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    subCategoryId: json['SubCategoryId'] as String?,
    subCategory: json['SubCategory'] as String?,
    recType: json['RecType'] as String?,
    recTypeDisplay: json['RecTypeDisplay'] as String?,
    rank: json['Rank'] as String?,
    cycleRankA: json['CycleRankA'] as bool?,
    cycleRankB: json['CycleRankB'] as bool?,
    cycleRankC: json['CycleRankC'] as bool?,
    cycleRankD: json['CycleRankD'] as bool?,
    cycleRankE: json['CycleRankE'] as bool?,
    cycleRankF: json['CycleRankF'] as bool?,
    cycleRankG: json['CycleRankG'] as bool?,
    aFromValue: (json['AFromValue'] as num?)?.toDouble(),
    aToValue: (json['AToValue'] as num?)?.toDouble(),
    bFromValue: (json['BFromValue'] as num?)?.toDouble(),
    bToValue: (json['BToValue'] as num?)?.toDouble(),
    cFromValue: (json['CFromValue'] as num?)?.toDouble(),
    cToValue: (json['CToValue'] as num?)?.toDouble(),
    dFromValue: (json['DFromValue'] as num?)?.toDouble(),
    dToValue: (json['DToValue'] as num?)?.toDouble(),
    eFromValue: (json['EFromValue'] as num?)?.toDouble(),
    eToValue: (json['EToValue'] as num?)?.toDouble(),
    fFromValue: (json['FFromValue'] as num?)?.toDouble(),
    fToValue: (json['FToValue'] as num?)?.toDouble(),
    gFromValue: (json['GFromValue'] as num?)?.toDouble(),
    gToValue: (json['GToValue'] as num?)?.toDouble(),
    stepPreScan: json['StepPreScan'] as int?,
    allowStepPreScan: json['AllowStepPreScan'] as bool?,
    stepInitiate: json['StepInitiate'] as int?,
    allowStepInitiate: json['AllowStepInitiate'] as bool?,
    stepPrintCountSheets: json['StepPrintCountSheets'] as int?,
    allowStepPrintCountSheets: json['AllowStepPrintCountSheets'] as bool?,
    allowStepPrintPrescanProgress:
        json['AllowStepPrintPrescanProgress'] as bool?,
    stepCount: json['StepCount'] as int?,
    allowStepCount: json['AllowStepCount'] as bool?,
    stepPrintExceptionReport: json['StepPrintExceptionReport'] as int?,
    allowStepPrintExceptionReport:
        json['AllowStepPrintExceptionReport'] as bool?,
    stepPrintDiscrepancyReport: json['StepPrintDiscrepancyReport'] as int?,
    allowStepPrintDiscrepancyReport:
        json['AllowStepPrintDiscrepancyReport'] as bool?,
    stepRecount: json['StepRecount'] as int?,
    allowStepRecount: json['AllowStepRecount'] as bool?,
    stepPrintRecountAnalysisReport:
        json['StepPrintRecountAnalysisReport'] as int?,
    allowStepPrintRecountAnalysisReport:
        json['AllowStepPrintRecountAnalysisReport'] as bool?,
    stepPrintReconciliationReport:
        json['StepPrintReconciliationReport'] as int?,
    allowStepPrintReconciliationReport:
        json['AllowStepPrintReconciliationReport'] as bool?,
    stepItemsAdded: json['StepItemsAdded'] as int?,
    allowStepItemsAdded: json['AllowStepItemsAdded'] as bool?,
    stepApproveCounts: json['StepApproveCounts'] as int?,
    allowStepApproveCounts: json['AllowStepApproveCounts'] as bool?,
    stepClose: json['StepClose'] as int?,
    allowStepClose: json['AllowStepClose'] as bool?,
    stepCloseWithoutAdjustments: json['StepCloseWithoutAdjustments'] as int?,
    allowStepCloseWithoutAdjustments:
        json['AllowStepCloseWithoutAdjustments'] as bool?,
    closedWithAdjustments: json['ClosedWithAdjustments'] as bool?,
    closedWithOutAdjustments: json['ClosedWithOutAdjustments'] as bool?,
    allowStepPrintResults: json['AllowStepPrintResults'] as bool?,
    status: json['Status'] as String?,
    cycleLastCounted: json['CycleLastCounted'] as String?,
    cycleTrackedBy: json['CycleTrackedBy'] as String?,
    cycleAisle: json['CycleAisle'] as String?,
    cycleShelf: json['CycleShelf'] as String?,
    cycleOnlyIncludeInventoryWithNonZeroQuantity:
        json['CycleOnlyIncludeInventoryWithNonZeroQuantity'] as bool?,
    approvedPurchaseCost: json['ApprovedPurchaseCost'] as bool?,
    countInventoryThatIsOut: json['CountInventoryThatIsOut'] as bool?,
    facilitiesInventory: json['FacilitiesInventory'] as bool?,
    presInitializeAutomaticallyCountInventoryThatIsOut:
        json['PresInitializeAutomaticallyCountInventoryThatIsOut'] as bool?,
    cycleIncludeOwned: json['CycleIncludeOwned'] as bool?,
    cycleIncludeConsigned: json['CycleIncludeConsigned'] as bool?,
    hideConsigned: json['HideConsigned'] as bool?,
    selectitemsbyNotUsed: json['Selectitemsby_not_used'] as bool?,
    excludeInventoryWithNoAvailabilityCheck:
        json['ExcludeInventoryWithNoAvailabilityCheck'] as bool?,
    approvedByUserId: json['ApprovedByUserId'] as String?,
    approvedByUser: json['ApprovedByUser'] as String?,
    approveDate: json['ApproveDate'] as String?,
    approveTime: json['ApproveTime'] as String?,
    inputByUserId: json['InputByUserId'] as String?,
    inputDate: json['InputDate'] as String?,
    inputTime: json['InputTime'] as String?,
    inactive: json['Inactive'] as bool?,
    replaceCounts: json['ReplaceCounts'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventory instance) =>
    <String, dynamic>{
      'PhysicalInventoryId': instance.physicalInventoryId,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'OfficeLocationCode': instance.officeLocationCode,
      'DealId': instance.dealId,
      'ScheduleDate': instance.scheduleDate,
      'PreScanDateTime': instance.preScanDateTime,
      'InitiateDateTime': instance.initiateDateTime,
      'PhysicalInventoryNumber': instance.physicalInventoryNumber,
      'Description': instance.description,
      'CountType': instance.countType,
      'WarehouseId': instance.warehouseId,
      'WarehouseCode': instance.warehouseCode,
      'Warehouse': instance.warehouse,
      'InventoryTypeId': instance.inventoryTypeId,
      'InventoryType': instance.inventoryType,
      'CategoryId': instance.categoryId,
      'Category': instance.category,
      'SubCategoryId': instance.subCategoryId,
      'SubCategory': instance.subCategory,
      'RecType': instance.recType,
      'RecTypeDisplay': instance.recTypeDisplay,
      'Rank': instance.rank,
      'CycleRankA': instance.cycleRankA,
      'CycleRankB': instance.cycleRankB,
      'CycleRankC': instance.cycleRankC,
      'CycleRankD': instance.cycleRankD,
      'CycleRankE': instance.cycleRankE,
      'CycleRankF': instance.cycleRankF,
      'CycleRankG': instance.cycleRankG,
      'AFromValue': instance.aFromValue,
      'AToValue': instance.aToValue,
      'BFromValue': instance.bFromValue,
      'BToValue': instance.bToValue,
      'CFromValue': instance.cFromValue,
      'CToValue': instance.cToValue,
      'DFromValue': instance.dFromValue,
      'DToValue': instance.dToValue,
      'EFromValue': instance.eFromValue,
      'EToValue': instance.eToValue,
      'FFromValue': instance.fFromValue,
      'FToValue': instance.fToValue,
      'GFromValue': instance.gFromValue,
      'GToValue': instance.gToValue,
      'StepPreScan': instance.stepPreScan,
      'AllowStepPreScan': instance.allowStepPreScan,
      'StepInitiate': instance.stepInitiate,
      'AllowStepInitiate': instance.allowStepInitiate,
      'StepPrintCountSheets': instance.stepPrintCountSheets,
      'AllowStepPrintCountSheets': instance.allowStepPrintCountSheets,
      'AllowStepPrintPrescanProgress': instance.allowStepPrintPrescanProgress,
      'StepCount': instance.stepCount,
      'AllowStepCount': instance.allowStepCount,
      'StepPrintExceptionReport': instance.stepPrintExceptionReport,
      'AllowStepPrintExceptionReport': instance.allowStepPrintExceptionReport,
      'StepPrintDiscrepancyReport': instance.stepPrintDiscrepancyReport,
      'AllowStepPrintDiscrepancyReport':
          instance.allowStepPrintDiscrepancyReport,
      'StepRecount': instance.stepRecount,
      'AllowStepRecount': instance.allowStepRecount,
      'StepPrintRecountAnalysisReport': instance.stepPrintRecountAnalysisReport,
      'AllowStepPrintRecountAnalysisReport':
          instance.allowStepPrintRecountAnalysisReport,
      'StepPrintReconciliationReport': instance.stepPrintReconciliationReport,
      'AllowStepPrintReconciliationReport':
          instance.allowStepPrintReconciliationReport,
      'StepItemsAdded': instance.stepItemsAdded,
      'AllowStepItemsAdded': instance.allowStepItemsAdded,
      'StepApproveCounts': instance.stepApproveCounts,
      'AllowStepApproveCounts': instance.allowStepApproveCounts,
      'StepClose': instance.stepClose,
      'AllowStepClose': instance.allowStepClose,
      'StepCloseWithoutAdjustments': instance.stepCloseWithoutAdjustments,
      'AllowStepCloseWithoutAdjustments':
          instance.allowStepCloseWithoutAdjustments,
      'ClosedWithAdjustments': instance.closedWithAdjustments,
      'ClosedWithOutAdjustments': instance.closedWithOutAdjustments,
      'AllowStepPrintResults': instance.allowStepPrintResults,
      'Status': instance.status,
      'CycleLastCounted': instance.cycleLastCounted,
      'CycleTrackedBy': instance.cycleTrackedBy,
      'CycleAisle': instance.cycleAisle,
      'CycleShelf': instance.cycleShelf,
      'CycleOnlyIncludeInventoryWithNonZeroQuantity':
          instance.cycleOnlyIncludeInventoryWithNonZeroQuantity,
      'ApprovedPurchaseCost': instance.approvedPurchaseCost,
      'CountInventoryThatIsOut': instance.countInventoryThatIsOut,
      'FacilitiesInventory': instance.facilitiesInventory,
      'PresInitializeAutomaticallyCountInventoryThatIsOut':
          instance.presInitializeAutomaticallyCountInventoryThatIsOut,
      'CycleIncludeOwned': instance.cycleIncludeOwned,
      'CycleIncludeConsigned': instance.cycleIncludeConsigned,
      'HideConsigned': instance.hideConsigned,
      'Selectitemsby_not_used': instance.selectitemsbyNotUsed,
      'ExcludeInventoryWithNoAvailabilityCheck':
          instance.excludeInventoryWithNoAvailabilityCheck,
      'ApprovedByUserId': instance.approvedByUserId,
      'ApprovedByUser': instance.approvedByUser,
      'ApproveDate': instance.approveDate,
      'ApproveTime': instance.approveTime,
      'InputByUserId': instance.inputByUserId,
      'InputDate': instance.inputDate,
      'InputTime': instance.inputTime,
      'Inactive': instance.inactive,
      'ReplaceCounts': instance.replaceCounts,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostRequest(
    isGetValueOnly: json['IsGetValueOnly'] as bool?,
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    approvedPurchaseCost: json['ApprovedPurchaseCost'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostRequest
                instance) =>
        <String, dynamic>{
          'IsGetValueOnly': instance.isGetValueOnly,
          'PhysicalInventoryId': instance.physicalInventoryId,
          'ApprovedPurchaseCost': instance.approvedPurchaseCost,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostResponse(
    approvedPurchaseCost: json['ApprovedPurchaseCost'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostResponse
                instance) =>
        <String, dynamic>{
          'ApprovedPurchaseCost': instance.approvedPurchaseCost,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveRequest(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveRequest
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    approved: json['Approved'] as bool?,
    message: json['Message'] as String?,
    $status: json['Status'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'Approved': instance.approved,
          'Message': instance.message,
          'Status': instance.$status,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseRequest(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    addAndRetireInventory: json['AddAndRetireInventory'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseRequest
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
          'AddAndRetireInventory': instance.addAndRetireInventory,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    closed: json['Closed'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'Closed': instance.closed,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemRequest(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    code: json['Code'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    replace: json['Replace'] as bool?,
    consignorId: json['ConsignorId'] as String?,
    countedSpaceId: json['CountedSpaceId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemRequest
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
          'Code': instance.code,
          'Quantity': instance.quantity,
          'Replace': instance.replace,
          'ConsignorId': instance.consignorId,
          'CountedSpaceId': instance.countedSpaceId,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    description: json['Description'] as String?,
    itemId: json['ItemId'] as String?,
    consignor: json['Consignor'] as String?,
    showAddReplace: json['ShowAddReplace'] as bool?,
    countedQuantity: (json['CountedQuantity'] as num?)?.toDouble(),
    genericMessage: json['GenericMessage'] as String?,
    physicalItemId: json['PhysicalItemId'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'TrackedBy': instance.trackedBy,
          'Description': instance.description,
          'ItemId': instance.itemId,
          'Consignor': instance.consignor,
          'ShowAddReplace': instance.showAddReplace,
          'CountedQuantity': instance.countedQuantity,
          'GenericMessage': instance.genericMessage,
          'PhysicalItemId': instance.physicalItemId,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantity
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantity(
    physicalInventoryItemId: json['PhysicalInventoryItemId'] as int?,
    inventoryId: json['InventoryId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    category: json['Category'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    categoryId: json['CategoryId'] as String?,
    categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
    inventoryTypeOrderBy: json['InventoryTypeOrderBy'] as int?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    unitId: json['UnitId'] as String?,
    weightUnitId: json['WeightUnitId'] as String?,
    lengthUnitId: json['LengthUnitId'] as String?,
    sessionQuantity: json['SessionQuantity'] as int?,
    quantity: json['Quantity'] as int?,
    currentQuantity: json['CurrentQuantity'] as int?,
    weight: json['Weight'] as int?,
    length: json['Length'] as int?,
    unit: json['Unit'] as String?,
    weightUnit: json['WeightUnit'] as String?,
    lengthUnit: json['LengthUnit'] as String?,
    currentSpaceId: json['CurrentSpaceId'] as String?,
    currentSpace: json['CurrentSpace'] as String?,
    isRecount: json['IsRecount'] as bool?,
    consignorId: json['ConsignorId'] as String?,
    consignor: json['Consignor'] as String?,
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantity
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryItemId': instance.physicalInventoryItemId,
          'InventoryId': instance.inventoryId,
          'InventoryType': instance.inventoryType,
          'Category': instance.category,
          'ICode': instance.iCode,
          'Description': instance.description,
          'AisleLocation': instance.aisleLocation,
          'ShelfLocation': instance.shelfLocation,
          'CategoryId': instance.categoryId,
          'CategoryOrderBy': instance.categoryOrderBy,
          'InventoryTypeOrderBy': instance.inventoryTypeOrderBy,
          'InventoryTypeId': instance.inventoryTypeId,
          'UnitId': instance.unitId,
          'WeightUnitId': instance.weightUnitId,
          'LengthUnitId': instance.lengthUnitId,
          'SessionQuantity': instance.sessionQuantity,
          'Quantity': instance.quantity,
          'CurrentQuantity': instance.currentQuantity,
          'Weight': instance.weight,
          'Length': instance.length,
          'Unit': instance.unit,
          'WeightUnit': instance.weightUnit,
          'LengthUnit': instance.lengthUnit,
          'CurrentSpaceId': instance.currentSpaceId,
          'CurrentSpace': instance.currentSpace,
          'IsRecount': instance.isRecount,
          'ConsignorId': instance.consignorId,
          'Consignor': instance.consignor,
          'PhysicalInventoryId': instance.physicalInventoryId,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerial
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerial(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    category: json['Category'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    categoryId: json['CategoryId'] as String?,
    categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
    inventoryTypeOrderBy: json['InventoryTypeOrderBy'] as int?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    unitId: json['UnitId'] as String?,
    unit: json['Unit'] as String?,
    currentSpaceId: json['CurrentSpaceId'] as String?,
    currentSpace: json['CurrentSpace'] as String?,
    consignorId: json['ConsignorId'] as String?,
    consignor: json['Consignor'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerial
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
          'InventoryId': instance.inventoryId,
          'InventoryType': instance.inventoryType,
          'Category': instance.category,
          'ICode': instance.iCode,
          'Description': instance.description,
          'AisleLocation': instance.aisleLocation,
          'ShelfLocation': instance.shelfLocation,
          'CategoryId': instance.categoryId,
          'CategoryOrderBy': instance.categoryOrderBy,
          'InventoryTypeOrderBy': instance.inventoryTypeOrderBy,
          'InventoryTypeId': instance.inventoryTypeId,
          'UnitId': instance.unitId,
          'Unit': instance.unit,
          'CurrentSpaceId': instance.currentSpaceId,
          'CurrentSpace': instance.currentSpace,
          'ConsignorId': instance.consignorId,
          'Consignor': instance.consignor,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptions
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptions(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    scannedCode: json['ScannedCode'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    exception: json['Exception'] as String?,
    inventoryId: json['InventoryId'] as String?,
    userName: json['UserName'] as String?,
    date: json['Date'] as String?,
    time: json['Time'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptions
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
          'ScannedCode': instance.scannedCode,
          'ICode': instance.iCode,
          'Description': instance.description,
          'Exception': instance.exception,
          'InventoryId': instance.inventoryId,
          'UserName': instance.userName,
          'Date': instance.date,
          'Time': instance.time,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateRequest(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateRequest
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAdded
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAdded(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    orderBy: json['OrderBy'] as int?,
    owned: json['Owned'] as int?,
    counted: json['Counted'] as int?,
    qty: json['Qty'] as int?,
    extended: (json['Extended'] as num?)?.toDouble(),
    newPurchaseCost: (json['NewPurchaseCost'] as num?)?.toDouble(),
    lastPurchaseCost: (json['LastPurchaseCost'] as num?)?.toDouble(),
    purchaseCurrencyCode: json['PurchaseCurrencyCode'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAdded
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'OrderBy': instance.orderBy,
          'Owned': instance.owned,
          'Counted': instance.counted,
          'Qty': instance.qty,
          'Extended': instance.extended,
          'NewPurchaseCost': instance.newPurchaseCost,
          'LastPurchaseCost': instance.lastPurchaseCost,
          'PurchaseCurrencyCode': instance.purchaseCurrencyCode,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostRequest(
    cost: json['Cost'] as String?,
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    masterId: json['MasterId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostRequest
                instance) =>
        <String, dynamic>{
          'Cost': instance.cost,
          'PhysicalInventoryId': instance.physicalInventoryId,
          'MasterId': instance.masterId,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanRequest(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanRequest
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecount
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecount(
    physicalMasterId: json['PhysicalMasterId'] as int?,
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    inventoryTypeOrderBy: json['InventoryTypeOrderBy'] as int?,
    currentSpaceId: json['CurrentSpaceId'] as String?,
    unitId: json['UnitId'] as String?,
    unit: json['Unit'] as String?,
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    isRecount: json['IsRecount'] as bool?,
    owned: json['Owned'] as int?,
    onOrder: json['OnOrder'] as int?,
    inRepair: json['InRepair'] as int?,
    counted: json['Counted'] as int?,
    variance: json['Variance'] as int?,
    consignorId: json['ConsignorId'] as String?,
    consignor: json['Consignor'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecount
                instance) =>
        <String, dynamic>{
          'PhysicalMasterId': instance.physicalMasterId,
          'PhysicalInventoryId': instance.physicalInventoryId,
          'InventoryId': instance.inventoryId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'CategoryId': instance.categoryId,
          'Category': instance.category,
          'CategoryOrderBy': instance.categoryOrderBy,
          'InventoryTypeId': instance.inventoryTypeId,
          'InventoryType': instance.inventoryType,
          'InventoryTypeOrderBy': instance.inventoryTypeOrderBy,
          'CurrentSpaceId': instance.currentSpaceId,
          'UnitId': instance.unitId,
          'Unit': instance.unit,
          'AisleLocation': instance.aisleLocation,
          'ShelfLocation': instance.shelfLocation,
          'IsRecount': instance.isRecount,
          'Owned': instance.owned,
          'OnOrder': instance.onOrder,
          'InRepair': instance.inRepair,
          'Counted': instance.counted,
          'Variance': instance.variance,
          'ConsignorId': instance.consignorId,
          'Consignor': instance.consignor,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequest(
    physicalInventoryRecountUpdate: (json['PhysicalInventoryRecountUpdate']
                as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModel
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequest
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryRecountUpdate': instance
              .physicalInventoryRecountUpdate
              ?.map((e) => e.toJson())
              .toList(),
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModel
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModelFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModel(
    physicalMasterId: json['PhysicalMasterId'] as String?,
    isRecount: json['IsRecount'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModelToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModel
                instance) =>
        <String, dynamic>{
          'PhysicalMasterId': instance.physicalMasterId,
          'IsRecount': instance.isRecount,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsRequest(
    isGetValue: json['isGetValue'] as bool?,
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    replaceCounts: json['ReplaceCounts'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsRequest
                instance) =>
        <String, dynamic>{
          'isGetValue': instance.isGetValue,
          'PhysicalInventoryId': instance.physicalInventoryId,
          'ReplaceCounts': instance.replaceCounts,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    replaceCounts: json['ReplaceCounts'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'ReplaceCounts': instance.replaceCounts,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusRequest(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusRequest
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusResponse(
    barcodeToCount: (json['BarcodeToCount'] as num?)?.toDouble(),
    barcodeCounted: (json['BarcodeCounted'] as num?)?.toDouble(),
    barcodePercent: (json['BarcodePercent'] as num?)?.toDouble(),
    quantityToCount: (json['QuantityToCount'] as num?)?.toDouble(),
    quantityCounted: (json['QuantityCounted'] as num?)?.toDouble(),
    quantityPercent: (json['QuantityPercent'] as num?)?.toDouble(),
    totalToCount: (json['TotalToCount'] as num?)?.toDouble(),
    totalCounted: (json['TotalCounted'] as num?)?.toDouble(),
    totalPercent: (json['TotalPercent'] as num?)?.toDouble(),
    openedOn: json['OpenedOn'] as String?,
    openedBy: json['OpenedBy'] as String?,
    approvedOn: json['ApprovedOn'] as String?,
    approvedBy: json['ApprovedBy'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusResponse
                instance) =>
        <String, dynamic>{
          'BarcodeToCount': instance.barcodeToCount,
          'BarcodeCounted': instance.barcodeCounted,
          'BarcodePercent': instance.barcodePercent,
          'QuantityToCount': instance.quantityToCount,
          'QuantityCounted': instance.quantityCounted,
          'QuantityPercent': instance.quantityPercent,
          'TotalToCount': instance.totalToCount,
          'TotalCounted': instance.totalCounted,
          'TotalPercent': instance.totalPercent,
          'OpenedOn': instance.openedOn,
          'OpenedBy': instance.openedBy,
          'ApprovedOn': instance.approvedOn,
          'ApprovedBy': instance.approvedBy,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemRequest(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
    physicalInventoryItemId: json['PhysicalInventoryItemId'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemRequest
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
          'PhysicalInventoryItemId': instance.physicalInventoryItemId,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemResponse(
    success: json['Success'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemResponse
                instance) =>
        <String, dynamic>{
          'Success': instance.success,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesRequest(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesRequest
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidRequest(
    physicalInventoryId: json['PhysicalInventoryId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidRequestToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidRequest
                instance) =>
        <String, dynamic>{
          'PhysicalInventoryId': instance.physicalInventoryId,
        };

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidResponseToJson(
            WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesInventoryRentalInventoryRentalInventory
    _$WebApiModulesInventoryRentalInventoryRentalInventoryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRentalInventoryRentalInventory(
    excludeFromReturnOnAsset: json['ExcludeFromReturnOnAsset'] as bool?,
    isFixedAsset: json['IsFixedAsset'] as bool?,
    multiAssignRFIDs: json['MultiAssignRFIDs'] as bool?,
    minimumDaysPerWeek: (json['MinimumDaysPerWeek'] as num?)?.toDouble(),
    setOpeningId: json['SetOpeningId'] as String?,
    setOpening: json['SetOpening'] as String?,
    wallTypeId: json['WallTypeId'] as String?,
    wallType: json['WallType'] as String?,
    setSurfaceId: json['SetSurfaceId'] as String?,
    setSurface: json['SetSurface'] as String?,
    wallWidthFt: json['WallWidthFt'] as int?,
    wallWidthIn: json['WallWidthIn'] as int?,
    wallHeightFt: json['WallHeightFt'] as int?,
    wallHeightIn: json['WallHeightIn'] as int?,
    wallLengthFt: json['WallLengthFt'] as int?,
    wallLengthIn: json['WallLengthIn'] as int?,
    dailyRate: (json['DailyRate'] as num?)?.toDouble(),
    weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
    week2Rate: (json['Week2Rate'] as num?)?.toDouble(),
    week3Rate: (json['Week3Rate'] as num?)?.toDouble(),
    week4Rate: (json['Week4Rate'] as num?)?.toDouble(),
    monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
    unitValue: (json['UnitValue'] as num?)?.toDouble(),
    replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
    inventoryId: json['InventoryId'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    availableFrom: json['AvailableFrom'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    confirmTrackedBy: json['ConfirmTrackedBy'] as String?,
    rank: json['Rank'] as String?,
    manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
    manufacturerId: json['ManufacturerId'] as String?,
    manufacturer: json['Manufacturer'] as String?,
    manufacturerUrl: json['ManufacturerUrl'] as String?,
    excludeImageFromQuoteOrderPrint:
        json['ExcludeImageFromQuoteOrderPrint'] as bool?,
    noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
    availabilityManuallyResolveConflicts:
        json['AvailabilityManuallyResolveConflicts'] as bool?,
    sendAvailabilityAlert: json['SendAvailabilityAlert'] as bool?,
    primaryDimensionUniqueId: json['PrimaryDimensionUniqueId'] as String?,
    defaultImperialMetric: json['DefaultImperialMetric'] as String?,
    primaryDimensionDescription: json['PrimaryDimensionDescription'] as String?,
    primaryDimensionShipWeightLbs:
        json['PrimaryDimensionShipWeightLbs'] as int?,
    primaryDimensionShipWeightOz: json['PrimaryDimensionShipWeightOz'] as int?,
    primaryDimensionWeightInCaseLbs:
        json['PrimaryDimensionWeightInCaseLbs'] as int?,
    primaryDimensionWeightInCaseOz:
        json['PrimaryDimensionWeightInCaseOz'] as int?,
    primaryDimensionWidthFt: json['PrimaryDimensionWidthFt'] as int?,
    primaryDimensionWidthIn: json['PrimaryDimensionWidthIn'] as int?,
    primaryDimensionHeightFt: json['PrimaryDimensionHeightFt'] as int?,
    primaryDimensionHeightIn: json['PrimaryDimensionHeightIn'] as int?,
    primaryDimensionLengthFt: json['PrimaryDimensionLengthFt'] as int?,
    primaryDimensionLengthIn: json['PrimaryDimensionLengthIn'] as int?,
    primaryDimensionShipWeightKg: json['PrimaryDimensionShipWeightKg'] as int?,
    primaryDimensionShipWeightG: json['PrimaryDimensionShipWeightG'] as int?,
    primaryDimensionWeightInCaseKg:
        json['PrimaryDimensionWeightInCaseKg'] as int?,
    primaryDimensionWeightInCaseG:
        json['PrimaryDimensionWeightInCaseG'] as int?,
    primaryDimensionWidthM: json['PrimaryDimensionWidthM'] as int?,
    primaryDimensionWidthCm: json['PrimaryDimensionWidthCm'] as int?,
    primaryDimensionHeightM: json['PrimaryDimensionHeightM'] as int?,
    primaryDimensionHeightCm: json['PrimaryDimensionHeightCm'] as int?,
    primaryDimensionLengthM: json['PrimaryDimensionLengthM'] as int?,
    primaryDimensionLengthCm: json['PrimaryDimensionLengthCm'] as int?,
    hasSecondaryDimensions: json['HasSecondaryDimensions'] as bool?,
    secondaryDimensionUniqueId: json['SecondaryDimensionUniqueId'] as String?,
    secondaryDimensionDescription:
        json['SecondaryDimensionDescription'] as String?,
    secondaryDimensionShipWeightLbs:
        json['SecondaryDimensionShipWeightLbs'] as int?,
    secondaryDimensionShipWeightOz:
        json['SecondaryDimensionShipWeightOz'] as int?,
    secondaryDimensionWeightInCaseLbs:
        json['SecondaryDimensionWeightInCaseLbs'] as int?,
    secondaryDimensionWeightInCaseOz:
        json['SecondaryDimensionWeightInCaseOz'] as int?,
    secondaryDimensionWidthFt: json['SecondaryDimensionWidthFt'] as int?,
    secondaryDimensionWidthIn: json['SecondaryDimensionWidthIn'] as int?,
    secondaryDimensionHeightFt: json['SecondaryDimensionHeightFt'] as int?,
    secondaryDimensionHeightIn: json['SecondaryDimensionHeightIn'] as int?,
    secondaryDimensionLengthFt: json['SecondaryDimensionLengthFt'] as int?,
    secondaryDimensionLengthIn: json['SecondaryDimensionLengthIn'] as int?,
    secondaryDimensionShipWeightKg:
        json['SecondaryDimensionShipWeightKg'] as int?,
    secondaryDimensionShipWeightG:
        json['SecondaryDimensionShipWeightG'] as int?,
    secondaryDimensionWeightInCaseKg:
        json['SecondaryDimensionWeightInCaseKg'] as int?,
    secondaryDimensionWeightInCaseG:
        json['SecondaryDimensionWeightInCaseG'] as int?,
    secondaryDimensionWidthM: json['SecondaryDimensionWidthM'] as int?,
    secondaryDimensionWidthCm: json['SecondaryDimensionWidthCm'] as int?,
    secondaryDimensionHeightM: json['SecondaryDimensionHeightM'] as int?,
    secondaryDimensionHeightCm: json['SecondaryDimensionHeightCm'] as int?,
    secondaryDimensionLengthM: json['SecondaryDimensionLengthM'] as int?,
    secondaryDimensionLengthCm: json['SecondaryDimensionLengthCm'] as int?,
    countryOfOriginId: json['CountryOfOriginId'] as String?,
    countryOfOrigin: json['CountryOfOrigin'] as String?,
    displayInSummaryModeWhenRateIsZero:
        json['DisplayInSummaryModeWhenRateIsZero'] as bool?,
    qcRequired: json['QcRequired'] as bool?,
    qcTime: json['QcTime'] as String?,
    copyAttributesAsNote: json['CopyAttributesAsNote'] as bool?,
    trackAssetUsage: json['TrackAssetUsage'] as bool?,
    trackLampUsage: json['TrackLampUsage'] as bool?,
    trackStrikes: json['TrackStrikes'] as bool?,
    trackCandles: json['TrackCandles'] as bool?,
    lampCount: json['LampCount'] as int?,
    minimumFootCandles: json['MinimumFootCandles'] as int?,
    trackSoftware: json['TrackSoftware'] as bool?,
    softwareVersion: json['SoftwareVersion'] as String?,
    softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
    warehouseSpecificPackage: json['WarehouseSpecificPackage'] as bool?,
    completePackagePrice: json['CompletePackagePrice'] as String?,
    kitPackagePrice: json['KitPackagePrice'] as String?,
    separatePackageOnQuoteOrder: json['SeparatePackageOnQuoteOrder'] as bool?,
    containerId: json['ContainerId'] as String?,
    containerScannableInventoryId:
        json['ContainerScannableInventoryId'] as String?,
    containerScannableICode: json['ContainerScannableICode'] as String?,
    containerScannableDescription:
        json['ContainerScannableDescription'] as String?,
    automaticallyRebuildContainerAtCheckIn:
        json['AutomaticallyRebuildContainerAtCheckIn'] as bool?,
    automaticallyRebuildContainerAtTransferIn:
        json['AutomaticallyRebuildContainerAtTransferIn'] as bool?,
    containerStagingRule: json['ContainerStagingRule'] as String?,
    excludeContainedItemsFromAvailability:
        json['ExcludeContainedItemsFromAvailability'] as bool?,
    useContainerNumber: json['UseContainerNumber'] as bool?,
    containerPackingListBehavior:
        json['ContainerPackingListBehavior'] as String?,
    inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
    inventoryTypeIsSets: json['InventoryTypeIsSets'] as bool?,
    patternId: json['PatternId'] as String?,
    pattern: json['Pattern'] as String?,
    periodId: json['PeriodId'] as String?,
    period: json['Period'] as String?,
    materialId: json['MaterialId'] as String?,
    material: json['Material'] as String?,
    genderId: json['GenderId'] as String?,
    gender: json['Gender'] as String?,
    labelId: json['LabelId'] as String?,
    label: json['Label'] as String?,
    wardrobeSize: json['WardrobeSize'] as String?,
    wardrobePieceCount: json['WardrobePieceCount'] as int?,
    dyed: json['Dyed'] as bool?,
    wardrobeSourceId: json['WardrobeSourceId'] as String?,
    wardrobeSource: json['WardrobeSource'] as String?,
    wardrobeCareId: json['WardrobeCareId'] as String?,
    wardrobeCare: json['WardrobeCare'] as String?,
    cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
    wardrobeDetailedDescription: json['WardrobeDetailedDescription'] as String?,
    webDetailedDescription: json['WebDetailedDescription'] as String?,
    overrideSystemDefaultRevenueAllocationBehavior:
        json['OverrideSystemDefaultRevenueAllocationBehavior'] as bool?,
    allocateRevenueForAccessories:
        json['AllocateRevenueForAccessories'] as bool?,
    packageRevenueCalculationFormula:
        json['PackageRevenueCalculationFormula'] as String?,
    isHazardousMaterial: json['IsHazardousMaterial'] as bool?,
    descriptionWithAkas: json['DescriptionWithAkas'] as String?,
    costCalculation: json['CostCalculation'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    taxable: json['Taxable'] as bool?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    availFor: json['AvailFor'] as String?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    subCategoryCount: json['SubCategoryCount'] as int?,
    subCategoryId: json['SubCategoryId'] as String?,
    subCategory: json['SubCategory'] as String?,
    classification: json['Classification'] as String?,
    classificationDescription: json['ClassificationDescription'] as String?,
    classificationColor: json['ClassificationColor'] as String?,
    unitId: json['UnitId'] as String?,
    unit: json['Unit'] as String?,
    unitType: json['UnitType'] as String?,
    nonDiscountable: json['NonDiscountable'] as bool?,
    overrideProfitAndLossCategory:
        json['OverrideProfitAndLossCategory'] as bool?,
    profitAndLossCategoryId: json['ProfitAndLossCategoryId'] as String?,
    profitAndLossCategory: json['ProfitAndLossCategory'] as String?,
    autoCopyNotesToQuoteOrder: json['AutoCopyNotesToQuoteOrder'] as bool?,
    note: json['Note'] as String?,
    printNoteOnInContract: json['PrintNoteOnInContract'] as bool?,
    printNoteOnOutContract: json['PrintNoteOnOutContract'] as bool?,
    printNoteOnReceiveContract: json['PrintNoteOnReceiveContract'] as bool?,
    printNoteOnReturnContract: json['PrintNoteOnReturnContract'] as bool?,
    printNoteOnInvoice: json['PrintNoteOnInvoice'] as bool?,
    printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
    printNoteOnPickList: json['PrintNoteOnPickList'] as bool?,
    printNoteOnPO: json['PrintNoteOnPO'] as bool?,
    printNoteOnQuote: json['PrintNoteOnQuote'] as bool?,
    printNoteOnReturnList: json['PrintNoteOnReturnList'] as bool?,
    printNoteOnPoReceiveList: json['PrintNoteOnPoReceiveList'] as bool?,
    printNoteOnPoReturnList: json['PrintNoteOnPoReturnList'] as bool?,
    assetAccountId: json['AssetAccountId'] as String?,
    assetAccountNo: json['AssetAccountNo'] as String?,
    assetAccountDescription: json['AssetAccountDescription'] as String?,
    incomeAccountId: json['IncomeAccountId'] as String?,
    incomeAccountNo: json['IncomeAccountNo'] as String?,
    incomeAccountDescription: json['IncomeAccountDescription'] as String?,
    subIncomeAccountId: json['SubIncomeAccountId'] as String?,
    subIncomeAccountNo: json['SubIncomeAccountNo'] as String?,
    subIncomeAccountDescription: json['SubIncomeAccountDescription'] as String?,
    consignmentIncomeAccountId: json['ConsignmentIncomeAccountId'] as String?,
    consignmentIncomeAccountNo: json['ConsignmentIncomeAccountNo'] as String?,
    consignmentIncomeAccountDescription:
        json['ConsignmentIncomeAccountDescription'] as String?,
    ldIncomeAccountId: json['LdIncomeAccountId'] as String?,
    ldIncomeAccountNo: json['LdIncomeAccountNo'] as String?,
    ldIncomeAccountDescription: json['LdIncomeAccountDescription'] as String?,
    equipmentSaleIncomeAccountId:
        json['EquipmentSaleIncomeAccountId'] as String?,
    equipmentSaleIncomeAccountNo:
        json['EquipmentSaleIncomeAccountNo'] as String?,
    equipmentSaleIncomeAccountDescription:
        json['EquipmentSaleIncomeAccountDescription'] as String?,
    expenseAccountId: json['ExpenseAccountId'] as String?,
    expenseAccountNo: json['ExpenseAccountNo'] as String?,
    expenseAccountDescription: json['ExpenseAccountDescription'] as String?,
    costOfGoodsSoldExpenseAccountId:
        json['CostOfGoodsSoldExpenseAccountId'] as String?,
    costOfGoodsSoldExpenseAccountNo:
        json['CostOfGoodsSoldExpenseAccountNo'] as String?,
    costOfGoodsSoldExpenseAccountDescription:
        json['CostOfGoodsSoldExpenseAccountDescription'] as String?,
    costOfGoodsRentedExpenseAccountId:
        json['CostOfGoodsRentedExpenseAccountId'] as String?,
    costOfGoodsRentedExpenseAccountNo:
        json['CostOfGoodsRentedExpenseAccountNo'] as String?,
    costOfGoodsRentedExpenseAccountDescription:
        json['CostOfGoodsRentedExpenseAccountDescription'] as String?,
    depreciationExpenseAccountId:
        json['DepreciationExpenseAccountId'] as String?,
    depreciationExpenseAccountNo:
        json['DepreciationExpenseAccountNo'] as String?,
    depreciationExpenseAccountDescription:
        json['DepreciationExpenseAccountDescription'] as String?,
    accumulatedDepreciationExpenseAccountId:
        json['AccumulatedDepreciationExpenseAccountId'] as String?,
    accumulatedDepreciationExpenseAccountNo:
        json['AccumulatedDepreciationExpenseAccountNo'] as String?,
    accumulatedDepreciationExpenseAccountDescription:
        json['AccumulatedDepreciationExpenseAccountDescription'] as String?,
    originalShowId: json['OriginalShowId'] as String?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    manifestShippingContainer: json['ManifestShippingContainer'] as bool?,
    manifestStandAloneItem: json['ManifestStandAloneItem'] as bool?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesInventoryRentalInventoryRentalInventoryToJson(
        WebApiModulesInventoryRentalInventoryRentalInventory instance) =>
    <String, dynamic>{
      'ExcludeFromReturnOnAsset': instance.excludeFromReturnOnAsset,
      'IsFixedAsset': instance.isFixedAsset,
      'MultiAssignRFIDs': instance.multiAssignRFIDs,
      'MinimumDaysPerWeek': instance.minimumDaysPerWeek,
      'SetOpeningId': instance.setOpeningId,
      'SetOpening': instance.setOpening,
      'WallTypeId': instance.wallTypeId,
      'WallType': instance.wallType,
      'SetSurfaceId': instance.setSurfaceId,
      'SetSurface': instance.setSurface,
      'WallWidthFt': instance.wallWidthFt,
      'WallWidthIn': instance.wallWidthIn,
      'WallHeightFt': instance.wallHeightFt,
      'WallHeightIn': instance.wallHeightIn,
      'WallLengthFt': instance.wallLengthFt,
      'WallLengthIn': instance.wallLengthIn,
      'DailyRate': instance.dailyRate,
      'WeeklyRate': instance.weeklyRate,
      'Week2Rate': instance.week2Rate,
      'Week3Rate': instance.week3Rate,
      'Week4Rate': instance.week4Rate,
      'MonthlyRate': instance.monthlyRate,
      'UnitValue': instance.unitValue,
      'ReplacementCost': instance.replacementCost,
      'InventoryId': instance.inventoryId,
      'InventoryTypeId': instance.inventoryTypeId,
      'InventoryType': instance.inventoryType,
      'AvailableFrom': instance.availableFrom,
      'TrackedBy': instance.trackedBy,
      'ConfirmTrackedBy': instance.confirmTrackedBy,
      'Rank': instance.rank,
      'ManufacturerPartNumber': instance.manufacturerPartNumber,
      'ManufacturerId': instance.manufacturerId,
      'Manufacturer': instance.manufacturer,
      'ManufacturerUrl': instance.manufacturerUrl,
      'ExcludeImageFromQuoteOrderPrint':
          instance.excludeImageFromQuoteOrderPrint,
      'NoAvailabilityCheck': instance.noAvailabilityCheck,
      'AvailabilityManuallyResolveConflicts':
          instance.availabilityManuallyResolveConflicts,
      'SendAvailabilityAlert': instance.sendAvailabilityAlert,
      'PrimaryDimensionUniqueId': instance.primaryDimensionUniqueId,
      'DefaultImperialMetric': instance.defaultImperialMetric,
      'PrimaryDimensionDescription': instance.primaryDimensionDescription,
      'PrimaryDimensionShipWeightLbs': instance.primaryDimensionShipWeightLbs,
      'PrimaryDimensionShipWeightOz': instance.primaryDimensionShipWeightOz,
      'PrimaryDimensionWeightInCaseLbs':
          instance.primaryDimensionWeightInCaseLbs,
      'PrimaryDimensionWeightInCaseOz': instance.primaryDimensionWeightInCaseOz,
      'PrimaryDimensionWidthFt': instance.primaryDimensionWidthFt,
      'PrimaryDimensionWidthIn': instance.primaryDimensionWidthIn,
      'PrimaryDimensionHeightFt': instance.primaryDimensionHeightFt,
      'PrimaryDimensionHeightIn': instance.primaryDimensionHeightIn,
      'PrimaryDimensionLengthFt': instance.primaryDimensionLengthFt,
      'PrimaryDimensionLengthIn': instance.primaryDimensionLengthIn,
      'PrimaryDimensionShipWeightKg': instance.primaryDimensionShipWeightKg,
      'PrimaryDimensionShipWeightG': instance.primaryDimensionShipWeightG,
      'PrimaryDimensionWeightInCaseKg': instance.primaryDimensionWeightInCaseKg,
      'PrimaryDimensionWeightInCaseG': instance.primaryDimensionWeightInCaseG,
      'PrimaryDimensionWidthM': instance.primaryDimensionWidthM,
      'PrimaryDimensionWidthCm': instance.primaryDimensionWidthCm,
      'PrimaryDimensionHeightM': instance.primaryDimensionHeightM,
      'PrimaryDimensionHeightCm': instance.primaryDimensionHeightCm,
      'PrimaryDimensionLengthM': instance.primaryDimensionLengthM,
      'PrimaryDimensionLengthCm': instance.primaryDimensionLengthCm,
      'HasSecondaryDimensions': instance.hasSecondaryDimensions,
      'SecondaryDimensionUniqueId': instance.secondaryDimensionUniqueId,
      'SecondaryDimensionDescription': instance.secondaryDimensionDescription,
      'SecondaryDimensionShipWeightLbs':
          instance.secondaryDimensionShipWeightLbs,
      'SecondaryDimensionShipWeightOz': instance.secondaryDimensionShipWeightOz,
      'SecondaryDimensionWeightInCaseLbs':
          instance.secondaryDimensionWeightInCaseLbs,
      'SecondaryDimensionWeightInCaseOz':
          instance.secondaryDimensionWeightInCaseOz,
      'SecondaryDimensionWidthFt': instance.secondaryDimensionWidthFt,
      'SecondaryDimensionWidthIn': instance.secondaryDimensionWidthIn,
      'SecondaryDimensionHeightFt': instance.secondaryDimensionHeightFt,
      'SecondaryDimensionHeightIn': instance.secondaryDimensionHeightIn,
      'SecondaryDimensionLengthFt': instance.secondaryDimensionLengthFt,
      'SecondaryDimensionLengthIn': instance.secondaryDimensionLengthIn,
      'SecondaryDimensionShipWeightKg': instance.secondaryDimensionShipWeightKg,
      'SecondaryDimensionShipWeightG': instance.secondaryDimensionShipWeightG,
      'SecondaryDimensionWeightInCaseKg':
          instance.secondaryDimensionWeightInCaseKg,
      'SecondaryDimensionWeightInCaseG':
          instance.secondaryDimensionWeightInCaseG,
      'SecondaryDimensionWidthM': instance.secondaryDimensionWidthM,
      'SecondaryDimensionWidthCm': instance.secondaryDimensionWidthCm,
      'SecondaryDimensionHeightM': instance.secondaryDimensionHeightM,
      'SecondaryDimensionHeightCm': instance.secondaryDimensionHeightCm,
      'SecondaryDimensionLengthM': instance.secondaryDimensionLengthM,
      'SecondaryDimensionLengthCm': instance.secondaryDimensionLengthCm,
      'CountryOfOriginId': instance.countryOfOriginId,
      'CountryOfOrigin': instance.countryOfOrigin,
      'DisplayInSummaryModeWhenRateIsZero':
          instance.displayInSummaryModeWhenRateIsZero,
      'QcRequired': instance.qcRequired,
      'QcTime': instance.qcTime,
      'CopyAttributesAsNote': instance.copyAttributesAsNote,
      'TrackAssetUsage': instance.trackAssetUsage,
      'TrackLampUsage': instance.trackLampUsage,
      'TrackStrikes': instance.trackStrikes,
      'TrackCandles': instance.trackCandles,
      'LampCount': instance.lampCount,
      'MinimumFootCandles': instance.minimumFootCandles,
      'TrackSoftware': instance.trackSoftware,
      'SoftwareVersion': instance.softwareVersion,
      'SoftwareEffectiveDate': instance.softwareEffectiveDate,
      'WarehouseSpecificPackage': instance.warehouseSpecificPackage,
      'CompletePackagePrice': instance.completePackagePrice,
      'KitPackagePrice': instance.kitPackagePrice,
      'SeparatePackageOnQuoteOrder': instance.separatePackageOnQuoteOrder,
      'ContainerId': instance.containerId,
      'ContainerScannableInventoryId': instance.containerScannableInventoryId,
      'ContainerScannableICode': instance.containerScannableICode,
      'ContainerScannableDescription': instance.containerScannableDescription,
      'AutomaticallyRebuildContainerAtCheckIn':
          instance.automaticallyRebuildContainerAtCheckIn,
      'AutomaticallyRebuildContainerAtTransferIn':
          instance.automaticallyRebuildContainerAtTransferIn,
      'ContainerStagingRule': instance.containerStagingRule,
      'ExcludeContainedItemsFromAvailability':
          instance.excludeContainedItemsFromAvailability,
      'UseContainerNumber': instance.useContainerNumber,
      'ContainerPackingListBehavior': instance.containerPackingListBehavior,
      'InventoryTypeIsWardrobe': instance.inventoryTypeIsWardrobe,
      'InventoryTypeIsSets': instance.inventoryTypeIsSets,
      'PatternId': instance.patternId,
      'Pattern': instance.pattern,
      'PeriodId': instance.periodId,
      'Period': instance.period,
      'MaterialId': instance.materialId,
      'Material': instance.material,
      'GenderId': instance.genderId,
      'Gender': instance.gender,
      'LabelId': instance.labelId,
      'Label': instance.label,
      'WardrobeSize': instance.wardrobeSize,
      'WardrobePieceCount': instance.wardrobePieceCount,
      'Dyed': instance.dyed,
      'WardrobeSourceId': instance.wardrobeSourceId,
      'WardrobeSource': instance.wardrobeSource,
      'WardrobeCareId': instance.wardrobeCareId,
      'WardrobeCare': instance.wardrobeCare,
      'CleaningFeeAmount': instance.cleaningFeeAmount,
      'WardrobeDetailedDescription': instance.wardrobeDetailedDescription,
      'WebDetailedDescription': instance.webDetailedDescription,
      'OverrideSystemDefaultRevenueAllocationBehavior':
          instance.overrideSystemDefaultRevenueAllocationBehavior,
      'AllocateRevenueForAccessories': instance.allocateRevenueForAccessories,
      'PackageRevenueCalculationFormula':
          instance.packageRevenueCalculationFormula,
      'IsHazardousMaterial': instance.isHazardousMaterial,
      'DescriptionWithAkas': instance.descriptionWithAkas,
      'CostCalculation': instance.costCalculation,
      'Quantity': instance.quantity,
      'AisleLocation': instance.aisleLocation,
      'ShelfLocation': instance.shelfLocation,
      'Taxable': instance.taxable,
      'ICode': instance.iCode,
      'Description': instance.description,
      'AvailFor': instance.availFor,
      'CategoryId': instance.categoryId,
      'Category': instance.category,
      'SubCategoryCount': instance.subCategoryCount,
      'SubCategoryId': instance.subCategoryId,
      'SubCategory': instance.subCategory,
      'Classification': instance.classification,
      'ClassificationDescription': instance.classificationDescription,
      'ClassificationColor': instance.classificationColor,
      'UnitId': instance.unitId,
      'Unit': instance.unit,
      'UnitType': instance.unitType,
      'NonDiscountable': instance.nonDiscountable,
      'OverrideProfitAndLossCategory': instance.overrideProfitAndLossCategory,
      'ProfitAndLossCategoryId': instance.profitAndLossCategoryId,
      'ProfitAndLossCategory': instance.profitAndLossCategory,
      'AutoCopyNotesToQuoteOrder': instance.autoCopyNotesToQuoteOrder,
      'Note': instance.note,
      'PrintNoteOnInContract': instance.printNoteOnInContract,
      'PrintNoteOnOutContract': instance.printNoteOnOutContract,
      'PrintNoteOnReceiveContract': instance.printNoteOnReceiveContract,
      'PrintNoteOnReturnContract': instance.printNoteOnReturnContract,
      'PrintNoteOnInvoice': instance.printNoteOnInvoice,
      'PrintNoteOnOrder': instance.printNoteOnOrder,
      'PrintNoteOnPickList': instance.printNoteOnPickList,
      'PrintNoteOnPO': instance.printNoteOnPO,
      'PrintNoteOnQuote': instance.printNoteOnQuote,
      'PrintNoteOnReturnList': instance.printNoteOnReturnList,
      'PrintNoteOnPoReceiveList': instance.printNoteOnPoReceiveList,
      'PrintNoteOnPoReturnList': instance.printNoteOnPoReturnList,
      'AssetAccountId': instance.assetAccountId,
      'AssetAccountNo': instance.assetAccountNo,
      'AssetAccountDescription': instance.assetAccountDescription,
      'IncomeAccountId': instance.incomeAccountId,
      'IncomeAccountNo': instance.incomeAccountNo,
      'IncomeAccountDescription': instance.incomeAccountDescription,
      'SubIncomeAccountId': instance.subIncomeAccountId,
      'SubIncomeAccountNo': instance.subIncomeAccountNo,
      'SubIncomeAccountDescription': instance.subIncomeAccountDescription,
      'ConsignmentIncomeAccountId': instance.consignmentIncomeAccountId,
      'ConsignmentIncomeAccountNo': instance.consignmentIncomeAccountNo,
      'ConsignmentIncomeAccountDescription':
          instance.consignmentIncomeAccountDescription,
      'LdIncomeAccountId': instance.ldIncomeAccountId,
      'LdIncomeAccountNo': instance.ldIncomeAccountNo,
      'LdIncomeAccountDescription': instance.ldIncomeAccountDescription,
      'EquipmentSaleIncomeAccountId': instance.equipmentSaleIncomeAccountId,
      'EquipmentSaleIncomeAccountNo': instance.equipmentSaleIncomeAccountNo,
      'EquipmentSaleIncomeAccountDescription':
          instance.equipmentSaleIncomeAccountDescription,
      'ExpenseAccountId': instance.expenseAccountId,
      'ExpenseAccountNo': instance.expenseAccountNo,
      'ExpenseAccountDescription': instance.expenseAccountDescription,
      'CostOfGoodsSoldExpenseAccountId':
          instance.costOfGoodsSoldExpenseAccountId,
      'CostOfGoodsSoldExpenseAccountNo':
          instance.costOfGoodsSoldExpenseAccountNo,
      'CostOfGoodsSoldExpenseAccountDescription':
          instance.costOfGoodsSoldExpenseAccountDescription,
      'CostOfGoodsRentedExpenseAccountId':
          instance.costOfGoodsRentedExpenseAccountId,
      'CostOfGoodsRentedExpenseAccountNo':
          instance.costOfGoodsRentedExpenseAccountNo,
      'CostOfGoodsRentedExpenseAccountDescription':
          instance.costOfGoodsRentedExpenseAccountDescription,
      'DepreciationExpenseAccountId': instance.depreciationExpenseAccountId,
      'DepreciationExpenseAccountNo': instance.depreciationExpenseAccountNo,
      'DepreciationExpenseAccountDescription':
          instance.depreciationExpenseAccountDescription,
      'AccumulatedDepreciationExpenseAccountId':
          instance.accumulatedDepreciationExpenseAccountId,
      'AccumulatedDepreciationExpenseAccountNo':
          instance.accumulatedDepreciationExpenseAccountNo,
      'AccumulatedDepreciationExpenseAccountDescription':
          instance.accumulatedDepreciationExpenseAccountDescription,
      'OriginalShowId': instance.originalShowId,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'ManifestShippingContainer': instance.manifestShippingContainer,
      'ManifestStandAloneItem': instance.manifestStandAloneItem,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventoryRentalInventoryRentalInventoryDetailResponse
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDetailResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRentalInventoryRentalInventoryDetailResponse(
    excludeFromReturnOnAsset: json['ExcludeFromReturnOnAsset'] as bool?,
    isFixedAsset: json['IsFixedAsset'] as bool?,
    multiAssignRFIDs: json['MultiAssignRFIDs'] as bool?,
    minimumDaysPerWeek: (json['MinimumDaysPerWeek'] as num?)?.toDouble(),
    setOpeningId: json['SetOpeningId'] as String?,
    setOpening: json['SetOpening'] as String?,
    wallTypeId: json['WallTypeId'] as String?,
    wallType: json['WallType'] as String?,
    setSurfaceId: json['SetSurfaceId'] as String?,
    setSurface: json['SetSurface'] as String?,
    wallWidthFt: json['WallWidthFt'] as int?,
    wallWidthIn: json['WallWidthIn'] as int?,
    wallHeightFt: json['WallHeightFt'] as int?,
    wallHeightIn: json['WallHeightIn'] as int?,
    wallLengthFt: json['WallLengthFt'] as int?,
    wallLengthIn: json['WallLengthIn'] as int?,
    dailyRate: (json['DailyRate'] as num?)?.toDouble(),
    weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
    week2Rate: (json['Week2Rate'] as num?)?.toDouble(),
    week3Rate: (json['Week3Rate'] as num?)?.toDouble(),
    week4Rate: (json['Week4Rate'] as num?)?.toDouble(),
    monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
    unitValue: (json['UnitValue'] as num?)?.toDouble(),
    replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
    inventoryId: json['InventoryId'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    availableFrom: json['AvailableFrom'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    confirmTrackedBy: json['ConfirmTrackedBy'] as String?,
    rank: json['Rank'] as String?,
    manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
    manufacturerId: json['ManufacturerId'] as String?,
    manufacturer: json['Manufacturer'] as String?,
    manufacturerUrl: json['ManufacturerUrl'] as String?,
    excludeImageFromQuoteOrderPrint:
        json['ExcludeImageFromQuoteOrderPrint'] as bool?,
    noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
    availabilityManuallyResolveConflicts:
        json['AvailabilityManuallyResolveConflicts'] as bool?,
    sendAvailabilityAlert: json['SendAvailabilityAlert'] as bool?,
    primaryDimensionUniqueId: json['PrimaryDimensionUniqueId'] as String?,
    defaultImperialMetric: json['DefaultImperialMetric'] as String?,
    primaryDimensionDescription: json['PrimaryDimensionDescription'] as String?,
    primaryDimensionShipWeightLbs:
        json['PrimaryDimensionShipWeightLbs'] as int?,
    primaryDimensionShipWeightOz: json['PrimaryDimensionShipWeightOz'] as int?,
    primaryDimensionWeightInCaseLbs:
        json['PrimaryDimensionWeightInCaseLbs'] as int?,
    primaryDimensionWeightInCaseOz:
        json['PrimaryDimensionWeightInCaseOz'] as int?,
    primaryDimensionWidthFt: json['PrimaryDimensionWidthFt'] as int?,
    primaryDimensionWidthIn: json['PrimaryDimensionWidthIn'] as int?,
    primaryDimensionHeightFt: json['PrimaryDimensionHeightFt'] as int?,
    primaryDimensionHeightIn: json['PrimaryDimensionHeightIn'] as int?,
    primaryDimensionLengthFt: json['PrimaryDimensionLengthFt'] as int?,
    primaryDimensionLengthIn: json['PrimaryDimensionLengthIn'] as int?,
    primaryDimensionShipWeightKg: json['PrimaryDimensionShipWeightKg'] as int?,
    primaryDimensionShipWeightG: json['PrimaryDimensionShipWeightG'] as int?,
    primaryDimensionWeightInCaseKg:
        json['PrimaryDimensionWeightInCaseKg'] as int?,
    primaryDimensionWeightInCaseG:
        json['PrimaryDimensionWeightInCaseG'] as int?,
    primaryDimensionWidthM: json['PrimaryDimensionWidthM'] as int?,
    primaryDimensionWidthCm: json['PrimaryDimensionWidthCm'] as int?,
    primaryDimensionHeightM: json['PrimaryDimensionHeightM'] as int?,
    primaryDimensionHeightCm: json['PrimaryDimensionHeightCm'] as int?,
    primaryDimensionLengthM: json['PrimaryDimensionLengthM'] as int?,
    primaryDimensionLengthCm: json['PrimaryDimensionLengthCm'] as int?,
    hasSecondaryDimensions: json['HasSecondaryDimensions'] as bool?,
    secondaryDimensionUniqueId: json['SecondaryDimensionUniqueId'] as String?,
    secondaryDimensionDescription:
        json['SecondaryDimensionDescription'] as String?,
    secondaryDimensionShipWeightLbs:
        json['SecondaryDimensionShipWeightLbs'] as int?,
    secondaryDimensionShipWeightOz:
        json['SecondaryDimensionShipWeightOz'] as int?,
    secondaryDimensionWeightInCaseLbs:
        json['SecondaryDimensionWeightInCaseLbs'] as int?,
    secondaryDimensionWeightInCaseOz:
        json['SecondaryDimensionWeightInCaseOz'] as int?,
    secondaryDimensionWidthFt: json['SecondaryDimensionWidthFt'] as int?,
    secondaryDimensionWidthIn: json['SecondaryDimensionWidthIn'] as int?,
    secondaryDimensionHeightFt: json['SecondaryDimensionHeightFt'] as int?,
    secondaryDimensionHeightIn: json['SecondaryDimensionHeightIn'] as int?,
    secondaryDimensionLengthFt: json['SecondaryDimensionLengthFt'] as int?,
    secondaryDimensionLengthIn: json['SecondaryDimensionLengthIn'] as int?,
    secondaryDimensionShipWeightKg:
        json['SecondaryDimensionShipWeightKg'] as int?,
    secondaryDimensionShipWeightG:
        json['SecondaryDimensionShipWeightG'] as int?,
    secondaryDimensionWeightInCaseKg:
        json['SecondaryDimensionWeightInCaseKg'] as int?,
    secondaryDimensionWeightInCaseG:
        json['SecondaryDimensionWeightInCaseG'] as int?,
    secondaryDimensionWidthM: json['SecondaryDimensionWidthM'] as int?,
    secondaryDimensionWidthCm: json['SecondaryDimensionWidthCm'] as int?,
    secondaryDimensionHeightM: json['SecondaryDimensionHeightM'] as int?,
    secondaryDimensionHeightCm: json['SecondaryDimensionHeightCm'] as int?,
    secondaryDimensionLengthM: json['SecondaryDimensionLengthM'] as int?,
    secondaryDimensionLengthCm: json['SecondaryDimensionLengthCm'] as int?,
    countryOfOriginId: json['CountryOfOriginId'] as String?,
    countryOfOrigin: json['CountryOfOrigin'] as String?,
    displayInSummaryModeWhenRateIsZero:
        json['DisplayInSummaryModeWhenRateIsZero'] as bool?,
    qcRequired: json['QcRequired'] as bool?,
    qcTime: json['QcTime'] as String?,
    copyAttributesAsNote: json['CopyAttributesAsNote'] as bool?,
    trackAssetUsage: json['TrackAssetUsage'] as bool?,
    trackLampUsage: json['TrackLampUsage'] as bool?,
    trackStrikes: json['TrackStrikes'] as bool?,
    trackCandles: json['TrackCandles'] as bool?,
    lampCount: json['LampCount'] as int?,
    minimumFootCandles: json['MinimumFootCandles'] as int?,
    trackSoftware: json['TrackSoftware'] as bool?,
    softwareVersion: json['SoftwareVersion'] as String?,
    softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
    warehouseSpecificPackage: json['WarehouseSpecificPackage'] as bool?,
    completePackagePrice: json['CompletePackagePrice'] as String?,
    kitPackagePrice: json['KitPackagePrice'] as String?,
    separatePackageOnQuoteOrder: json['SeparatePackageOnQuoteOrder'] as bool?,
    containerId: json['ContainerId'] as String?,
    containerScannableInventoryId:
        json['ContainerScannableInventoryId'] as String?,
    containerScannableICode: json['ContainerScannableICode'] as String?,
    containerScannableDescription:
        json['ContainerScannableDescription'] as String?,
    automaticallyRebuildContainerAtCheckIn:
        json['AutomaticallyRebuildContainerAtCheckIn'] as bool?,
    automaticallyRebuildContainerAtTransferIn:
        json['AutomaticallyRebuildContainerAtTransferIn'] as bool?,
    containerStagingRule: json['ContainerStagingRule'] as String?,
    excludeContainedItemsFromAvailability:
        json['ExcludeContainedItemsFromAvailability'] as bool?,
    useContainerNumber: json['UseContainerNumber'] as bool?,
    containerPackingListBehavior:
        json['ContainerPackingListBehavior'] as String?,
    inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
    inventoryTypeIsSets: json['InventoryTypeIsSets'] as bool?,
    patternId: json['PatternId'] as String?,
    pattern: json['Pattern'] as String?,
    periodId: json['PeriodId'] as String?,
    period: json['Period'] as String?,
    materialId: json['MaterialId'] as String?,
    material: json['Material'] as String?,
    genderId: json['GenderId'] as String?,
    gender: json['Gender'] as String?,
    labelId: json['LabelId'] as String?,
    label: json['Label'] as String?,
    wardrobeSize: json['WardrobeSize'] as String?,
    wardrobePieceCount: json['WardrobePieceCount'] as int?,
    dyed: json['Dyed'] as bool?,
    wardrobeSourceId: json['WardrobeSourceId'] as String?,
    wardrobeSource: json['WardrobeSource'] as String?,
    wardrobeCareId: json['WardrobeCareId'] as String?,
    wardrobeCare: json['WardrobeCare'] as String?,
    cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
    wardrobeDetailedDescription: json['WardrobeDetailedDescription'] as String?,
    webDetailedDescription: json['WebDetailedDescription'] as String?,
    overrideSystemDefaultRevenueAllocationBehavior:
        json['OverrideSystemDefaultRevenueAllocationBehavior'] as bool?,
    allocateRevenueForAccessories:
        json['AllocateRevenueForAccessories'] as bool?,
    packageRevenueCalculationFormula:
        json['PackageRevenueCalculationFormula'] as String?,
    isHazardousMaterial: json['IsHazardousMaterial'] as bool?,
    descriptionWithAkas: json['DescriptionWithAkas'] as String?,
    costCalculation: json['CostCalculation'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    taxable: json['Taxable'] as bool?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    availFor: json['AvailFor'] as String?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    subCategoryCount: json['SubCategoryCount'] as int?,
    subCategoryId: json['SubCategoryId'] as String?,
    subCategory: json['SubCategory'] as String?,
    classification: json['Classification'] as String?,
    classificationDescription: json['ClassificationDescription'] as String?,
    classificationColor: json['ClassificationColor'] as String?,
    unitId: json['UnitId'] as String?,
    unit: json['Unit'] as String?,
    unitType: json['UnitType'] as String?,
    nonDiscountable: json['NonDiscountable'] as bool?,
    overrideProfitAndLossCategory:
        json['OverrideProfitAndLossCategory'] as bool?,
    profitAndLossCategoryId: json['ProfitAndLossCategoryId'] as String?,
    profitAndLossCategory: json['ProfitAndLossCategory'] as String?,
    autoCopyNotesToQuoteOrder: json['AutoCopyNotesToQuoteOrder'] as bool?,
    note: json['Note'] as String?,
    printNoteOnInContract: json['PrintNoteOnInContract'] as bool?,
    printNoteOnOutContract: json['PrintNoteOnOutContract'] as bool?,
    printNoteOnReceiveContract: json['PrintNoteOnReceiveContract'] as bool?,
    printNoteOnReturnContract: json['PrintNoteOnReturnContract'] as bool?,
    printNoteOnInvoice: json['PrintNoteOnInvoice'] as bool?,
    printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
    printNoteOnPickList: json['PrintNoteOnPickList'] as bool?,
    printNoteOnPO: json['PrintNoteOnPO'] as bool?,
    printNoteOnQuote: json['PrintNoteOnQuote'] as bool?,
    printNoteOnReturnList: json['PrintNoteOnReturnList'] as bool?,
    printNoteOnPoReceiveList: json['PrintNoteOnPoReceiveList'] as bool?,
    printNoteOnPoReturnList: json['PrintNoteOnPoReturnList'] as bool?,
    assetAccountId: json['AssetAccountId'] as String?,
    assetAccountNo: json['AssetAccountNo'] as String?,
    assetAccountDescription: json['AssetAccountDescription'] as String?,
    incomeAccountId: json['IncomeAccountId'] as String?,
    incomeAccountNo: json['IncomeAccountNo'] as String?,
    incomeAccountDescription: json['IncomeAccountDescription'] as String?,
    subIncomeAccountId: json['SubIncomeAccountId'] as String?,
    subIncomeAccountNo: json['SubIncomeAccountNo'] as String?,
    subIncomeAccountDescription: json['SubIncomeAccountDescription'] as String?,
    consignmentIncomeAccountId: json['ConsignmentIncomeAccountId'] as String?,
    consignmentIncomeAccountNo: json['ConsignmentIncomeAccountNo'] as String?,
    consignmentIncomeAccountDescription:
        json['ConsignmentIncomeAccountDescription'] as String?,
    ldIncomeAccountId: json['LdIncomeAccountId'] as String?,
    ldIncomeAccountNo: json['LdIncomeAccountNo'] as String?,
    ldIncomeAccountDescription: json['LdIncomeAccountDescription'] as String?,
    equipmentSaleIncomeAccountId:
        json['EquipmentSaleIncomeAccountId'] as String?,
    equipmentSaleIncomeAccountNo:
        json['EquipmentSaleIncomeAccountNo'] as String?,
    equipmentSaleIncomeAccountDescription:
        json['EquipmentSaleIncomeAccountDescription'] as String?,
    expenseAccountId: json['ExpenseAccountId'] as String?,
    expenseAccountNo: json['ExpenseAccountNo'] as String?,
    expenseAccountDescription: json['ExpenseAccountDescription'] as String?,
    costOfGoodsSoldExpenseAccountId:
        json['CostOfGoodsSoldExpenseAccountId'] as String?,
    costOfGoodsSoldExpenseAccountNo:
        json['CostOfGoodsSoldExpenseAccountNo'] as String?,
    costOfGoodsSoldExpenseAccountDescription:
        json['CostOfGoodsSoldExpenseAccountDescription'] as String?,
    costOfGoodsRentedExpenseAccountId:
        json['CostOfGoodsRentedExpenseAccountId'] as String?,
    costOfGoodsRentedExpenseAccountNo:
        json['CostOfGoodsRentedExpenseAccountNo'] as String?,
    costOfGoodsRentedExpenseAccountDescription:
        json['CostOfGoodsRentedExpenseAccountDescription'] as String?,
    depreciationExpenseAccountId:
        json['DepreciationExpenseAccountId'] as String?,
    depreciationExpenseAccountNo:
        json['DepreciationExpenseAccountNo'] as String?,
    depreciationExpenseAccountDescription:
        json['DepreciationExpenseAccountDescription'] as String?,
    accumulatedDepreciationExpenseAccountId:
        json['AccumulatedDepreciationExpenseAccountId'] as String?,
    accumulatedDepreciationExpenseAccountNo:
        json['AccumulatedDepreciationExpenseAccountNo'] as String?,
    accumulatedDepreciationExpenseAccountDescription:
        json['AccumulatedDepreciationExpenseAccountDescription'] as String?,
    originalShowId: json['OriginalShowId'] as String?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    manifestShippingContainer: json['ManifestShippingContainer'] as bool?,
    manifestStandAloneItem: json['ManifestStandAloneItem'] as bool?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    warehouses: (json['Warehouses'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDetailResponseToJson(
            WebApiModulesInventoryRentalInventoryRentalInventoryDetailResponse
                instance) =>
        <String, dynamic>{
          'ExcludeFromReturnOnAsset': instance.excludeFromReturnOnAsset,
          'IsFixedAsset': instance.isFixedAsset,
          'MultiAssignRFIDs': instance.multiAssignRFIDs,
          'MinimumDaysPerWeek': instance.minimumDaysPerWeek,
          'SetOpeningId': instance.setOpeningId,
          'SetOpening': instance.setOpening,
          'WallTypeId': instance.wallTypeId,
          'WallType': instance.wallType,
          'SetSurfaceId': instance.setSurfaceId,
          'SetSurface': instance.setSurface,
          'WallWidthFt': instance.wallWidthFt,
          'WallWidthIn': instance.wallWidthIn,
          'WallHeightFt': instance.wallHeightFt,
          'WallHeightIn': instance.wallHeightIn,
          'WallLengthFt': instance.wallLengthFt,
          'WallLengthIn': instance.wallLengthIn,
          'DailyRate': instance.dailyRate,
          'WeeklyRate': instance.weeklyRate,
          'Week2Rate': instance.week2Rate,
          'Week3Rate': instance.week3Rate,
          'Week4Rate': instance.week4Rate,
          'MonthlyRate': instance.monthlyRate,
          'UnitValue': instance.unitValue,
          'ReplacementCost': instance.replacementCost,
          'InventoryId': instance.inventoryId,
          'InventoryTypeId': instance.inventoryTypeId,
          'InventoryType': instance.inventoryType,
          'AvailableFrom': instance.availableFrom,
          'TrackedBy': instance.trackedBy,
          'ConfirmTrackedBy': instance.confirmTrackedBy,
          'Rank': instance.rank,
          'ManufacturerPartNumber': instance.manufacturerPartNumber,
          'ManufacturerId': instance.manufacturerId,
          'Manufacturer': instance.manufacturer,
          'ManufacturerUrl': instance.manufacturerUrl,
          'ExcludeImageFromQuoteOrderPrint':
              instance.excludeImageFromQuoteOrderPrint,
          'NoAvailabilityCheck': instance.noAvailabilityCheck,
          'AvailabilityManuallyResolveConflicts':
              instance.availabilityManuallyResolveConflicts,
          'SendAvailabilityAlert': instance.sendAvailabilityAlert,
          'PrimaryDimensionUniqueId': instance.primaryDimensionUniqueId,
          'DefaultImperialMetric': instance.defaultImperialMetric,
          'PrimaryDimensionDescription': instance.primaryDimensionDescription,
          'PrimaryDimensionShipWeightLbs':
              instance.primaryDimensionShipWeightLbs,
          'PrimaryDimensionShipWeightOz': instance.primaryDimensionShipWeightOz,
          'PrimaryDimensionWeightInCaseLbs':
              instance.primaryDimensionWeightInCaseLbs,
          'PrimaryDimensionWeightInCaseOz':
              instance.primaryDimensionWeightInCaseOz,
          'PrimaryDimensionWidthFt': instance.primaryDimensionWidthFt,
          'PrimaryDimensionWidthIn': instance.primaryDimensionWidthIn,
          'PrimaryDimensionHeightFt': instance.primaryDimensionHeightFt,
          'PrimaryDimensionHeightIn': instance.primaryDimensionHeightIn,
          'PrimaryDimensionLengthFt': instance.primaryDimensionLengthFt,
          'PrimaryDimensionLengthIn': instance.primaryDimensionLengthIn,
          'PrimaryDimensionShipWeightKg': instance.primaryDimensionShipWeightKg,
          'PrimaryDimensionShipWeightG': instance.primaryDimensionShipWeightG,
          'PrimaryDimensionWeightInCaseKg':
              instance.primaryDimensionWeightInCaseKg,
          'PrimaryDimensionWeightInCaseG':
              instance.primaryDimensionWeightInCaseG,
          'PrimaryDimensionWidthM': instance.primaryDimensionWidthM,
          'PrimaryDimensionWidthCm': instance.primaryDimensionWidthCm,
          'PrimaryDimensionHeightM': instance.primaryDimensionHeightM,
          'PrimaryDimensionHeightCm': instance.primaryDimensionHeightCm,
          'PrimaryDimensionLengthM': instance.primaryDimensionLengthM,
          'PrimaryDimensionLengthCm': instance.primaryDimensionLengthCm,
          'HasSecondaryDimensions': instance.hasSecondaryDimensions,
          'SecondaryDimensionUniqueId': instance.secondaryDimensionUniqueId,
          'SecondaryDimensionDescription':
              instance.secondaryDimensionDescription,
          'SecondaryDimensionShipWeightLbs':
              instance.secondaryDimensionShipWeightLbs,
          'SecondaryDimensionShipWeightOz':
              instance.secondaryDimensionShipWeightOz,
          'SecondaryDimensionWeightInCaseLbs':
              instance.secondaryDimensionWeightInCaseLbs,
          'SecondaryDimensionWeightInCaseOz':
              instance.secondaryDimensionWeightInCaseOz,
          'SecondaryDimensionWidthFt': instance.secondaryDimensionWidthFt,
          'SecondaryDimensionWidthIn': instance.secondaryDimensionWidthIn,
          'SecondaryDimensionHeightFt': instance.secondaryDimensionHeightFt,
          'SecondaryDimensionHeightIn': instance.secondaryDimensionHeightIn,
          'SecondaryDimensionLengthFt': instance.secondaryDimensionLengthFt,
          'SecondaryDimensionLengthIn': instance.secondaryDimensionLengthIn,
          'SecondaryDimensionShipWeightKg':
              instance.secondaryDimensionShipWeightKg,
          'SecondaryDimensionShipWeightG':
              instance.secondaryDimensionShipWeightG,
          'SecondaryDimensionWeightInCaseKg':
              instance.secondaryDimensionWeightInCaseKg,
          'SecondaryDimensionWeightInCaseG':
              instance.secondaryDimensionWeightInCaseG,
          'SecondaryDimensionWidthM': instance.secondaryDimensionWidthM,
          'SecondaryDimensionWidthCm': instance.secondaryDimensionWidthCm,
          'SecondaryDimensionHeightM': instance.secondaryDimensionHeightM,
          'SecondaryDimensionHeightCm': instance.secondaryDimensionHeightCm,
          'SecondaryDimensionLengthM': instance.secondaryDimensionLengthM,
          'SecondaryDimensionLengthCm': instance.secondaryDimensionLengthCm,
          'CountryOfOriginId': instance.countryOfOriginId,
          'CountryOfOrigin': instance.countryOfOrigin,
          'DisplayInSummaryModeWhenRateIsZero':
              instance.displayInSummaryModeWhenRateIsZero,
          'QcRequired': instance.qcRequired,
          'QcTime': instance.qcTime,
          'CopyAttributesAsNote': instance.copyAttributesAsNote,
          'TrackAssetUsage': instance.trackAssetUsage,
          'TrackLampUsage': instance.trackLampUsage,
          'TrackStrikes': instance.trackStrikes,
          'TrackCandles': instance.trackCandles,
          'LampCount': instance.lampCount,
          'MinimumFootCandles': instance.minimumFootCandles,
          'TrackSoftware': instance.trackSoftware,
          'SoftwareVersion': instance.softwareVersion,
          'SoftwareEffectiveDate': instance.softwareEffectiveDate,
          'WarehouseSpecificPackage': instance.warehouseSpecificPackage,
          'CompletePackagePrice': instance.completePackagePrice,
          'KitPackagePrice': instance.kitPackagePrice,
          'SeparatePackageOnQuoteOrder': instance.separatePackageOnQuoteOrder,
          'ContainerId': instance.containerId,
          'ContainerScannableInventoryId':
              instance.containerScannableInventoryId,
          'ContainerScannableICode': instance.containerScannableICode,
          'ContainerScannableDescription':
              instance.containerScannableDescription,
          'AutomaticallyRebuildContainerAtCheckIn':
              instance.automaticallyRebuildContainerAtCheckIn,
          'AutomaticallyRebuildContainerAtTransferIn':
              instance.automaticallyRebuildContainerAtTransferIn,
          'ContainerStagingRule': instance.containerStagingRule,
          'ExcludeContainedItemsFromAvailability':
              instance.excludeContainedItemsFromAvailability,
          'UseContainerNumber': instance.useContainerNumber,
          'ContainerPackingListBehavior': instance.containerPackingListBehavior,
          'InventoryTypeIsWardrobe': instance.inventoryTypeIsWardrobe,
          'InventoryTypeIsSets': instance.inventoryTypeIsSets,
          'PatternId': instance.patternId,
          'Pattern': instance.pattern,
          'PeriodId': instance.periodId,
          'Period': instance.period,
          'MaterialId': instance.materialId,
          'Material': instance.material,
          'GenderId': instance.genderId,
          'Gender': instance.gender,
          'LabelId': instance.labelId,
          'Label': instance.label,
          'WardrobeSize': instance.wardrobeSize,
          'WardrobePieceCount': instance.wardrobePieceCount,
          'Dyed': instance.dyed,
          'WardrobeSourceId': instance.wardrobeSourceId,
          'WardrobeSource': instance.wardrobeSource,
          'WardrobeCareId': instance.wardrobeCareId,
          'WardrobeCare': instance.wardrobeCare,
          'CleaningFeeAmount': instance.cleaningFeeAmount,
          'WardrobeDetailedDescription': instance.wardrobeDetailedDescription,
          'WebDetailedDescription': instance.webDetailedDescription,
          'OverrideSystemDefaultRevenueAllocationBehavior':
              instance.overrideSystemDefaultRevenueAllocationBehavior,
          'AllocateRevenueForAccessories':
              instance.allocateRevenueForAccessories,
          'PackageRevenueCalculationFormula':
              instance.packageRevenueCalculationFormula,
          'IsHazardousMaterial': instance.isHazardousMaterial,
          'DescriptionWithAkas': instance.descriptionWithAkas,
          'CostCalculation': instance.costCalculation,
          'Quantity': instance.quantity,
          'AisleLocation': instance.aisleLocation,
          'ShelfLocation': instance.shelfLocation,
          'Taxable': instance.taxable,
          'ICode': instance.iCode,
          'Description': instance.description,
          'AvailFor': instance.availFor,
          'CategoryId': instance.categoryId,
          'Category': instance.category,
          'SubCategoryCount': instance.subCategoryCount,
          'SubCategoryId': instance.subCategoryId,
          'SubCategory': instance.subCategory,
          'Classification': instance.classification,
          'ClassificationDescription': instance.classificationDescription,
          'ClassificationColor': instance.classificationColor,
          'UnitId': instance.unitId,
          'Unit': instance.unit,
          'UnitType': instance.unitType,
          'NonDiscountable': instance.nonDiscountable,
          'OverrideProfitAndLossCategory':
              instance.overrideProfitAndLossCategory,
          'ProfitAndLossCategoryId': instance.profitAndLossCategoryId,
          'ProfitAndLossCategory': instance.profitAndLossCategory,
          'AutoCopyNotesToQuoteOrder': instance.autoCopyNotesToQuoteOrder,
          'Note': instance.note,
          'PrintNoteOnInContract': instance.printNoteOnInContract,
          'PrintNoteOnOutContract': instance.printNoteOnOutContract,
          'PrintNoteOnReceiveContract': instance.printNoteOnReceiveContract,
          'PrintNoteOnReturnContract': instance.printNoteOnReturnContract,
          'PrintNoteOnInvoice': instance.printNoteOnInvoice,
          'PrintNoteOnOrder': instance.printNoteOnOrder,
          'PrintNoteOnPickList': instance.printNoteOnPickList,
          'PrintNoteOnPO': instance.printNoteOnPO,
          'PrintNoteOnQuote': instance.printNoteOnQuote,
          'PrintNoteOnReturnList': instance.printNoteOnReturnList,
          'PrintNoteOnPoReceiveList': instance.printNoteOnPoReceiveList,
          'PrintNoteOnPoReturnList': instance.printNoteOnPoReturnList,
          'AssetAccountId': instance.assetAccountId,
          'AssetAccountNo': instance.assetAccountNo,
          'AssetAccountDescription': instance.assetAccountDescription,
          'IncomeAccountId': instance.incomeAccountId,
          'IncomeAccountNo': instance.incomeAccountNo,
          'IncomeAccountDescription': instance.incomeAccountDescription,
          'SubIncomeAccountId': instance.subIncomeAccountId,
          'SubIncomeAccountNo': instance.subIncomeAccountNo,
          'SubIncomeAccountDescription': instance.subIncomeAccountDescription,
          'ConsignmentIncomeAccountId': instance.consignmentIncomeAccountId,
          'ConsignmentIncomeAccountNo': instance.consignmentIncomeAccountNo,
          'ConsignmentIncomeAccountDescription':
              instance.consignmentIncomeAccountDescription,
          'LdIncomeAccountId': instance.ldIncomeAccountId,
          'LdIncomeAccountNo': instance.ldIncomeAccountNo,
          'LdIncomeAccountDescription': instance.ldIncomeAccountDescription,
          'EquipmentSaleIncomeAccountId': instance.equipmentSaleIncomeAccountId,
          'EquipmentSaleIncomeAccountNo': instance.equipmentSaleIncomeAccountNo,
          'EquipmentSaleIncomeAccountDescription':
              instance.equipmentSaleIncomeAccountDescription,
          'ExpenseAccountId': instance.expenseAccountId,
          'ExpenseAccountNo': instance.expenseAccountNo,
          'ExpenseAccountDescription': instance.expenseAccountDescription,
          'CostOfGoodsSoldExpenseAccountId':
              instance.costOfGoodsSoldExpenseAccountId,
          'CostOfGoodsSoldExpenseAccountNo':
              instance.costOfGoodsSoldExpenseAccountNo,
          'CostOfGoodsSoldExpenseAccountDescription':
              instance.costOfGoodsSoldExpenseAccountDescription,
          'CostOfGoodsRentedExpenseAccountId':
              instance.costOfGoodsRentedExpenseAccountId,
          'CostOfGoodsRentedExpenseAccountNo':
              instance.costOfGoodsRentedExpenseAccountNo,
          'CostOfGoodsRentedExpenseAccountDescription':
              instance.costOfGoodsRentedExpenseAccountDescription,
          'DepreciationExpenseAccountId': instance.depreciationExpenseAccountId,
          'DepreciationExpenseAccountNo': instance.depreciationExpenseAccountNo,
          'DepreciationExpenseAccountDescription':
              instance.depreciationExpenseAccountDescription,
          'AccumulatedDepreciationExpenseAccountId':
              instance.accumulatedDepreciationExpenseAccountId,
          'AccumulatedDepreciationExpenseAccountNo':
              instance.accumulatedDepreciationExpenseAccountNo,
          'AccumulatedDepreciationExpenseAccountDescription':
              instance.accumulatedDepreciationExpenseAccountDescription,
          'OriginalShowId': instance.originalShowId,
          'Inactive': instance.inactive,
          'DateStamp': instance.dateStamp,
          'ManifestShippingContainer': instance.manifestShippingContainer,
          'ManifestStandAloneItem': instance.manifestStandAloneItem,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          'Warehouses': instance.warehouses?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesInventoryRentalInventoryRentalInventoryDocument
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRentalInventoryRentalInventoryDocument(
    inventoryId: json['InventoryId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentToJson(
            WebApiModulesInventoryRentalInventoryRentalInventoryDocument
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'copying': instance.copying,
          'DocumentId': instance.documentId,
          'DocumentTypeId': instance.documentTypeId,
          'UniqueId1': instance.uniqueId1,
          'UniqueId2': instance.uniqueId2,
          'UniqueId1Int': instance.uniqueId1Int,
          'Description': instance.description,
          'InputByUsersId': instance.inputByUsersId,
          'AttachDate': instance.attachDate,
          'AttachTime': instance.attachTime,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'DateStamp': instance.dateStamp,
          'Extension': instance.extension,
          'DocumentType': instance.documentType,
          'InputBy': instance.inputBy,
          'HasImage': instance.hasImage,
          'HasFile': instance.hasFile,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPostRequest
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPostRequest(
    inventoryId: json['InventoryId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPostRequestToJson(
            WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPostRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPutRequest
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPutRequest(
    inventoryId: json['InventoryId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPutRequestToJson(
            WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPutRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'DocumentId': instance.documentId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesInventoryRepairRepair _$WebApiModulesInventoryRepairRepairFromJson(
    Map<String, dynamic> json) {
  return WebApiModulesInventoryRepairRepair(
    repairId: json['RepairId'] as String?,
    locationId: json['LocationId'] as String?,
    location: json['Location'] as String?,
    billingLocationId: json['BillingLocationId'] as String?,
    billingLocation: json['BillingLocation'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    itemWarehouseId: json['ItemWarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    billingWarehouseId: json['BillingWarehouseId'] as String?,
    billingWarehouse: json['BillingWarehouse'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    pendingRepair: json['PendingRepair'] as bool?,
    repairNumber: json['RepairNumber'] as String?,
    repairNumberColor: json['RepairNumberColor'] as String?,
    repairDate: json['RepairDate'] as String?,
    outsideRepair: json['OutsideRepair'] as bool?,
    outsideRepairPoNumber: json['OutsideRepairPoNumber'] as String?,
    itemId: json['ItemId'] as String?,
    barCode: json['BarCode'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    rfId: json['RfId'] as String?,
    barCodeColor: json['BarCodeColor'] as String?,
    inventoryId: json['InventoryId'] as String?,
    availFor: json['AvailFor'] as String?,
    availForDisplay: json['AvailForDisplay'] as String?,
    iCode: json['ICode'] as String?,
    iCodeColor: json['ICodeColor'] as String?,
    itemDescription: json['ItemDescription'] as String?,
    quantity: json['Quantity'] as int?,
    quantityColor: json['QuantityColor'] as String?,
    damageDealId: json['DamageDealId'] as String?,
    damageDeal: json['DamageDeal'] as String?,
    damageDealColor: json['DamageDealColor'] as String?,
    damageOrderId: json['DamageOrderId'] as String?,
    damageOrderNumber: json['DamageOrderNumber'] as String?,
    damageOrderDescription: json['DamageOrderDescription'] as String?,
    damageContractId: json['DamageContractId'] as String?,
    damageContractNumber: json['DamageContractNumber'] as String?,
    damageContractDate: json['DamageContractDate'] as String?,
    damageScannedById: json['DamageScannedById'] as String?,
    damageScannedBy: json['DamageScannedBy'] as String?,
    lossAndDamageOrderId: json['LossAndDamageOrderId'] as String?,
    lossAndDamageOrderNumber: json['LossAndDamageOrderNumber'] as String?,
    lossAndDamageOrderDescription:
        json['LossAndDamageOrderDescription'] as String?,
    chargeOrderId: json['ChargeOrderId'] as String?,
    chargeOrderNumber: json['ChargeOrderNumber'] as String?,
    chargeOrderDescription: json['ChargeOrderDescription'] as String?,
    chargeInvoiceId: json['ChargeInvoiceId'] as String?,
    chargeInvoiceNumber: json['ChargeInvoiceNumber'] as String?,
    chargeInvoiceDescription: json['ChargeInvoiceDescription'] as String?,
    taxOptionId: json['TaxOptionId'] as String?,
    taxOption: json['TaxOption'] as String?,
    taxId: json['TaxId'] as String?,
    rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
    salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
    laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
    rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
    salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
    laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
    status: json['Status'] as String?,
    statusColor: json['StatusColor'] as String?,
    statusDate: json['StatusDate'] as String?,
    billable: json['Billable'] as bool?,
    billableDisplay: json['BillableDisplay'] as String?,
    notBilled: json['NotBilled'] as bool?,
    priority: json['Priority'] as String?,
    priorityDescription: json['PriorityDescription'] as String?,
    priorityColor: json['PriorityColor'] as String?,
    repairType: json['RepairType'] as String?,
    poPending: json['PoPending'] as bool?,
    poNumber: json['PoNumber'] as String?,
    damage: json['Damage'] as String?,
    correction: json['Correction'] as String?,
    released: json['Released'] as bool?,
    releasedQuantity: (json['ReleasedQuantity'] as num?)?.toDouble(),
    transferId: json['TransferId'] as String?,
    transferredFromWarehouseId: json['TransferredFromWarehouseId'] as String?,
    dueDate: json['DueDate'] as String?,
    estimateByUserId: json['EstimateByUserId'] as String?,
    estimateBy: json['EstimateBy'] as String?,
    estimateDate: json['EstimateDate'] as String?,
    completeByUserId: json['CompleteByUserId'] as String?,
    completeBy: json['CompleteBy'] as String?,
    completeDate: json['CompleteDate'] as String?,
    inputDate: json['InputDate'] as String?,
    inputByUserId: json['InputByUserId'] as String?,
    repairItemStatusId: json['RepairItemStatusId'] as String?,
    repairItemStatus: json['RepairItemStatus'] as String?,
    cost: (json['Cost'] as num?)?.toDouble(),
    currencyId: json['CurrencyId'] as String?,
    officeLocationDefaultCurrencyId:
        json['OfficeLocationDefaultCurrencyId'] as String?,
    currencyCode: json['CurrencyCode'] as String?,
    currencySymbol: json['CurrencySymbol'] as String?,
    currencyColor: json['CurrencyColor'] as String?,
    notes: json['Notes'] as String?,
    inactive: json['Inactive'] as bool?,
    qcRequired: json['QcRequired'] as bool?,
    autoCompleteQC: json['AutoCompleteQC'] as bool?,
    qcNote: json['QcNote'] as String?,
    conditionId: json['ConditionId'] as String?,
    condition: json['Condition'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesInventoryRepairRepairToJson(
        WebApiModulesInventoryRepairRepair instance) =>
    <String, dynamic>{
      'RepairId': instance.repairId,
      'LocationId': instance.locationId,
      'Location': instance.location,
      'BillingLocationId': instance.billingLocationId,
      'BillingLocation': instance.billingLocation,
      'WarehouseId': instance.warehouseId,
      'ItemWarehouseId': instance.itemWarehouseId,
      'Warehouse': instance.warehouse,
      'WarehouseCode': instance.warehouseCode,
      'BillingWarehouseId': instance.billingWarehouseId,
      'BillingWarehouse': instance.billingWarehouse,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'InventoryTypeId': instance.inventoryTypeId,
      'InventoryType': instance.inventoryType,
      'PendingRepair': instance.pendingRepair,
      'RepairNumber': instance.repairNumber,
      'RepairNumberColor': instance.repairNumberColor,
      'RepairDate': instance.repairDate,
      'OutsideRepair': instance.outsideRepair,
      'OutsideRepairPoNumber': instance.outsideRepairPoNumber,
      'ItemId': instance.itemId,
      'BarCode': instance.barCode,
      'SerialNumber': instance.serialNumber,
      'RfId': instance.rfId,
      'BarCodeColor': instance.barCodeColor,
      'InventoryId': instance.inventoryId,
      'AvailFor': instance.availFor,
      'AvailForDisplay': instance.availForDisplay,
      'ICode': instance.iCode,
      'ICodeColor': instance.iCodeColor,
      'ItemDescription': instance.itemDescription,
      'Quantity': instance.quantity,
      'QuantityColor': instance.quantityColor,
      'DamageDealId': instance.damageDealId,
      'DamageDeal': instance.damageDeal,
      'DamageDealColor': instance.damageDealColor,
      'DamageOrderId': instance.damageOrderId,
      'DamageOrderNumber': instance.damageOrderNumber,
      'DamageOrderDescription': instance.damageOrderDescription,
      'DamageContractId': instance.damageContractId,
      'DamageContractNumber': instance.damageContractNumber,
      'DamageContractDate': instance.damageContractDate,
      'DamageScannedById': instance.damageScannedById,
      'DamageScannedBy': instance.damageScannedBy,
      'LossAndDamageOrderId': instance.lossAndDamageOrderId,
      'LossAndDamageOrderNumber': instance.lossAndDamageOrderNumber,
      'LossAndDamageOrderDescription': instance.lossAndDamageOrderDescription,
      'ChargeOrderId': instance.chargeOrderId,
      'ChargeOrderNumber': instance.chargeOrderNumber,
      'ChargeOrderDescription': instance.chargeOrderDescription,
      'ChargeInvoiceId': instance.chargeInvoiceId,
      'ChargeInvoiceNumber': instance.chargeInvoiceNumber,
      'ChargeInvoiceDescription': instance.chargeInvoiceDescription,
      'TaxOptionId': instance.taxOptionId,
      'TaxOption': instance.taxOption,
      'TaxId': instance.taxId,
      'RentalTaxRate1': instance.rentalTaxRate1,
      'SalesTaxRate1': instance.salesTaxRate1,
      'LaborTaxRate1': instance.laborTaxRate1,
      'RentalTaxRate2': instance.rentalTaxRate2,
      'SalesTaxRate2': instance.salesTaxRate2,
      'LaborTaxRate2': instance.laborTaxRate2,
      'Status': instance.status,
      'StatusColor': instance.statusColor,
      'StatusDate': instance.statusDate,
      'Billable': instance.billable,
      'BillableDisplay': instance.billableDisplay,
      'NotBilled': instance.notBilled,
      'Priority': instance.priority,
      'PriorityDescription': instance.priorityDescription,
      'PriorityColor': instance.priorityColor,
      'RepairType': instance.repairType,
      'PoPending': instance.poPending,
      'PoNumber': instance.poNumber,
      'Damage': instance.damage,
      'Correction': instance.correction,
      'Released': instance.released,
      'ReleasedQuantity': instance.releasedQuantity,
      'TransferId': instance.transferId,
      'TransferredFromWarehouseId': instance.transferredFromWarehouseId,
      'DueDate': instance.dueDate,
      'EstimateByUserId': instance.estimateByUserId,
      'EstimateBy': instance.estimateBy,
      'EstimateDate': instance.estimateDate,
      'CompleteByUserId': instance.completeByUserId,
      'CompleteBy': instance.completeBy,
      'CompleteDate': instance.completeDate,
      'InputDate': instance.inputDate,
      'InputByUserId': instance.inputByUserId,
      'RepairItemStatusId': instance.repairItemStatusId,
      'RepairItemStatus': instance.repairItemStatus,
      'Cost': instance.cost,
      'CurrencyId': instance.currencyId,
      'OfficeLocationDefaultCurrencyId':
          instance.officeLocationDefaultCurrencyId,
      'CurrencyCode': instance.currencyCode,
      'CurrencySymbol': instance.currencySymbol,
      'CurrencyColor': instance.currencyColor,
      'Notes': instance.notes,
      'Inactive': instance.inactive,
      'QcRequired': instance.qcRequired,
      'AutoCompleteQC': instance.autoCompleteQC,
      'QcNote': instance.qcNote,
      'ConditionId': instance.conditionId,
      'Condition': instance.condition,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventoryRepairRepairDocument
    _$WebApiModulesInventoryRepairRepairDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRepairRepairDocument(
    repairId: json['RepairId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesInventoryRepairRepairDocumentToJson(
        WebApiModulesInventoryRepairRepairDocument instance) =>
    <String, dynamic>{
      'RepairId': instance.repairId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventoryRepairRepairDocumentPostRequest
    _$WebApiModulesInventoryRepairRepairDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRepairRepairDocumentPostRequest(
    repairId: json['RepairId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryRepairRepairDocumentPostRequestToJson(
            WebApiModulesInventoryRepairRepairDocumentPostRequest instance) =>
        <String, dynamic>{
          'RepairId': instance.repairId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesInventoryRepairRepairDocumentPutRequest
    _$WebApiModulesInventoryRepairRepairDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRepairRepairDocumentPutRequest(
    repairId: json['RepairId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryRepairRepairDocumentPutRequestToJson(
            WebApiModulesInventoryRepairRepairDocumentPutRequest instance) =>
        <String, dynamic>{
          'RepairId': instance.repairId,
          'DocumentId': instance.documentId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesInventoryRepairRepairReleaseItemsResponse
    _$WebApiModulesInventoryRepairRepairReleaseItemsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRepairRepairReleaseItemsResponse(
    repair: json['repair'] == null
        ? null
        : WebApiModulesInventoryRepairRepair.fromJson(
            json['repair'] as Map<String, dynamic>),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventoryRepairRepairReleaseItemsResponseToJson(
            WebApiModulesInventoryRepairRepairReleaseItemsResponse instance) =>
        <String, dynamic>{
          'repair': instance.repair?.toJson(),
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesInventoryRepairToggleRepairCompleteResponse
    _$WebApiModulesInventoryRepairToggleRepairCompleteResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRepairToggleRepairCompleteResponse(
    repair: json['repair'] == null
        ? null
        : WebApiModulesInventoryRepairRepair.fromJson(
            json['repair'] as Map<String, dynamic>),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesInventoryRepairToggleRepairCompleteResponseToJson(
        WebApiModulesInventoryRepairToggleRepairCompleteResponse instance) =>
    <String, dynamic>{
      'repair': instance.repair?.toJson(),
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesInventoryRepairToggleRepairEstimateResponse
    _$WebApiModulesInventoryRepairToggleRepairEstimateResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRepairToggleRepairEstimateResponse(
    repair: json['repair'] == null
        ? null
        : WebApiModulesInventoryRepairRepair.fromJson(
            json['repair'] as Map<String, dynamic>),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesInventoryRepairToggleRepairEstimateResponseToJson(
        WebApiModulesInventoryRepairToggleRepairEstimateResponse instance) =>
    <String, dynamic>{
      'repair': instance.repair?.toJson(),
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesInventoryRepairVoidRepairResponse
    _$WebApiModulesInventoryRepairVoidRepairResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventoryRepairVoidRepairResponse(
    repair: json['repair'] == null
        ? null
        : WebApiModulesInventoryRepairRepair.fromJson(
            json['repair'] as Map<String, dynamic>),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesInventoryRepairVoidRepairResponseToJson(
        WebApiModulesInventoryRepairVoidRepairResponse instance) =>
    <String, dynamic>{
      'repair': instance.repair?.toJson(),
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesInventoryRetiredRetired
    _$WebApiModulesInventoryRetiredRetiredFromJson(Map<String, dynamic> json) {
  return WebApiModulesInventoryRetiredRetired(
    retiredId: json['RetiredId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    barCode: json['BarCode'] as String?,
    itemId: json['ItemId'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    consignorId: json['ConsignorId'] as String?,
    consignor: json['Consignor'] as String?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
    agreementNumber: json['AgreementNumber'] as String?,
    retiredDate: json['RetiredDate'] as String?,
    retiredReason: json['RetiredReason'] as String?,
    retiredReasonType: json['RetiredReasonType'] as String?,
    retiredBy: json['RetiredBy'] as String?,
    retiredReasonId: json['RetiredReasonId'] as String?,
    retiredByUserId: json['RetiredByUserId'] as String?,
    retiredNotes: json['RetiredNotes'] as String?,
    retiredQuantity: (json['RetiredQuantity'] as num?)?.toDouble(),
    unretiredQuantity: (json['UnretiredQuantity'] as num?)?.toDouble(),
    lostOrderId: json['LostOrderId'] as String?,
    lostOrderNumber: json['LostOrderNumber'] as String?,
    lostName: json['LostName'] as String?,
    lostAddress1: json['LostAddress1'] as String?,
    lostAddress2: json['LostAddress2'] as String?,
    lostCity: json['LostCity'] as String?,
    lostState: json['LostState'] as String?,
    lostZipCode: json['LostZipCode'] as String?,
    lostPhone: json['LostPhone'] as String?,
    lostCountryId: json['LostCountryId'] as String?,
    lostCountry: json['LostCountry'] as String?,
    soldToOrderId: json['SoldToOrderId'] as String?,
    soldToOrderItemId: json['SoldToOrderItemId'] as String?,
    soldToOrderNumber: json['SoldToOrderNumber'] as String?,
    soldDate: json['SoldDate'] as String?,
    soldAmount: json['SoldAmount'] as String?,
    soldToName: json['SoldToName'] as String?,
    soldToAddress1: json['SoldToAddress1'] as String?,
    soldToAddress2: json['SoldToAddress2'] as String?,
    soldToCity: json['SoldToCity'] as String?,
    soldToState: json['SoldToState'] as String?,
    soldToZipCode: json['SoldToZipCode'] as String?,
    soldToPhone: json['SoldToPhone'] as String?,
    soldToCountryId: json['SoldToCountryId'] as String?,
    soldToCountry: json['SoldToCountry'] as String?,
    soldCurrencyId: json['SoldCurrencyId'] as String?,
    soldCurrency: json['SoldCurrency'] as String?,
    soldCurrencyCode: json['SoldCurrencyCode'] as String?,
    soldCurrencySymbol: json['SoldCurrencySymbol'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesInventoryRetiredRetiredToJson(
        WebApiModulesInventoryRetiredRetired instance) =>
    <String, dynamic>{
      'RetiredId': instance.retiredId,
      'InventoryId': instance.inventoryId,
      'ICode': instance.iCode,
      'Description': instance.description,
      'BarCode': instance.barCode,
      'ItemId': instance.itemId,
      'SerialNumber': instance.serialNumber,
      'WarehouseId': instance.warehouseId,
      'WarehouseCode': instance.warehouseCode,
      'Warehouse': instance.warehouse,
      'ConsignorId': instance.consignorId,
      'Consignor': instance.consignor,
      'ConsignorAgreementId': instance.consignorAgreementId,
      'AgreementNumber': instance.agreementNumber,
      'RetiredDate': instance.retiredDate,
      'RetiredReason': instance.retiredReason,
      'RetiredReasonType': instance.retiredReasonType,
      'RetiredBy': instance.retiredBy,
      'RetiredReasonId': instance.retiredReasonId,
      'RetiredByUserId': instance.retiredByUserId,
      'RetiredNotes': instance.retiredNotes,
      'RetiredQuantity': instance.retiredQuantity,
      'UnretiredQuantity': instance.unretiredQuantity,
      'LostOrderId': instance.lostOrderId,
      'LostOrderNumber': instance.lostOrderNumber,
      'LostName': instance.lostName,
      'LostAddress1': instance.lostAddress1,
      'LostAddress2': instance.lostAddress2,
      'LostCity': instance.lostCity,
      'LostState': instance.lostState,
      'LostZipCode': instance.lostZipCode,
      'LostPhone': instance.lostPhone,
      'LostCountryId': instance.lostCountryId,
      'LostCountry': instance.lostCountry,
      'SoldToOrderId': instance.soldToOrderId,
      'SoldToOrderItemId': instance.soldToOrderItemId,
      'SoldToOrderNumber': instance.soldToOrderNumber,
      'SoldDate': instance.soldDate,
      'SoldAmount': instance.soldAmount,
      'SoldToName': instance.soldToName,
      'SoldToAddress1': instance.soldToAddress1,
      'SoldToAddress2': instance.soldToAddress2,
      'SoldToCity': instance.soldToCity,
      'SoldToState': instance.soldToState,
      'SoldToZipCode': instance.soldToZipCode,
      'SoldToPhone': instance.soldToPhone,
      'SoldToCountryId': instance.soldToCountryId,
      'SoldToCountry': instance.soldToCountry,
      'SoldCurrencyId': instance.soldCurrencyId,
      'SoldCurrency': instance.soldCurrency,
      'SoldCurrencyCode': instance.soldCurrencyCode,
      'SoldCurrencySymbol': instance.soldCurrencySymbol,
      'InventoryTypeId': instance.inventoryTypeId,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventorySalesInventorySalesInventory
    _$WebApiModulesInventorySalesInventorySalesInventoryFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventorySalesInventorySalesInventory(
    price: (json['Price'] as num?)?.toDouble(),
    defaultCost: (json['DefaultCost'] as num?)?.toDouble(),
    averageCost: (json['AverageCost'] as num?)?.toDouble(),
    inventoryId: json['InventoryId'] as String?,
    inventoryTypeId: json['InventoryTypeId'] as String?,
    inventoryType: json['InventoryType'] as String?,
    availableFrom: json['AvailableFrom'] as String?,
    trackedBy: json['TrackedBy'] as String?,
    confirmTrackedBy: json['ConfirmTrackedBy'] as String?,
    rank: json['Rank'] as String?,
    manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
    manufacturerId: json['ManufacturerId'] as String?,
    manufacturer: json['Manufacturer'] as String?,
    manufacturerUrl: json['ManufacturerUrl'] as String?,
    excludeImageFromQuoteOrderPrint:
        json['ExcludeImageFromQuoteOrderPrint'] as bool?,
    noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
    availabilityManuallyResolveConflicts:
        json['AvailabilityManuallyResolveConflicts'] as bool?,
    sendAvailabilityAlert: json['SendAvailabilityAlert'] as bool?,
    primaryDimensionUniqueId: json['PrimaryDimensionUniqueId'] as String?,
    defaultImperialMetric: json['DefaultImperialMetric'] as String?,
    primaryDimensionDescription: json['PrimaryDimensionDescription'] as String?,
    primaryDimensionShipWeightLbs:
        json['PrimaryDimensionShipWeightLbs'] as int?,
    primaryDimensionShipWeightOz: json['PrimaryDimensionShipWeightOz'] as int?,
    primaryDimensionWeightInCaseLbs:
        json['PrimaryDimensionWeightInCaseLbs'] as int?,
    primaryDimensionWeightInCaseOz:
        json['PrimaryDimensionWeightInCaseOz'] as int?,
    primaryDimensionWidthFt: json['PrimaryDimensionWidthFt'] as int?,
    primaryDimensionWidthIn: json['PrimaryDimensionWidthIn'] as int?,
    primaryDimensionHeightFt: json['PrimaryDimensionHeightFt'] as int?,
    primaryDimensionHeightIn: json['PrimaryDimensionHeightIn'] as int?,
    primaryDimensionLengthFt: json['PrimaryDimensionLengthFt'] as int?,
    primaryDimensionLengthIn: json['PrimaryDimensionLengthIn'] as int?,
    primaryDimensionShipWeightKg: json['PrimaryDimensionShipWeightKg'] as int?,
    primaryDimensionShipWeightG: json['PrimaryDimensionShipWeightG'] as int?,
    primaryDimensionWeightInCaseKg:
        json['PrimaryDimensionWeightInCaseKg'] as int?,
    primaryDimensionWeightInCaseG:
        json['PrimaryDimensionWeightInCaseG'] as int?,
    primaryDimensionWidthM: json['PrimaryDimensionWidthM'] as int?,
    primaryDimensionWidthCm: json['PrimaryDimensionWidthCm'] as int?,
    primaryDimensionHeightM: json['PrimaryDimensionHeightM'] as int?,
    primaryDimensionHeightCm: json['PrimaryDimensionHeightCm'] as int?,
    primaryDimensionLengthM: json['PrimaryDimensionLengthM'] as int?,
    primaryDimensionLengthCm: json['PrimaryDimensionLengthCm'] as int?,
    hasSecondaryDimensions: json['HasSecondaryDimensions'] as bool?,
    secondaryDimensionUniqueId: json['SecondaryDimensionUniqueId'] as String?,
    secondaryDimensionDescription:
        json['SecondaryDimensionDescription'] as String?,
    secondaryDimensionShipWeightLbs:
        json['SecondaryDimensionShipWeightLbs'] as int?,
    secondaryDimensionShipWeightOz:
        json['SecondaryDimensionShipWeightOz'] as int?,
    secondaryDimensionWeightInCaseLbs:
        json['SecondaryDimensionWeightInCaseLbs'] as int?,
    secondaryDimensionWeightInCaseOz:
        json['SecondaryDimensionWeightInCaseOz'] as int?,
    secondaryDimensionWidthFt: json['SecondaryDimensionWidthFt'] as int?,
    secondaryDimensionWidthIn: json['SecondaryDimensionWidthIn'] as int?,
    secondaryDimensionHeightFt: json['SecondaryDimensionHeightFt'] as int?,
    secondaryDimensionHeightIn: json['SecondaryDimensionHeightIn'] as int?,
    secondaryDimensionLengthFt: json['SecondaryDimensionLengthFt'] as int?,
    secondaryDimensionLengthIn: json['SecondaryDimensionLengthIn'] as int?,
    secondaryDimensionShipWeightKg:
        json['SecondaryDimensionShipWeightKg'] as int?,
    secondaryDimensionShipWeightG:
        json['SecondaryDimensionShipWeightG'] as int?,
    secondaryDimensionWeightInCaseKg:
        json['SecondaryDimensionWeightInCaseKg'] as int?,
    secondaryDimensionWeightInCaseG:
        json['SecondaryDimensionWeightInCaseG'] as int?,
    secondaryDimensionWidthM: json['SecondaryDimensionWidthM'] as int?,
    secondaryDimensionWidthCm: json['SecondaryDimensionWidthCm'] as int?,
    secondaryDimensionHeightM: json['SecondaryDimensionHeightM'] as int?,
    secondaryDimensionHeightCm: json['SecondaryDimensionHeightCm'] as int?,
    secondaryDimensionLengthM: json['SecondaryDimensionLengthM'] as int?,
    secondaryDimensionLengthCm: json['SecondaryDimensionLengthCm'] as int?,
    countryOfOriginId: json['CountryOfOriginId'] as String?,
    countryOfOrigin: json['CountryOfOrigin'] as String?,
    displayInSummaryModeWhenRateIsZero:
        json['DisplayInSummaryModeWhenRateIsZero'] as bool?,
    qcRequired: json['QcRequired'] as bool?,
    qcTime: json['QcTime'] as String?,
    copyAttributesAsNote: json['CopyAttributesAsNote'] as bool?,
    trackAssetUsage: json['TrackAssetUsage'] as bool?,
    trackLampUsage: json['TrackLampUsage'] as bool?,
    trackStrikes: json['TrackStrikes'] as bool?,
    trackCandles: json['TrackCandles'] as bool?,
    lampCount: json['LampCount'] as int?,
    minimumFootCandles: json['MinimumFootCandles'] as int?,
    trackSoftware: json['TrackSoftware'] as bool?,
    softwareVersion: json['SoftwareVersion'] as String?,
    softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
    warehouseSpecificPackage: json['WarehouseSpecificPackage'] as bool?,
    completePackagePrice: json['CompletePackagePrice'] as String?,
    kitPackagePrice: json['KitPackagePrice'] as String?,
    separatePackageOnQuoteOrder: json['SeparatePackageOnQuoteOrder'] as bool?,
    containerId: json['ContainerId'] as String?,
    containerScannableInventoryId:
        json['ContainerScannableInventoryId'] as String?,
    containerScannableICode: json['ContainerScannableICode'] as String?,
    containerScannableDescription:
        json['ContainerScannableDescription'] as String?,
    automaticallyRebuildContainerAtCheckIn:
        json['AutomaticallyRebuildContainerAtCheckIn'] as bool?,
    automaticallyRebuildContainerAtTransferIn:
        json['AutomaticallyRebuildContainerAtTransferIn'] as bool?,
    containerStagingRule: json['ContainerStagingRule'] as String?,
    excludeContainedItemsFromAvailability:
        json['ExcludeContainedItemsFromAvailability'] as bool?,
    useContainerNumber: json['UseContainerNumber'] as bool?,
    containerPackingListBehavior:
        json['ContainerPackingListBehavior'] as String?,
    inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
    inventoryTypeIsSets: json['InventoryTypeIsSets'] as bool?,
    patternId: json['PatternId'] as String?,
    pattern: json['Pattern'] as String?,
    periodId: json['PeriodId'] as String?,
    period: json['Period'] as String?,
    materialId: json['MaterialId'] as String?,
    material: json['Material'] as String?,
    genderId: json['GenderId'] as String?,
    gender: json['Gender'] as String?,
    labelId: json['LabelId'] as String?,
    label: json['Label'] as String?,
    wardrobeSize: json['WardrobeSize'] as String?,
    wardrobePieceCount: json['WardrobePieceCount'] as int?,
    dyed: json['Dyed'] as bool?,
    wardrobeSourceId: json['WardrobeSourceId'] as String?,
    wardrobeSource: json['WardrobeSource'] as String?,
    wardrobeCareId: json['WardrobeCareId'] as String?,
    wardrobeCare: json['WardrobeCare'] as String?,
    cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
    wardrobeDetailedDescription: json['WardrobeDetailedDescription'] as String?,
    webDetailedDescription: json['WebDetailedDescription'] as String?,
    overrideSystemDefaultRevenueAllocationBehavior:
        json['OverrideSystemDefaultRevenueAllocationBehavior'] as bool?,
    allocateRevenueForAccessories:
        json['AllocateRevenueForAccessories'] as bool?,
    packageRevenueCalculationFormula:
        json['PackageRevenueCalculationFormula'] as String?,
    isHazardousMaterial: json['IsHazardousMaterial'] as bool?,
    descriptionWithAkas: json['DescriptionWithAkas'] as String?,
    costCalculation: json['CostCalculation'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
    aisleLocation: json['AisleLocation'] as String?,
    shelfLocation: json['ShelfLocation'] as String?,
    taxable: json['Taxable'] as bool?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    availFor: json['AvailFor'] as String?,
    categoryId: json['CategoryId'] as String?,
    category: json['Category'] as String?,
    subCategoryCount: json['SubCategoryCount'] as int?,
    subCategoryId: json['SubCategoryId'] as String?,
    subCategory: json['SubCategory'] as String?,
    classification: json['Classification'] as String?,
    classificationDescription: json['ClassificationDescription'] as String?,
    classificationColor: json['ClassificationColor'] as String?,
    unitId: json['UnitId'] as String?,
    unit: json['Unit'] as String?,
    unitType: json['UnitType'] as String?,
    nonDiscountable: json['NonDiscountable'] as bool?,
    overrideProfitAndLossCategory:
        json['OverrideProfitAndLossCategory'] as bool?,
    profitAndLossCategoryId: json['ProfitAndLossCategoryId'] as String?,
    profitAndLossCategory: json['ProfitAndLossCategory'] as String?,
    autoCopyNotesToQuoteOrder: json['AutoCopyNotesToQuoteOrder'] as bool?,
    note: json['Note'] as String?,
    printNoteOnInContract: json['PrintNoteOnInContract'] as bool?,
    printNoteOnOutContract: json['PrintNoteOnOutContract'] as bool?,
    printNoteOnReceiveContract: json['PrintNoteOnReceiveContract'] as bool?,
    printNoteOnReturnContract: json['PrintNoteOnReturnContract'] as bool?,
    printNoteOnInvoice: json['PrintNoteOnInvoice'] as bool?,
    printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
    printNoteOnPickList: json['PrintNoteOnPickList'] as bool?,
    printNoteOnPO: json['PrintNoteOnPO'] as bool?,
    printNoteOnQuote: json['PrintNoteOnQuote'] as bool?,
    printNoteOnReturnList: json['PrintNoteOnReturnList'] as bool?,
    printNoteOnPoReceiveList: json['PrintNoteOnPoReceiveList'] as bool?,
    printNoteOnPoReturnList: json['PrintNoteOnPoReturnList'] as bool?,
    assetAccountId: json['AssetAccountId'] as String?,
    assetAccountNo: json['AssetAccountNo'] as String?,
    assetAccountDescription: json['AssetAccountDescription'] as String?,
    incomeAccountId: json['IncomeAccountId'] as String?,
    incomeAccountNo: json['IncomeAccountNo'] as String?,
    incomeAccountDescription: json['IncomeAccountDescription'] as String?,
    subIncomeAccountId: json['SubIncomeAccountId'] as String?,
    subIncomeAccountNo: json['SubIncomeAccountNo'] as String?,
    subIncomeAccountDescription: json['SubIncomeAccountDescription'] as String?,
    consignmentIncomeAccountId: json['ConsignmentIncomeAccountId'] as String?,
    consignmentIncomeAccountNo: json['ConsignmentIncomeAccountNo'] as String?,
    consignmentIncomeAccountDescription:
        json['ConsignmentIncomeAccountDescription'] as String?,
    ldIncomeAccountId: json['LdIncomeAccountId'] as String?,
    ldIncomeAccountNo: json['LdIncomeAccountNo'] as String?,
    ldIncomeAccountDescription: json['LdIncomeAccountDescription'] as String?,
    equipmentSaleIncomeAccountId:
        json['EquipmentSaleIncomeAccountId'] as String?,
    equipmentSaleIncomeAccountNo:
        json['EquipmentSaleIncomeAccountNo'] as String?,
    equipmentSaleIncomeAccountDescription:
        json['EquipmentSaleIncomeAccountDescription'] as String?,
    expenseAccountId: json['ExpenseAccountId'] as String?,
    expenseAccountNo: json['ExpenseAccountNo'] as String?,
    expenseAccountDescription: json['ExpenseAccountDescription'] as String?,
    costOfGoodsSoldExpenseAccountId:
        json['CostOfGoodsSoldExpenseAccountId'] as String?,
    costOfGoodsSoldExpenseAccountNo:
        json['CostOfGoodsSoldExpenseAccountNo'] as String?,
    costOfGoodsSoldExpenseAccountDescription:
        json['CostOfGoodsSoldExpenseAccountDescription'] as String?,
    costOfGoodsRentedExpenseAccountId:
        json['CostOfGoodsRentedExpenseAccountId'] as String?,
    costOfGoodsRentedExpenseAccountNo:
        json['CostOfGoodsRentedExpenseAccountNo'] as String?,
    costOfGoodsRentedExpenseAccountDescription:
        json['CostOfGoodsRentedExpenseAccountDescription'] as String?,
    depreciationExpenseAccountId:
        json['DepreciationExpenseAccountId'] as String?,
    depreciationExpenseAccountNo:
        json['DepreciationExpenseAccountNo'] as String?,
    depreciationExpenseAccountDescription:
        json['DepreciationExpenseAccountDescription'] as String?,
    accumulatedDepreciationExpenseAccountId:
        json['AccumulatedDepreciationExpenseAccountId'] as String?,
    accumulatedDepreciationExpenseAccountNo:
        json['AccumulatedDepreciationExpenseAccountNo'] as String?,
    accumulatedDepreciationExpenseAccountDescription:
        json['AccumulatedDepreciationExpenseAccountDescription'] as String?,
    originalShowId: json['OriginalShowId'] as String?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    manifestShippingContainer: json['ManifestShippingContainer'] as bool?,
    manifestStandAloneItem: json['ManifestStandAloneItem'] as bool?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesInventorySalesInventorySalesInventoryToJson(
        WebApiModulesInventorySalesInventorySalesInventory instance) =>
    <String, dynamic>{
      'Price': instance.price,
      'DefaultCost': instance.defaultCost,
      'AverageCost': instance.averageCost,
      'InventoryId': instance.inventoryId,
      'InventoryTypeId': instance.inventoryTypeId,
      'InventoryType': instance.inventoryType,
      'AvailableFrom': instance.availableFrom,
      'TrackedBy': instance.trackedBy,
      'ConfirmTrackedBy': instance.confirmTrackedBy,
      'Rank': instance.rank,
      'ManufacturerPartNumber': instance.manufacturerPartNumber,
      'ManufacturerId': instance.manufacturerId,
      'Manufacturer': instance.manufacturer,
      'ManufacturerUrl': instance.manufacturerUrl,
      'ExcludeImageFromQuoteOrderPrint':
          instance.excludeImageFromQuoteOrderPrint,
      'NoAvailabilityCheck': instance.noAvailabilityCheck,
      'AvailabilityManuallyResolveConflicts':
          instance.availabilityManuallyResolveConflicts,
      'SendAvailabilityAlert': instance.sendAvailabilityAlert,
      'PrimaryDimensionUniqueId': instance.primaryDimensionUniqueId,
      'DefaultImperialMetric': instance.defaultImperialMetric,
      'PrimaryDimensionDescription': instance.primaryDimensionDescription,
      'PrimaryDimensionShipWeightLbs': instance.primaryDimensionShipWeightLbs,
      'PrimaryDimensionShipWeightOz': instance.primaryDimensionShipWeightOz,
      'PrimaryDimensionWeightInCaseLbs':
          instance.primaryDimensionWeightInCaseLbs,
      'PrimaryDimensionWeightInCaseOz': instance.primaryDimensionWeightInCaseOz,
      'PrimaryDimensionWidthFt': instance.primaryDimensionWidthFt,
      'PrimaryDimensionWidthIn': instance.primaryDimensionWidthIn,
      'PrimaryDimensionHeightFt': instance.primaryDimensionHeightFt,
      'PrimaryDimensionHeightIn': instance.primaryDimensionHeightIn,
      'PrimaryDimensionLengthFt': instance.primaryDimensionLengthFt,
      'PrimaryDimensionLengthIn': instance.primaryDimensionLengthIn,
      'PrimaryDimensionShipWeightKg': instance.primaryDimensionShipWeightKg,
      'PrimaryDimensionShipWeightG': instance.primaryDimensionShipWeightG,
      'PrimaryDimensionWeightInCaseKg': instance.primaryDimensionWeightInCaseKg,
      'PrimaryDimensionWeightInCaseG': instance.primaryDimensionWeightInCaseG,
      'PrimaryDimensionWidthM': instance.primaryDimensionWidthM,
      'PrimaryDimensionWidthCm': instance.primaryDimensionWidthCm,
      'PrimaryDimensionHeightM': instance.primaryDimensionHeightM,
      'PrimaryDimensionHeightCm': instance.primaryDimensionHeightCm,
      'PrimaryDimensionLengthM': instance.primaryDimensionLengthM,
      'PrimaryDimensionLengthCm': instance.primaryDimensionLengthCm,
      'HasSecondaryDimensions': instance.hasSecondaryDimensions,
      'SecondaryDimensionUniqueId': instance.secondaryDimensionUniqueId,
      'SecondaryDimensionDescription': instance.secondaryDimensionDescription,
      'SecondaryDimensionShipWeightLbs':
          instance.secondaryDimensionShipWeightLbs,
      'SecondaryDimensionShipWeightOz': instance.secondaryDimensionShipWeightOz,
      'SecondaryDimensionWeightInCaseLbs':
          instance.secondaryDimensionWeightInCaseLbs,
      'SecondaryDimensionWeightInCaseOz':
          instance.secondaryDimensionWeightInCaseOz,
      'SecondaryDimensionWidthFt': instance.secondaryDimensionWidthFt,
      'SecondaryDimensionWidthIn': instance.secondaryDimensionWidthIn,
      'SecondaryDimensionHeightFt': instance.secondaryDimensionHeightFt,
      'SecondaryDimensionHeightIn': instance.secondaryDimensionHeightIn,
      'SecondaryDimensionLengthFt': instance.secondaryDimensionLengthFt,
      'SecondaryDimensionLengthIn': instance.secondaryDimensionLengthIn,
      'SecondaryDimensionShipWeightKg': instance.secondaryDimensionShipWeightKg,
      'SecondaryDimensionShipWeightG': instance.secondaryDimensionShipWeightG,
      'SecondaryDimensionWeightInCaseKg':
          instance.secondaryDimensionWeightInCaseKg,
      'SecondaryDimensionWeightInCaseG':
          instance.secondaryDimensionWeightInCaseG,
      'SecondaryDimensionWidthM': instance.secondaryDimensionWidthM,
      'SecondaryDimensionWidthCm': instance.secondaryDimensionWidthCm,
      'SecondaryDimensionHeightM': instance.secondaryDimensionHeightM,
      'SecondaryDimensionHeightCm': instance.secondaryDimensionHeightCm,
      'SecondaryDimensionLengthM': instance.secondaryDimensionLengthM,
      'SecondaryDimensionLengthCm': instance.secondaryDimensionLengthCm,
      'CountryOfOriginId': instance.countryOfOriginId,
      'CountryOfOrigin': instance.countryOfOrigin,
      'DisplayInSummaryModeWhenRateIsZero':
          instance.displayInSummaryModeWhenRateIsZero,
      'QcRequired': instance.qcRequired,
      'QcTime': instance.qcTime,
      'CopyAttributesAsNote': instance.copyAttributesAsNote,
      'TrackAssetUsage': instance.trackAssetUsage,
      'TrackLampUsage': instance.trackLampUsage,
      'TrackStrikes': instance.trackStrikes,
      'TrackCandles': instance.trackCandles,
      'LampCount': instance.lampCount,
      'MinimumFootCandles': instance.minimumFootCandles,
      'TrackSoftware': instance.trackSoftware,
      'SoftwareVersion': instance.softwareVersion,
      'SoftwareEffectiveDate': instance.softwareEffectiveDate,
      'WarehouseSpecificPackage': instance.warehouseSpecificPackage,
      'CompletePackagePrice': instance.completePackagePrice,
      'KitPackagePrice': instance.kitPackagePrice,
      'SeparatePackageOnQuoteOrder': instance.separatePackageOnQuoteOrder,
      'ContainerId': instance.containerId,
      'ContainerScannableInventoryId': instance.containerScannableInventoryId,
      'ContainerScannableICode': instance.containerScannableICode,
      'ContainerScannableDescription': instance.containerScannableDescription,
      'AutomaticallyRebuildContainerAtCheckIn':
          instance.automaticallyRebuildContainerAtCheckIn,
      'AutomaticallyRebuildContainerAtTransferIn':
          instance.automaticallyRebuildContainerAtTransferIn,
      'ContainerStagingRule': instance.containerStagingRule,
      'ExcludeContainedItemsFromAvailability':
          instance.excludeContainedItemsFromAvailability,
      'UseContainerNumber': instance.useContainerNumber,
      'ContainerPackingListBehavior': instance.containerPackingListBehavior,
      'InventoryTypeIsWardrobe': instance.inventoryTypeIsWardrobe,
      'InventoryTypeIsSets': instance.inventoryTypeIsSets,
      'PatternId': instance.patternId,
      'Pattern': instance.pattern,
      'PeriodId': instance.periodId,
      'Period': instance.period,
      'MaterialId': instance.materialId,
      'Material': instance.material,
      'GenderId': instance.genderId,
      'Gender': instance.gender,
      'LabelId': instance.labelId,
      'Label': instance.label,
      'WardrobeSize': instance.wardrobeSize,
      'WardrobePieceCount': instance.wardrobePieceCount,
      'Dyed': instance.dyed,
      'WardrobeSourceId': instance.wardrobeSourceId,
      'WardrobeSource': instance.wardrobeSource,
      'WardrobeCareId': instance.wardrobeCareId,
      'WardrobeCare': instance.wardrobeCare,
      'CleaningFeeAmount': instance.cleaningFeeAmount,
      'WardrobeDetailedDescription': instance.wardrobeDetailedDescription,
      'WebDetailedDescription': instance.webDetailedDescription,
      'OverrideSystemDefaultRevenueAllocationBehavior':
          instance.overrideSystemDefaultRevenueAllocationBehavior,
      'AllocateRevenueForAccessories': instance.allocateRevenueForAccessories,
      'PackageRevenueCalculationFormula':
          instance.packageRevenueCalculationFormula,
      'IsHazardousMaterial': instance.isHazardousMaterial,
      'DescriptionWithAkas': instance.descriptionWithAkas,
      'CostCalculation': instance.costCalculation,
      'Quantity': instance.quantity,
      'AisleLocation': instance.aisleLocation,
      'ShelfLocation': instance.shelfLocation,
      'Taxable': instance.taxable,
      'ICode': instance.iCode,
      'Description': instance.description,
      'AvailFor': instance.availFor,
      'CategoryId': instance.categoryId,
      'Category': instance.category,
      'SubCategoryCount': instance.subCategoryCount,
      'SubCategoryId': instance.subCategoryId,
      'SubCategory': instance.subCategory,
      'Classification': instance.classification,
      'ClassificationDescription': instance.classificationDescription,
      'ClassificationColor': instance.classificationColor,
      'UnitId': instance.unitId,
      'Unit': instance.unit,
      'UnitType': instance.unitType,
      'NonDiscountable': instance.nonDiscountable,
      'OverrideProfitAndLossCategory': instance.overrideProfitAndLossCategory,
      'ProfitAndLossCategoryId': instance.profitAndLossCategoryId,
      'ProfitAndLossCategory': instance.profitAndLossCategory,
      'AutoCopyNotesToQuoteOrder': instance.autoCopyNotesToQuoteOrder,
      'Note': instance.note,
      'PrintNoteOnInContract': instance.printNoteOnInContract,
      'PrintNoteOnOutContract': instance.printNoteOnOutContract,
      'PrintNoteOnReceiveContract': instance.printNoteOnReceiveContract,
      'PrintNoteOnReturnContract': instance.printNoteOnReturnContract,
      'PrintNoteOnInvoice': instance.printNoteOnInvoice,
      'PrintNoteOnOrder': instance.printNoteOnOrder,
      'PrintNoteOnPickList': instance.printNoteOnPickList,
      'PrintNoteOnPO': instance.printNoteOnPO,
      'PrintNoteOnQuote': instance.printNoteOnQuote,
      'PrintNoteOnReturnList': instance.printNoteOnReturnList,
      'PrintNoteOnPoReceiveList': instance.printNoteOnPoReceiveList,
      'PrintNoteOnPoReturnList': instance.printNoteOnPoReturnList,
      'AssetAccountId': instance.assetAccountId,
      'AssetAccountNo': instance.assetAccountNo,
      'AssetAccountDescription': instance.assetAccountDescription,
      'IncomeAccountId': instance.incomeAccountId,
      'IncomeAccountNo': instance.incomeAccountNo,
      'IncomeAccountDescription': instance.incomeAccountDescription,
      'SubIncomeAccountId': instance.subIncomeAccountId,
      'SubIncomeAccountNo': instance.subIncomeAccountNo,
      'SubIncomeAccountDescription': instance.subIncomeAccountDescription,
      'ConsignmentIncomeAccountId': instance.consignmentIncomeAccountId,
      'ConsignmentIncomeAccountNo': instance.consignmentIncomeAccountNo,
      'ConsignmentIncomeAccountDescription':
          instance.consignmentIncomeAccountDescription,
      'LdIncomeAccountId': instance.ldIncomeAccountId,
      'LdIncomeAccountNo': instance.ldIncomeAccountNo,
      'LdIncomeAccountDescription': instance.ldIncomeAccountDescription,
      'EquipmentSaleIncomeAccountId': instance.equipmentSaleIncomeAccountId,
      'EquipmentSaleIncomeAccountNo': instance.equipmentSaleIncomeAccountNo,
      'EquipmentSaleIncomeAccountDescription':
          instance.equipmentSaleIncomeAccountDescription,
      'ExpenseAccountId': instance.expenseAccountId,
      'ExpenseAccountNo': instance.expenseAccountNo,
      'ExpenseAccountDescription': instance.expenseAccountDescription,
      'CostOfGoodsSoldExpenseAccountId':
          instance.costOfGoodsSoldExpenseAccountId,
      'CostOfGoodsSoldExpenseAccountNo':
          instance.costOfGoodsSoldExpenseAccountNo,
      'CostOfGoodsSoldExpenseAccountDescription':
          instance.costOfGoodsSoldExpenseAccountDescription,
      'CostOfGoodsRentedExpenseAccountId':
          instance.costOfGoodsRentedExpenseAccountId,
      'CostOfGoodsRentedExpenseAccountNo':
          instance.costOfGoodsRentedExpenseAccountNo,
      'CostOfGoodsRentedExpenseAccountDescription':
          instance.costOfGoodsRentedExpenseAccountDescription,
      'DepreciationExpenseAccountId': instance.depreciationExpenseAccountId,
      'DepreciationExpenseAccountNo': instance.depreciationExpenseAccountNo,
      'DepreciationExpenseAccountDescription':
          instance.depreciationExpenseAccountDescription,
      'AccumulatedDepreciationExpenseAccountId':
          instance.accumulatedDepreciationExpenseAccountId,
      'AccumulatedDepreciationExpenseAccountNo':
          instance.accumulatedDepreciationExpenseAccountNo,
      'AccumulatedDepreciationExpenseAccountDescription':
          instance.accumulatedDepreciationExpenseAccountDescription,
      'OriginalShowId': instance.originalShowId,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'ManifestShippingContainer': instance.manifestShippingContainer,
      'ManifestStandAloneItem': instance.manifestStandAloneItem,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventorySalesInventorySalesInventoryDocument
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventorySalesInventorySalesInventoryDocument(
    inventoryId: json['InventoryId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesInventorySalesInventorySalesInventoryDocumentToJson(
        WebApiModulesInventorySalesInventorySalesInventoryDocument instance) =>
    <String, dynamic>{
      'InventoryId': instance.inventoryId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesInventorySalesInventorySalesInventoryDocumentPostRequest
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventorySalesInventorySalesInventoryDocumentPostRequest(
    inventoryId: json['InventoryId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentPostRequestToJson(
            WebApiModulesInventorySalesInventorySalesInventoryDocumentPostRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesInventorySalesInventorySalesInventoryDocumentPutRequest
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesInventorySalesInventorySalesInventoryDocumentPutRequest(
    inventoryId: json['InventoryId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentPutRequestToJson(
            WebApiModulesInventorySalesInventorySalesInventoryDocumentPutRequest
                instance) =>
        <String, dynamic>{
          'InventoryId': instance.inventoryId,
          'DocumentId': instance.documentId,
          'DocumentTypeId': instance.documentTypeId,
          'Description': instance.description,
          'AttachToEmail': instance.attachToEmail,
          'Inactive': instance.inactive,
          'FileIsModified': instance.fileIsModified,
          'FileDataUrl': instance.fileDataUrl,
          'FilePath': instance.filePath,
        };

WebApiModulesPluginsProcessCreditCardProcessCreditCardInfo
    _$WebApiModulesPluginsProcessCreditCardProcessCreditCardInfoFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesPluginsProcessCreditCardProcessCreditCardInfo(
    recordTitle: json['RecordTitle'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    dealId: json['DealId'] as String?,
    dealNumber: json['DealNumber'] as String?,
    deal: json['Deal'] as String?,
    customerNumber: json['CustomerNumber'] as String?,
    customer: json['Customer'] as String?,
    pINPadType: json['PINPad_Type'] as String?,
    totalsWeeklyGrossTotal:
        (json['Totals_Weekly_GrossTotal'] as num?)?.toDouble(),
    totalsWeeklyDiscount: (json['Totals_Weekly_Discount'] as num?)?.toDouble(),
    totalsWeeklySubTotal: (json['Totals_Weekly_SubTotal'] as num?)?.toDouble(),
    totalsWeeklyTax: (json['Totals_Weekly_Tax'] as num?)?.toDouble(),
    totalsWeeklyGrandTotal:
        (json['Totals_Weekly_GrandTotal'] as num?)?.toDouble(),
    totalsPeriodGrossTotal:
        (json['Totals_Period_GrossTotal'] as num?)?.toDouble(),
    totalsPeriodDiscount: (json['Totals_Period_Discount'] as num?)?.toDouble(),
    totalsPeriodSubTotal: (json['Totals_Period_SubTotal'] as num?)?.toDouble(),
    totalsPeriodTax: (json['Totals_Period_Tax'] as num?)?.toDouble(),
    totalsPeriodGrandTotal:
        (json['Totals_Period_GrandTotal'] as num?)?.toDouble(),
    totalsReplacementReplacementCost:
        (json['Totals_Replacement_ReplacementCost'] as num?)?.toDouble(),
    totalsReplacementDepositPercentage:
        (json['Totals_Replacement_DepositPercentage'] as num?)?.toDouble(),
    totalsReplacementDepositDue:
        (json['Totals_Replacement_DepositDue'] as num?)?.toDouble(),
    paymentTotalAmount: (json['Payment_TotalAmount'] as num?)?.toDouble(),
    paymentAmountToPay: (json['Payment_AmountToPay'] as num?)?.toDouble(),
    pINPadCode: json['PINPad_Code'] as String?,
    pINPadDescription: json['PINPad_Description'] as String?,
    locationCode: json['LocationCode'] as String?,
    agentBarcode: json['AgentBarcode'] as String?,
    currencyId: json['CurrencyId'] as String?,
    locationId: json['LocationId'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesPluginsProcessCreditCardProcessCreditCardInfoToJson(
        WebApiModulesPluginsProcessCreditCardProcessCreditCardInfo instance) =>
    <String, dynamic>{
      'RecordTitle': instance.recordTitle,
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'OrderDescription': instance.orderDescription,
      'DealId': instance.dealId,
      'DealNumber': instance.dealNumber,
      'Deal': instance.deal,
      'CustomerNumber': instance.customerNumber,
      'Customer': instance.customer,
      'PINPad_Type': instance.pINPadType,
      'Totals_Weekly_GrossTotal': instance.totalsWeeklyGrossTotal,
      'Totals_Weekly_Discount': instance.totalsWeeklyDiscount,
      'Totals_Weekly_SubTotal': instance.totalsWeeklySubTotal,
      'Totals_Weekly_Tax': instance.totalsWeeklyTax,
      'Totals_Weekly_GrandTotal': instance.totalsWeeklyGrandTotal,
      'Totals_Period_GrossTotal': instance.totalsPeriodGrossTotal,
      'Totals_Period_Discount': instance.totalsPeriodDiscount,
      'Totals_Period_SubTotal': instance.totalsPeriodSubTotal,
      'Totals_Period_Tax': instance.totalsPeriodTax,
      'Totals_Period_GrandTotal': instance.totalsPeriodGrandTotal,
      'Totals_Replacement_ReplacementCost':
          instance.totalsReplacementReplacementCost,
      'Totals_Replacement_DepositPercentage':
          instance.totalsReplacementDepositPercentage,
      'Totals_Replacement_DepositDue': instance.totalsReplacementDepositDue,
      'Payment_TotalAmount': instance.paymentTotalAmount,
      'Payment_AmountToPay': instance.paymentAmountToPay,
      'PINPad_Code': instance.pINPadCode,
      'PINPad_Description': instance.pINPadDescription,
      'LocationCode': instance.locationCode,
      'AgentBarcode': instance.agentBarcode,
      'CurrencyId': instance.currencyId,
      'LocationId': instance.locationId,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesPluginsProcessCreditCardProcessCreditCardPaymentResponse
    _$WebApiModulesPluginsProcessCreditCardProcessCreditCardPaymentResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesPluginsProcessCreditCardProcessCreditCardPaymentResponse(
    status: json['Status'] as String?,
    statusText: json['StatusText'] as String?,
    cardEntryMode: json['CardEntryMode'] as String?,
    cardType:
        webApiModulesPluginsProcessCreditCardProcessCreditCardPaymentCardTypesFromJson(
            json['CardType'] as String?),
    authorizationCode: json['AuthorizationCode'] as String?,
    amount: (json['Amount'] as num?)?.toDouble(),
    receipt: json['Receipt'] == null
        ? null
        : WebApiModulesBillingReceiptReceipt.fromJson(
            json['Receipt'] as Map<String, dynamic>),
  );
}

Map<String, dynamic>
    _$WebApiModulesPluginsProcessCreditCardProcessCreditCardPaymentResponseToJson(
            WebApiModulesPluginsProcessCreditCardProcessCreditCardPaymentResponse
                instance) =>
        <String, dynamic>{
          'Status': instance.status,
          'StatusText': instance.statusText,
          'CardEntryMode': instance.cardEntryMode,
          'CardType':
              webApiModulesPluginsProcessCreditCardProcessCreditCardPaymentCardTypesToJson(
                  instance.cardType),
          'AuthorizationCode': instance.authorizationCode,
          'Amount': instance.amount,
          'Receipt': instance.receipt?.toJson(),
        };

WebApiModulesSettingsDepartmentLocationDepartmentLocation
    _$WebApiModulesSettingsDepartmentLocationDepartmentLocationFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesSettingsDepartmentLocationDepartmentLocation(
    departmentId: json['DepartmentId'] as String?,
    locationId: json['LocationId'] as String?,
    department: json['Department'] as String?,
    location: json['Location'] as String?,
    defaultOrderTypeId: json['DefaultOrderTypeId'] as String?,
    defaultOrderType: json['DefaultOrderType'] as String?,
    inactive: json['Inactive'] as bool?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesSettingsDepartmentLocationDepartmentLocationToJson(
        WebApiModulesSettingsDepartmentLocationDepartmentLocation instance) =>
    <String, dynamic>{
      'DepartmentId': instance.departmentId,
      'LocationId': instance.locationId,
      'Department': instance.department,
      'Location': instance.location,
      'DefaultOrderTypeId': instance.defaultOrderTypeId,
      'DefaultOrderType': instance.defaultOrderType,
      'Inactive': instance.inactive,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatus
    _$WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatus(
    inventoryStatusId: json['InventoryStatusId'] as String?,
    inventoryStatus: json['InventoryStatus'] as String?,
    statusType: json['StatusType'] as String?,
    color: json['Color'] as String?,
    textColor: json['TextColor'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusToJson(
            WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatus
                instance) =>
        <String, dynamic>{
          'InventoryStatusId': instance.inventoryStatusId,
          'InventoryStatus': instance.inventoryStatus,
          'StatusType': instance.statusType,
          'Color': instance.color,
          'TextColor': instance.textColor,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel
    _$WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModelFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel(
    locationId: json['LocationId'] as String?,
    location: json['Location'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModelToJson(
            WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel
                instance) =>
        <String, dynamic>{
          'LocationId': instance.locationId,
          'Location': instance.location,
        };

WebApiModulesSettingsOfficeLocationSettingsOfficeLocationOfficeLocation
    _$WebApiModulesSettingsOfficeLocationSettingsOfficeLocationOfficeLocationFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesSettingsOfficeLocationSettingsOfficeLocationOfficeLocation(
    locationId: json['LocationId'] as String?,
    location: json['Location'] as String?,
    locationCode: json['LocationCode'] as String?,
    companyName: json['CompanyName'] as String?,
    federalId: json['FederalId'] as String?,
    address1: json['Address1'] as String?,
    address2: json['Address2'] as String?,
    city: json['City'] as String?,
    zipCode: json['ZipCode'] as String?,
    state: json['State'] as String?,
    countryId: json['CountryId'] as String?,
    country: json['Country'] as String?,
    phone: json['Phone'] as String?,
    fax: json['Fax'] as String?,
    email: json['Email'] as String?,
    webAddress: json['WebAddress'] as String?,
    remitToCompanyName: json['RemitToCompanyName'] as String?,
    remitToAddress1: json['RemitToAddress1'] as String?,
    remitToAddress2: json['RemitToAddress2'] as String?,
    remitToCity: json['RemitToCity'] as String?,
    remitToZip: json['RemitToZip'] as String?,
    remitToState: json['RemitToState'] as String?,
    remitToCountryId: json['RemitToCountryId'] as String?,
    remitToCountry: json['RemitToCountry'] as String?,
    remitToPhone: json['RemitToPhone'] as String?,
    remitToFax: json['RemitToFax'] as String?,
    remitToEmail: json['RemitToEmail'] as String?,
    rateType: json['RateType'] as String?,
    rateTypeDisplay: json['RateTypeDisplay'] as String?,
    color: json['Color'] as String?,
    defaultPurchasePoTypeId: json['DefaultPurchasePoTypeId'] as String?,
    defaultPurchasePoType: json['DefaultPurchasePoType'] as String?,
    glPrefix: json['GlPrefix'] as String?,
    glSuffix: json['GlSuffix'] as String?,
    useNumberPrefix: json['UseNumberPrefix'] as bool?,
    numberPrefix: json['NumberPrefix'] as String?,
    useRequisitionNumbers: json['UseRequisitionNumbers'] as bool?,
    useSameNumberForQuoteAndOrder:
        json['UseSameNumberForQuoteAndOrder'] as bool?,
    useSameNumberForAllExportBatches:
        json['UseSameNumberForAllExportBatches'] as bool?,
    userOrderNumberAndSuffixForInvoice:
        json['UserOrderNumberAndSuffixForInvoice'] as bool?,
    useHInHiatusInvoiceNumbers: json['UseHInHiatusInvoiceNumbers'] as bool?,
    defaultCurrencyId: json['DefaultCurrencyId'] as String?,
    defaultCurrencyCode: json['DefaultCurrencyCode'] as String?,
    defaultCurrency: json['DefaultCurrency'] as String?,
    defaultCurrencySymbol: json['DefaultCurrencySymbol'] as String?,
    tax1ReferenceName: json['Tax1ReferenceName'] as String?,
    tax1ReferenceNumber: json['Tax1ReferenceNumber'] as String?,
    tax2ReferenceName: json['Tax2ReferenceName'] as String?,
    tax2ReferenceNumber: json['Tax2ReferenceNumber'] as String?,
    disableCreditStatusMessages: json['DisableCreditStatusMessages'] as bool?,
    disableCreditThroughDateMessages:
        json['DisableCreditThroughDateMessages'] as bool?,
    disableInsuranceStatusMessages:
        json['DisableInsuranceStatusMessages'] as bool?,
    disableInsuranceThroughDateMessages:
        json['DisableInsuranceThroughDateMessages'] as bool?,
    warnIfTermsAndConditionsNotOnFile:
        json['WarnIfTermsAndConditionsNotOnFile'] as bool?,
    autoApplyDepletingDepositToInvoice:
        json['AutoApplyDepletingDepositToInvoice'] as bool?,
    depositReplacmentValuePercent:
        (json['DepositReplacmentValuePercent'] as num?)?.toDouble(),
    invoiceMessage: json['InvoiceMessage'] as String?,
    taxable: json['Taxable'] as bool?,
    useOrderLocationByDefault: json['UseOrderLocationByDefault'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesSettingsOfficeLocationSettingsOfficeLocationOfficeLocationToJson(
            WebApiModulesSettingsOfficeLocationSettingsOfficeLocationOfficeLocation
                instance) =>
        <String, dynamic>{
          'LocationId': instance.locationId,
          'Location': instance.location,
          'LocationCode': instance.locationCode,
          'CompanyName': instance.companyName,
          'FederalId': instance.federalId,
          'Address1': instance.address1,
          'Address2': instance.address2,
          'City': instance.city,
          'ZipCode': instance.zipCode,
          'State': instance.state,
          'CountryId': instance.countryId,
          'Country': instance.country,
          'Phone': instance.phone,
          'Fax': instance.fax,
          'Email': instance.email,
          'WebAddress': instance.webAddress,
          'RemitToCompanyName': instance.remitToCompanyName,
          'RemitToAddress1': instance.remitToAddress1,
          'RemitToAddress2': instance.remitToAddress2,
          'RemitToCity': instance.remitToCity,
          'RemitToZip': instance.remitToZip,
          'RemitToState': instance.remitToState,
          'RemitToCountryId': instance.remitToCountryId,
          'RemitToCountry': instance.remitToCountry,
          'RemitToPhone': instance.remitToPhone,
          'RemitToFax': instance.remitToFax,
          'RemitToEmail': instance.remitToEmail,
          'RateType': instance.rateType,
          'RateTypeDisplay': instance.rateTypeDisplay,
          'Color': instance.color,
          'DefaultPurchasePoTypeId': instance.defaultPurchasePoTypeId,
          'DefaultPurchasePoType': instance.defaultPurchasePoType,
          'GlPrefix': instance.glPrefix,
          'GlSuffix': instance.glSuffix,
          'UseNumberPrefix': instance.useNumberPrefix,
          'NumberPrefix': instance.numberPrefix,
          'UseRequisitionNumbers': instance.useRequisitionNumbers,
          'UseSameNumberForQuoteAndOrder':
              instance.useSameNumberForQuoteAndOrder,
          'UseSameNumberForAllExportBatches':
              instance.useSameNumberForAllExportBatches,
          'UserOrderNumberAndSuffixForInvoice':
              instance.userOrderNumberAndSuffixForInvoice,
          'UseHInHiatusInvoiceNumbers': instance.useHInHiatusInvoiceNumbers,
          'DefaultCurrencyId': instance.defaultCurrencyId,
          'DefaultCurrencyCode': instance.defaultCurrencyCode,
          'DefaultCurrency': instance.defaultCurrency,
          'DefaultCurrencySymbol': instance.defaultCurrencySymbol,
          'Tax1ReferenceName': instance.tax1ReferenceName,
          'Tax1ReferenceNumber': instance.tax1ReferenceNumber,
          'Tax2ReferenceName': instance.tax2ReferenceName,
          'Tax2ReferenceNumber': instance.tax2ReferenceNumber,
          'DisableCreditStatusMessages': instance.disableCreditStatusMessages,
          'DisableCreditThroughDateMessages':
              instance.disableCreditThroughDateMessages,
          'DisableInsuranceStatusMessages':
              instance.disableInsuranceStatusMessages,
          'DisableInsuranceThroughDateMessages':
              instance.disableInsuranceThroughDateMessages,
          'WarnIfTermsAndConditionsNotOnFile':
              instance.warnIfTermsAndConditionsNotOnFile,
          'AutoApplyDepletingDepositToInvoice':
              instance.autoApplyDepletingDepositToInvoice,
          'DepositReplacmentValuePercent':
              instance.depositReplacmentValuePercent,
          'InvoiceMessage': instance.invoiceMessage,
          'Taxable': instance.taxable,
          'UseOrderLocationByDefault': instance.useOrderLocationByDefault,
          'Inactive': instance.inactive,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesSettingsOrderSettingsOrderTypeOrderType
    _$WebApiModulesSettingsOrderSettingsOrderTypeOrderTypeFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesSettingsOrderSettingsOrderTypeOrderType(
    orderTypeId: json['OrderTypeId'] as String?,
    orderType: json['OrderType'] as String?,
    ordType: json['OrdType'] as String?,
    defaultPickTime: json['DefaultPickTime'] as String?,
    defaultFromTime: json['DefaultFromTime'] as String?,
    defaultToTime: json['DefaultToTime'] as String?,
    dailyScheduleDefaultStartTime:
        json['DailyScheduleDefaultStartTime'] as String?,
    dailyScheduleDefaultStopTime:
        json['DailyScheduleDefaultStopTime'] as String?,
    isMasterSubOrderType: json['IsMasterSubOrderType'] as bool?,
    combineActivityTabs: json['CombineActivityTabs'] as bool?,
    defaultManualSort: json['DefaultManualSort'] as bool?,
    determineQuantitiesToBillBasedOn:
        json['DetermineQuantitiesToBillBasedOn'] as String?,
    allowNesting: json['AllowNesting'] as bool?,
    rentalShowICode: json['RentalShowICode'] as bool?,
    rentalICodeWidth: json['RentalICodeWidth'] as int?,
    rentalShowDescription: json['RentalShowDescription'] as bool?,
    rentalDescriptionWidth: json['RentalDescriptionWidth'] as int?,
    rentalShowPickDate: json['RentalShowPickDate'] as bool?,
    rentalShowPickTime: json['RentalShowPickTime'] as bool?,
    rentalShowFromDate: json['RentalShowFromDate'] as bool?,
    rentalShowFromTime: json['RentalShowFromTime'] as bool?,
    rentalShowToDate: json['RentalShowToDate'] as bool?,
    rentalShowToTime: json['RentalShowToTime'] as bool?,
    rentalShowBillablePeriods: json['RentalShowBillablePeriods'] as bool?,
    rentalShowEpisodes: json['RentalShowEpisodes'] as bool?,
    rentalShowSubQuantity: json['RentalShowSubQuantity'] as bool?,
    rentalShowAvailableQuantity: json['RentalShowAvailableQuantity'] as bool?,
    rentalShowConflictDate: json['RentalShowConflictDate'] as bool?,
    rentalShowAvailableQuantityRegion:
        json['RentalShowAvailableQuantityRegion'] as bool?,
    rentalShowConflictDateRegion: json['RentalShowConflictDateRegion'] as bool?,
    rentalShowAvailableQuantityAllWarehouses:
        json['RentalShowAvailableQuantityAllWarehouses'] as bool?,
    rentalShowConflictDateAllWarehouses:
        json['RentalShowConflictDateAllWarehouses'] as bool?,
    rentalShowReservedItems: json['RentalShowReservedItems'] as bool?,
    rentalShowConsignmentQuantity:
        json['RentalShowConsignmentQuantity'] as bool?,
    rentalShowConsignmentAvailableQuantity:
        json['RentalShowConsignmentAvailableQuantity'] as bool?,
    rentalShowConsignmentConflictDate:
        json['RentalShowConsignmentConflictDate'] as bool?,
    rentalShowRate: json['RentalShowRate'] as bool?,
    rentalShowDaysPerWeek: json['RentalShowDaysPerWeek'] as bool?,
    rentalShowPremiumPercent: json['RentalShowPremiumPercent'] as bool?,
    rentalShowUnit: json['RentalShowUnit'] as bool?,
    rentalShowCost: json['RentalShowCost'] as bool?,
    rentalShowPeriodCostExtended: json['RentalShowPeriodCostExtended'] as bool?,
    rentalShowDiscountPercent: json['RentalShowDiscountPercent'] as bool?,
    rentalShowMarkupPercent: json['RentalShowMarkupPercent'] as bool?,
    rentalShowMarginPercent: json['RentalShowMarginPercent'] as bool?,
    rentalShowUnitDiscountAmount: json['RentalShowUnitDiscountAmount'] as bool?,
    rentalShowUnitExtended: json['RentalShowUnitExtended'] as bool?,
    rentalShowWeeklyDiscountAmount:
        json['RentalShowWeeklyDiscountAmount'] as bool?,
    rentalShowWeeklyExtended: json['RentalShowWeeklyExtended'] as bool?,
    rentalShowEpisodeExtended: json['RentalShowEpisodeExtended'] as bool?,
    rentalShowEpisodeDiscountAmount:
        json['RentalShowEpisodeDiscountAmount'] as bool?,
    rentalShowMonthlyDiscountAmount:
        json['RentalShowMonthlyDiscountAmount'] as bool?,
    rentalShowMonthlyExtended: json['RentalShowMonthlyExtended'] as bool?,
    rentalShowPeriodDiscountAmount:
        json['RentalShowPeriodDiscountAmount'] as bool?,
    rentalShowPeriodExtended: json['RentalShowPeriodExtended'] as bool?,
    rentalShowWarehouse: json['RentalShowWarehouse'] as bool?,
    rentalShowTaxable: json['RentalShowTaxable'] as bool?,
    rentalShowNotes: json['RentalShowNotes'] as bool?,
    rentalShowReturnToWarehouse: json['RentalShowReturnToWarehouse'] as bool?,
    rentalDateStamp: json['RentalDateStamp'] as String?,
    allowRoundTripRentals: json['AllowRoundTripRentals'] as bool?,
    salesShowICode: json['SalesShowICode'] as bool?,
    salesICodeWidth: json['SalesICodeWidth'] as int?,
    salesShowDescription: json['SalesShowDescription'] as bool?,
    salesDescriptionWidth: json['SalesDescriptionWidth'] as int?,
    salesShowManufacturerPartNumber:
        json['SalesShowManufacturerPartNumber'] as bool?,
    salesManufacturerPartNumberWidth:
        json['SalesManufacturerPartNumberWidth'] as int?,
    salesShowPickDate: json['SalesShowPickDate'] as bool?,
    salesShowPickTime: json['SalesShowPickTime'] as bool?,
    salesShowFromDate: json['SalesShowFromDate'] as bool?,
    salesShowFromTime: json['SalesShowFromTime'] as bool?,
    salesShowSubQuantity: json['SalesShowSubQuantity'] as bool?,
    salesShowCost: json['SalesShowCost'] as bool?,
    salesShowRate: json['SalesShowRate'] as bool?,
    salesShowAvailableQuantity: json['SalesShowAvailableQuantity'] as bool?,
    salesShowConflictDate: json['SalesShowConflictDate'] as bool?,
    salesShowAvailableQuantityRegion:
        json['SalesShowAvailableQuantityRegion'] as bool?,
    salesShowConflictDateRegion: json['SalesShowConflictDateRegion'] as bool?,
    salesShowAvailableQuantityAllWarehouses:
        json['SalesShowAvailableQuantityAllWarehouses'] as bool?,
    salesShowConflictDateAllWarehouses:
        json['SalesShowConflictDateAllWarehouses'] as bool?,
    salesShowMarkupPercent: json['SalesShowMarkupPercent'] as bool?,
    salesShowMarginPercent: json['SalesShowMarginPercent'] as bool?,
    salesShowUnit: json['SalesShowUnit'] as bool?,
    salesShowPeriodCostExtended: json['SalesShowPeriodCostExtended'] as bool?,
    salesShowDiscountPercent: json['SalesShowDiscountPercent'] as bool?,
    salesShowUnitDiscountAmount: json['SalesShowUnitDiscountAmount'] as bool?,
    salesShowUnitExtended: json['SalesShowUnitExtended'] as bool?,
    salesShowPeriodDiscountAmount:
        json['SalesShowPeriodDiscountAmount'] as bool?,
    salesShowPeriodExtended: json['SalesShowPeriodExtended'] as bool?,
    salesShowVariancePercent: json['SalesShowVariancePercent'] as bool?,
    salesShowVarianceExtended: json['SalesShowVarianceExtended'] as bool?,
    salesShowWarehouse: json['SalesShowWarehouse'] as bool?,
    salesShowTaxable: json['SalesShowTaxable'] as bool?,
    salesShowNotes: json['SalesShowNotes'] as bool?,
    salesDateStamp: json['SalesDateStamp'] as String?,
    salesInventoryPrice: json['SalesInventoryPrice'] as String?,
    salesInventoryCost: json['SalesInventoryCost'] as String?,
    facilityShowDescription: json['FacilityShowDescription'] as bool?,
    facilityDescriptionWidth: json['FacilityDescriptionWidth'] as int?,
    facilityShowFromDate: json['FacilityShowFromDate'] as bool?,
    facilityShowFromTime: json['FacilityShowFromTime'] as bool?,
    facilityShowToDate: json['FacilityShowToDate'] as bool?,
    facilityShowToTime: json['FacilityShowToTime'] as bool?,
    facilityShowWeeksAndDays: json['FacilityShowWeeksAndDays'] as bool?,
    facilityShowMonthsAndDays: json['FacilityShowMonthsAndDays'] as bool?,
    facilityShowBillablePeriods: json['FacilityShowBillablePeriods'] as bool?,
    facilityShowRate: json['FacilityShowRate'] as bool?,
    facilityShowDaysPerWeek: json['FacilityShowDaysPerWeek'] as bool?,
    facilityShowDiscountPercent: json['FacilityShowDiscountPercent'] as bool?,
    facilityShowSplit: json['FacilityShowSplit'] as bool?,
    facilityShowUnit: json['FacilityShowUnit'] as bool?,
    facilityShowUnitDiscountAmount:
        json['FacilityShowUnitDiscountAmount'] as bool?,
    facilityShowUnitExtended: json['FacilityShowUnitExtended'] as bool?,
    facilityShowWeeklyDiscountAmount:
        json['FacilityShowWeeklyDiscountAmount'] as bool?,
    facilityShowWeeklyExtended: json['FacilityShowWeeklyExtended'] as bool?,
    facilityShowMonthlyDiscountAmount:
        json['FacilityShowMonthlyDiscountAmount'] as bool?,
    facilityShowMonthlyExtended: json['FacilityShowMonthlyExtended'] as bool?,
    facilityShowPeriodDiscountAmount:
        json['FacilityShowPeriodDiscountAmount'] as bool?,
    facilityShowPeriodExtended: json['FacilityShowPeriodExtended'] as bool?,
    facilityShowTaxable: json['FacilityShowTaxable'] as bool?,
    facilityShowNotes: json['FacilityShowNotes'] as bool?,
    facilityDateStamp: json['FacilityDateStamp'] as String?,
    facilityDescription: json['FacilityDescription'] as String?,
    vehicleShowDescription: json['VehicleShowDescription'] as bool?,
    vehicleDescriptionWidth: json['VehicleDescriptionWidth'] as int?,
    vehicleShowVehicleNumber: json['VehicleShowVehicleNumber'] as bool?,
    vehicleShowPickDate: json['VehicleShowPickDate'] as bool?,
    vehicleShowPickTime: json['VehicleShowPickTime'] as bool?,
    vehicleShowFromDate: json['VehicleShowFromDate'] as bool?,
    vehicleShowFromTime: json['VehicleShowFromTime'] as bool?,
    vehicleShowToDate: json['VehicleShowToDate'] as bool?,
    vehicleShowToTime: json['VehicleShowToTime'] as bool?,
    vehicleShowBillablePeriods: json['VehicleShowBillablePeriods'] as bool?,
    vehicleShowSubQuantity: json['VehicleShowSubQuantity'] as bool?,
    vehicleShowAvailableQuantity: json['VehicleShowAvailableQuantity'] as bool?,
    vehicleShowConflictDate: json['VehicleShowConflictDate'] as bool?,
    vehicleShowUnit: json['VehicleShowUnit'] as bool?,
    vehicleShowRate: json['VehicleShowRate'] as bool?,
    vehicleShowDaysPerWeek: json['VehicleShowDaysPerWeek'] as bool?,
    vehicleShowCost: json['VehicleShowCost'] as bool?,
    vehicleShowWeeklyCostExtended:
        json['VehicleShowWeeklyCostExtended'] as bool?,
    vehicleShowMonthlyCostExtended:
        json['VehicleShowMonthlyCostExtended'] as bool?,
    vehicleShowPeriodCostExtended:
        json['VehicleShowPeriodCostExtended'] as bool?,
    vehicleShowDiscountPercent: json['VehicleShowDiscountPercent'] as bool?,
    vehicleShowUnitDiscountAmount:
        json['VehicleShowUnitDiscountAmount'] as bool?,
    vehicleShowUnitExtended: json['VehicleShowUnitExtended'] as bool?,
    vehicleShowWeeklyDiscountAmount:
        json['VehicleShowWeeklyDiscountAmount'] as bool?,
    vehicleShowWeeklyExtended: json['VehicleShowWeeklyExtended'] as bool?,
    vehicleShowMonthlyDiscountAmount:
        json['VehicleShowMonthlyDiscountAmount'] as bool?,
    vehicleShowMonthlyExtended: json['VehicleShowMonthlyExtended'] as bool?,
    vehicleShowPeriodDiscountAmount:
        json['VehicleShowPeriodDiscountAmount'] as bool?,
    vehicleShowPeriodExtended: json['VehicleShowPeriodExtended'] as bool?,
    vehicleShowWarehouse: json['VehicleShowWarehouse'] as bool?,
    vehicleShowReturnToWarehouse: json['VehicleShowReturnToWarehouse'] as bool?,
    vehicleShowTaxable: json['VehicleShowTaxable'] as bool?,
    vehicleShowNotes: json['VehicleShowNotes'] as bool?,
    vehicleDateStamp: json['VehicleDateStamp'] as String?,
    laborShowICode: json['LaborShowICode'] as bool?,
    laborICodeWidth: json['LaborICodeWidth'] as int?,
    laborShowDescription: json['LaborShowDescription'] as bool?,
    laborDescriptionWidth: json['LaborDescriptionWidth'] as int?,
    laborShowOrderActivity: json['LaborShowOrderActivity'] as bool?,
    laborShowCrewName: json['LaborShowCrewName'] as bool?,
    laborShowFromDate: json['LaborShowFromDate'] as bool?,
    laborShowFromTime: json['LaborShowFromTime'] as bool?,
    laborShowToDate: json['LaborShowToDate'] as bool?,
    laborShowToTime: json['LaborShowToTime'] as bool?,
    laborShowBillablePeriods: json['LaborShowBillablePeriods'] as bool?,
    laborShowHours: json['LaborShowHours'] as bool?,
    laborShowSubQuantity: json['LaborShowSubQuantity'] as bool?,
    laborShowCost: json['LaborShowCost'] as bool?,
    laborShowRate: json['LaborShowRate'] as bool?,
    laborShowPeriodCostExtended: json['LaborShowPeriodCostExtended'] as bool?,
    laborShowDiscountPercent: json['LaborShowDiscountPercent'] as bool?,
    laborShowUnit: json['LaborShowUnit'] as bool?,
    laborShowUnitDiscountAmount: json['LaborShowUnitDiscountAmount'] as bool?,
    laborShowUnitExtended: json['LaborShowUnitExtended'] as bool?,
    laborShowWeeklyDiscountAmount:
        json['LaborShowWeeklyDiscountAmount'] as bool?,
    laborShowWeeklyExtended: json['LaborShowWeeklyExtended'] as bool?,
    laborShowMonthlyDiscountAmount:
        json['LaborShowMonthlyDiscountAmount'] as bool?,
    laborShowMonthlyExtended: json['LaborShowMonthlyExtended'] as bool?,
    laborShowPeriodDiscountAmount:
        json['LaborShowPeriodDiscountAmount'] as bool?,
    laborShowPeriodExtended: json['LaborShowPeriodExtended'] as bool?,
    laborShowWarehouse: json['LaborShowWarehouse'] as bool?,
    laborShowTaxable: json['LaborShowTaxable'] as bool?,
    laborShowNotes: json['LaborShowNotes'] as bool?,
    laborDateStamp: json['LaborDateStamp'] as String?,
    hideCrewBreaks: json['HideCrewBreaks'] as bool?,
    break1Paid: json['Break1Paid'] as bool?,
    break2Paid: json['Break2Paid'] as bool?,
    break3Paid: json['Break3Paid'] as bool?,
    miscShowICode: json['MiscShowICode'] as bool?,
    miscICodeWidth: json['MiscICodeWidth'] as int?,
    miscShowDescription: json['MiscShowDescription'] as bool?,
    miscDescriptionWidth: json['MiscDescriptionWidth'] as int?,
    miscShowFromDate: json['MiscShowFromDate'] as bool?,
    miscShowFromTime: json['MiscShowFromTime'] as bool?,
    miscShowToDate: json['MiscShowToDate'] as bool?,
    miscShowToTime: json['MiscShowToTime'] as bool?,
    miscShowBillablePeriods: json['MiscShowBillablePeriods'] as bool?,
    miscShowSubQuantity: json['MiscShowSubQuantity'] as bool?,
    miscShowWeeksAndDays: json['MiscShowWeeksAndDays'] as bool?,
    miscShowMonthsAndDays: json['MiscShowMonthsAndDays'] as bool?,
    miscShowUnit: json['MiscShowUnit'] as bool?,
    miscShowRate: json['MiscShowRate'] as bool?,
    miscShowCost: json['MiscShowCost'] as bool?,
    miscShowPeriodCostExtended: json['MiscShowPeriodCostExtended'] as bool?,
    miscShowDiscountPercent: json['MiscShowDiscountPercent'] as bool?,
    miscShowUnitDiscountAmount: json['MiscShowUnitDiscountAmount'] as bool?,
    miscShowUnitExtended: json['MiscShowUnitExtended'] as bool?,
    miscShowWeeklyDiscountAmount: json['MiscShowWeeklyDiscountAmount'] as bool?,
    miscShowWeeklyExtended: json['MiscShowWeeklyExtended'] as bool?,
    miscShowMonthlyDiscountAmount:
        json['MiscShowMonthlyDiscountAmount'] as bool?,
    miscShowMonthlyExtended: json['MiscShowMonthlyExtended'] as bool?,
    miscShowPeriodDiscountAmount: json['MiscShowPeriodDiscountAmount'] as bool?,
    miscShowPeriodExtended: json['MiscShowPeriodExtended'] as bool?,
    miscShowWarehouse: json['MiscShowWarehouse'] as bool?,
    miscShowTaxable: json['MiscShowTaxable'] as bool?,
    miscShowNotes: json['MiscShowNotes'] as bool?,
    miscDateStamp: json['MiscDateStamp'] as String?,
    rentalSaleShowBarCode: json['RentalSaleShowBarCode'] as bool?,
    rentalSaleShowSerialNumber: json['RentalSaleShowSerialNumber'] as bool?,
    rentalSaleShowICode: json['RentalSaleShowICode'] as bool?,
    rentalSaleICodeWidth: json['RentalSaleICodeWidth'] as int?,
    rentalSaleShowDescription: json['RentalSaleShowDescription'] as bool?,
    rentalSaleDescriptionWidth: json['RentalSaleDescriptionWidth'] as int?,
    rentalSaleShowPickDate: json['RentalSaleShowPickDate'] as bool?,
    rentalSaleShowPickTime: json['RentalSaleShowPickTime'] as bool?,
    rentalSaleShowAvailableQuantity:
        json['RentalSaleShowAvailableQuantity'] as bool?,
    rentalSaleShowConflictDate: json['RentalSaleShowConflictDate'] as bool?,
    rentalSaleShowUnit: json['RentalSaleShowUnit'] as bool?,
    rentalSaleShowRate: json['RentalSaleShowRate'] as bool?,
    rentalSaleShowCost: json['RentalSaleShowCost'] as bool?,
    rentalSaleShowPeriodCostExtended:
        json['RentalSaleShowPeriodCostExtended'] as bool?,
    rentalSaleShowDiscountPercent:
        json['RentalSaleShowDiscountPercent'] as bool?,
    rentalSaleShowUnitDiscountAmount:
        json['RentalSaleShowUnitDiscountAmount'] as bool?,
    rentalSaleShowUnitExtended: json['RentalSaleShowUnitExtended'] as bool?,
    rentalSaleShowPeriodDiscountAmount:
        json['RentalSaleShowPeriodDiscountAmount'] as bool?,
    rentalSaleShowPeriodExtended: json['RentalSaleShowPeriodExtended'] as bool?,
    rentalSaleShowWarehouse: json['RentalSaleShowWarehouse'] as bool?,
    rentalSaleShowTaxable: json['RentalSaleShowTaxable'] as bool?,
    rentalSaleShowNotes: json['RentalSaleShowNotes'] as bool?,
    rentalSaleDateStamp: json['RentalSaleDateStamp'] as String?,
    lossAndDamageShowOrderNumber: json['LossAndDamageShowOrderNumber'] as bool?,
    lossAndDamageShowRepairOrderNumber:
        json['LossAndDamageShowRepairOrderNumber'] as bool?,
    lossAndDamageShowBarCode: json['LossAndDamageShowBarCode'] as bool?,
    lossAndDamageShowSerialNumber:
        json['LossAndDamageShowSerialNumber'] as bool?,
    lossAndDamageShowICode: json['LossAndDamageShowICode'] as bool?,
    lossAndDamageICodeWidth: json['LossAndDamageICodeWidth'] as int?,
    lossAndDamageShowDescription: json['LossAndDamageShowDescription'] as bool?,
    lossAndDamageDescriptionWidth:
        json['LossAndDamageDescriptionWidth'] as int?,
    lossAndDamageShowUnit: json['LossAndDamageShowUnit'] as bool?,
    lossAndDamageShowRate: json['LossAndDamageShowRate'] as bool?,
    lossAndDamageShowCost: json['LossAndDamageShowCost'] as bool?,
    lossAndDamageShowDiscountPercent:
        json['LossAndDamageShowDiscountPercent'] as bool?,
    lossAndDamageShowUnitDiscountAmount:
        json['LossAndDamageShowUnitDiscountAmount'] as bool?,
    lossAndDamageShowUnitExtended:
        json['LossAndDamageShowUnitExtended'] as bool?,
    lossAndDamageShowPeriodDiscountAmount:
        json['LossAndDamageShowPeriodDiscountAmount'] as bool?,
    lossAndDamageShowPeriodExtended:
        json['LossAndDamageShowPeriodExtended'] as bool?,
    lossAndDamageShowWarehouse: json['LossAndDamageShowWarehouse'] as bool?,
    lossAndDamageShowTaxable: json['LossAndDamageShowTaxable'] as bool?,
    lossAndDamageShowNotes: json['LossAndDamageShowNotes'] as bool?,
    lossAndDamageDateStamp: json['LossAndDamageDateStamp'] as String?,
    addInstallationAndStrikeFee: json['AddInstallationAndStrikeFee'] as bool?,
    installationAndStrikeFeeRateId:
        json['InstallationAndStrikeFeeRateId'] as String?,
    installationAndStrikeFeeICode:
        json['InstallationAndStrikeFeeICode'] as String?,
    installationAndStrikeFeeDescription:
        json['InstallationAndStrikeFeeDescription'] as String?,
    installationAndStrikeFeePercent:
        (json['InstallationAndStrikeFeePercent'] as num?)?.toDouble(),
    installationAndStrikeFeeBasedOn:
        json['InstallationAndStrikeFeeBasedOn'] as String?,
    addManagementAndServiceFee: json['AddManagementAndServiceFee'] as bool?,
    managementAndServiceFeeRateId:
        json['ManagementAndServiceFeeRateId'] as String?,
    managementAndServiceFeeICode:
        json['ManagementAndServiceFeeICode'] as String?,
    managementAndServiceFeeDescription:
        json['ManagementAndServiceFeeDescription'] as String?,
    managementAndServiceFeePercent:
        (json['ManagementAndServiceFeePercent'] as num?)?.toDouble(),
    managementAndServiceFeeBasedOn:
        json['ManagementAndServiceFeeBasedOn'] as String?,
    defaultRentalSalePrice: json['DefaultRentalSalePrice'] as String?,
    quikPayDiscount: json['QuikPayDiscount'] as bool?,
    quikPayDiscountType: json['QuikPayDiscountType'] as String?,
    quikPayDiscountDays: json['QuikPayDiscountDays'] as int?,
    quikPayDiscountPercent:
        (json['QuikPayDiscountPercent'] as num?)?.toDouble(),
    quikPayDiscountExcludeSubs: json['QuikPayDiscountExcludeSubs'] as bool?,
    quikConfirmDiscount: json['QuikConfirmDiscount'] as bool?,
    quikConfirmDiscountPercent:
        (json['QuikConfirmDiscountPercent'] as num?)?.toDouble(),
    quikConfirmDiscountDays: json['QuikConfirmDiscountDays'] as int?,
    disableCostGl: json['DisableCostGl'] as bool?,
    excludeFromTopSalesDashboard: json['ExcludeFromTopSalesDashboard'] as bool?,
    separatePackageOnQuoteOrder: json['SeparatePackageOnQuoteOrder'] as bool?,
    orderby: (json['Orderby'] as num?)?.toDouble(),
    subAllShortagesSubMiscellaneous:
        json['SubAllShortagesSubMiscellaneous'] as bool?,
    inactive: json['Inactive'] as bool?,
    combinedShowFields: (json['CombinedShowFields'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    rentalShowFields: (json['RentalShowFields'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    salesShowFields: (json['SalesShowFields'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    miscShowFields: (json['MiscShowFields'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    laborShowFields: (json['LaborShowFields'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    rentalSaleShowFields: (json['RentalSaleShowFields'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    lossAndDamageShowFields: (json['LossAndDamageShowFields'] as List<dynamic>?)
            ?.map((e) => e as String)
            .toList() ??
        [],
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesSettingsOrderSettingsOrderTypeOrderTypeToJson(
        WebApiModulesSettingsOrderSettingsOrderTypeOrderType instance) =>
    <String, dynamic>{
      'OrderTypeId': instance.orderTypeId,
      'OrderType': instance.orderType,
      'OrdType': instance.ordType,
      'DefaultPickTime': instance.defaultPickTime,
      'DefaultFromTime': instance.defaultFromTime,
      'DefaultToTime': instance.defaultToTime,
      'DailyScheduleDefaultStartTime': instance.dailyScheduleDefaultStartTime,
      'DailyScheduleDefaultStopTime': instance.dailyScheduleDefaultStopTime,
      'IsMasterSubOrderType': instance.isMasterSubOrderType,
      'CombineActivityTabs': instance.combineActivityTabs,
      'DefaultManualSort': instance.defaultManualSort,
      'DetermineQuantitiesToBillBasedOn':
          instance.determineQuantitiesToBillBasedOn,
      'AllowNesting': instance.allowNesting,
      'RentalShowICode': instance.rentalShowICode,
      'RentalICodeWidth': instance.rentalICodeWidth,
      'RentalShowDescription': instance.rentalShowDescription,
      'RentalDescriptionWidth': instance.rentalDescriptionWidth,
      'RentalShowPickDate': instance.rentalShowPickDate,
      'RentalShowPickTime': instance.rentalShowPickTime,
      'RentalShowFromDate': instance.rentalShowFromDate,
      'RentalShowFromTime': instance.rentalShowFromTime,
      'RentalShowToDate': instance.rentalShowToDate,
      'RentalShowToTime': instance.rentalShowToTime,
      'RentalShowBillablePeriods': instance.rentalShowBillablePeriods,
      'RentalShowEpisodes': instance.rentalShowEpisodes,
      'RentalShowSubQuantity': instance.rentalShowSubQuantity,
      'RentalShowAvailableQuantity': instance.rentalShowAvailableQuantity,
      'RentalShowConflictDate': instance.rentalShowConflictDate,
      'RentalShowAvailableQuantityRegion':
          instance.rentalShowAvailableQuantityRegion,
      'RentalShowConflictDateRegion': instance.rentalShowConflictDateRegion,
      'RentalShowAvailableQuantityAllWarehouses':
          instance.rentalShowAvailableQuantityAllWarehouses,
      'RentalShowConflictDateAllWarehouses':
          instance.rentalShowConflictDateAllWarehouses,
      'RentalShowReservedItems': instance.rentalShowReservedItems,
      'RentalShowConsignmentQuantity': instance.rentalShowConsignmentQuantity,
      'RentalShowConsignmentAvailableQuantity':
          instance.rentalShowConsignmentAvailableQuantity,
      'RentalShowConsignmentConflictDate':
          instance.rentalShowConsignmentConflictDate,
      'RentalShowRate': instance.rentalShowRate,
      'RentalShowDaysPerWeek': instance.rentalShowDaysPerWeek,
      'RentalShowPremiumPercent': instance.rentalShowPremiumPercent,
      'RentalShowUnit': instance.rentalShowUnit,
      'RentalShowCost': instance.rentalShowCost,
      'RentalShowPeriodCostExtended': instance.rentalShowPeriodCostExtended,
      'RentalShowDiscountPercent': instance.rentalShowDiscountPercent,
      'RentalShowMarkupPercent': instance.rentalShowMarkupPercent,
      'RentalShowMarginPercent': instance.rentalShowMarginPercent,
      'RentalShowUnitDiscountAmount': instance.rentalShowUnitDiscountAmount,
      'RentalShowUnitExtended': instance.rentalShowUnitExtended,
      'RentalShowWeeklyDiscountAmount': instance.rentalShowWeeklyDiscountAmount,
      'RentalShowWeeklyExtended': instance.rentalShowWeeklyExtended,
      'RentalShowEpisodeExtended': instance.rentalShowEpisodeExtended,
      'RentalShowEpisodeDiscountAmount':
          instance.rentalShowEpisodeDiscountAmount,
      'RentalShowMonthlyDiscountAmount':
          instance.rentalShowMonthlyDiscountAmount,
      'RentalShowMonthlyExtended': instance.rentalShowMonthlyExtended,
      'RentalShowPeriodDiscountAmount': instance.rentalShowPeriodDiscountAmount,
      'RentalShowPeriodExtended': instance.rentalShowPeriodExtended,
      'RentalShowWarehouse': instance.rentalShowWarehouse,
      'RentalShowTaxable': instance.rentalShowTaxable,
      'RentalShowNotes': instance.rentalShowNotes,
      'RentalShowReturnToWarehouse': instance.rentalShowReturnToWarehouse,
      'RentalDateStamp': instance.rentalDateStamp,
      'AllowRoundTripRentals': instance.allowRoundTripRentals,
      'SalesShowICode': instance.salesShowICode,
      'SalesICodeWidth': instance.salesICodeWidth,
      'SalesShowDescription': instance.salesShowDescription,
      'SalesDescriptionWidth': instance.salesDescriptionWidth,
      'SalesShowManufacturerPartNumber':
          instance.salesShowManufacturerPartNumber,
      'SalesManufacturerPartNumberWidth':
          instance.salesManufacturerPartNumberWidth,
      'SalesShowPickDate': instance.salesShowPickDate,
      'SalesShowPickTime': instance.salesShowPickTime,
      'SalesShowFromDate': instance.salesShowFromDate,
      'SalesShowFromTime': instance.salesShowFromTime,
      'SalesShowSubQuantity': instance.salesShowSubQuantity,
      'SalesShowCost': instance.salesShowCost,
      'SalesShowRate': instance.salesShowRate,
      'SalesShowAvailableQuantity': instance.salesShowAvailableQuantity,
      'SalesShowConflictDate': instance.salesShowConflictDate,
      'SalesShowAvailableQuantityRegion':
          instance.salesShowAvailableQuantityRegion,
      'SalesShowConflictDateRegion': instance.salesShowConflictDateRegion,
      'SalesShowAvailableQuantityAllWarehouses':
          instance.salesShowAvailableQuantityAllWarehouses,
      'SalesShowConflictDateAllWarehouses':
          instance.salesShowConflictDateAllWarehouses,
      'SalesShowMarkupPercent': instance.salesShowMarkupPercent,
      'SalesShowMarginPercent': instance.salesShowMarginPercent,
      'SalesShowUnit': instance.salesShowUnit,
      'SalesShowPeriodCostExtended': instance.salesShowPeriodCostExtended,
      'SalesShowDiscountPercent': instance.salesShowDiscountPercent,
      'SalesShowUnitDiscountAmount': instance.salesShowUnitDiscountAmount,
      'SalesShowUnitExtended': instance.salesShowUnitExtended,
      'SalesShowPeriodDiscountAmount': instance.salesShowPeriodDiscountAmount,
      'SalesShowPeriodExtended': instance.salesShowPeriodExtended,
      'SalesShowVariancePercent': instance.salesShowVariancePercent,
      'SalesShowVarianceExtended': instance.salesShowVarianceExtended,
      'SalesShowWarehouse': instance.salesShowWarehouse,
      'SalesShowTaxable': instance.salesShowTaxable,
      'SalesShowNotes': instance.salesShowNotes,
      'SalesDateStamp': instance.salesDateStamp,
      'SalesInventoryPrice': instance.salesInventoryPrice,
      'SalesInventoryCost': instance.salesInventoryCost,
      'FacilityShowDescription': instance.facilityShowDescription,
      'FacilityDescriptionWidth': instance.facilityDescriptionWidth,
      'FacilityShowFromDate': instance.facilityShowFromDate,
      'FacilityShowFromTime': instance.facilityShowFromTime,
      'FacilityShowToDate': instance.facilityShowToDate,
      'FacilityShowToTime': instance.facilityShowToTime,
      'FacilityShowWeeksAndDays': instance.facilityShowWeeksAndDays,
      'FacilityShowMonthsAndDays': instance.facilityShowMonthsAndDays,
      'FacilityShowBillablePeriods': instance.facilityShowBillablePeriods,
      'FacilityShowRate': instance.facilityShowRate,
      'FacilityShowDaysPerWeek': instance.facilityShowDaysPerWeek,
      'FacilityShowDiscountPercent': instance.facilityShowDiscountPercent,
      'FacilityShowSplit': instance.facilityShowSplit,
      'FacilityShowUnit': instance.facilityShowUnit,
      'FacilityShowUnitDiscountAmount': instance.facilityShowUnitDiscountAmount,
      'FacilityShowUnitExtended': instance.facilityShowUnitExtended,
      'FacilityShowWeeklyDiscountAmount':
          instance.facilityShowWeeklyDiscountAmount,
      'FacilityShowWeeklyExtended': instance.facilityShowWeeklyExtended,
      'FacilityShowMonthlyDiscountAmount':
          instance.facilityShowMonthlyDiscountAmount,
      'FacilityShowMonthlyExtended': instance.facilityShowMonthlyExtended,
      'FacilityShowPeriodDiscountAmount':
          instance.facilityShowPeriodDiscountAmount,
      'FacilityShowPeriodExtended': instance.facilityShowPeriodExtended,
      'FacilityShowTaxable': instance.facilityShowTaxable,
      'FacilityShowNotes': instance.facilityShowNotes,
      'FacilityDateStamp': instance.facilityDateStamp,
      'FacilityDescription': instance.facilityDescription,
      'VehicleShowDescription': instance.vehicleShowDescription,
      'VehicleDescriptionWidth': instance.vehicleDescriptionWidth,
      'VehicleShowVehicleNumber': instance.vehicleShowVehicleNumber,
      'VehicleShowPickDate': instance.vehicleShowPickDate,
      'VehicleShowPickTime': instance.vehicleShowPickTime,
      'VehicleShowFromDate': instance.vehicleShowFromDate,
      'VehicleShowFromTime': instance.vehicleShowFromTime,
      'VehicleShowToDate': instance.vehicleShowToDate,
      'VehicleShowToTime': instance.vehicleShowToTime,
      'VehicleShowBillablePeriods': instance.vehicleShowBillablePeriods,
      'VehicleShowSubQuantity': instance.vehicleShowSubQuantity,
      'VehicleShowAvailableQuantity': instance.vehicleShowAvailableQuantity,
      'VehicleShowConflictDate': instance.vehicleShowConflictDate,
      'VehicleShowUnit': instance.vehicleShowUnit,
      'VehicleShowRate': instance.vehicleShowRate,
      'VehicleShowDaysPerWeek': instance.vehicleShowDaysPerWeek,
      'VehicleShowCost': instance.vehicleShowCost,
      'VehicleShowWeeklyCostExtended': instance.vehicleShowWeeklyCostExtended,
      'VehicleShowMonthlyCostExtended': instance.vehicleShowMonthlyCostExtended,
      'VehicleShowPeriodCostExtended': instance.vehicleShowPeriodCostExtended,
      'VehicleShowDiscountPercent': instance.vehicleShowDiscountPercent,
      'VehicleShowUnitDiscountAmount': instance.vehicleShowUnitDiscountAmount,
      'VehicleShowUnitExtended': instance.vehicleShowUnitExtended,
      'VehicleShowWeeklyDiscountAmount':
          instance.vehicleShowWeeklyDiscountAmount,
      'VehicleShowWeeklyExtended': instance.vehicleShowWeeklyExtended,
      'VehicleShowMonthlyDiscountAmount':
          instance.vehicleShowMonthlyDiscountAmount,
      'VehicleShowMonthlyExtended': instance.vehicleShowMonthlyExtended,
      'VehicleShowPeriodDiscountAmount':
          instance.vehicleShowPeriodDiscountAmount,
      'VehicleShowPeriodExtended': instance.vehicleShowPeriodExtended,
      'VehicleShowWarehouse': instance.vehicleShowWarehouse,
      'VehicleShowReturnToWarehouse': instance.vehicleShowReturnToWarehouse,
      'VehicleShowTaxable': instance.vehicleShowTaxable,
      'VehicleShowNotes': instance.vehicleShowNotes,
      'VehicleDateStamp': instance.vehicleDateStamp,
      'LaborShowICode': instance.laborShowICode,
      'LaborICodeWidth': instance.laborICodeWidth,
      'LaborShowDescription': instance.laborShowDescription,
      'LaborDescriptionWidth': instance.laborDescriptionWidth,
      'LaborShowOrderActivity': instance.laborShowOrderActivity,
      'LaborShowCrewName': instance.laborShowCrewName,
      'LaborShowFromDate': instance.laborShowFromDate,
      'LaborShowFromTime': instance.laborShowFromTime,
      'LaborShowToDate': instance.laborShowToDate,
      'LaborShowToTime': instance.laborShowToTime,
      'LaborShowBillablePeriods': instance.laborShowBillablePeriods,
      'LaborShowHours': instance.laborShowHours,
      'LaborShowSubQuantity': instance.laborShowSubQuantity,
      'LaborShowCost': instance.laborShowCost,
      'LaborShowRate': instance.laborShowRate,
      'LaborShowPeriodCostExtended': instance.laborShowPeriodCostExtended,
      'LaborShowDiscountPercent': instance.laborShowDiscountPercent,
      'LaborShowUnit': instance.laborShowUnit,
      'LaborShowUnitDiscountAmount': instance.laborShowUnitDiscountAmount,
      'LaborShowUnitExtended': instance.laborShowUnitExtended,
      'LaborShowWeeklyDiscountAmount': instance.laborShowWeeklyDiscountAmount,
      'LaborShowWeeklyExtended': instance.laborShowWeeklyExtended,
      'LaborShowMonthlyDiscountAmount': instance.laborShowMonthlyDiscountAmount,
      'LaborShowMonthlyExtended': instance.laborShowMonthlyExtended,
      'LaborShowPeriodDiscountAmount': instance.laborShowPeriodDiscountAmount,
      'LaborShowPeriodExtended': instance.laborShowPeriodExtended,
      'LaborShowWarehouse': instance.laborShowWarehouse,
      'LaborShowTaxable': instance.laborShowTaxable,
      'LaborShowNotes': instance.laborShowNotes,
      'LaborDateStamp': instance.laborDateStamp,
      'HideCrewBreaks': instance.hideCrewBreaks,
      'Break1Paid': instance.break1Paid,
      'Break2Paid': instance.break2Paid,
      'Break3Paid': instance.break3Paid,
      'MiscShowICode': instance.miscShowICode,
      'MiscICodeWidth': instance.miscICodeWidth,
      'MiscShowDescription': instance.miscShowDescription,
      'MiscDescriptionWidth': instance.miscDescriptionWidth,
      'MiscShowFromDate': instance.miscShowFromDate,
      'MiscShowFromTime': instance.miscShowFromTime,
      'MiscShowToDate': instance.miscShowToDate,
      'MiscShowToTime': instance.miscShowToTime,
      'MiscShowBillablePeriods': instance.miscShowBillablePeriods,
      'MiscShowSubQuantity': instance.miscShowSubQuantity,
      'MiscShowWeeksAndDays': instance.miscShowWeeksAndDays,
      'MiscShowMonthsAndDays': instance.miscShowMonthsAndDays,
      'MiscShowUnit': instance.miscShowUnit,
      'MiscShowRate': instance.miscShowRate,
      'MiscShowCost': instance.miscShowCost,
      'MiscShowPeriodCostExtended': instance.miscShowPeriodCostExtended,
      'MiscShowDiscountPercent': instance.miscShowDiscountPercent,
      'MiscShowUnitDiscountAmount': instance.miscShowUnitDiscountAmount,
      'MiscShowUnitExtended': instance.miscShowUnitExtended,
      'MiscShowWeeklyDiscountAmount': instance.miscShowWeeklyDiscountAmount,
      'MiscShowWeeklyExtended': instance.miscShowWeeklyExtended,
      'MiscShowMonthlyDiscountAmount': instance.miscShowMonthlyDiscountAmount,
      'MiscShowMonthlyExtended': instance.miscShowMonthlyExtended,
      'MiscShowPeriodDiscountAmount': instance.miscShowPeriodDiscountAmount,
      'MiscShowPeriodExtended': instance.miscShowPeriodExtended,
      'MiscShowWarehouse': instance.miscShowWarehouse,
      'MiscShowTaxable': instance.miscShowTaxable,
      'MiscShowNotes': instance.miscShowNotes,
      'MiscDateStamp': instance.miscDateStamp,
      'RentalSaleShowBarCode': instance.rentalSaleShowBarCode,
      'RentalSaleShowSerialNumber': instance.rentalSaleShowSerialNumber,
      'RentalSaleShowICode': instance.rentalSaleShowICode,
      'RentalSaleICodeWidth': instance.rentalSaleICodeWidth,
      'RentalSaleShowDescription': instance.rentalSaleShowDescription,
      'RentalSaleDescriptionWidth': instance.rentalSaleDescriptionWidth,
      'RentalSaleShowPickDate': instance.rentalSaleShowPickDate,
      'RentalSaleShowPickTime': instance.rentalSaleShowPickTime,
      'RentalSaleShowAvailableQuantity':
          instance.rentalSaleShowAvailableQuantity,
      'RentalSaleShowConflictDate': instance.rentalSaleShowConflictDate,
      'RentalSaleShowUnit': instance.rentalSaleShowUnit,
      'RentalSaleShowRate': instance.rentalSaleShowRate,
      'RentalSaleShowCost': instance.rentalSaleShowCost,
      'RentalSaleShowPeriodCostExtended':
          instance.rentalSaleShowPeriodCostExtended,
      'RentalSaleShowDiscountPercent': instance.rentalSaleShowDiscountPercent,
      'RentalSaleShowUnitDiscountAmount':
          instance.rentalSaleShowUnitDiscountAmount,
      'RentalSaleShowUnitExtended': instance.rentalSaleShowUnitExtended,
      'RentalSaleShowPeriodDiscountAmount':
          instance.rentalSaleShowPeriodDiscountAmount,
      'RentalSaleShowPeriodExtended': instance.rentalSaleShowPeriodExtended,
      'RentalSaleShowWarehouse': instance.rentalSaleShowWarehouse,
      'RentalSaleShowTaxable': instance.rentalSaleShowTaxable,
      'RentalSaleShowNotes': instance.rentalSaleShowNotes,
      'RentalSaleDateStamp': instance.rentalSaleDateStamp,
      'LossAndDamageShowOrderNumber': instance.lossAndDamageShowOrderNumber,
      'LossAndDamageShowRepairOrderNumber':
          instance.lossAndDamageShowRepairOrderNumber,
      'LossAndDamageShowBarCode': instance.lossAndDamageShowBarCode,
      'LossAndDamageShowSerialNumber': instance.lossAndDamageShowSerialNumber,
      'LossAndDamageShowICode': instance.lossAndDamageShowICode,
      'LossAndDamageICodeWidth': instance.lossAndDamageICodeWidth,
      'LossAndDamageShowDescription': instance.lossAndDamageShowDescription,
      'LossAndDamageDescriptionWidth': instance.lossAndDamageDescriptionWidth,
      'LossAndDamageShowUnit': instance.lossAndDamageShowUnit,
      'LossAndDamageShowRate': instance.lossAndDamageShowRate,
      'LossAndDamageShowCost': instance.lossAndDamageShowCost,
      'LossAndDamageShowDiscountPercent':
          instance.lossAndDamageShowDiscountPercent,
      'LossAndDamageShowUnitDiscountAmount':
          instance.lossAndDamageShowUnitDiscountAmount,
      'LossAndDamageShowUnitExtended': instance.lossAndDamageShowUnitExtended,
      'LossAndDamageShowPeriodDiscountAmount':
          instance.lossAndDamageShowPeriodDiscountAmount,
      'LossAndDamageShowPeriodExtended':
          instance.lossAndDamageShowPeriodExtended,
      'LossAndDamageShowWarehouse': instance.lossAndDamageShowWarehouse,
      'LossAndDamageShowTaxable': instance.lossAndDamageShowTaxable,
      'LossAndDamageShowNotes': instance.lossAndDamageShowNotes,
      'LossAndDamageDateStamp': instance.lossAndDamageDateStamp,
      'AddInstallationAndStrikeFee': instance.addInstallationAndStrikeFee,
      'InstallationAndStrikeFeeRateId': instance.installationAndStrikeFeeRateId,
      'InstallationAndStrikeFeeICode': instance.installationAndStrikeFeeICode,
      'InstallationAndStrikeFeeDescription':
          instance.installationAndStrikeFeeDescription,
      'InstallationAndStrikeFeePercent':
          instance.installationAndStrikeFeePercent,
      'InstallationAndStrikeFeeBasedOn':
          instance.installationAndStrikeFeeBasedOn,
      'AddManagementAndServiceFee': instance.addManagementAndServiceFee,
      'ManagementAndServiceFeeRateId': instance.managementAndServiceFeeRateId,
      'ManagementAndServiceFeeICode': instance.managementAndServiceFeeICode,
      'ManagementAndServiceFeeDescription':
          instance.managementAndServiceFeeDescription,
      'ManagementAndServiceFeePercent': instance.managementAndServiceFeePercent,
      'ManagementAndServiceFeeBasedOn': instance.managementAndServiceFeeBasedOn,
      'DefaultRentalSalePrice': instance.defaultRentalSalePrice,
      'QuikPayDiscount': instance.quikPayDiscount,
      'QuikPayDiscountType': instance.quikPayDiscountType,
      'QuikPayDiscountDays': instance.quikPayDiscountDays,
      'QuikPayDiscountPercent': instance.quikPayDiscountPercent,
      'QuikPayDiscountExcludeSubs': instance.quikPayDiscountExcludeSubs,
      'QuikConfirmDiscount': instance.quikConfirmDiscount,
      'QuikConfirmDiscountPercent': instance.quikConfirmDiscountPercent,
      'QuikConfirmDiscountDays': instance.quikConfirmDiscountDays,
      'DisableCostGl': instance.disableCostGl,
      'ExcludeFromTopSalesDashboard': instance.excludeFromTopSalesDashboard,
      'SeparatePackageOnQuoteOrder': instance.separatePackageOnQuoteOrder,
      'Orderby': instance.orderby,
      'SubAllShortagesSubMiscellaneous':
          instance.subAllShortagesSubMiscellaneous,
      'Inactive': instance.inactive,
      'CombinedShowFields': instance.combinedShowFields,
      'RentalShowFields': instance.rentalShowFields,
      'SalesShowFields': instance.salesShowFields,
      'MiscShowFields': instance.miscShowFields,
      'LaborShowFields': instance.laborShowFields,
      'RentalSaleShowFields': instance.rentalSaleShowFields,
      'LossAndDamageShowFields': instance.lossAndDamageShowFields,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesTransfersTransferOrderTransferOrder
    _$WebApiModulesTransfersTransferOrderTransferOrderFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesTransfersTransferOrderTransferOrder(
    transferId: json['TransferId'] as String?,
    transferNumber: json['TransferNumber'] as String?,
    transferDate: json['TransferDate'] as String?,
    description: json['Description'] as String?,
    status: json['Status'] as String?,
    statusDate: json['StatusDate'] as String?,
    fromWarehouseId: json['FromWarehouseId'] as String?,
    fromWarehouse: json['FromWarehouse'] as String?,
    fromWarehouseCode: json['FromWarehouseCode'] as String?,
    toWarehouseId: json['ToWarehouseId'] as String?,
    toWarehouse: json['ToWarehouse'] as String?,
    toWarehouseCode: json['ToWarehouseCode'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    hasRentalItem: json['HasRentalItem'] as bool?,
    hasSalesItem: json['HasSalesItem'] as bool?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    relatedToOrderId: json['RelatedToOrderId'] as String?,
    relatedToOrderNumber: json['RelatedToOrderNumber'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    officeLocation: json['OfficeLocation'] as String?,
    isReturnTransferOrder: json['IsReturnTransferOrder'] as bool?,
    pickDate: json['PickDate'] as String?,
    pickTime: json['PickTime'] as String?,
    shipDate: json['ShipDate'] as String?,
    shipTime: json['ShipTime'] as String?,
    requiredDate: json['RequiredDate'] as String?,
    requiredTime: json['RequiredTime'] as String?,
    outDeliveryId: json['OutDeliveryId'] as String?,
    outDeliveryDeliveryType: json['OutDeliveryDeliveryType'] as String?,
    outDeliveryRequiredDate: json['OutDeliveryRequiredDate'] as String?,
    outDeliveryRequiredTime: json['OutDeliveryRequiredTime'] as String?,
    outDeliveryTargetShipDate: json['OutDeliveryTargetShipDate'] as String?,
    outDeliveryTargetShipTime: json['OutDeliveryTargetShipTime'] as String?,
    outDeliveryDirection: json['OutDeliveryDirection'] as String?,
    outDeliveryAddressType: json['OutDeliveryAddressType'] as String?,
    outDeliveryFromLocation: json['OutDeliveryFromLocation'] as String?,
    outDeliveryFromContact: json['OutDeliveryFromContact'] as String?,
    outDeliveryFromContactPhone: json['OutDeliveryFromContactPhone'] as String?,
    outDeliveryFromAlternateContact:
        json['OutDeliveryFromAlternateContact'] as String?,
    outDeliveryFromAlternateContactPhone:
        json['OutDeliveryFromAlternateContactPhone'] as String?,
    outDeliveryFromAttention: json['OutDeliveryFromAttention'] as String?,
    outDeliveryFromAddress1: json['OutDeliveryFromAddress1'] as String?,
    outDeliveryFromAdd2ress: json['OutDeliveryFromAdd2ress'] as String?,
    outDeliveryFromCity: json['OutDeliveryFromCity'] as String?,
    outDeliveryFromState: json['OutDeliveryFromState'] as String?,
    outDeliveryFromZipCode: json['OutDeliveryFromZipCode'] as String?,
    outDeliveryFromCountry: json['OutDeliveryFromCountry'] as String?,
    outDeliveryFromCountryId: json['OutDeliveryFromCountryId'] as String?,
    outDeliveryFromCrossStreets: json['OutDeliveryFromCrossStreets'] as String?,
    outDeliveryToLocation: json['OutDeliveryToLocation'] as String?,
    outDeliveryToContact: json['OutDeliveryToContact'] as String?,
    outDeliveryToContactPhone: json['OutDeliveryToContactPhone'] as String?,
    outDeliveryToAlternateContact:
        json['OutDeliveryToAlternateContact'] as String?,
    outDeliveryToAlternateContactPhone:
        json['OutDeliveryToAlternateContactPhone'] as String?,
    outDeliveryToAttention: json['OutDeliveryToAttention'] as String?,
    outDeliveryToAddress1: json['OutDeliveryToAddress1'] as String?,
    outDeliveryToAddress2: json['OutDeliveryToAddress2'] as String?,
    outDeliveryToCity: json['OutDeliveryToCity'] as String?,
    outDeliveryToState: json['OutDeliveryToState'] as String?,
    outDeliveryToZipCode: json['OutDeliveryToZipCode'] as String?,
    outDeliveryToCountryId: json['OutDeliveryToCountryId'] as String?,
    outDeliveryToCountry: json['OutDeliveryToCountry'] as String?,
    outDeliveryToContactFax: json['OutDeliveryToContactFax'] as String?,
    outDeliveryToCrossStreets: json['OutDeliveryToCrossStreets'] as String?,
    outDeliveryDeliveryNotes: json['OutDeliveryDeliveryNotes'] as String?,
    outDeliveryCarrierId: json['OutDeliveryCarrierId'] as String?,
    outDeliveryCarrier: json['OutDeliveryCarrier'] as String?,
    outDeliveryCarrierAccount: json['OutDeliveryCarrierAccount'] as String?,
    outDeliveryShipViaId: json['OutDeliveryShipViaId'] as String?,
    outDeliveryShipVia: json['OutDeliveryShipVia'] as String?,
    outDeliveryInvoiceId: json['OutDeliveryInvoiceId'] as String?,
    outDeliveryVendorInvoiceId: json['OutDeliveryVendorInvoiceId'] as String?,
    outDeliveryEstimatedFreight:
        (json['OutDeliveryEstimatedFreight'] as num?)?.toDouble(),
    outDeliveryFreightInvoiceAmount:
        (json['OutDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    outDeliveryChargeType: json['OutDeliveryChargeType'] as String?,
    outDeliveryFreightTrackingNumber:
        json['OutDeliveryFreightTrackingNumber'] as String?,
    outDeliveryDropShip: json['OutDeliveryDropShip'] as bool?,
    outDeliveryPackageCode: json['OutDeliveryPackageCode'] as String?,
    outDeliveryBillPoFreightOnOrder:
        json['OutDeliveryBillPoFreightOnOrder'] as bool?,
    outDeliveryOnlineOrderNumber:
        json['OutDeliveryOnlineOrderNumber'] as String?,
    outDeliveryDateStamp: json['OutDeliveryDateStamp'] as String?,
    inDeliveryId: json['InDeliveryId'] as String?,
    inDeliveryDeliveryType: json['InDeliveryDeliveryType'] as String?,
    inDeliveryRequiredDate: json['InDeliveryRequiredDate'] as String?,
    inDeliveryRequiredTime: json['InDeliveryRequiredTime'] as String?,
    inDeliveryTargetShipDate: json['InDeliveryTargetShipDate'] as String?,
    inDeliveryTargetShipTime: json['InDeliveryTargetShipTime'] as String?,
    inDeliveryDirection: json['InDeliveryDirection'] as String?,
    inDeliveryAddressType: json['InDeliveryAddressType'] as String?,
    inDeliveryFromLocation: json['InDeliveryFromLocation'] as String?,
    inDeliveryFromContact: json['InDeliveryFromContact'] as String?,
    inDeliveryFromContactPhone: json['InDeliveryFromContactPhone'] as String?,
    inDeliveryFromAlternateContact:
        json['InDeliveryFromAlternateContact'] as String?,
    inDeliveryFromAlternateContactPhone:
        json['InDeliveryFromAlternateContactPhone'] as String?,
    inDeliveryFromAttention: json['InDeliveryFromAttention'] as String?,
    inDeliveryFromAddress1: json['InDeliveryFromAddress1'] as String?,
    inDeliveryFromAdd2ress: json['InDeliveryFromAdd2ress'] as String?,
    inDeliveryFromCity: json['InDeliveryFromCity'] as String?,
    inDeliveryFromState: json['InDeliveryFromState'] as String?,
    inDeliveryFromZipCode: json['InDeliveryFromZipCode'] as String?,
    inDeliveryFromCountry: json['InDeliveryFromCountry'] as String?,
    inDeliveryFromCountryId: json['InDeliveryFromCountryId'] as String?,
    inDeliveryFromCrossStreets: json['InDeliveryFromCrossStreets'] as String?,
    inDeliveryToLocation: json['InDeliveryToLocation'] as String?,
    inDeliveryToContact: json['InDeliveryToContact'] as String?,
    inDeliveryToContactPhone: json['InDeliveryToContactPhone'] as String?,
    inDeliveryToAlternateContact:
        json['InDeliveryToAlternateContact'] as String?,
    inDeliveryToAlternateContactPhone:
        json['InDeliveryToAlternateContactPhone'] as String?,
    inDeliveryToAttention: json['InDeliveryToAttention'] as String?,
    inDeliveryToAddress1: json['InDeliveryToAddress1'] as String?,
    inDeliveryToAddress2: json['InDeliveryToAddress2'] as String?,
    inDeliveryToCity: json['InDeliveryToCity'] as String?,
    inDeliveryToState: json['InDeliveryToState'] as String?,
    inDeliveryToZipCode: json['InDeliveryToZipCode'] as String?,
    inDeliveryToCountryId: json['InDeliveryToCountryId'] as String?,
    inDeliveryToCountry: json['InDeliveryToCountry'] as String?,
    inDeliveryToContactFax: json['InDeliveryToContactFax'] as String?,
    inDeliveryToCrossStreets: json['InDeliveryToCrossStreets'] as String?,
    inDeliveryDeliveryNotes: json['InDeliveryDeliveryNotes'] as String?,
    inDeliveryCarrierId: json['InDeliveryCarrierId'] as String?,
    inDeliveryCarrier: json['InDeliveryCarrier'] as String?,
    inDeliveryCarrierAccount: json['InDeliveryCarrierAccount'] as String?,
    inDeliveryShipViaId: json['InDeliveryShipViaId'] as String?,
    inDeliveryShipVia: json['InDeliveryShipVia'] as String?,
    inDeliveryInvoiceId: json['InDeliveryInvoiceId'] as String?,
    inDeliveryVendorInvoiceId: json['InDeliveryVendorInvoiceId'] as String?,
    inDeliveryEstimatedFreight:
        (json['InDeliveryEstimatedFreight'] as num?)?.toDouble(),
    inDeliveryFreightInvoiceAmount:
        (json['InDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    inDeliveryChargeType: json['InDeliveryChargeType'] as String?,
    inDeliveryFreightTrackingNumber:
        json['InDeliveryFreightTrackingNumber'] as String?,
    inDeliveryDropShip: json['InDeliveryDropShip'] as bool?,
    inDeliveryPackageCode: json['InDeliveryPackageCode'] as String?,
    inDeliveryBillPoFreightOnOrder:
        json['InDeliveryBillPoFreightOnOrder'] as bool?,
    inDeliveryOnlineOrderNumber: json['InDeliveryOnlineOrderNumber'] as String?,
    inDeliveryOnlineOrderStatus: json['InDeliveryOnlineOrderStatus'] as String?,
    inDeliveryDateStamp: json['InDeliveryDateStamp'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesTransfersTransferOrderTransferOrderToJson(
        WebApiModulesTransfersTransferOrderTransferOrder instance) =>
    <String, dynamic>{
      'TransferId': instance.transferId,
      'TransferNumber': instance.transferNumber,
      'TransferDate': instance.transferDate,
      'Description': instance.description,
      'Status': instance.status,
      'StatusDate': instance.statusDate,
      'FromWarehouseId': instance.fromWarehouseId,
      'FromWarehouse': instance.fromWarehouse,
      'FromWarehouseCode': instance.fromWarehouseCode,
      'ToWarehouseId': instance.toWarehouseId,
      'ToWarehouse': instance.toWarehouse,
      'ToWarehouseCode': instance.toWarehouseCode,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'Rental': instance.rental,
      'Sales': instance.sales,
      'HasRentalItem': instance.hasRentalItem,
      'HasSalesItem': instance.hasSalesItem,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'RelatedToOrderId': instance.relatedToOrderId,
      'RelatedToOrderNumber': instance.relatedToOrderNumber,
      'OfficeLocationId': instance.officeLocationId,
      'OfficeLocation': instance.officeLocation,
      'IsReturnTransferOrder': instance.isReturnTransferOrder,
      'PickDate': instance.pickDate,
      'PickTime': instance.pickTime,
      'ShipDate': instance.shipDate,
      'ShipTime': instance.shipTime,
      'RequiredDate': instance.requiredDate,
      'RequiredTime': instance.requiredTime,
      'OutDeliveryId': instance.outDeliveryId,
      'OutDeliveryDeliveryType': instance.outDeliveryDeliveryType,
      'OutDeliveryRequiredDate': instance.outDeliveryRequiredDate,
      'OutDeliveryRequiredTime': instance.outDeliveryRequiredTime,
      'OutDeliveryTargetShipDate': instance.outDeliveryTargetShipDate,
      'OutDeliveryTargetShipTime': instance.outDeliveryTargetShipTime,
      'OutDeliveryDirection': instance.outDeliveryDirection,
      'OutDeliveryAddressType': instance.outDeliveryAddressType,
      'OutDeliveryFromLocation': instance.outDeliveryFromLocation,
      'OutDeliveryFromContact': instance.outDeliveryFromContact,
      'OutDeliveryFromContactPhone': instance.outDeliveryFromContactPhone,
      'OutDeliveryFromAlternateContact':
          instance.outDeliveryFromAlternateContact,
      'OutDeliveryFromAlternateContactPhone':
          instance.outDeliveryFromAlternateContactPhone,
      'OutDeliveryFromAttention': instance.outDeliveryFromAttention,
      'OutDeliveryFromAddress1': instance.outDeliveryFromAddress1,
      'OutDeliveryFromAdd2ress': instance.outDeliveryFromAdd2ress,
      'OutDeliveryFromCity': instance.outDeliveryFromCity,
      'OutDeliveryFromState': instance.outDeliveryFromState,
      'OutDeliveryFromZipCode': instance.outDeliveryFromZipCode,
      'OutDeliveryFromCountry': instance.outDeliveryFromCountry,
      'OutDeliveryFromCountryId': instance.outDeliveryFromCountryId,
      'OutDeliveryFromCrossStreets': instance.outDeliveryFromCrossStreets,
      'OutDeliveryToLocation': instance.outDeliveryToLocation,
      'OutDeliveryToContact': instance.outDeliveryToContact,
      'OutDeliveryToContactPhone': instance.outDeliveryToContactPhone,
      'OutDeliveryToAlternateContact': instance.outDeliveryToAlternateContact,
      'OutDeliveryToAlternateContactPhone':
          instance.outDeliveryToAlternateContactPhone,
      'OutDeliveryToAttention': instance.outDeliveryToAttention,
      'OutDeliveryToAddress1': instance.outDeliveryToAddress1,
      'OutDeliveryToAddress2': instance.outDeliveryToAddress2,
      'OutDeliveryToCity': instance.outDeliveryToCity,
      'OutDeliveryToState': instance.outDeliveryToState,
      'OutDeliveryToZipCode': instance.outDeliveryToZipCode,
      'OutDeliveryToCountryId': instance.outDeliveryToCountryId,
      'OutDeliveryToCountry': instance.outDeliveryToCountry,
      'OutDeliveryToContactFax': instance.outDeliveryToContactFax,
      'OutDeliveryToCrossStreets': instance.outDeliveryToCrossStreets,
      'OutDeliveryDeliveryNotes': instance.outDeliveryDeliveryNotes,
      'OutDeliveryCarrierId': instance.outDeliveryCarrierId,
      'OutDeliveryCarrier': instance.outDeliveryCarrier,
      'OutDeliveryCarrierAccount': instance.outDeliveryCarrierAccount,
      'OutDeliveryShipViaId': instance.outDeliveryShipViaId,
      'OutDeliveryShipVia': instance.outDeliveryShipVia,
      'OutDeliveryInvoiceId': instance.outDeliveryInvoiceId,
      'OutDeliveryVendorInvoiceId': instance.outDeliveryVendorInvoiceId,
      'OutDeliveryEstimatedFreight': instance.outDeliveryEstimatedFreight,
      'OutDeliveryFreightInvoiceAmount':
          instance.outDeliveryFreightInvoiceAmount,
      'OutDeliveryChargeType': instance.outDeliveryChargeType,
      'OutDeliveryFreightTrackingNumber':
          instance.outDeliveryFreightTrackingNumber,
      'OutDeliveryDropShip': instance.outDeliveryDropShip,
      'OutDeliveryPackageCode': instance.outDeliveryPackageCode,
      'OutDeliveryBillPoFreightOnOrder':
          instance.outDeliveryBillPoFreightOnOrder,
      'OutDeliveryOnlineOrderNumber': instance.outDeliveryOnlineOrderNumber,
      'OutDeliveryDateStamp': instance.outDeliveryDateStamp,
      'InDeliveryId': instance.inDeliveryId,
      'InDeliveryDeliveryType': instance.inDeliveryDeliveryType,
      'InDeliveryRequiredDate': instance.inDeliveryRequiredDate,
      'InDeliveryRequiredTime': instance.inDeliveryRequiredTime,
      'InDeliveryTargetShipDate': instance.inDeliveryTargetShipDate,
      'InDeliveryTargetShipTime': instance.inDeliveryTargetShipTime,
      'InDeliveryDirection': instance.inDeliveryDirection,
      'InDeliveryAddressType': instance.inDeliveryAddressType,
      'InDeliveryFromLocation': instance.inDeliveryFromLocation,
      'InDeliveryFromContact': instance.inDeliveryFromContact,
      'InDeliveryFromContactPhone': instance.inDeliveryFromContactPhone,
      'InDeliveryFromAlternateContact': instance.inDeliveryFromAlternateContact,
      'InDeliveryFromAlternateContactPhone':
          instance.inDeliveryFromAlternateContactPhone,
      'InDeliveryFromAttention': instance.inDeliveryFromAttention,
      'InDeliveryFromAddress1': instance.inDeliveryFromAddress1,
      'InDeliveryFromAdd2ress': instance.inDeliveryFromAdd2ress,
      'InDeliveryFromCity': instance.inDeliveryFromCity,
      'InDeliveryFromState': instance.inDeliveryFromState,
      'InDeliveryFromZipCode': instance.inDeliveryFromZipCode,
      'InDeliveryFromCountry': instance.inDeliveryFromCountry,
      'InDeliveryFromCountryId': instance.inDeliveryFromCountryId,
      'InDeliveryFromCrossStreets': instance.inDeliveryFromCrossStreets,
      'InDeliveryToLocation': instance.inDeliveryToLocation,
      'InDeliveryToContact': instance.inDeliveryToContact,
      'InDeliveryToContactPhone': instance.inDeliveryToContactPhone,
      'InDeliveryToAlternateContact': instance.inDeliveryToAlternateContact,
      'InDeliveryToAlternateContactPhone':
          instance.inDeliveryToAlternateContactPhone,
      'InDeliveryToAttention': instance.inDeliveryToAttention,
      'InDeliveryToAddress1': instance.inDeliveryToAddress1,
      'InDeliveryToAddress2': instance.inDeliveryToAddress2,
      'InDeliveryToCity': instance.inDeliveryToCity,
      'InDeliveryToState': instance.inDeliveryToState,
      'InDeliveryToZipCode': instance.inDeliveryToZipCode,
      'InDeliveryToCountryId': instance.inDeliveryToCountryId,
      'InDeliveryToCountry': instance.inDeliveryToCountry,
      'InDeliveryToContactFax': instance.inDeliveryToContactFax,
      'InDeliveryToCrossStreets': instance.inDeliveryToCrossStreets,
      'InDeliveryDeliveryNotes': instance.inDeliveryDeliveryNotes,
      'InDeliveryCarrierId': instance.inDeliveryCarrierId,
      'InDeliveryCarrier': instance.inDeliveryCarrier,
      'InDeliveryCarrierAccount': instance.inDeliveryCarrierAccount,
      'InDeliveryShipViaId': instance.inDeliveryShipViaId,
      'InDeliveryShipVia': instance.inDeliveryShipVia,
      'InDeliveryInvoiceId': instance.inDeliveryInvoiceId,
      'InDeliveryVendorInvoiceId': instance.inDeliveryVendorInvoiceId,
      'InDeliveryEstimatedFreight': instance.inDeliveryEstimatedFreight,
      'InDeliveryFreightInvoiceAmount': instance.inDeliveryFreightInvoiceAmount,
      'InDeliveryChargeType': instance.inDeliveryChargeType,
      'InDeliveryFreightTrackingNumber':
          instance.inDeliveryFreightTrackingNumber,
      'InDeliveryDropShip': instance.inDeliveryDropShip,
      'InDeliveryPackageCode': instance.inDeliveryPackageCode,
      'InDeliveryBillPoFreightOnOrder': instance.inDeliveryBillPoFreightOnOrder,
      'InDeliveryOnlineOrderNumber': instance.inDeliveryOnlineOrderNumber,
      'InDeliveryOnlineOrderStatus': instance.inDeliveryOnlineOrderStatus,
      'InDeliveryDateStamp': instance.inDeliveryDateStamp,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesUtilitiesGLDistributionRefreshGLHistoryRequest
    _$WebApiModulesUtilitiesGLDistributionRefreshGLHistoryRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesUtilitiesGLDistributionRefreshGLHistoryRequest(
    fromDate: json['FromDate'] == null
        ? null
        : DateTime.parse(json['FromDate'] as String),
    toDate: json['ToDate'] == null
        ? null
        : DateTime.parse(json['ToDate'] as String),
  );
}

Map<String, dynamic>
    _$WebApiModulesUtilitiesGLDistributionRefreshGLHistoryRequestToJson(
            WebApiModulesUtilitiesGLDistributionRefreshGLHistoryRequest
                instance) =>
        <String, dynamic>{
          'FromDate': instance.fromDate?.toIso8601String(),
          'ToDate': instance.toDate?.toIso8601String(),
        };

WebApiModulesUtilitiesGLDistributionRefreshGLHistoryResponse
    _$WebApiModulesUtilitiesGLDistributionRefreshGLHistoryResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesUtilitiesGLDistributionRefreshGLHistoryResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesUtilitiesGLDistributionRefreshGLHistoryResponseToJson(
            WebApiModulesUtilitiesGLDistributionRefreshGLHistoryResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesWarehouseCheckInCancelCheckInItemRequest
    _$WebApiModulesWarehouseCheckInCancelCheckInItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckInCancelCheckInItemRequest(
    orderTranId: json['OrderTranId'] as int?,
    internalChar: json['InternalChar'] as String?,
    contractId: json['ContractId'] as String?,
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    vendorId: json['VendorId'] as String?,
    description: json['Description'] as String?,
    quantity: json['Quantity'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckInCancelCheckInItemRequestToJson(
            WebApiModulesWarehouseCheckInCancelCheckInItemRequest instance) =>
        <String, dynamic>{
          'OrderTranId': instance.orderTranId,
          'InternalChar': instance.internalChar,
          'ContractId': instance.contractId,
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
          'InventoryId': instance.inventoryId,
          'VendorId': instance.vendorId,
          'Description': instance.description,
          'Quantity': instance.quantity,
        };

WebApiModulesWarehouseCheckInCancelCheckInItemResponse
    _$WebApiModulesWarehouseCheckInCancelCheckInItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckInCancelCheckInItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckInCancelCheckInItemResponseToJson(
            WebApiModulesWarehouseCheckInCancelCheckInItemResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesWarehouseCheckInCheckInContractRequest
    _$WebApiModulesWarehouseCheckInCheckInContractRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckInCheckInContractRequest(
    orderId: json['OrderId'] as String?,
    dealId: json['DealId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckInCheckInContractRequestToJson(
            WebApiModulesWarehouseCheckInCheckInContractRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'DealId': instance.dealId,
          'DepartmentId': instance.departmentId,
          'OfficeLocationId': instance.officeLocationId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesWarehouseCheckInCheckInContractResponse
    _$WebApiModulesWarehouseCheckInCheckInContractResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckInCheckInContractResponse(
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckInCheckInContractResponseToJson(
            WebApiModulesWarehouseCheckInCheckInContractResponse instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
        };

WebApiModulesWarehouseCheckInCheckInItemRequest
    _$WebApiModulesWarehouseCheckInCheckInItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckInCheckInItemRequest(
    moduleType: json['ModuleType'] as String?,
    contractId: json['ContractId'] as String?,
    code: json['Code'] as String?,
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    vendorId: json['VendorId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    quantity: json['Quantity'] as int?,
    addOrderToContract: json['AddOrderToContract'] as bool?,
    swapItem: json['SwapItem'] as bool?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckInCheckInItemRequestToJson(
        WebApiModulesWarehouseCheckInCheckInItemRequest instance) =>
    <String, dynamic>{
      'ModuleType': instance.moduleType,
      'ContractId': instance.contractId,
      'Code': instance.code,
      'OrderId': instance.orderId,
      'OrderItemId': instance.orderItemId,
      'VendorId': instance.vendorId,
      'WarehouseId': instance.warehouseId,
      'Quantity': instance.quantity,
      'AddOrderToContract': instance.addOrderToContract,
      'SwapItem': instance.swapItem,
    };

WebApiModulesWarehouseCheckInHasQuikReceiptRequest
    _$WebApiModulesWarehouseCheckInHasQuikReceiptRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckInHasQuikReceiptRequest(
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckInHasQuikReceiptRequestToJson(
        WebApiModulesWarehouseCheckInHasQuikReceiptRequest instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
    };

WebApiModulesWarehouseCheckInOrderInventoryStatusCheckIn
    _$WebApiModulesWarehouseCheckInOrderInventoryStatusCheckInFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckInOrderInventoryStatusCheckIn(
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    quantityOrdered: json['QuantityOrdered'] as int?,
    quantitySub: json['QuantitySub'] as int?,
    quantityStaged: json['QuantityStaged'] as int?,
    quantityOut: json['QuantityOut'] as int?,
    quantityIn: json['QuantityIn'] as int?,
    quantityRemaining: json['QuantityRemaining'] as int?,
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseCheckInOrderInventoryStatusCheckInToJson(
        WebApiModulesWarehouseCheckInOrderInventoryStatusCheckIn instance) =>
    <String, dynamic>{
      'ICode': instance.iCode,
      'Description': instance.description,
      'QuantityOrdered': instance.quantityOrdered,
      'QuantitySub': instance.quantitySub,
      'QuantityStaged': instance.quantityStaged,
      'QuantityOut': instance.quantityOut,
      'QuantityIn': instance.quantityIn,
      'QuantityRemaining': instance.quantityRemaining,
    };

WebApiModulesWarehouseCheckInTCheckInItemResponse
    _$WebApiModulesWarehouseCheckInTCheckInItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckInTCheckInItemResponse(
    contractId: json['ContractId'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    inventoryId: json['InventoryId'] as String?,
    inventoryClass: json['InventoryClass'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    vendorId: json['VendorId'] as String?,
    inventoryStatus: json['InventoryStatus'] == null
        ? null
        : WebApiModulesWarehouseCheckInOrderInventoryStatusCheckIn.fromJson(
            json['InventoryStatus'] as Map<String, dynamic>),
    showNewOrder: json['ShowNewOrder'] as bool?,
    showSwap: json['ShowSwap'] as bool?,
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckInTCheckInItemResponseToJson(
        WebApiModulesWarehouseCheckInTCheckInItemResponse instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'OrderDescription': instance.orderDescription,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'InventoryId': instance.inventoryId,
      'InventoryClass': instance.inventoryClass,
      'WarehouseId': instance.warehouseId,
      'OrderItemId': instance.orderItemId,
      'VendorId': instance.vendorId,
      'InventoryStatus': instance.inventoryStatus?.toJson(),
      'ShowNewOrder': instance.showNewOrder,
      'ShowSwap': instance.showSwap,
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
    };

WebApiModulesWarehouseCheckOutCheckOutAllStagedRequest
    _$WebApiModulesWarehouseCheckOutCheckOutAllStagedRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutCheckOutAllStagedRequest(
    orderId: json['OrderId'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutCheckOutAllStagedRequestToJson(
            WebApiModulesWarehouseCheckOutCheckOutAllStagedRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'OfficeLocationId': instance.officeLocationId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesWarehouseCheckOutCheckOutAllStagedResponse
    _$WebApiModulesWarehouseCheckOutCheckOutAllStagedResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutCheckOutAllStagedResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutCheckOutAllStagedResponseToJson(
            WebApiModulesWarehouseCheckOutCheckOutAllStagedResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'ContractId': instance.contractId,
        };

WebApiModulesWarehouseCheckOutCreateOutContractRequest
    _$WebApiModulesWarehouseCheckOutCreateOutContractRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutCreateOutContractRequest(
    orderId: json['OrderId'] as String?,
    officeLocationId: json['OfficeLocationId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutCreateOutContractRequestToJson(
            WebApiModulesWarehouseCheckOutCreateOutContractRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'OfficeLocationId': instance.officeLocationId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesWarehouseCheckOutCreateOutContractResponse
    _$WebApiModulesWarehouseCheckOutCreateOutContractResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutCreateOutContractResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutCreateOutContractResponseToJson(
            WebApiModulesWarehouseCheckOutCreateOutContractResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'ContractId': instance.contractId,
        };

WebApiModulesWarehouseCheckOutDecreaseOrderQuantityRequest
    _$WebApiModulesWarehouseCheckOutDecreaseOrderQuantityRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutDecreaseOrderQuantityRequest(
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    quantity: json['Quantity'] as int?,
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseCheckOutDecreaseOrderQuantityRequestToJson(
        WebApiModulesWarehouseCheckOutDecreaseOrderQuantityRequest instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'OrderItemId': instance.orderItemId,
      'InventoryId': instance.inventoryId,
      'WarehouseId': instance.warehouseId,
      'Quantity': instance.quantity,
    };

WebApiModulesWarehouseCheckOutDecreaseOrderQuantityResponse
    _$WebApiModulesWarehouseCheckOutDecreaseOrderQuantityResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutDecreaseOrderQuantityResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutDecreaseOrderQuantityResponseToJson(
            WebApiModulesWarehouseCheckOutDecreaseOrderQuantityResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesWarehouseCheckOutGetPickupLocationsRequest
    _$WebApiModulesWarehouseCheckOutGetPickupLocationsRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutGetPickupLocationsRequest(
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutGetPickupLocationsRequestToJson(
            WebApiModulesWarehouseCheckOutGetPickupLocationsRequest instance) =>
        <String, dynamic>{
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesWarehouseCheckOutGetPickupLocationsResponse
    _$WebApiModulesWarehouseCheckOutGetPickupLocationsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutGetPickupLocationsResponse(
    pickupLocations: (json['PickupLocations'] as List<dynamic>?)
            ?.map((e) => WebApiModulesWarehouseCheckOutPickupLocation.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseCheckOutGetPickupLocationsResponseToJson(
        WebApiModulesWarehouseCheckOutGetPickupLocationsResponse instance) =>
    <String, dynamic>{
      'PickupLocations':
          instance.pickupLocations?.map((e) => e.toJson()).toList(),
    };

WebApiModulesWarehouseCheckOutIsValidStorageContainerRequest
    _$WebApiModulesWarehouseCheckOutIsValidStorageContainerRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutIsValidStorageContainerRequest(
    barcode: json['Barcode'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    orderId: json['OrderId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutIsValidStorageContainerRequestToJson(
            WebApiModulesWarehouseCheckOutIsValidStorageContainerRequest
                instance) =>
        <String, dynamic>{
          'Barcode': instance.barcode,
          'WarehouseId': instance.warehouseId,
          'OrderId': instance.orderId,
        };

WebApiModulesWarehouseCheckOutIsValidStorageContainerResponse
    _$WebApiModulesWarehouseCheckOutIsValidStorageContainerResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutIsValidStorageContainerResponse(
    barcode: json['Barcode'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    storageContainerItemId: json['StorageContainerItemId'] as int?,
    status: json['Status'] as int?,
    message: json['Message'] as String?,
    description: json['Description'] as String?,
    pickupLocationDescription: json['PickupLocationDescription'] as String?,
    pickupLocationId: json['PickupLocationId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutIsValidStorageContainerResponseToJson(
            WebApiModulesWarehouseCheckOutIsValidStorageContainerResponse
                instance) =>
        <String, dynamic>{
          'Barcode': instance.barcode,
          'WarehouseId': instance.warehouseId,
          'StorageContainerItemId': instance.storageContainerItemId,
          'Status': instance.status,
          'Message': instance.message,
          'Description': instance.description,
          'PickupLocationDescription': instance.pickupLocationDescription,
          'PickupLocationId': instance.pickupLocationId,
        };

WebApiModulesWarehouseCheckOutMoveStagedItemRequest
    _$WebApiModulesWarehouseCheckOutMoveStagedItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutMoveStagedItemRequest(
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    vendorId: json['VendorId'] as String?,
    contractId: json['ContractId'] as String?,
    code: json['Code'] as String?,
    quantity: (json['Quantity'] as num?)?.toDouble(),
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutMoveStagedItemRequestToJson(
            WebApiModulesWarehouseCheckOutMoveStagedItemRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
          'VendorId': instance.vendorId,
          'ContractId': instance.contractId,
          'Code': instance.code,
          'Quantity': instance.quantity,
        };

WebApiModulesWarehouseCheckOutMoveStagedItemResponse
    _$WebApiModulesWarehouseCheckOutMoveStagedItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutMoveStagedItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutMoveStagedItemResponseToJson(
            WebApiModulesWarehouseCheckOutMoveStagedItemResponse instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesWarehouseCheckOutOrderHasStorageContainerRequest
    _$WebApiModulesWarehouseCheckOutOrderHasStorageContainerRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutOrderHasStorageContainerRequest(
    orderId: json['OrderId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutOrderHasStorageContainerRequestToJson(
            WebApiModulesWarehouseCheckOutOrderHasStorageContainerRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
        };

WebApiModulesWarehouseCheckOutOrderHasStorageContainerResponse
    _$WebApiModulesWarehouseCheckOutOrderHasStorageContainerResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutOrderHasStorageContainerResponse(
    orderHasStorageContainer: json['OrderHasStorageContainer'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutOrderHasStorageContainerResponseToJson(
            WebApiModulesWarehouseCheckOutOrderHasStorageContainerResponse
                instance) =>
        <String, dynamic>{
          'OrderHasStorageContainer': instance.orderHasStorageContainer,
        };

WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOut
    _$WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOutFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOut(
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    classification: json['Classification'] as String?,
    quantityOrdered: json['QuantityOrdered'] as int?,
    quantitySub: json['QuantitySub'] as int?,
    quantityStaged: json['QuantityStaged'] as int?,
    quantityOut: json['QuantityOut'] as int?,
    quantityIn: json['QuantityIn'] as int?,
    quantityRemaining: json['QuantityRemaining'] as int?,
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOutToJson(
        WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOut instance) =>
    <String, dynamic>{
      'ICode': instance.iCode,
      'Description': instance.description,
      'Classification': instance.classification,
      'QuantityOrdered': instance.quantityOrdered,
      'QuantitySub': instance.quantitySub,
      'QuantityStaged': instance.quantityStaged,
      'QuantityOut': instance.quantityOut,
      'QuantityIn': instance.quantityIn,
      'QuantityRemaining': instance.quantityRemaining,
    };

WebApiModulesWarehouseCheckOutPickupLocation
    _$WebApiModulesWarehouseCheckOutPickupLocationFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutPickupLocation(
    pickupLocationId: json['PickupLocationId'] as int?,
    description: json['Description'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutPickupLocationToJson(
        WebApiModulesWarehouseCheckOutPickupLocation instance) =>
    <String, dynamic>{
      'PickupLocationId': instance.pickupLocationId,
      'Description': instance.description,
    };

WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemRequest
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemRequest(
    orderId: json['OrderId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemRequestToJson(
            WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemResponse
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemResponseToJson(
            WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemRequest
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemRequest(
    orderId: json['OrderId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemRequestToJson(
            WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemResponse
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemResponseToJson(
            WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesWarehouseCheckOutStageItemRequest
    _$WebApiModulesWarehouseCheckOutStageItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStageItemRequest(
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    vendorId: json['VendorId'] as String?,
    code: json['Code'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    quantity: json['Quantity'] as int?,
    unstageItem: json['UnstageItem'] as bool?,
    addItemToOrder: json['AddItemToOrder'] as bool?,
    addCompleteToOrder: json['AddCompleteToOrder'] as bool?,
    stageIncompleteContainer: json['StageIncompleteContainer'] as bool?,
    transferRepair: json['TransferRepair'] as bool?,
    releaseFromRepair: json['ReleaseFromRepair'] as bool?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutStageItemRequestToJson(
        WebApiModulesWarehouseCheckOutStageItemRequest instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'OrderItemId': instance.orderItemId,
      'VendorId': instance.vendorId,
      'Code': instance.code,
      'WarehouseId': instance.warehouseId,
      'Quantity': instance.quantity,
      'UnstageItem': instance.unstageItem,
      'AddItemToOrder': instance.addItemToOrder,
      'AddCompleteToOrder': instance.addCompleteToOrder,
      'StageIncompleteContainer': instance.stageIncompleteContainer,
      'TransferRepair': instance.transferRepair,
      'ReleaseFromRepair': instance.releaseFromRepair,
    };

WebApiModulesWarehouseCheckOutStageItemResponse
    _$WebApiModulesWarehouseCheckOutStageItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStageItemResponse(
    inventoryStatus: json['InventoryStatus'] == null
        ? null
        : WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOut.fromJson(
            json['InventoryStatus'] as Map<String, dynamic>),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    inventoryId: json['InventoryId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    quantityStaged: json['QuantityStaged'] as int?,
    showAddItemToOrder: json['ShowAddItemToOrder'] as bool?,
    showTransferRepair: json['ShowTransferRepair'] as bool?,
    showAddCompleteToOrder: json['ShowAddCompleteToOrder'] as bool?,
    showUnstage: json['ShowUnstage'] as bool?,
    showStageIncompleteContainer: json['ShowStageIncompleteContainer'] as bool?,
    showReleaseFromRepair: json['ShowReleaseFromRepair'] as bool?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutStageItemResponseToJson(
        WebApiModulesWarehouseCheckOutStageItemResponse instance) =>
    <String, dynamic>{
      'InventoryStatus': instance.inventoryStatus?.toJson(),
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'InventoryId': instance.inventoryId,
      'OrderItemId': instance.orderItemId,
      'QuantityStaged': instance.quantityStaged,
      'ShowAddItemToOrder': instance.showAddItemToOrder,
      'ShowTransferRepair': instance.showTransferRepair,
      'ShowAddCompleteToOrder': instance.showAddCompleteToOrder,
      'ShowUnstage': instance.showUnstage,
      'ShowStageIncompleteContainer': instance.showStageIncompleteContainer,
      'ShowReleaseFromRepair': instance.showReleaseFromRepair,
    };

WebApiModulesWarehouseCheckOutStageSerialNumber
    _$WebApiModulesWarehouseCheckOutStageSerialNumberFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStageSerialNumber(
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    inventoryId: json['InventoryId'] as String?,
    rentalItemId: json['RentalItemId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    serialNumber: json['SerialNumber'] as String?,
    currentMeter: (json['CurrentMeter'] as num?)?.toDouble(),
    inventoryStatus: json['InventoryStatus'] as String?,
    statusType: json['StatusType'] as String?,
    isStaged: json['IsStaged'] as bool?,
    color: json['Color'] as String?,
    textColor: json['TextColor'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutStageSerialNumberToJson(
        WebApiModulesWarehouseCheckOutStageSerialNumber instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'OrderItemId': instance.orderItemId,
      'InventoryId': instance.inventoryId,
      'RentalItemId': instance.rentalItemId,
      'WarehouseId': instance.warehouseId,
      'SerialNumber': instance.serialNumber,
      'CurrentMeter': instance.currentMeter,
      'InventoryStatus': instance.inventoryStatus,
      'StatusType': instance.statusType,
      'IsStaged': instance.isStaged,
      'Color': instance.color,
      'TextColor': instance.textColor,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionRequest
    _$WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionRequest(
    sessionId: json['SessionId'] as String?,
    code: json['Code'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    quantity: json['Quantity'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionRequestToJson(
            WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionRequest
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'Code': instance.code,
          'WarehouseId': instance.warehouseId,
          'Quantity': instance.quantity,
        };

WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionResponse
    _$WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionResponseToJson(
            WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'ICode': instance.iCode,
          'Description': instance.description,
        };

WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionRequest
    _$WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionRequest(
    sessionId: json['SessionId'] as String?,
    quantity: json['Quantity'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionRequestToJson(
            WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionRequest
                instance) =>
        <String, dynamic>{
          'SessionId': instance.sessionId,
          'Quantity': instance.quantity,
        };

WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionResponse
    _$WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionResponseToJson(
            WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionRequest
    _$WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionRequest(
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionRequestToJson(
            WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
        };

WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionResponse
    _$WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    sessionId: json['SessionId'] as String?,
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    iCode: json['ICode'] as String?,
    description: json['Description'] as String?,
    quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
    quantityRemaining: (json['QuantityRemaining'] as num?)?.toDouble(),
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionResponseToJson(
            WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionResponse
                instance) =>
        <String, dynamic>{
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
          'SessionId': instance.sessionId,
          'OrderId': instance.orderId,
          'OrderItemId': instance.orderItemId,
          'ICode': instance.iCode,
          'Description': instance.description,
          'QuantityOrdered': instance.quantityOrdered,
          'QuantityRemaining': instance.quantityRemaining,
        };

WebApiModulesWarehouseCheckOutStagingTabsResponse
    _$WebApiModulesWarehouseCheckOutStagingTabsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStagingTabsResponse(
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    quantityTab: json['QuantityTab'] as bool?,
    holdingTab: json['HoldingTab'] as bool?,
    serialTab: json['SerialTab'] as bool?,
    usageTab: json['UsageTab'] as bool?,
    consignmentTab: json['ConsignmentTab'] as bool?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutStagingTabsResponseToJson(
        WebApiModulesWarehouseCheckOutStagingTabsResponse instance) =>
    <String, dynamic>{
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'QuantityTab': instance.quantityTab,
      'HoldingTab': instance.holdingTab,
      'SerialTab': instance.serialTab,
      'UsageTab': instance.usageTab,
      'ConsignmentTab': instance.consignmentTab,
    };

WebApiModulesWarehouseCheckOutStorageContainerGrid
    _$WebApiModulesWarehouseCheckOutStorageContainerGridFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStorageContainerGrid(
    storageContainerId: json['StorageContainerId'] as int?,
    storageContainerItemId: json['StorageContainerItemId'] as int?,
    description: json['Description'] as String?,
    pickUpLocation: json['PickUpLocation'] as String?,
    storageContainerBarcode: json['StorageContainerBarcode'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutStorageContainerGridToJson(
        WebApiModulesWarehouseCheckOutStorageContainerGrid instance) =>
    <String, dynamic>{
      'StorageContainerId': instance.storageContainerId,
      'StorageContainerItemId': instance.storageContainerItemId,
      'Description': instance.description,
      'PickUpLocation': instance.pickUpLocation,
      'StorageContainerBarcode': instance.storageContainerBarcode,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesWarehouseCheckOutStorageContainerItemsGrid
    _$WebApiModulesWarehouseCheckOutStorageContainerItemsGridFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStorageContainerItemsGrid(
    storageContainerItemId: json['StorageContainerItemId'] as int?,
    iCode: json['ICode'] as String?,
    stagedBarcode: json['StagedBarcode'] as String?,
    quantityOrdered: json['QuantityOrdered'] as int?,
    staged: json['Staged'] as int?,
    orderBy: json['OrderBy'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStorageContainerItemsGridToJson(
            WebApiModulesWarehouseCheckOutStorageContainerItemsGrid instance) =>
        <String, dynamic>{
          'StorageContainerItemId': instance.storageContainerItemId,
          'ICode': instance.iCode,
          'StagedBarcode': instance.stagedBarcode,
          'QuantityOrdered': instance.quantityOrdered,
          'Staged': instance.staged,
          'OrderBy': instance.orderBy,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesWarehouseCheckOutStorageContainerStagedItemModel
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemModelFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStorageContainerStagedItemModel(
    storageContainerBarcode: json['StorageContainerBarcode'] as String?,
    storageContainerDescription: json['StorageContainerDescription'] as String?,
    pickupLocation: json['PickupLocation'] as String?,
    iCode: json['ICode'] as String?,
    iCodeDescription: json['ICodeDescription'] as String?,
    stagedBarcode: json['StagedBarcode'] as String?,
    ordered: (json['Ordered'] as num?)?.toDouble(),
    staged: (json['Staged'] as num?)?.toDouble(),
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemModelToJson(
            WebApiModulesWarehouseCheckOutStorageContainerStagedItemModel
                instance) =>
        <String, dynamic>{
          'StorageContainerBarcode': instance.storageContainerBarcode,
          'StorageContainerDescription': instance.storageContainerDescription,
          'PickupLocation': instance.pickupLocation,
          'ICode': instance.iCode,
          'ICodeDescription': instance.iCodeDescription,
          'StagedBarcode': instance.stagedBarcode,
          'Ordered': instance.ordered,
          'Staged': instance.staged,
        };

WebApiModulesWarehouseCheckOutStorageContainerStagedItemsRequest
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemsRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStorageContainerStagedItemsRequest(
    orderId: json['OrderId'] as String?,
    storageContainerBarcodesOnly: json['StorageContainerBarcodesOnly'] as bool?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemsRequestToJson(
            WebApiModulesWarehouseCheckOutStorageContainerStagedItemsRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'StorageContainerBarcodesOnly': instance.storageContainerBarcodesOnly,
        };

WebApiModulesWarehouseCheckOutStorageContainerStagedItemsResponse
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutStorageContainerStagedItemsResponse(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesWarehouseCheckOutStorageContainerStagedItemModel
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemsResponseToJson(
            WebApiModulesWarehouseCheckOutStorageContainerStagedItemsResponse
                instance) =>
        <String, dynamic>{
          'Items': instance.items?.map((e) => e.toJson()).toList(),
        };

WebApiModulesWarehouseCheckOutUnstageItemRequest
    _$WebApiModulesWarehouseCheckOutUnstageItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutUnstageItemRequest(
    orderId: json['OrderId'] as String?,
    orderItemId: json['OrderItemId'] as String?,
    vendorId: json['VendorId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
    code: json['Code'] as String?,
    quantity: json['Quantity'] as int?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutUnstageItemRequestToJson(
        WebApiModulesWarehouseCheckOutUnstageItemRequest instance) =>
    <String, dynamic>{
      'OrderId': instance.orderId,
      'OrderItemId': instance.orderItemId,
      'VendorId': instance.vendorId,
      'WarehouseId': instance.warehouseId,
      'ConsignorAgreementId': instance.consignorAgreementId,
      'Code': instance.code,
      'Quantity': instance.quantity,
    };

WebApiModulesWarehouseCheckOutUnstageItemResponse
    _$WebApiModulesWarehouseCheckOutUnstageItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutUnstageItemResponse(
    inventoryStatus: json['InventoryStatus'] == null
        ? null
        : WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOut.fromJson(
            json['InventoryStatus'] as Map<String, dynamic>),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
    inventoryId: json['InventoryId'] as String?,
    itemId: json['ItemId'] as String?,
    consignorId: json['ConsignorId'] as String?,
    consignorAgreementId: json['ConsignorAgreementId'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutUnstageItemResponseToJson(
        WebApiModulesWarehouseCheckOutUnstageItemResponse instance) =>
    <String, dynamic>{
      'InventoryStatus': instance.inventoryStatus?.toJson(),
      'status': instance.status,
      'success': instance.success,
      'msg': instance.msg,
      'InventoryId': instance.inventoryId,
      'ItemId': instance.itemId,
      'ConsignorId': instance.consignorId,
      'ConsignorAgreementId': instance.consignorAgreementId,
    };

WebApiModulesWarehouseCheckOutUpdatePickupLocationRequest
    _$WebApiModulesWarehouseCheckOutUpdatePickupLocationRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutUpdatePickupLocationRequest(
    storageContainerItemId: json['StorageContainerItemId'] as String?,
    pickupLocationId: json['PickupLocationId'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseCheckOutUpdatePickupLocationRequestToJson(
        WebApiModulesWarehouseCheckOutUpdatePickupLocationRequest instance) =>
    <String, dynamic>{
      'StorageContainerItemId': instance.storageContainerItemId,
      'PickupLocationId': instance.pickupLocationId,
    };

WebApiModulesWarehouseCheckOutUpdatePickupLocationResponse
    _$WebApiModulesWarehouseCheckOutUpdatePickupLocationResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseCheckOutUpdatePickupLocationResponse(
    message: json['Message'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseCheckOutUpdatePickupLocationResponseToJson(
        WebApiModulesWarehouseCheckOutUpdatePickupLocationResponse instance) =>
    <String, dynamic>{
      'Message': instance.message,
    };

WebApiModulesWarehouseContractCancelContractRequest
    _$WebApiModulesWarehouseContractCancelContractRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseContractCancelContractRequest(
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseContractCancelContractRequestToJson(
            WebApiModulesWarehouseContractCancelContractRequest instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
        };

WebApiModulesWarehouseContractContract
    _$WebApiModulesWarehouseContractContractFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseContractContract(
    contractId: json['ContractId'] as String?,
    contractNumber: json['ContractNumber'] as String?,
    contractType: json['ContractType'] as String?,
    contractDate: json['ContractDate'] as String?,
    contractTime: json['ContractTime'] as String?,
    locationId: json['LocationId'] as String?,
    locationCode: json['LocationCode'] as String?,
    location: json['Location'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
    requisitionNumber: json['RequisitionNumber'] as String?,
    vendorId: json['VendorId'] as String?,
    vendor: json['Vendor'] as String?,
    isMigrated: json['IsMigrated'] as bool?,
    needReconcile: json['NeedReconcile'] as bool?,
    pendingExchange: json['PendingExchange'] as bool?,
    exchangeContractId: json['ExchangeContractId'] as String?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    exchange: json['Exchange'] as bool?,
    inputByUserId: json['InputByUserId'] as String?,
    inputByUser: json['InputByUser'] as String?,
    dealInactive: json['DealInactive'] as bool?,
    truck: json['Truck'] as bool?,
    billingDate: json['BillingDate'] as String?,
    billingDateChangeReason: json['BillingDateChangeReason'] as String?,
    lastBillingDateChangeReason: json['LastBillingDateChangeReason'] as String?,
    billingDateAdjusted: json['BillingDateAdjusted'] as bool?,
    hasVoId: json['HasVoId'] as bool?,
    sessionId: json['SessionId'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    poOrderDescription: json['PoOrderDescription'] as String?,
    deliveryId: json['DeliveryId'] as String?,
    deliveryDeliveryType: json['DeliveryDeliveryType'] as String?,
    deliveryRequiredDate: json['DeliveryRequiredDate'] as String?,
    deliveryRequiredTime: json['DeliveryRequiredTime'] as String?,
    deliveryTargetShipDate: json['DeliveryTargetShipDate'] as String?,
    deliveryTargetShipTime: json['DeliveryTargetShipTime'] as String?,
    deliveryDirection: json['DeliveryDirection'] as String?,
    deliveryAddressType: json['DeliveryAddressType'] as String?,
    deliveryFromLocation: json['DeliveryFromLocation'] as String?,
    deliveryFromContact: json['DeliveryFromContact'] as String?,
    deliveryFromContactPhone: json['DeliveryFromContactPhone'] as String?,
    deliveryFromAlternateContact:
        json['DeliveryFromAlternateContact'] as String?,
    deliveryFromAlternateContactPhone:
        json['DeliveryFromAlternateContactPhone'] as String?,
    deliveryFromAttention: json['DeliveryFromAttention'] as String?,
    deliveryFromAddress1: json['DeliveryFromAddress1'] as String?,
    deliveryFromAdd2ress: json['DeliveryFromAdd2ress'] as String?,
    deliveryFromCity: json['DeliveryFromCity'] as String?,
    deliveryFromState: json['DeliveryFromState'] as String?,
    deliveryFromZipCode: json['DeliveryFromZipCode'] as String?,
    deliveryFromCountry: json['DeliveryFromCountry'] as String?,
    deliveryFromCountryId: json['DeliveryFromCountryId'] as String?,
    deliveryFromCrossStreets: json['DeliveryFromCrossStreets'] as String?,
    deliveryToLocation: json['DeliveryToLocation'] as String?,
    deliveryToContact: json['DeliveryToContact'] as String?,
    deliveryToContactPhone: json['DeliveryToContactPhone'] as String?,
    deliveryToAlternateContact: json['DeliveryToAlternateContact'] as String?,
    deliveryToAlternateContactPhone:
        json['DeliveryToAlternateContactPhone'] as String?,
    deliveryToAttention: json['DeliveryToAttention'] as String?,
    deliveryToAddress1: json['DeliveryToAddress1'] as String?,
    deliveryToAddress2: json['DeliveryToAddress2'] as String?,
    deliveryToCity: json['DeliveryToCity'] as String?,
    deliveryToState: json['DeliveryToState'] as String?,
    deliveryToZipCode: json['DeliveryToZipCode'] as String?,
    deliveryToCountryId: json['DeliveryToCountryId'] as String?,
    deliveryToCountry: json['DeliveryToCountry'] as String?,
    deliveryToContactFax: json['DeliveryToContactFax'] as String?,
    deliveryToCrossStreets: json['DeliveryToCrossStreets'] as String?,
    deliveryDeliveryNotes: json['DeliveryDeliveryNotes'] as String?,
    deliveryCarrierId: json['DeliveryCarrierId'] as String?,
    deliveryCarrier: json['DeliveryCarrier'] as String?,
    deliveryCarrierAccount: json['DeliveryCarrierAccount'] as String?,
    deliveryShipViaId: json['DeliveryShipViaId'] as String?,
    deliveryShipVia: json['DeliveryShipVia'] as String?,
    deliveryInvoiceId: json['DeliveryInvoiceId'] as String?,
    deliveryVendorInvoiceId: json['DeliveryVendorInvoiceId'] as String?,
    deliveryEstimatedFreight:
        (json['DeliveryEstimatedFreight'] as num?)?.toDouble(),
    deliveryFreightInvoiceAmount:
        (json['DeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    deliveryChargeType: json['DeliveryChargeType'] as String?,
    deliveryFreightTrackingNumber:
        json['DeliveryFreightTrackingNumber'] as String?,
    deliveryFreightTrackingUrl: json['DeliveryFreightTrackingUrl'] as String?,
    deliveryDropShip: json['DeliveryDropShip'] as bool?,
    deliveryPackageCode: json['DeliveryPackageCode'] as String?,
    deliveryBillPoFreightOnOrder: json['DeliveryBillPoFreightOnOrder'] as bool?,
    deliveryOnlineOrderNumber: json['DeliveryOnlineOrderNumber'] as String?,
    deliveryOnlineOrderStatus: json['DeliveryOnlineOrderStatus'] as String?,
    deliveryToVenue: json['DeliveryToVenue'] as String?,
    deliveryToVenueId: json['DeliveryToVenueId'] as String?,
    deliveryDateStamp: json['DeliveryDateStamp'] as String?,
    note: json['Note'] as String?,
    printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
    termsConditionsId: json['TermsConditionsId'] as String?,
    quikReceiptTermsConditionsId:
        json['QuikReceiptTermsConditionsId'] as String?,
    quikReceiptTermsConditions: json['QuikReceiptTermsConditions'] as String?,
    termsConditions: json['TermsConditions'] as String?,
    containerId: json['ContainerId'] as String?,
    containerItemId: json['ContainerItemId'] as String?,
    containerDescription: json['ContainerDescription'] as String?,
    containerScannableBarCode: json['ContainerScannableBarCode'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseContractContractToJson(
        WebApiModulesWarehouseContractContract instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'ContractNumber': instance.contractNumber,
      'ContractType': instance.contractType,
      'ContractDate': instance.contractDate,
      'ContractTime': instance.contractTime,
      'LocationId': instance.locationId,
      'LocationCode': instance.locationCode,
      'Location': instance.location,
      'WarehouseId': instance.warehouseId,
      'WarehouseCode': instance.warehouseCode,
      'Warehouse': instance.warehouse,
      'CustomerId': instance.customerId,
      'Customer': instance.customer,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'PurchaseOrderId': instance.purchaseOrderId,
      'PurchaseOrderNumber': instance.purchaseOrderNumber,
      'RequisitionNumber': instance.requisitionNumber,
      'VendorId': instance.vendorId,
      'Vendor': instance.vendor,
      'IsMigrated': instance.isMigrated,
      'NeedReconcile': instance.needReconcile,
      'PendingExchange': instance.pendingExchange,
      'ExchangeContractId': instance.exchangeContractId,
      'Rental': instance.rental,
      'Sales': instance.sales,
      'Exchange': instance.exchange,
      'InputByUserId': instance.inputByUserId,
      'InputByUser': instance.inputByUser,
      'DealInactive': instance.dealInactive,
      'Truck': instance.truck,
      'BillingDate': instance.billingDate,
      'BillingDateChangeReason': instance.billingDateChangeReason,
      'LastBillingDateChangeReason': instance.lastBillingDateChangeReason,
      'BillingDateAdjusted': instance.billingDateAdjusted,
      'HasVoId': instance.hasVoId,
      'SessionId': instance.sessionId,
      'OrderDescription': instance.orderDescription,
      'PoOrderDescription': instance.poOrderDescription,
      'DeliveryId': instance.deliveryId,
      'DeliveryDeliveryType': instance.deliveryDeliveryType,
      'DeliveryRequiredDate': instance.deliveryRequiredDate,
      'DeliveryRequiredTime': instance.deliveryRequiredTime,
      'DeliveryTargetShipDate': instance.deliveryTargetShipDate,
      'DeliveryTargetShipTime': instance.deliveryTargetShipTime,
      'DeliveryDirection': instance.deliveryDirection,
      'DeliveryAddressType': instance.deliveryAddressType,
      'DeliveryFromLocation': instance.deliveryFromLocation,
      'DeliveryFromContact': instance.deliveryFromContact,
      'DeliveryFromContactPhone': instance.deliveryFromContactPhone,
      'DeliveryFromAlternateContact': instance.deliveryFromAlternateContact,
      'DeliveryFromAlternateContactPhone':
          instance.deliveryFromAlternateContactPhone,
      'DeliveryFromAttention': instance.deliveryFromAttention,
      'DeliveryFromAddress1': instance.deliveryFromAddress1,
      'DeliveryFromAdd2ress': instance.deliveryFromAdd2ress,
      'DeliveryFromCity': instance.deliveryFromCity,
      'DeliveryFromState': instance.deliveryFromState,
      'DeliveryFromZipCode': instance.deliveryFromZipCode,
      'DeliveryFromCountry': instance.deliveryFromCountry,
      'DeliveryFromCountryId': instance.deliveryFromCountryId,
      'DeliveryFromCrossStreets': instance.deliveryFromCrossStreets,
      'DeliveryToLocation': instance.deliveryToLocation,
      'DeliveryToContact': instance.deliveryToContact,
      'DeliveryToContactPhone': instance.deliveryToContactPhone,
      'DeliveryToAlternateContact': instance.deliveryToAlternateContact,
      'DeliveryToAlternateContactPhone':
          instance.deliveryToAlternateContactPhone,
      'DeliveryToAttention': instance.deliveryToAttention,
      'DeliveryToAddress1': instance.deliveryToAddress1,
      'DeliveryToAddress2': instance.deliveryToAddress2,
      'DeliveryToCity': instance.deliveryToCity,
      'DeliveryToState': instance.deliveryToState,
      'DeliveryToZipCode': instance.deliveryToZipCode,
      'DeliveryToCountryId': instance.deliveryToCountryId,
      'DeliveryToCountry': instance.deliveryToCountry,
      'DeliveryToContactFax': instance.deliveryToContactFax,
      'DeliveryToCrossStreets': instance.deliveryToCrossStreets,
      'DeliveryDeliveryNotes': instance.deliveryDeliveryNotes,
      'DeliveryCarrierId': instance.deliveryCarrierId,
      'DeliveryCarrier': instance.deliveryCarrier,
      'DeliveryCarrierAccount': instance.deliveryCarrierAccount,
      'DeliveryShipViaId': instance.deliveryShipViaId,
      'DeliveryShipVia': instance.deliveryShipVia,
      'DeliveryInvoiceId': instance.deliveryInvoiceId,
      'DeliveryVendorInvoiceId': instance.deliveryVendorInvoiceId,
      'DeliveryEstimatedFreight': instance.deliveryEstimatedFreight,
      'DeliveryFreightInvoiceAmount': instance.deliveryFreightInvoiceAmount,
      'DeliveryChargeType': instance.deliveryChargeType,
      'DeliveryFreightTrackingNumber': instance.deliveryFreightTrackingNumber,
      'DeliveryFreightTrackingUrl': instance.deliveryFreightTrackingUrl,
      'DeliveryDropShip': instance.deliveryDropShip,
      'DeliveryPackageCode': instance.deliveryPackageCode,
      'DeliveryBillPoFreightOnOrder': instance.deliveryBillPoFreightOnOrder,
      'DeliveryOnlineOrderNumber': instance.deliveryOnlineOrderNumber,
      'DeliveryOnlineOrderStatus': instance.deliveryOnlineOrderStatus,
      'DeliveryToVenue': instance.deliveryToVenue,
      'DeliveryToVenueId': instance.deliveryToVenueId,
      'DeliveryDateStamp': instance.deliveryDateStamp,
      'Note': instance.note,
      'PrintNoteOnOrder': instance.printNoteOnOrder,
      'TermsConditionsId': instance.termsConditionsId,
      'QuikReceiptTermsConditionsId': instance.quikReceiptTermsConditionsId,
      'QuikReceiptTermsConditions': instance.quikReceiptTermsConditions,
      'TermsConditions': instance.termsConditions,
      'ContainerId': instance.containerId,
      'ContainerItemId': instance.containerItemId,
      'ContainerDescription': instance.containerDescription,
      'ContainerScannableBarCode': instance.containerScannableBarCode,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesWarehouseContractContractDetailResponse
    _$WebApiModulesWarehouseContractContractDetailResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseContractContractDetailResponse(
    contractId: json['ContractId'] as String?,
    contractNumber: json['ContractNumber'] as String?,
    contractType: json['ContractType'] as String?,
    contractDate: json['ContractDate'] as String?,
    contractTime: json['ContractTime'] as String?,
    locationId: json['LocationId'] as String?,
    locationCode: json['LocationCode'] as String?,
    location: json['Location'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    customerId: json['CustomerId'] as String?,
    customer: json['Customer'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
    requisitionNumber: json['RequisitionNumber'] as String?,
    vendorId: json['VendorId'] as String?,
    vendor: json['Vendor'] as String?,
    isMigrated: json['IsMigrated'] as bool?,
    needReconcile: json['NeedReconcile'] as bool?,
    pendingExchange: json['PendingExchange'] as bool?,
    exchangeContractId: json['ExchangeContractId'] as String?,
    rental: json['Rental'] as bool?,
    sales: json['Sales'] as bool?,
    exchange: json['Exchange'] as bool?,
    inputByUserId: json['InputByUserId'] as String?,
    inputByUser: json['InputByUser'] as String?,
    dealInactive: json['DealInactive'] as bool?,
    truck: json['Truck'] as bool?,
    billingDate: json['BillingDate'] as String?,
    billingDateChangeReason: json['BillingDateChangeReason'] as String?,
    lastBillingDateChangeReason: json['LastBillingDateChangeReason'] as String?,
    billingDateAdjusted: json['BillingDateAdjusted'] as bool?,
    hasVoId: json['HasVoId'] as bool?,
    sessionId: json['SessionId'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    poOrderDescription: json['PoOrderDescription'] as String?,
    deliveryId: json['DeliveryId'] as String?,
    deliveryDeliveryType: json['DeliveryDeliveryType'] as String?,
    deliveryRequiredDate: json['DeliveryRequiredDate'] as String?,
    deliveryRequiredTime: json['DeliveryRequiredTime'] as String?,
    deliveryTargetShipDate: json['DeliveryTargetShipDate'] as String?,
    deliveryTargetShipTime: json['DeliveryTargetShipTime'] as String?,
    deliveryDirection: json['DeliveryDirection'] as String?,
    deliveryAddressType: json['DeliveryAddressType'] as String?,
    deliveryFromLocation: json['DeliveryFromLocation'] as String?,
    deliveryFromContact: json['DeliveryFromContact'] as String?,
    deliveryFromContactPhone: json['DeliveryFromContactPhone'] as String?,
    deliveryFromAlternateContact:
        json['DeliveryFromAlternateContact'] as String?,
    deliveryFromAlternateContactPhone:
        json['DeliveryFromAlternateContactPhone'] as String?,
    deliveryFromAttention: json['DeliveryFromAttention'] as String?,
    deliveryFromAddress1: json['DeliveryFromAddress1'] as String?,
    deliveryFromAdd2ress: json['DeliveryFromAdd2ress'] as String?,
    deliveryFromCity: json['DeliveryFromCity'] as String?,
    deliveryFromState: json['DeliveryFromState'] as String?,
    deliveryFromZipCode: json['DeliveryFromZipCode'] as String?,
    deliveryFromCountry: json['DeliveryFromCountry'] as String?,
    deliveryFromCountryId: json['DeliveryFromCountryId'] as String?,
    deliveryFromCrossStreets: json['DeliveryFromCrossStreets'] as String?,
    deliveryToLocation: json['DeliveryToLocation'] as String?,
    deliveryToContact: json['DeliveryToContact'] as String?,
    deliveryToContactPhone: json['DeliveryToContactPhone'] as String?,
    deliveryToAlternateContact: json['DeliveryToAlternateContact'] as String?,
    deliveryToAlternateContactPhone:
        json['DeliveryToAlternateContactPhone'] as String?,
    deliveryToAttention: json['DeliveryToAttention'] as String?,
    deliveryToAddress1: json['DeliveryToAddress1'] as String?,
    deliveryToAddress2: json['DeliveryToAddress2'] as String?,
    deliveryToCity: json['DeliveryToCity'] as String?,
    deliveryToState: json['DeliveryToState'] as String?,
    deliveryToZipCode: json['DeliveryToZipCode'] as String?,
    deliveryToCountryId: json['DeliveryToCountryId'] as String?,
    deliveryToCountry: json['DeliveryToCountry'] as String?,
    deliveryToContactFax: json['DeliveryToContactFax'] as String?,
    deliveryToCrossStreets: json['DeliveryToCrossStreets'] as String?,
    deliveryDeliveryNotes: json['DeliveryDeliveryNotes'] as String?,
    deliveryCarrierId: json['DeliveryCarrierId'] as String?,
    deliveryCarrier: json['DeliveryCarrier'] as String?,
    deliveryCarrierAccount: json['DeliveryCarrierAccount'] as String?,
    deliveryShipViaId: json['DeliveryShipViaId'] as String?,
    deliveryShipVia: json['DeliveryShipVia'] as String?,
    deliveryInvoiceId: json['DeliveryInvoiceId'] as String?,
    deliveryVendorInvoiceId: json['DeliveryVendorInvoiceId'] as String?,
    deliveryEstimatedFreight:
        (json['DeliveryEstimatedFreight'] as num?)?.toDouble(),
    deliveryFreightInvoiceAmount:
        (json['DeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
    deliveryChargeType: json['DeliveryChargeType'] as String?,
    deliveryFreightTrackingNumber:
        json['DeliveryFreightTrackingNumber'] as String?,
    deliveryFreightTrackingUrl: json['DeliveryFreightTrackingUrl'] as String?,
    deliveryDropShip: json['DeliveryDropShip'] as bool?,
    deliveryPackageCode: json['DeliveryPackageCode'] as String?,
    deliveryBillPoFreightOnOrder: json['DeliveryBillPoFreightOnOrder'] as bool?,
    deliveryOnlineOrderNumber: json['DeliveryOnlineOrderNumber'] as String?,
    deliveryOnlineOrderStatus: json['DeliveryOnlineOrderStatus'] as String?,
    deliveryToVenue: json['DeliveryToVenue'] as String?,
    deliveryToVenueId: json['DeliveryToVenueId'] as String?,
    deliveryDateStamp: json['DeliveryDateStamp'] as String?,
    note: json['Note'] as String?,
    printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
    termsConditionsId: json['TermsConditionsId'] as String?,
    quikReceiptTermsConditionsId:
        json['QuikReceiptTermsConditionsId'] as String?,
    quikReceiptTermsConditions: json['QuikReceiptTermsConditions'] as String?,
    termsConditions: json['TermsConditions'] as String?,
    containerId: json['ContainerId'] as String?,
    containerItemId: json['ContainerItemId'] as String?,
    containerDescription: json['ContainerDescription'] as String?,
    containerScannableBarCode: json['ContainerScannableBarCode'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesHomeControlsContractItemDetailContractItemDetail
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseContractContractDetailResponseToJson(
            WebApiModulesWarehouseContractContractDetailResponse instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
          'ContractNumber': instance.contractNumber,
          'ContractType': instance.contractType,
          'ContractDate': instance.contractDate,
          'ContractTime': instance.contractTime,
          'LocationId': instance.locationId,
          'LocationCode': instance.locationCode,
          'Location': instance.location,
          'WarehouseId': instance.warehouseId,
          'WarehouseCode': instance.warehouseCode,
          'Warehouse': instance.warehouse,
          'CustomerId': instance.customerId,
          'Customer': instance.customer,
          'DealId': instance.dealId,
          'Deal': instance.deal,
          'DepartmentId': instance.departmentId,
          'Department': instance.department,
          'PurchaseOrderId': instance.purchaseOrderId,
          'PurchaseOrderNumber': instance.purchaseOrderNumber,
          'RequisitionNumber': instance.requisitionNumber,
          'VendorId': instance.vendorId,
          'Vendor': instance.vendor,
          'IsMigrated': instance.isMigrated,
          'NeedReconcile': instance.needReconcile,
          'PendingExchange': instance.pendingExchange,
          'ExchangeContractId': instance.exchangeContractId,
          'Rental': instance.rental,
          'Sales': instance.sales,
          'Exchange': instance.exchange,
          'InputByUserId': instance.inputByUserId,
          'InputByUser': instance.inputByUser,
          'DealInactive': instance.dealInactive,
          'Truck': instance.truck,
          'BillingDate': instance.billingDate,
          'BillingDateChangeReason': instance.billingDateChangeReason,
          'LastBillingDateChangeReason': instance.lastBillingDateChangeReason,
          'BillingDateAdjusted': instance.billingDateAdjusted,
          'HasVoId': instance.hasVoId,
          'SessionId': instance.sessionId,
          'OrderDescription': instance.orderDescription,
          'PoOrderDescription': instance.poOrderDescription,
          'DeliveryId': instance.deliveryId,
          'DeliveryDeliveryType': instance.deliveryDeliveryType,
          'DeliveryRequiredDate': instance.deliveryRequiredDate,
          'DeliveryRequiredTime': instance.deliveryRequiredTime,
          'DeliveryTargetShipDate': instance.deliveryTargetShipDate,
          'DeliveryTargetShipTime': instance.deliveryTargetShipTime,
          'DeliveryDirection': instance.deliveryDirection,
          'DeliveryAddressType': instance.deliveryAddressType,
          'DeliveryFromLocation': instance.deliveryFromLocation,
          'DeliveryFromContact': instance.deliveryFromContact,
          'DeliveryFromContactPhone': instance.deliveryFromContactPhone,
          'DeliveryFromAlternateContact': instance.deliveryFromAlternateContact,
          'DeliveryFromAlternateContactPhone':
              instance.deliveryFromAlternateContactPhone,
          'DeliveryFromAttention': instance.deliveryFromAttention,
          'DeliveryFromAddress1': instance.deliveryFromAddress1,
          'DeliveryFromAdd2ress': instance.deliveryFromAdd2ress,
          'DeliveryFromCity': instance.deliveryFromCity,
          'DeliveryFromState': instance.deliveryFromState,
          'DeliveryFromZipCode': instance.deliveryFromZipCode,
          'DeliveryFromCountry': instance.deliveryFromCountry,
          'DeliveryFromCountryId': instance.deliveryFromCountryId,
          'DeliveryFromCrossStreets': instance.deliveryFromCrossStreets,
          'DeliveryToLocation': instance.deliveryToLocation,
          'DeliveryToContact': instance.deliveryToContact,
          'DeliveryToContactPhone': instance.deliveryToContactPhone,
          'DeliveryToAlternateContact': instance.deliveryToAlternateContact,
          'DeliveryToAlternateContactPhone':
              instance.deliveryToAlternateContactPhone,
          'DeliveryToAttention': instance.deliveryToAttention,
          'DeliveryToAddress1': instance.deliveryToAddress1,
          'DeliveryToAddress2': instance.deliveryToAddress2,
          'DeliveryToCity': instance.deliveryToCity,
          'DeliveryToState': instance.deliveryToState,
          'DeliveryToZipCode': instance.deliveryToZipCode,
          'DeliveryToCountryId': instance.deliveryToCountryId,
          'DeliveryToCountry': instance.deliveryToCountry,
          'DeliveryToContactFax': instance.deliveryToContactFax,
          'DeliveryToCrossStreets': instance.deliveryToCrossStreets,
          'DeliveryDeliveryNotes': instance.deliveryDeliveryNotes,
          'DeliveryCarrierId': instance.deliveryCarrierId,
          'DeliveryCarrier': instance.deliveryCarrier,
          'DeliveryCarrierAccount': instance.deliveryCarrierAccount,
          'DeliveryShipViaId': instance.deliveryShipViaId,
          'DeliveryShipVia': instance.deliveryShipVia,
          'DeliveryInvoiceId': instance.deliveryInvoiceId,
          'DeliveryVendorInvoiceId': instance.deliveryVendorInvoiceId,
          'DeliveryEstimatedFreight': instance.deliveryEstimatedFreight,
          'DeliveryFreightInvoiceAmount': instance.deliveryFreightInvoiceAmount,
          'DeliveryChargeType': instance.deliveryChargeType,
          'DeliveryFreightTrackingNumber':
              instance.deliveryFreightTrackingNumber,
          'DeliveryFreightTrackingUrl': instance.deliveryFreightTrackingUrl,
          'DeliveryDropShip': instance.deliveryDropShip,
          'DeliveryPackageCode': instance.deliveryPackageCode,
          'DeliveryBillPoFreightOnOrder': instance.deliveryBillPoFreightOnOrder,
          'DeliveryOnlineOrderNumber': instance.deliveryOnlineOrderNumber,
          'DeliveryOnlineOrderStatus': instance.deliveryOnlineOrderStatus,
          'DeliveryToVenue': instance.deliveryToVenue,
          'DeliveryToVenueId': instance.deliveryToVenueId,
          'DeliveryDateStamp': instance.deliveryDateStamp,
          'Note': instance.note,
          'PrintNoteOnOrder': instance.printNoteOnOrder,
          'TermsConditionsId': instance.termsConditionsId,
          'QuikReceiptTermsConditionsId': instance.quikReceiptTermsConditionsId,
          'QuikReceiptTermsConditions': instance.quikReceiptTermsConditions,
          'TermsConditions': instance.termsConditions,
          'ContainerId': instance.containerId,
          'ContainerItemId': instance.containerItemId,
          'ContainerDescription': instance.containerDescription,
          'ContainerScannableBarCode': instance.containerScannableBarCode,
          'DateStamp': instance.dateStamp,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          'Items': instance.items?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesWarehouseContractContractDocument
    _$WebApiModulesWarehouseContractContractDocumentFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseContractContractDocument(
    contractId: json['ContractId'] as String?,
    copying: json['copying'] as bool?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    uniqueId1: json['UniqueId1'] as String?,
    uniqueId2: json['UniqueId2'] as String?,
    uniqueId1Int: json['UniqueId1Int'] as int?,
    description: json['Description'] as String?,
    inputByUsersId: json['InputByUsersId'] as String?,
    attachDate: json['AttachDate'] as String?,
    attachTime: json['AttachTime'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    dateStamp: json['DateStamp'] as String?,
    extension: json['Extension'] as String?,
    documentType: json['DocumentType'] as String?,
    inputBy: json['InputBy'] as String?,
    hasImage: json['HasImage'] as bool?,
    hasFile: json['HasFile'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseContractContractDocumentToJson(
        WebApiModulesWarehouseContractContractDocument instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'copying': instance.copying,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'UniqueId1': instance.uniqueId1,
      'UniqueId2': instance.uniqueId2,
      'UniqueId1Int': instance.uniqueId1Int,
      'Description': instance.description,
      'InputByUsersId': instance.inputByUsersId,
      'AttachDate': instance.attachDate,
      'AttachTime': instance.attachTime,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'DateStamp': instance.dateStamp,
      'Extension': instance.extension,
      'DocumentType': instance.documentType,
      'InputBy': instance.inputBy,
      'HasImage': instance.hasImage,
      'HasFile': instance.hasFile,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesWarehouseContractContractDocumentPostRequest
    _$WebApiModulesWarehouseContractContractDocumentPostRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseContractContractDocumentPostRequest(
    contractId: json['ContractId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseContractContractDocumentPostRequestToJson(
        WebApiModulesWarehouseContractContractDocumentPostRequest instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesWarehouseContractContractDocumentPutRequest
    _$WebApiModulesWarehouseContractContractDocumentPutRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseContractContractDocumentPutRequest(
    contractId: json['ContractId'] as String?,
    documentId: json['DocumentId'] as String?,
    documentTypeId: json['DocumentTypeId'] as String?,
    description: json['Description'] as String?,
    attachToEmail: json['AttachToEmail'] as bool?,
    inactive: json['Inactive'] as bool?,
    fileIsModified: json['FileIsModified'] as bool?,
    fileDataUrl: json['FileDataUrl'] as String?,
    filePath: json['FilePath'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseContractContractDocumentPutRequestToJson(
        WebApiModulesWarehouseContractContractDocumentPutRequest instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'DocumentId': instance.documentId,
      'DocumentTypeId': instance.documentTypeId,
      'Description': instance.description,
      'AttachToEmail': instance.attachToEmail,
      'Inactive': instance.inactive,
      'FileIsModified': instance.fileIsModified,
      'FileDataUrl': instance.fileDataUrl,
      'FilePath': instance.filePath,
    };

WebApiModulesWarehouseContractHasQuikReceiptRequest
    _$WebApiModulesWarehouseContractHasQuikReceiptRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseContractHasQuikReceiptRequest(
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseContractHasQuikReceiptRequestToJson(
            WebApiModulesWarehouseContractHasQuikReceiptRequest instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
        };

WebApiModulesWarehouseContractVoidContractRequest
    _$WebApiModulesWarehouseContractVoidContractRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseContractVoidContractRequest(
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseContractVoidContractRequestToJson(
        WebApiModulesWarehouseContractVoidContractRequest instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
    };

WebApiModulesWarehouseExchangeExchangeContractRequest
    _$WebApiModulesWarehouseExchangeExchangeContractRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseExchangeExchangeContractRequest(
    orderId: json['OrderId'] as String?,
    dealId: json['DealId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseExchangeExchangeContractRequestToJson(
            WebApiModulesWarehouseExchangeExchangeContractRequest instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'DealId': instance.dealId,
          'DepartmentId': instance.departmentId,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesWarehouseExchangeExchangeContractResponse
    _$WebApiModulesWarehouseExchangeExchangeContractResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseExchangeExchangeContractResponse(
    contractId: json['ContractId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseExchangeExchangeContractResponseToJson(
            WebApiModulesWarehouseExchangeExchangeContractResponse instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
        };

WebApiModulesWarehouseExchangeExchangeItemInResponse
    _$WebApiModulesWarehouseExchangeExchangeItemInResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseExchangeExchangeItemInResponse(
    contractId: json['ContractId'] as String?,
    inCode: json['InCode'] as String?,
    quantity: json['Quantity'] as int?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    departmentId: json['DepartmentId'] as String?,
    itemStatus: json['ItemStatus'] == null
        ? null
        : WebApiModulesWarehouseExchangeExchangeItemStatus.fromJson(
            json['ItemStatus'] as Map<String, dynamic>),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseExchangeExchangeItemInResponseToJson(
            WebApiModulesWarehouseExchangeExchangeItemInResponse instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
          'InCode': instance.inCode,
          'Quantity': instance.quantity,
          'OrderId': instance.orderId,
          'OrderNumber': instance.orderNumber,
          'OrderDescription': instance.orderDescription,
          'DealId': instance.dealId,
          'Deal': instance.deal,
          'DepartmentId': instance.departmentId,
          'ItemStatus': instance.itemStatus?.toJson(),
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesWarehouseExchangeExchangeItemOutResponse
    _$WebApiModulesWarehouseExchangeExchangeItemOutResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseExchangeExchangeItemOutResponse(
    contractId: json['ContractId'] as String?,
    inCode: json['InCode'] as String?,
    quantity: json['Quantity'] as int?,
    outCode: json['OutCode'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    departmentId: json['DepartmentId'] as String?,
    itemStatus: json['ItemStatus'] == null
        ? null
        : WebApiModulesWarehouseExchangeExchangeItemStatus.fromJson(
            json['ItemStatus'] as Map<String, dynamic>),
    status: json['status'] as int?,
    success: json['success'] as bool?,
    msg: json['msg'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseExchangeExchangeItemOutResponseToJson(
            WebApiModulesWarehouseExchangeExchangeItemOutResponse instance) =>
        <String, dynamic>{
          'ContractId': instance.contractId,
          'InCode': instance.inCode,
          'Quantity': instance.quantity,
          'OutCode': instance.outCode,
          'OrderId': instance.orderId,
          'OrderNumber': instance.orderNumber,
          'OrderDescription': instance.orderDescription,
          'DealId': instance.dealId,
          'Deal': instance.deal,
          'DepartmentId': instance.departmentId,
          'ItemStatus': instance.itemStatus?.toJson(),
          'status': instance.status,
          'success': instance.success,
          'msg': instance.msg,
        };

WebApiModulesWarehouseExchangeExchangeItemRequest
    _$WebApiModulesWarehouseExchangeExchangeItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseExchangeExchangeItemRequest(
    contractId: json['ContractId'] as String?,
    orderId: json['OrderId'] as String?,
    dealId: json['DealId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    inCode: json['InCode'] as String?,
    quantity: json['Quantity'] as int?,
    outCode: json['OutCode'] as String?,
    allowCrossICode: json['AllowCrossICode'] as bool?,
    completingPending: json['CompletingPending'] as bool?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseExchangeExchangeItemRequestToJson(
        WebApiModulesWarehouseExchangeExchangeItemRequest instance) =>
    <String, dynamic>{
      'ContractId': instance.contractId,
      'OrderId': instance.orderId,
      'DealId': instance.dealId,
      'DepartmentId': instance.departmentId,
      'WarehouseId': instance.warehouseId,
      'InCode': instance.inCode,
      'Quantity': instance.quantity,
      'OutCode': instance.outCode,
      'AllowCrossICode': instance.allowCrossICode,
      'CompletingPending': instance.completingPending,
    };

WebApiModulesWarehouseExchangeExchangeItemStatus
    _$WebApiModulesWarehouseExchangeExchangeItemStatusFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseExchangeExchangeItemStatus(
    inventoryId: json['InventoryId'] as String?,
    iCode: json['ICode'] as String?,
    availableFor: json['AvailableFor'] as String?,
    inventoryClass: json['InventoryClass'] as String?,
    description: json['Description'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouse: json['Warehouse'] as String?,
    vendorId: json['VendorId'] as String?,
    vendor: json['Vendor'] as String?,
    purchaseOrderId: json['PurchaseOrderId'] as String?,
    purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
    consignorId: json['ConsignorId'] as String?,
    consignor: json['Consignor'] as String?,
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseExchangeExchangeItemStatusToJson(
        WebApiModulesWarehouseExchangeExchangeItemStatus instance) =>
    <String, dynamic>{
      'InventoryId': instance.inventoryId,
      'ICode': instance.iCode,
      'AvailableFor': instance.availableFor,
      'InventoryClass': instance.inventoryClass,
      'Description': instance.description,
      'WarehouseId': instance.warehouseId,
      'Warehouse': instance.warehouse,
      'VendorId': instance.vendorId,
      'Vendor': instance.vendor,
      'PurchaseOrderId': instance.purchaseOrderId,
      'PurchaseOrderNumber': instance.purchaseOrderNumber,
      'ConsignorId': instance.consignorId,
      'Consignor': instance.consignor,
    };

WebApiModulesWarehouseOrderStatusStorageContainerGrid
    _$WebApiModulesWarehouseOrderStatusStorageContainerGridFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseOrderStatusStorageContainerGrid(
    storageContainerId: json['StorageContainerId'] as int?,
    storageContainerItemId: json['StorageContainerItemId'] as int?,
    description: json['Description'] as String?,
    pickUpLocation: json['PickUpLocation'] as String?,
    storageContainerBarcode: json['StorageContainerBarcode'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseOrderStatusStorageContainerGridToJson(
            WebApiModulesWarehouseOrderStatusStorageContainerGrid instance) =>
        <String, dynamic>{
          'StorageContainerId': instance.storageContainerId,
          'StorageContainerItemId': instance.storageContainerItemId,
          'Description': instance.description,
          'PickUpLocation': instance.pickUpLocation,
          'StorageContainerBarcode': instance.storageContainerBarcode,
          'RecordTitle': instance.recordTitle,
          '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
          '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
          '_DefaultFieldAttributes':
              instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
        };

WebApiModulesWarehouseOrderStatusStorageContainerItemsGrid
    _$WebApiModulesWarehouseOrderStatusStorageContainerItemsGridFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseOrderStatusStorageContainerItemsGrid(
    storageContainerItemId: json['StorageContainerItemId'] as int?,
    iCode: json['ICode'] as String?,
    stagedBarcode: json['StagedBarcode'] as String?,
    quantityOrdered: json['QuantityOrdered'] as int?,
    staged: json['Staged'] as int?,
    orderBy: json['OrderBy'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseOrderStatusStorageContainerItemsGridToJson(
        WebApiModulesWarehouseOrderStatusStorageContainerItemsGrid instance) =>
    <String, dynamic>{
      'StorageContainerItemId': instance.storageContainerItemId,
      'ICode': instance.iCode,
      'StagedBarcode': instance.stagedBarcode,
      'QuantityOrdered': instance.quantityOrdered,
      'Staged': instance.staged,
      'OrderBy': instance.orderBy,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesWarehousePickListPickList
    _$WebApiModulesWarehousePickListPickListFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehousePickListPickList(
    pickListId: json['PickListId'] as String?,
    pickListNumber: json['PickListNumber'] as String?,
    pickType: json['PickType'] as String?,
    pickDate: json['PickDate'] as String?,
    pickTime: json['PickTime'] as String?,
    status: json['Status'] as String?,
    completed: json['Completed'] as bool?,
    officeLocationId: json['OfficeLocationId'] as String?,
    departmentId: json['DepartmentId'] as String?,
    department: json['Department'] as String?,
    warehouseId: json['WarehouseId'] as String?,
    warehouseCode: json['WarehouseCode'] as String?,
    warehouse: json['Warehouse'] as String?,
    deliverType: json['DeliverType'] as String?,
    deliverDate: json['DeliverDate'] as String?,
    deliverTime: json['DeliverTime'] as String?,
    orderId: json['OrderId'] as String?,
    orderNumber: json['OrderNumber'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    orderType: json['OrderType'] as String?,
    submittedDate: json['SubmittedDate'] as String?,
    submittedTime: json['SubmittedTime'] as String?,
    submittedDateTime: json['SubmittedDateTime'] as String?,
    orderedBy: json['OrderedBy'] as String?,
    orderedById: json['OrderedById'] as String?,
    requestedBy: json['RequestedBy'] as String?,
    inputDate: json['InputDate'] as String?,
    inputTime: json['InputTime'] as String?,
    inputDateTime: json['InputDateTime'] as String?,
    totalItemQuantity: json['TotalItemQuantity'] as int?,
    dealId: json['DealId'] as String?,
    deal: json['Deal'] as String?,
    agentId: json['AgentId'] as String?,
    agent: json['Agent'] as String?,
    assignedToId: json['AssignedToId'] as String?,
    assignedTo: json['AssignedTo'] as String?,
    dueDate: json['DueDate'] as String?,
    dueTime: json['DueTime'] as String?,
    note: json['Note'] as String?,
    dateStamp: json['DateStamp'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesWarehousePickListPickListToJson(
        WebApiModulesWarehousePickListPickList instance) =>
    <String, dynamic>{
      'PickListId': instance.pickListId,
      'PickListNumber': instance.pickListNumber,
      'PickType': instance.pickType,
      'PickDate': instance.pickDate,
      'PickTime': instance.pickTime,
      'Status': instance.status,
      'Completed': instance.completed,
      'OfficeLocationId': instance.officeLocationId,
      'DepartmentId': instance.departmentId,
      'Department': instance.department,
      'WarehouseId': instance.warehouseId,
      'WarehouseCode': instance.warehouseCode,
      'Warehouse': instance.warehouse,
      'DeliverType': instance.deliverType,
      'DeliverDate': instance.deliverDate,
      'DeliverTime': instance.deliverTime,
      'OrderId': instance.orderId,
      'OrderNumber': instance.orderNumber,
      'OrderDescription': instance.orderDescription,
      'OrderType': instance.orderType,
      'SubmittedDate': instance.submittedDate,
      'SubmittedTime': instance.submittedTime,
      'SubmittedDateTime': instance.submittedDateTime,
      'OrderedBy': instance.orderedBy,
      'OrderedById': instance.orderedById,
      'RequestedBy': instance.requestedBy,
      'InputDate': instance.inputDate,
      'InputTime': instance.inputTime,
      'InputDateTime': instance.inputDateTime,
      'TotalItemQuantity': instance.totalItemQuantity,
      'DealId': instance.dealId,
      'Deal': instance.deal,
      'AgentId': instance.agentId,
      'Agent': instance.agent,
      'AssignedToId': instance.assignedToId,
      'AssignedTo': instance.assignedTo,
      'DueDate': instance.dueDate,
      'DueTime': instance.dueTime,
      'Note': instance.note,
      'DateStamp': instance.dateStamp,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesWarehouseQuikReceiptQuikReceiptGrid
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptGridFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptGrid(
    quikReceiptId: json['QuikReceiptId'] as int?,
    receiptNumber: json['ReceiptNumber'] as String?,
    receiptStatus: json['ReceiptStatus'] as String?,
    receiptAsOfDate: json['ReceiptAsOfDate'] == null
        ? null
        : FwStandardSqlServerFwDateTime.fromJson(
            json['ReceiptAsOfDate'] as Map<String, dynamic>),
    receiptAsOfTime: json['ReceiptAsOfTime'] as String?,
    note: json['Note'] as String?,
    recordTitle: json['RecordTitle'] as String?,
    fields: (json['_Fields'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardBusinessLogicFwBusinessLogicFieldDefinition.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
    custom: (json['_Custom'] as List<dynamic>?)
            ?.map((e) =>
                FwStandardDataFwCustomValue.fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
    defaultFieldAttributes: (json['_DefaultFieldAttributes'] as List<dynamic>?)
            ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic> _$WebApiModulesWarehouseQuikReceiptQuikReceiptGridToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptGrid instance) =>
    <String, dynamic>{
      'QuikReceiptId': instance.quikReceiptId,
      'ReceiptNumber': instance.receiptNumber,
      'ReceiptStatus': instance.receiptStatus,
      'ReceiptAsOfDate': instance.receiptAsOfDate?.toJson(),
      'ReceiptAsOfTime': instance.receiptAsOfTime,
      'Note': instance.note,
      'RecordTitle': instance.recordTitle,
      '_Fields': instance.fields?.map((e) => e.toJson()).toList(),
      '_Custom': instance.custom?.map((e) => e.toJson()).toList(),
      '_DefaultFieldAttributes':
          instance.defaultFieldAttributes?.map((e) => e.toJson()).toList(),
    };

WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecord
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecordFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecord(
    quikReceiptItemId: json['QuikReceiptItemId'] as String?,
    description: json['Description'] as String?,
    quantity: json['Quantity'] as String?,
    originalValue: json['OriginalValue'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecordToJson(
            WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecord instance) =>
        <String, dynamic>{
          'QuikReceiptItemId': instance.quikReceiptItemId,
          'Description': instance.description,
          'Quantity': instance.quantity,
          'OriginalValue': instance.originalValue,
        };

WebApiModulesWarehouseQuikReceiptQuikReceiptItemRequest
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptItemRequest(
    quikReceiptId: json['QuikReceiptId'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemRequestToJson(
            WebApiModulesWarehouseQuikReceiptQuikReceiptItemRequest instance) =>
        <String, dynamic>{
          'QuikReceiptId': instance.quikReceiptId,
        };

WebApiModulesWarehouseQuikReceiptQuikReceiptItemResponse
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptItemResponse(
    items: (json['Items'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecord.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemResponseToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptItemResponse instance) =>
    <String, dynamic>{
      'Items': instance.items?.map((e) => e.toJson()).toList(),
    };

WebApiModulesWarehouseQuikReceiptQuikReceiptSaveRequest
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSaveRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptSaveRequest(
    quikReceiptId: json['QuikReceiptId'] as int?,
    note: json['Note'] as String?,
    personPrintName: json['PersonPrintName'] as String?,
    quikReceiptItems: (json['QuikReceiptItems'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecord.fromJson(
                    e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSaveRequestToJson(
            WebApiModulesWarehouseQuikReceiptQuikReceiptSaveRequest instance) =>
        <String, dynamic>{
          'QuikReceiptId': instance.quikReceiptId,
          'Note': instance.note,
          'PersonPrintName': instance.personPrintName,
          'QuikReceiptItems':
              instance.quikReceiptItems?.map((e) => e.toJson()).toList(),
        };

WebApiModulesWarehouseQuikReceiptQuikReceiptSaveResponse
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSaveResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptSaveResponse(
    status: json['Status'] as int?,
    message: json['Message'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseQuikReceiptQuikReceiptSaveResponseToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSaveResponse instance) =>
    <String, dynamic>{
      'Status': instance.status,
      'Message': instance.message,
    };

WebApiModulesWarehouseQuikReceiptQuikReceiptSessionRequest
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptSessionRequest(
    barcode: json['Barcode'] as String?,
    sessionJoinNew: json['SessionJoinNew'] as String?,
    contractId: json['ContractId'] as String?,
  );
}

Map<String,
    dynamic> _$WebApiModulesWarehouseQuikReceiptQuikReceiptSessionRequestToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSessionRequest instance) =>
    <String, dynamic>{
      'Barcode': instance.barcode,
      'SessionJoinNew': instance.sessionJoinNew,
      'ContractId': instance.contractId,
    };

WebApiModulesWarehouseQuikReceiptQuikReceiptSessionResponse
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSessionResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptSessionResponse(
    orderId: json['OrderId'] as String?,
    orderdescription: json['Orderdescription'] as String?,
    contractId: json['ContractId'] as String?,
    inSessionNumber: json['InSessionNumber'] as int?,
    qrSessionNumber: json['QrSessionNumber'] as int?,
    quikReceiptId: json['QuikReceiptId'] as int?,
    status: json['Status'] as int?,
    message: json['Message'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSessionResponseToJson(
            WebApiModulesWarehouseQuikReceiptQuikReceiptSessionResponse
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'Orderdescription': instance.orderdescription,
          'ContractId': instance.contractId,
          'InSessionNumber': instance.inSessionNumber,
          'QrSessionNumber': instance.qrSessionNumber,
          'QuikReceiptId': instance.quikReceiptId,
          'Status': instance.status,
          'Message': instance.message,
        };

WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveRequest
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveRequest(
    quikReceiptId: json['QuikReceiptId'] as String?,
    signatureImage: json['SignatureImage'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveRequestToJson(
            WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveRequest
                instance) =>
        <String, dynamic>{
          'QuikReceiptId': instance.quikReceiptId,
          'SignatureImage': instance.signatureImage,
        };

WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveResponse
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveResponse(
    appImageId: json['AppImageId'] as String?,
    status: json['Status'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveResponseToJson(
            WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveResponse
                instance) =>
        <String, dynamic>{
          'AppImageId': instance.appImageId,
          'Status': instance.status,
        };

WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecord
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecordFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecord(
    orderNo: json['OrderNo'] as String?,
    deal: json['Deal'] as String?,
    warehouse: json['Warehouse'] as String?,
    receiptNumber: json['ReceiptNumber'] as int?,
    receiptStatus: json['ReceiptStatus'] as String?,
    contractId: json['ContractId'] as String?,
    checkinSessionDate: json['CheckinSessionDate'] as String?,
    asOfDate: json['AsOfDate'] as String?,
    asOfTime: json['AsOfTime'] as String?,
    checkinSessionStatus: json['CheckinSessionStatus'] as String?,
    checkinSessionNo: json['CheckinSessionNo'] as int?,
    owner: json['Owner'] as String?,
    orderDescription: json['OrderDescription'] as String?,
    note: json['Note'] as String?,
    quikReceiptId: json['QuikReceiptId'] as int?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecordToJson(
            WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecord
                instance) =>
        <String, dynamic>{
          'OrderNo': instance.orderNo,
          'Deal': instance.deal,
          'Warehouse': instance.warehouse,
          'ReceiptNumber': instance.receiptNumber,
          'ReceiptStatus': instance.receiptStatus,
          'ContractId': instance.contractId,
          'CheckinSessionDate': instance.checkinSessionDate,
          'AsOfDate': instance.asOfDate,
          'AsOfTime': instance.asOfTime,
          'CheckinSessionStatus': instance.checkinSessionStatus,
          'CheckinSessionNo': instance.checkinSessionNo,
          'Owner': instance.owner,
          'OrderDescription': instance.orderDescription,
          'Note': instance.note,
          'QuikReceiptId': instance.quikReceiptId,
        };

WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRequest
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRequestFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRequest(
    orderId: json['OrderId'] as String?,
    receiptsOnly: json['ReceiptsOnly'] as bool?,
    warehouseId: json['WarehouseId'] as String?,
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRequestToJson(
            WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRequest
                instance) =>
        <String, dynamic>{
          'OrderId': instance.orderId,
          'ReceiptsOnly': instance.receiptsOnly,
          'WarehouseId': instance.warehouseId,
        };

WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionsResponse
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionsResponseFromJson(
        Map<String, dynamic> json) {
  return WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionsResponse(
    sessions: (json['Sessions'] as List<dynamic>?)
            ?.map((e) =>
                WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecord
                    .fromJson(e as Map<String, dynamic>))
            .toList() ??
        [],
  );
}

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionsResponseToJson(
            WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionsResponse
                instance) =>
        <String, dynamic>{
          'Sessions': instance.sessions?.map((e) => e.toJson()).toList(),
        };
