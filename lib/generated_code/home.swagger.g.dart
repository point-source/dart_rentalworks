// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'home.swagger.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

FwCoreApiSwashbuckleBadRequestResponse
    _$FwCoreApiSwashbuckleBadRequestResponseFromJson(
            Map<String, dynamic> json) =>
        FwCoreApiSwashbuckleBadRequestResponse();

Map<String, dynamic> _$FwCoreApiSwashbuckleBadRequestResponseToJson(
        FwCoreApiSwashbuckleBadRequestResponse instance) =>
    <String, dynamic>{};

FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult
    _$FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResultFromJson(
            Map<String, dynamic> json) =>
        FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult(
          downloadUrl: json['downloadUrl'] as String?,
        );

Map<String, dynamic>
    _$FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResultToJson(
        FwCoreControllersFwDataControllerDoExportExcelXlsxExportFileAsyncResult
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('downloadUrl', instance.downloadUrl);
  return val;
}

FwStandardBusinessLogicFwBusinessLogicFieldDefinition
    _$FwStandardBusinessLogicFwBusinessLogicFieldDefinitionFromJson(
            Map<String, dynamic> json) =>
        FwStandardBusinessLogicFwBusinessLogicFieldDefinition(
          name: json['Name'] as String?,
          dataType: fwStandardSqlServerFwDataTypesFromJson(
              json['DataType'] as String?),
        );

Map<String, dynamic>
    _$FwStandardBusinessLogicFwBusinessLogicFieldDefinitionToJson(
        FwStandardBusinessLogicFwBusinessLogicFieldDefinition instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Name', instance.name);
  writeNotNull(
      'DataType', fwStandardSqlServerFwDataTypesToJson(instance.dataType));
  return val;
}

FwStandardDataFwCustomValue _$FwStandardDataFwCustomValueFromJson(
        Map<String, dynamic> json) =>
    FwStandardDataFwCustomValue(
      fieldName: json['FieldName'] as String?,
      fieldValue: json['FieldValue'] as String?,
      fieldType: json['FieldType'] as String?,
    );

Map<String, dynamic> _$FwStandardDataFwCustomValueToJson(
    FwStandardDataFwCustomValue instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('FieldName', instance.fieldName);
  writeNotNull('FieldValue', instance.fieldValue);
  writeNotNull('FieldType', instance.fieldType);
  return val;
}

FwStandardDataFwDefaultAttribute _$FwStandardDataFwDefaultAttributeFromJson(
        Map<String, dynamic> json) =>
    FwStandardDataFwDefaultAttribute(
      fieldName: json['FieldName'] as String?,
      attributeName: json['AttributeName'] as String?,
      defaultValue: json['DefaultValue'] as String?,
    );

Map<String, dynamic> _$FwStandardDataFwDefaultAttributeToJson(
    FwStandardDataFwDefaultAttribute instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('FieldName', instance.fieldName);
  writeNotNull('AttributeName', instance.attributeName);
  writeNotNull('DefaultValue', instance.defaultValue);
  return val;
}

FwStandardGridsAppDocumentAppDocumentGetManyResponse
    _$FwStandardGridsAppDocumentAppDocumentGetManyResponseFromJson(
            Map<String, dynamic> json) =>
        FwStandardGridsAppDocumentAppDocumentGetManyResponse(
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          documentType: json['DocumentType'] as String?,
          description: json['Description'] as String?,
          hasImages: json['HasImages'] as bool?,
          hasFile: json['HasFile'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
        );

Map<String, dynamic>
    _$FwStandardGridsAppDocumentAppDocumentGetManyResponseToJson(
        FwStandardGridsAppDocumentAppDocumentGetManyResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('Description', instance.description);
  writeNotNull('HasImages', instance.hasImages);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  return val;
}

FwStandardGridsAppDocumentDocumentImage
    _$FwStandardGridsAppDocumentDocumentImageFromJson(
            Map<String, dynamic> json) =>
        FwStandardGridsAppDocumentDocumentImage(
          imageId: json['ImageId'] as String?,
          description: json['Description'] as String?,
          imageNumber: json['ImageNumber'] as String?,
          dataUrl: json['DataUrl'] as String?,
        );

Map<String, dynamic> _$FwStandardGridsAppDocumentDocumentImageToJson(
    FwStandardGridsAppDocumentDocumentImage instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ImageId', instance.imageId);
  writeNotNull('Description', instance.description);
  writeNotNull('ImageNumber', instance.imageNumber);
  writeNotNull('DataUrl', instance.dataUrl);
  return val;
}

FwStandardGridsAppDocumentGetDocumentImageResponse
    _$FwStandardGridsAppDocumentGetDocumentImageResponseFromJson(
            Map<String, dynamic> json) =>
        FwStandardGridsAppDocumentGetDocumentImageResponse(
          image: json['Image'] == null
              ? null
              : FwStandardGridsAppDocumentDocumentImage.fromJson(
                  json['Image'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$FwStandardGridsAppDocumentGetDocumentImageResponseToJson(
    FwStandardGridsAppDocumentGetDocumentImageResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Image', instance.image?.toJson());
  return val;
}

FwStandardGridsAppDocumentGetDocumentThumbnailsResponse
    _$FwStandardGridsAppDocumentGetDocumentThumbnailsResponseFromJson(
            Map<String, dynamic> json) =>
        FwStandardGridsAppDocumentGetDocumentThumbnailsResponse(
          thumbnails: (json['Thumbnails'] as List<dynamic>?)
                  ?.map((e) => FwStandardGridsAppDocumentDocumentImage.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$FwStandardGridsAppDocumentGetDocumentThumbnailsResponseToJson(
        FwStandardGridsAppDocumentGetDocumentThumbnailsResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull(
      'Thumbnails', instance.thumbnails?.map((e) => e.toJson()).toList());
  return val;
}

FwStandardGridsAppDocumentPostDocumentImageRequest
    _$FwStandardGridsAppDocumentPostDocumentImageRequestFromJson(
            Map<String, dynamic> json) =>
        FwStandardGridsAppDocumentPostDocumentImageRequest(
          dataUrl: json['DataUrl'] as String?,
          fileExtension: json['FileExtension'] as String?,
        );

Map<String, dynamic> _$FwStandardGridsAppDocumentPostDocumentImageRequestToJson(
    FwStandardGridsAppDocumentPostDocumentImageRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DataUrl', instance.dataUrl);
  writeNotNull('FileExtension', instance.fileExtension);
  return val;
}

FwStandardGridsAppDocumentPutDocumentFileRequest
    _$FwStandardGridsAppDocumentPutDocumentFileRequestFromJson(
            Map<String, dynamic> json) =>
        FwStandardGridsAppDocumentPutDocumentFileRequest(
          dataUrl: json['DataUrl'] as String?,
          fileExtension: json['FileExtension'] as String?,
        );

Map<String, dynamic> _$FwStandardGridsAppDocumentPutDocumentFileRequestToJson(
    FwStandardGridsAppDocumentPutDocumentFileRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DataUrl', instance.dataUrl);
  writeNotNull('FileExtension', instance.fileExtension);
  return val;
}

FwStandardModelsBrowseRequest _$FwStandardModelsBrowseRequestFromJson(
        Map<String, dynamic> json) =>
    FwStandardModelsBrowseRequest(
      miscfields: json['miscfields'],
      module: json['module'] as String?,
      options: json['options'],
      orderby: json['orderby'] as String?,
      orderbydirection: json['orderbydirection'] as String?,
      top: json['top'] as int?,
      pageno: json['pageno'] as int?,
      pagesize: json['pagesize'] as int?,
      searchfieldoperators: (json['searchfieldoperators'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList() ??
          [],
      searchfields: (json['searchfields'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList() ??
          [],
      searchfieldvalues: (json['searchfieldvalues'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList() ??
          [],
      searchfieldtypes: (json['searchfieldtypes'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList() ??
          [],
      searchseparators: (json['searchseparators'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList() ??
          [],
      searchcondition: (json['searchcondition'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList() ??
          [],
      searchconjunctions: (json['searchconjunctions'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList() ??
          [],
      uniqueids: json['uniqueids'],
      boundids: json['boundids'],
      filterfields: json['filterfields'],
      activeview: json['activeview'] as String?,
      emptyobject: json['emptyobject'] as bool?,
      forexcel: json['forexcel'] as bool?,
      excelfields: (json['excelfields'] as List<dynamic>?)
              ?.map((e) => FwStandardModelsCheckBoxListItem.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      totalfields: (json['totalfields'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList() ??
          [],
      activeviewfields: json['activeviewfields'],
    );

Map<String, dynamic> _$FwStandardModelsBrowseRequestToJson(
    FwStandardModelsBrowseRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('miscfields', instance.miscfields);
  writeNotNull('module', instance.module);
  writeNotNull('options', instance.options);
  writeNotNull('orderby', instance.orderby);
  writeNotNull('orderbydirection', instance.orderbydirection);
  writeNotNull('top', instance.top);
  writeNotNull('pageno', instance.pageno);
  writeNotNull('pagesize', instance.pagesize);
  writeNotNull('searchfieldoperators', instance.searchfieldoperators);
  writeNotNull('searchfields', instance.searchfields);
  writeNotNull('searchfieldvalues', instance.searchfieldvalues);
  writeNotNull('searchfieldtypes', instance.searchfieldtypes);
  writeNotNull('searchseparators', instance.searchseparators);
  writeNotNull('searchcondition', instance.searchcondition);
  writeNotNull('searchconjunctions', instance.searchconjunctions);
  writeNotNull('uniqueids', instance.uniqueids);
  writeNotNull('boundids', instance.boundids);
  writeNotNull('filterfields', instance.filterfields);
  writeNotNull('activeview', instance.activeview);
  writeNotNull('emptyobject', instance.emptyobject);
  writeNotNull('forexcel', instance.forexcel);
  writeNotNull(
      'excelfields', instance.excelfields?.map((e) => e.toJson()).toList());
  writeNotNull('totalfields', instance.totalfields);
  writeNotNull('activeviewfields', instance.activeviewfields);
  return val;
}

FwStandardModelsCheckBoxListItem _$FwStandardModelsCheckBoxListItemFromJson(
        Map<String, dynamic> json) =>
    FwStandardModelsCheckBoxListItem(
      value: json['value'] as String?,
      text: json['text'] as String?,
      selected: json['selected'] as bool?,
    );

Map<String, dynamic> _$FwStandardModelsCheckBoxListItemToJson(
    FwStandardModelsCheckBoxListItem instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('value', instance.value);
  writeNotNull('text', instance.text);
  writeNotNull('selected', instance.selected);
  return val;
}

FwStandardModelsFwApiException _$FwStandardModelsFwApiExceptionFromJson(
        Map<String, dynamic> json) =>
    FwStandardModelsFwApiException(
      statusCode: json['StatusCode'] as int?,
      message: json['Message'] as String?,
      stackTrace: json['StackTrace'] as String?,
    );

Map<String, dynamic> _$FwStandardModelsFwApiExceptionToJson(
    FwStandardModelsFwApiException instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StatusCode', instance.statusCode);
  writeNotNull('Message', instance.message);
  writeNotNull('StackTrace', instance.stackTrace);
  return val;
}

FwStandardModelsFwQueryFilter _$FwStandardModelsFwQueryFilterFromJson(
        Map<String, dynamic> json) =>
    FwStandardModelsFwQueryFilter(
      field: json['Field'] as String?,
      op: json['Op'] as String?,
      value: json['Value'] as String?,
    );

Map<String, dynamic> _$FwStandardModelsFwQueryFilterToJson(
    FwStandardModelsFwQueryFilter instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Field', instance.field);
  writeNotNull('Op', instance.op);
  writeNotNull('Value', instance.value);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesAgentContactContactLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentContactContactLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesAgentContactContactLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesAgentContactContact.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentContactContactLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesAgentContactContactLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesAgentCustomerCustomerLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentCustomerCustomerLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesAgentCustomerCustomerLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesAgentCustomerCustomer.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentCustomerCustomerLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesAgentCustomerCustomerLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesAgentDealDealLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentDealDealLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesAgentDealDealLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesAgentDealDeal.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentDealDealLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesAgentDealDealLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesAgentOrderOrderLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentOrderOrderLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesAgentOrderOrderLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesAgentOrderOrder.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentOrderOrderLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesAgentOrderOrderLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesAgentProjectProjectLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentProjectProjectLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesAgentProjectProjectLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesAgentProjectProject.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentProjectProjectLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesAgentProjectProjectLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesAgentPurchaseOrderPurchaseOrderLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentPurchaseOrderPurchaseOrderLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesAgentPurchaseOrderPurchaseOrderLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesAgentPurchaseOrderPurchaseOrder.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentPurchaseOrderPurchaseOrderLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesAgentPurchaseOrderPurchaseOrderLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesAgentQuoteQuoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentQuoteQuoteLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesAgentQuoteQuoteLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesAgentQuoteQuote.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentQuoteQuoteLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesAgentQuoteQuoteLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesAgentVendorVendorLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentVendorVendorLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesAgentVendorVendorLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesAgentVendorVendor.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesAgentVendorVendorLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesAgentVendorVendorLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesBillingBankAccountBankAccountLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingBankAccountBankAccountLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesBillingBankAccountBankAccountLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesBillingBankAccountBankAccount.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingBankAccountBankAccountLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesBillingBankAccountBankAccountLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesBillingBillingWorksheetBillingWorksheetLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingBillingWorksheetBillingWorksheetLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesBillingBillingWorksheetBillingWorksheetLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesBillingBillingWorksheetBillingWorksheet
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingBillingWorksheetBillingWorksheetLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesBillingBillingWorksheetBillingWorksheetLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesBillingInvoiceInvoiceLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingInvoiceInvoiceLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesBillingInvoiceInvoiceLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesBillingInvoiceInvoice.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingInvoiceInvoiceLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesBillingInvoiceInvoiceLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesBillingPaymentPaymentLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingPaymentPaymentLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesBillingPaymentPaymentLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesBillingPaymentPayment.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingPaymentPaymentLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesBillingPaymentPaymentLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesBillingReceiptReceiptLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingReceiptReceiptLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesBillingReceiptReceiptLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesBillingReceiptReceipt.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingReceiptReceiptLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesBillingReceiptReceiptLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesBillingVendorInvoiceVendorInvoiceLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingVendorInvoiceVendorInvoiceLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesBillingVendorInvoiceVendorInvoiceLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesBillingVendorInvoiceVendorInvoice.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesBillingVendorInvoiceVendorInvoiceLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesBillingVendorInvoiceVendorInvoiceLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesContainersContainerContainerLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesContainersContainerContainerLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesContainersContainerContainerLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesContainersContainerContainer.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesContainersContainerContainerLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesContainersContainerContainerLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAddressAddressLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAddressAddressLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAddressAddressLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesHomeControlsAddressAddress.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAddressAddressLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAddressAddressLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescription
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyCompanyLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyCompanyLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyCompanyLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesHomeControlsCompanyCompany.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyCompanyLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyCompanyLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyContactCompanyContactLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyContactCompanyContactLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyContactCompanyContactLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsCompanyContactCompanyContact
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyContactCompanyContactLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyContactCompanyContactLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOption
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResale
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContactNoteContactNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContactNoteContactNoteLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContactNoteContactNoteLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsContactNoteContactNote.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContactNoteContactNoteLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContactNoteContactNoteLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContainerWarehouseContainerWarehouseLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContainerWarehouseContainerWarehouseLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContainerWarehouseContainerWarehouseLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsContainerWarehouseContainerWarehouse
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContainerWarehouseContainerWarehouseLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsContainerWarehouseContainerWarehouseLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCustomerNoteCustomerNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCustomerNoteCustomerNoteLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCustomerNoteCustomerNoteLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesHomeControlsCustomerNoteCustomerNote
                      .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCustomerNoteCustomerNoteLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsCustomerNoteCustomerNoteLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealNoteDealNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealNoteDealNoteLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealNoteDealNoteLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsDealNoteDealNote.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealNoteDealNoteLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealNoteDealNoteLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealShipperDealShipperLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealShipperDealShipperLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealShipperDealShipperLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsDealShipperDealShipper.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealShipperDealShipperLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDealShipperDealShipperLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDeliveryDeliveryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDeliveryDeliveryLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDeliveryDeliveryLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsDeliveryDelivery.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDeliveryDeliveryLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDeliveryDeliveryLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepositPaymentDepositPaymentLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepositPaymentDepositPaymentLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepositPaymentDepositPaymentLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsDepositPaymentDepositPayment
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepositPaymentDepositPaymentLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepositPaymentDepositPaymentLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepreciationDepreciationLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepreciationDepreciationLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepreciationDepreciationLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesHomeControlsDepreciationDepreciation
                      .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepreciationDepreciationLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsDepreciationDepreciationLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsGlManualGlManualLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsGlManualGlManualLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsGlManualGlManualLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsGlManualGlManual.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsGlManualGlManualLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsGlManualGlManualLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValue
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryColorInventoryColorLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryColorInventoryColorLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryColorInventoryColorLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryColorInventoryColor
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryColorInventoryColorLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryColorInventoryColorLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryCompatibleInventoryCompatible
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKit
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryConsignorInventoryConsignorLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryConsignorInventoryConsignorLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryConsignorInventoryConsignorLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryConsignorInventoryConsignor
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryConsignorInventoryConsignorLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryConsignorInventoryConsignorLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItem
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTax
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryMaterialInventoryMaterialLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryMaterialInventoryMaterialLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryMaterialInventoryMaterialLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryMaterialInventoryMaterial
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryMaterialInventoryMaterialLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryMaterialInventoryMaterialLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventory
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPrepInventoryPrepLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPrepInventoryPrepLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPrepInventoryPrepLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryPrepInventoryPrep
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPrepInventoryPrepLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPrepInventoryPrepLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItem
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventorySubstituteInventorySubstituteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventorySubstituteInventorySubstituteLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventorySubstituteInventorySubstituteLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventorySubstituteInventorySubstitute
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventorySubstituteInventorySubstituteLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventorySubstituteInventorySubstituteLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryVendorInventoryVendorLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryVendorInventoryVendorLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryVendorInventoryVendorLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryVendorInventoryVendor
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryVendorInventoryVendorLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryVendorInventoryVendorLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecific
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatch
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceItemInvoiceItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceItemInvoiceItemLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceItemInvoiceItemLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInvoiceItemInvoiceItem.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceItemInvoiceItemLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceItemInvoiceItemLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceNoteInvoiceNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceNoteInvoiceNoteLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceNoteInvoiceNoteLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInvoiceNoteInvoiceNote.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceNoteInvoiceNoteLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceNoteInvoiceNoteLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInvoiceReceiptInvoiceReceipt
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemAttributeValueItemAttributeValueLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemAttributeValueItemAttributeValueLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemAttributeValueItemAttributeValueLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsItemAttributeValueItemAttributeValue
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemAttributeValueItemAttributeValueLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemAttributeValueItemAttributeValueLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemQcItemQcLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemQcItemQcLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemQcItemQcLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesHomeControlsItemQcItemQc.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemQcItemQcLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsItemQcItemQcLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsManifestManifestLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsManifestManifestLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsManifestManifestLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsManifestManifest.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsManifestManifestLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsManifestManifestLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderContactOrderContactLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderContactOrderContactLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderContactOrderContactLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesHomeControlsOrderContactOrderContact
                      .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderContactOrderContactLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderContactOrderContactLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderItemOrderItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderItemOrderItemLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderItemOrderItemLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsOrderItemOrderItem.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderItemOrderItemLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderItemOrderItemLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderNoteOrderNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderNoteOrderNoteLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderNoteOrderNoteLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsOrderNoteOrderNote.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderNoteOrderNoteLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderNoteOrderNoteLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistory
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPersonalEventPersonalEventLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPersonalEventPersonalEventLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPersonalEventPersonalEventLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsPersonalEventPersonalEvent
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPersonalEventPersonalEventLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPersonalEventPersonalEventLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventory
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventory
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPickListItemPickListItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPickListItemPickListItemLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPickListItemPickListItemLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesHomeControlsPickListItemPickListItem
                      .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPickListItemPickListItemLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPickListItemPickListItemLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectContactProjectContactLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectContactProjectContactLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectContactProjectContactLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsProjectContactProjectContact
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectContactProjectContactLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectContactProjectContactLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectNoteProjectNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectNoteProjectNoteLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectNoteProjectNoteLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsProjectNoteProjectNote.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectNoteProjectNoteLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsProjectNoteProjectNoteLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCode
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCode
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItem
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairCostRepairCostLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairCostRepairCostLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairCostRepairCostLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsRepairCostRepairCost.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairCostRepairCostLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairCostRepairCostLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairPartRepairPartLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairPartRepairPartLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairPartRepairPartLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsRepairPartRepairPart.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairPartRepairPartLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairPartRepairPartLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairReleaseRepairReleaseLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairReleaseRepairReleaseLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairReleaseRepairReleaseLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsRepairReleaseRepairRelease
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairReleaseRepairReleaseLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsRepairReleaseRepairReleaseLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItem
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNote
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorNoteVendorNoteLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorNoteVendorNoteLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorNoteVendorNoteLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsVendorNoteVendorNote.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorNoteVendorNoteLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesHomeControlsVendorNoteVendorNoteLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryAssetItemLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryAssetItemLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryAssetItemLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesInventoryAssetItem.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryAssetItemLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryAssetItemLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryPartsInventoryPartsInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPartsInventoryPartsInventoryLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPartsInventoryPartsInventoryLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesInventoryPartsInventoryPartsInventory
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPartsInventoryPartsInventoryLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPartsInventoryPartsInventoryLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantity
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerial
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptions
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAdded
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesInventoryPhysicalInventoryPhysicalInventory
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecount
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryRentalInventoryRentalInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRentalInventoryRentalInventoryLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryRentalInventoryRentalInventoryLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesInventoryRentalInventoryRentalInventory
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRentalInventoryRentalInventoryLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryRentalInventoryRentalInventoryLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryRepairRepairLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRepairRepairLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryRepairRepairLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesInventoryRepairRepair.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRepairRepairLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryRepairRepairLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventoryRetiredRetiredLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRetiredRetiredLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventoryRetiredRetiredLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesInventoryRetiredRetired.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventoryRetiredRetiredLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventoryRetiredRetiredLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesInventorySalesInventorySalesInventoryLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesInventorySalesInventorySalesInventoryLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesInventorySalesInventorySalesInventoryLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesInventorySalesInventorySalesInventory
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesInventorySalesInventorySalesInventoryLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesInventorySalesInventorySalesInventoryLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatus
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesTransfersTransferOrderTransferOrderLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesTransfersTransferOrderTransferOrderLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesTransfersTransferOrderTransferOrderLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesTransfersTransferOrderTransferOrder.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesTransfersTransferOrderTransferOrderLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesTransfersTransferOrderTransferOrderLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerGridLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerGridLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerGridLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesWarehouseCheckOutStorageContainerGrid
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerGridLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerGridLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerItemsGridLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerItemsGridLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerItemsGridLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesWarehouseCheckOutStorageContainerItemsGrid
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerItemsGridLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseCheckOutStorageContainerItemsGridLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesWarehouseContractContractLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseContractContractLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseContractContractLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesWarehouseContractContract.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseContractContractLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseContractContractLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerGridLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerGridLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerGridLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesWarehouseOrderStatusStorageContainerGrid
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerGridLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerGridLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerItemsGridLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerItemsGridLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerItemsGridLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesWarehouseOrderStatusStorageContainerItemsGrid
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerItemsGridLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseOrderStatusStorageContainerItemsGridLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesWarehousePickListPickListLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehousePickListPickListLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesWarehousePickListPickListLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesWarehousePickListPickList.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehousePickListPickListLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesWarehousePickListPickListLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsFwQueryResponseWebApiModulesWarehouseQuikReceiptQuikReceiptGridLogic
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseQuikReceiptQuikReceiptGridLogicFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseQuikReceiptQuikReceiptGridLogic(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesWarehouseQuikReceiptQuikReceiptGrid.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalItems: json['TotalItems'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsFwQueryResponseWebApiModulesWarehouseQuikReceiptQuikReceiptGridLogicToJson(
        FwStandardModelsFwQueryResponseWebApiModulesWarehouseQuikReceiptQuikReceiptGridLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalItems', instance.totalItems);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsGetResponseFwStandardGridsAppDocumentAppDocumentGetManyResponse
    _$FwStandardModelsGetResponseFwStandardGridsAppDocumentAppDocumentGetManyResponseFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsGetResponseFwStandardGridsAppDocumentAppDocumentGetManyResponse(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardGridsAppDocumentAppDocumentGetManyResponse
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalRows: json['TotalRows'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsGetResponseFwStandardGridsAppDocumentAppDocumentGetManyResponseToJson(
        FwStandardModelsGetResponseFwStandardGridsAppDocumentAppDocumentGetManyResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalRows', instance.totalRows);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsGetResponseWebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel
    _$FwStandardModelsGetResponseWebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModelFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsGetResponseWebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          pageNo: json['PageNo'] as int?,
          pageSize: json['PageSize'] as int?,
          totalRows: json['TotalRows'] as int?,
          sort: json['Sort'] as String?,
        );

Map<String, dynamic>
    _$FwStandardModelsGetResponseWebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModelToJson(
        FwStandardModelsGetResponseWebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalRows', instance.totalRows);
  writeNotNull('Sort', instance.sort);
  return val;
}

FwStandardModelsSelectedCheckBoxListItem
    _$FwStandardModelsSelectedCheckBoxListItemFromJson(
            Map<String, dynamic> json) =>
        FwStandardModelsSelectedCheckBoxListItem(
          value: json['value'] as String?,
        );

Map<String, dynamic> _$FwStandardModelsSelectedCheckBoxListItemToJson(
    FwStandardModelsSelectedCheckBoxListItem instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('value', instance.value);
  return val;
}

FwStandardSqlServerFwDateTime _$FwStandardSqlServerFwDateTimeFromJson(
        Map<String, dynamic> json) =>
    FwStandardSqlServerFwDateTime(
      val: json['Val'] as String?,
    );

Map<String, dynamic> _$FwStandardSqlServerFwDateTimeToJson(
    FwStandardSqlServerFwDateTime instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Val', instance.val);
  return val;
}

FwStandardSqlServerFwJsonDataTable _$FwStandardSqlServerFwJsonDataTableFromJson(
        Map<String, dynamic> json) =>
    FwStandardSqlServerFwJsonDataTable(
      columnIndex: json['ColumnIndex'],
      totals: json['Totals'],
      columns: (json['Columns'] as List<dynamic>?)
              ?.map((e) => FwStandardSqlServerFwJsonDataTableColumn.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      rows: (json['Rows'] as List<dynamic>?)
              ?.map(
                  (e) => (e as List<dynamic>).map((e) => e as Object?).toList())
              .toList() ??
          [],
      pageNo: json['PageNo'] as int?,
      pageSize: json['PageSize'] as int?,
      totalPages: json['TotalPages'] as int?,
      totalRows: json['TotalRows'] as int?,
      dateFields: (json['DateFields'] as List<dynamic>?)
              ?.map((e) => e as String)
              .toList() ??
          [],
      columnNameByIndex: json['ColumnNameByIndex'],
    );

Map<String, dynamic> _$FwStandardSqlServerFwJsonDataTableToJson(
    FwStandardSqlServerFwJsonDataTable instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ColumnIndex', instance.columnIndex);
  writeNotNull('Totals', instance.totals);
  writeNotNull('Columns', instance.columns?.map((e) => e.toJson()).toList());
  writeNotNull('Rows', instance.rows);
  writeNotNull('PageNo', instance.pageNo);
  writeNotNull('PageSize', instance.pageSize);
  writeNotNull('TotalPages', instance.totalPages);
  writeNotNull('TotalRows', instance.totalRows);
  writeNotNull('DateFields', instance.dateFields);
  writeNotNull('ColumnNameByIndex', instance.columnNameByIndex);
  return val;
}

FwStandardSqlServerFwJsonDataTableColumn
    _$FwStandardSqlServerFwJsonDataTableColumnFromJson(
            Map<String, dynamic> json) =>
        FwStandardSqlServerFwJsonDataTableColumn(
          name: json['Name'] as String?,
          dataField: json['DataField'] as String?,
          dataType: fwStandardSqlServerFwDataTypesFromJson(
              json['DataType'] as String?),
          isUniqueId: json['IsUniqueId'] as bool?,
          isVisible: json['IsVisible'] as bool?,
        );

Map<String, dynamic> _$FwStandardSqlServerFwJsonDataTableColumnToJson(
    FwStandardSqlServerFwJsonDataTableColumn instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Name', instance.name);
  writeNotNull('DataField', instance.dataField);
  writeNotNull(
      'DataType', fwStandardSqlServerFwDataTypesToJson(instance.dataType));
  writeNotNull('IsUniqueId', instance.isUniqueId);
  writeNotNull('IsVisible', instance.isVisible);
  return val;
}

MicrosoftAspNetCoreMvcActionResult _$MicrosoftAspNetCoreMvcActionResultFromJson(
        Map<String, dynamic> json) =>
    MicrosoftAspNetCoreMvcActionResult();

Map<String, dynamic> _$MicrosoftAspNetCoreMvcActionResultToJson(
        MicrosoftAspNetCoreMvcActionResult instance) =>
    <String, dynamic>{};

MicrosoftAspNetCoreMvcActionResultWebApiModulesAgentDealDealLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesAgentDealDealLogicFromJson(
            Map<String, dynamic> json) =>
        MicrosoftAspNetCoreMvcActionResultWebApiModulesAgentDealDealLogic(
          result: json['Result'] == null
              ? null
              : MicrosoftAspNetCoreMvcActionResult.fromJson(
                  json['Result'] as Map<String, dynamic>),
          value: json['Value'] == null
              ? null
              : WebApiModulesAgentDealDeal.fromJson(
                  json['Value'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesAgentDealDealLogicToJson(
        MicrosoftAspNetCoreMvcActionResultWebApiModulesAgentDealDealLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Result', instance.result?.toJson());
  writeNotNull('Value', instance.value?.toJson());
  return val;
}

MicrosoftAspNetCoreMvcActionResultWebApiModulesBillingInvoiceInvoiceLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesBillingInvoiceInvoiceLogicFromJson(
            Map<String, dynamic> json) =>
        MicrosoftAspNetCoreMvcActionResultWebApiModulesBillingInvoiceInvoiceLogic(
          result: json['Result'] == null
              ? null
              : MicrosoftAspNetCoreMvcActionResult.fromJson(
                  json['Result'] as Map<String, dynamic>),
          value: json['Value'] == null
              ? null
              : WebApiModulesBillingInvoiceInvoice.fromJson(
                  json['Value'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesBillingInvoiceInvoiceLogicToJson(
        MicrosoftAspNetCoreMvcActionResultWebApiModulesBillingInvoiceInvoiceLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Result', instance.result?.toJson());
  writeNotNull('Value', instance.value?.toJson());
  return val;
}

MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogicFromJson(
            Map<String, dynamic> json) =>
        MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic(
          result: json['Result'] == null
              ? null
              : MicrosoftAspNetCoreMvcActionResult.fromJson(
                  json['Result'] as Map<String, dynamic>),
          value: json['Value'] == null
              ? null
              : WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse
                  .fromJson(json['Value'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogicToJson(
        MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Result', instance.result?.toJson());
  writeNotNull('Value', instance.value?.toJson());
  return val;
}

MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsOrderItemOrderItemLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsOrderItemOrderItemLogicFromJson(
            Map<String, dynamic> json) =>
        MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsOrderItemOrderItemLogic(
          result: json['Result'] == null
              ? null
              : MicrosoftAspNetCoreMvcActionResult.fromJson(
                  json['Result'] as Map<String, dynamic>),
          value: json['Value'] == null
              ? null
              : WebApiModulesHomeControlsOrderItemOrderItem.fromJson(
                  json['Value'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsOrderItemOrderItemLogicToJson(
        MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsOrderItemOrderItemLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Result', instance.result?.toJson());
  writeNotNull('Value', instance.value?.toJson());
  return val;
}

MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsPricingPricingLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsPricingPricingLogicFromJson(
            Map<String, dynamic> json) =>
        MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsPricingPricingLogic(
          result: json['Result'] == null
              ? null
              : MicrosoftAspNetCoreMvcActionResult.fromJson(
                  json['Result'] as Map<String, dynamic>),
          value: json['Value'] == null
              ? null
              : WebApiModulesHomeControlsPricingPricing.fromJson(
                  json['Value'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsPricingPricingLogicToJson(
        MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsPricingPricingLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Result', instance.result?.toJson());
  writeNotNull('Value', instance.value?.toJson());
  return val;
}

MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemLogic
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemLogicFromJson(
            Map<String, dynamic> json) =>
        MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemLogic(
          result: json['Result'] == null
              ? null
              : MicrosoftAspNetCoreMvcActionResult.fromJson(
                  json['Result'] as Map<String, dynamic>),
          value: json['Value'] == null
              ? null
              : WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItem
                  .fromJson(json['Value'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemLogicToJson(
        MicrosoftAspNetCoreMvcActionResultWebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemLogic
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Result', instance.result?.toJson());
  writeNotNull('Value', instance.value?.toJson());
  return val;
}

WebApiApplyBottomLineDaysPerWeekRequest
    _$WebApiApplyBottomLineDaysPerWeekRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiApplyBottomLineDaysPerWeekRequest(
          orderId: json['OrderId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          recType: json['RecType'] as String?,
          subs: json['Subs'] as bool?,
          daysPerWeek: (json['DaysPerWeek'] as num?)?.toDouble(),
        );

Map<String, dynamic> _$WebApiApplyBottomLineDaysPerWeekRequestToJson(
    WebApiApplyBottomLineDaysPerWeekRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('RecType', instance.recType);
  writeNotNull('Subs', instance.subs);
  writeNotNull('DaysPerWeek', instance.daysPerWeek);
  return val;
}

WebApiApplyBottomLineDiscountPercentRequest
    _$WebApiApplyBottomLineDiscountPercentRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiApplyBottomLineDiscountPercentRequest(
          orderId: json['OrderId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          recType: json['RecType'] as String?,
          subs: json['Subs'] as bool?,
          discountPercent: (json['DiscountPercent'] as num?)?.toDouble(),
        );

Map<String, dynamic> _$WebApiApplyBottomLineDiscountPercentRequestToJson(
    WebApiApplyBottomLineDiscountPercentRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('RecType', instance.recType);
  writeNotNull('Subs', instance.subs);
  writeNotNull('DiscountPercent', instance.discountPercent);
  return val;
}

WebApiApplyBottomLineTotalRequest _$WebApiApplyBottomLineTotalRequestFromJson(
        Map<String, dynamic> json) =>
    WebApiApplyBottomLineTotalRequest(
      orderId: json['OrderId'] as String?,
      purchaseOrderId: json['PurchaseOrderId'] as String?,
      recType: json['RecType'] as String?,
      subs: json['Subs'] as bool?,
      totalType: json['TotalType'] as String?,
      total: (json['Total'] as num?)?.toDouble(),
      includeTaxInTotal: json['IncludeTaxInTotal'] as bool?,
    );

Map<String, dynamic> _$WebApiApplyBottomLineTotalRequestToJson(
    WebApiApplyBottomLineTotalRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('RecType', instance.recType);
  writeNotNull('Subs', instance.subs);
  writeNotNull('TotalType', instance.totalType);
  writeNotNull('Total', instance.total);
  writeNotNull('IncludeTaxInTotal', instance.includeTaxInTotal);
  return val;
}

WebApiLogicSortItemsResponse _$WebApiLogicSortItemsResponseFromJson(
        Map<String, dynamic> json) =>
    WebApiLogicSortItemsResponse(
      status: json['status'] as int?,
      success: json['success'] as bool?,
      msg: json['msg'] as String?,
    );

Map<String, dynamic> _$WebApiLogicSortItemsResponseToJson(
    WebApiLogicSortItemsResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiLogicTSpStatusResponse _$WebApiLogicTSpStatusResponseFromJson(
        Map<String, dynamic> json) =>
    WebApiLogicTSpStatusResponse(
      status: json['status'] as int?,
      success: json['success'] as bool?,
      msg: json['msg'] as String?,
    );

Map<String, dynamic> _$WebApiLogicTSpStatusResponseToJson(
    WebApiLogicTSpStatusResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentContactContact _$WebApiModulesAgentContactContactFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesAgentContactContact(
      contactId: json['ContactId'] as String?,
      activeDate: json['ActiveDate'] as String?,
      address1: json['Address1'] as String?,
      address2: json['Address2'] as String?,
      barcode: json['Barcode'] as String?,
      city: json['City'] as String?,
      contactRecordType: json['ContactRecordType'] as String?,
      contactRecordTypeColor: json['ContactRecordTypeColor'] as String?,
      contactTitleId: json['ContactTitleId'] as String?,
      contactTitle: json['ContactTitle'] as String?,
      country: json['Country'] as String?,
      countryId: json['CountryId'] as String?,
      dateStamp: json['DateStamp'] as String?,
      directExtension: json['DirectExtension'] as String?,
      directPhone: json['DirectPhone'] as String?,
      email: json['Email'] as String?,
      fax: json['Fax'] as String?,
      faxExtension: json['FaxExtension'] as String?,
      firstName: json['FirstName'] as String?,
      firstNameColor: json['FirstNameColor'] as String?,
      homePhone: json['HomePhone'] as String?,
      inactive: json['Inactive'] as bool?,
      inactiveDate: json['InactiveDate'] as String?,
      info: json['Info'] as String?,
      inputDate: json['InputDate'] as String?,
      modifiedDate: json['ModifiedDate'] as String?,
      lastName: json['LastName'] as String?,
      middleInitial: json['MiddleInitial'] as String?,
      mobilePhone: json['MobilePhone'] as String?,
      nameFirstMiddleLast: json['NameFirstMiddleLast'] as String?,
      officeExtension: json['OfficeExtension'] as String?,
      officePhone: json['OfficePhone'] as String?,
      pager: json['Pager'] as String?,
      pagerPin: json['PagerPin'] as String?,
      person: json['Person'] as String?,
      salutation: json['Salutation'] as String?,
      website: json['Website'] as String?,
      webStatus: json['WebStatus'] as String?,
      zipCode: json['ZipCode'] as String?,
      state: json['State'] as String?,
      sourceId: json['SourceId'] as String?,
      userId: json['UserId'] as String?,
      password: json['Password'] as String?,
      changePasswordAtNextLogin: json['ChangePasswordAtNextLogin'] as bool?,
      expirePassword: json['ExpirePassword'] as bool?,
      expireDays: json['ExpireDays'] as int?,
      passwordLastUpdated: json['PasswordLastUpdated'] as String?,
      webUserId: json['WebUserId'] as String?,
      webUserContactId: json['WebUserContactId'] as String?,
      webUserUserId: json['WebUserUserId'] as String?,
      webAccess: json['WebAccess'] as bool?,
      lockAccount: json['LockAccount'] as bool?,
      defaultDealId: json['DefaultDealId'] as String?,
      defaultDeal: json['DefaultDeal'] as String?,
      webCatalogId: json['WebCatalogId'] as String?,
      webCatalog: json['WebCatalog'] as String?,
      locationId: json['LocationId'] as String?,
      location: json['Location'] as String?,
      warehouseId: json['WarehouseId'] as String?,
      warehouse: json['Warehouse'] as String?,
      webQuoteRequest: json['WebQuoteRequest'] as bool?,
      departmentId: json['DepartmentId'] as String?,
      department: json['Department'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesAgentContactContactToJson(
    WebApiModulesAgentContactContact instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContactId', instance.contactId);
  writeNotNull('ActiveDate', instance.activeDate);
  writeNotNull('Address1', instance.address1);
  writeNotNull('Address2', instance.address2);
  writeNotNull('Barcode', instance.barcode);
  writeNotNull('City', instance.city);
  writeNotNull('ContactRecordType', instance.contactRecordType);
  writeNotNull('ContactRecordTypeColor', instance.contactRecordTypeColor);
  writeNotNull('ContactTitleId', instance.contactTitleId);
  writeNotNull('ContactTitle', instance.contactTitle);
  writeNotNull('Country', instance.country);
  writeNotNull('CountryId', instance.countryId);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('DirectExtension', instance.directExtension);
  writeNotNull('DirectPhone', instance.directPhone);
  writeNotNull('Email', instance.email);
  writeNotNull('Fax', instance.fax);
  writeNotNull('FaxExtension', instance.faxExtension);
  writeNotNull('FirstName', instance.firstName);
  writeNotNull('FirstNameColor', instance.firstNameColor);
  writeNotNull('HomePhone', instance.homePhone);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('InactiveDate', instance.inactiveDate);
  writeNotNull('Info', instance.info);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('ModifiedDate', instance.modifiedDate);
  writeNotNull('LastName', instance.lastName);
  writeNotNull('MiddleInitial', instance.middleInitial);
  writeNotNull('MobilePhone', instance.mobilePhone);
  writeNotNull('NameFirstMiddleLast', instance.nameFirstMiddleLast);
  writeNotNull('OfficeExtension', instance.officeExtension);
  writeNotNull('OfficePhone', instance.officePhone);
  writeNotNull('Pager', instance.pager);
  writeNotNull('PagerPin', instance.pagerPin);
  writeNotNull('Person', instance.person);
  writeNotNull('Salutation', instance.salutation);
  writeNotNull('Website', instance.website);
  writeNotNull('WebStatus', instance.webStatus);
  writeNotNull('ZipCode', instance.zipCode);
  writeNotNull('State', instance.state);
  writeNotNull('SourceId', instance.sourceId);
  writeNotNull('UserId', instance.userId);
  writeNotNull('Password', instance.password);
  writeNotNull('ChangePasswordAtNextLogin', instance.changePasswordAtNextLogin);
  writeNotNull('ExpirePassword', instance.expirePassword);
  writeNotNull('ExpireDays', instance.expireDays);
  writeNotNull('PasswordLastUpdated', instance.passwordLastUpdated);
  writeNotNull('WebUserId', instance.webUserId);
  writeNotNull('WebUserContactId', instance.webUserContactId);
  writeNotNull('WebUserUserId', instance.webUserUserId);
  writeNotNull('WebAccess', instance.webAccess);
  writeNotNull('LockAccount', instance.lockAccount);
  writeNotNull('DefaultDealId', instance.defaultDealId);
  writeNotNull('DefaultDeal', instance.defaultDeal);
  writeNotNull('WebCatalogId', instance.webCatalogId);
  writeNotNull('WebCatalog', instance.webCatalog);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('Location', instance.location);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WebQuoteRequest', instance.webQuoteRequest);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentContactContactDocument
    _$WebApiModulesAgentContactContactDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentContactContactDocument(
          contactId: json['ContactId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesAgentContactContactDocumentToJson(
    WebApiModulesAgentContactContactDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContactId', instance.contactId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentContactContactDocumentPostRequest
    _$WebApiModulesAgentContactContactDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentContactContactDocumentPostRequest(
          contactId: json['ContactId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentContactContactDocumentPostRequestToJson(
        WebApiModulesAgentContactContactDocumentPostRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContactId', instance.contactId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentContactContactDocumentPutRequest
    _$WebApiModulesAgentContactContactDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentContactContactDocumentPutRequest(
          contactId: json['ContactId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentContactContactDocumentPutRequestToJson(
    WebApiModulesAgentContactContactDocumentPutRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContactId', instance.contactId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentCustomerCustomer _$WebApiModulesAgentCustomerCustomerFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesAgentCustomerCustomer(
      customerId: json['CustomerId'] as String?,
      customerNumber: json['CustomerNumber'] as String?,
      officeLocationId: json['OfficeLocationId'] as String?,
      officeLocation: json['OfficeLocation'] as String?,
      departmentId: json['DepartmentId'] as String?,
      department: json['Department'] as String?,
      customerTypeId: json['CustomerTypeId'] as String?,
      customerType: json['CustomerType'] as String?,
      customerCategoryId: json['CustomerCategoryId'] as String?,
      customerCategory: json['CustomerCategory'] as String?,
      customer: json['Customer'] as String?,
      address1: json['Address1'] as String?,
      address2: json['Address2'] as String?,
      city: json['City'] as String?,
      state: json['State'] as String?,
      countryId: json['CountryId'] as String?,
      country: json['Country'] as String?,
      zipCode: json['ZipCode'] as String?,
      parentCustomerId: json['ParentCustomerId'] as String?,
      parentCustomer: json['ParentCustomer'] as String?,
      phone: json['Phone'] as String?,
      fax: json['Fax'] as String?,
      phoneTollFree: json['PhoneTollFree'] as String?,
      otherPhone: json['OtherPhone'] as String?,
      webAddress: json['WebAddress'] as String?,
      customerStatusId: json['CustomerStatusId'] as String?,
      customerStatus: json['CustomerStatus'] as String?,
      statusAsOf: json['StatusAsOf'] as String?,
      termsAndConditionsOnFile: json['TermsAndConditionsOnFile'] as bool?,
      billingAddressType: json['BillingAddressType'] as String?,
      billToAttention1: json['BillToAttention1'] as String?,
      billToAttention2: json['BillToAttention2'] as String?,
      billToAddress1: json['BillToAddress1'] as String?,
      billToAddress2: json['BillToAddress2'] as String?,
      billToCity: json['BillToCity'] as String?,
      billToState: json['BillToState'] as String?,
      billToCountryId: json['BillToCountryId'] as String?,
      billToCountry: json['BillToCountry'] as String?,
      billToZipCode: json['BillToZipCode'] as String?,
      paymentTermsId: json['PaymentTermsId'] as String?,
      paymentTerms: json['PaymentTerms'] as String?,
      vehicleRentalAgreementComplete:
          json['VehicleRentalAgreementComplete'] as bool?,
      useDiscountTemplate: json['UseDiscountTemplate'] as bool?,
      discountTemplateId: json['DiscountTemplateId'] as String?,
      discountTemplate: json['DiscountTemplate'] as String?,
      creditStatusId: json['CreditStatusId'] as String?,
      creditStatus: json['CreditStatus'] as String?,
      creditStatusThroughDate: json['CreditStatusThroughDate'] as String?,
      creditApplicationOnFile: json['CreditApplicationOnFile'] as bool?,
      creditUnlimited: json['CreditUnlimited'] as bool?,
      creditLimit: json['CreditLimit'] as int?,
      creditBalance: json['CreditBalance'] as int?,
      creditAvailable: json['CreditAvailable'] as int?,
      creditResponsiblePartyOnFile:
          json['CreditResponsiblePartyOnFile'] as bool?,
      creditResponsibleParty: json['CreditResponsibleParty'] as String?,
      tradeReferencesVerified: json['TradeReferencesVerified'] as bool?,
      tradeReferencesVerifiedBy: json['TradeReferencesVerifiedBy'] as String?,
      tradeReferencesVerifiedOn: json['TradeReferencesVerifiedOn'] as String?,
      creditCardTypeId: json['CreditCardTypeId'] as String?,
      creditCardType: json['CreditCardType'] as String?,
      creditCardLimit: json['CreditCardLimit'] as int?,
      creditCardNo: json['CreditCardNo'] as String?,
      creditCardCode: json['CreditCardCode'] as String?,
      creditCardExpirationMonth: json['CreditCardExpirationMonth'] as int?,
      creditCardExpirationYear: json['CreditCardExpirationYear'] as int?,
      creditCardName: json['CreditCardName'] as String?,
      creditCardAuthorizationOnFile:
          json['CreditCardAuthorizationOnFile'] as bool?,
      insuranceCertificationOnFile:
          json['InsuranceCertificationOnFile'] as bool?,
      insuranceCertificationValidThrough:
          json['InsuranceCertificationValidThrough'] as String?,
      insuranceCoverageLiability: json['InsuranceCoverageLiability'] as int?,
      insuranceCoverageLiabilityDeductible:
          json['InsuranceCoverageLiabilityDeductible'] as int?,
      insuranceCoveragePropertyValue:
          json['InsuranceCoveragePropertyValue'] as int?,
      insuranceCoveragePropertyValueDeductible:
          json['InsuranceCoveragePropertyValueDeductible'] as int?,
      insuranceCompanyId: json['InsuranceCompanyId'] as String?,
      insuranceCompany: json['InsuranceCompany'] as String?,
      insuranceAgent: json['InsuranceAgent'] as String?,
      insuranceCompanyAddress1: json['InsuranceCompanyAddress1'] as String?,
      insuranceCompanyAddress2: json['InsuranceCompanyAddress2'] as String?,
      insuranceCompanyCity: json['InsuranceCompanyCity'] as String?,
      insuranceCompanyState: json['InsuranceCompanyState'] as String?,
      insuranceCompanyZipCode: json['InsuranceCompanyZipCode'] as String?,
      insuranceCompanyCountryId: json['InsuranceCompanyCountryId'] as String?,
      insuranceCompanyCountry: json['InsuranceCompanyCountry'] as String?,
      insuranceCompanyPhone: json['InsuranceCompanyPhone'] as String?,
      insuranceCompanyFax: json['InsuranceCompanyFax'] as String?,
      vehicleInsuranceCertficationOnFile:
          json['VehicleInsuranceCertficationOnFile'] as bool?,
      taxable: json['Taxable'] as bool?,
      taxStateOfIncorporationId: json['TaxStateOfIncorporationId'] as String?,
      taxStateOfIncorporation: json['TaxStateOfIncorporation'] as String?,
      taxFederalNo: json['TaxFederalNo'] as String?,
      nonTaxableYear: json['NonTaxableYear'] as int?,
      nonTaxableCertificateNo: json['NonTaxableCertificateNo'] as String?,
      nonTaxableCertificateValidThrough:
          json['NonTaxableCertificateValidThrough'] as String?,
      nonTaxableCertificateOnFile: json['NonTaxableCertificateOnFile'] as bool?,
      disableQuoteOrderActivity: json['DisableQuoteOrderActivity'] as bool?,
      disableRental: json['DisableRental'] as bool?,
      disableSales: json['DisableSales'] as bool?,
      disableFacilities: json['DisableFacilities'] as bool?,
      disableTransportation: json['DisableTransportation'] as bool?,
      disableLabor: json['DisableLabor'] as bool?,
      disableMisc: json['DisableMisc'] as bool?,
      disableRentalSale: json['DisableRentalSale'] as bool?,
      disableSubRental: json['DisableSubRental'] as bool?,
      disableSubSale: json['DisableSubSale'] as bool?,
      disableSubLabor: json['DisableSubLabor'] as bool?,
      disableSubMisc: json['DisableSubMisc'] as bool?,
      splitRental: json['SplitRental'] as bool?,
      splitRentalTaxCustomer: json['SplitRentalTaxCustomer'] as bool?,
      ownedEquipmentSplitRentalPerecent:
          json['OwnedEquipmentSplitRentalPerecent'] as int?,
      subRentalEquipmentSplitRentalPerecent:
          json['SubRentalEquipmentSplitRentalPerecent'] as int?,
      rebateRental: json['RebateRental'] as bool?,
      ownedEquipmentRebateRentalPerecent:
          json['OwnedEquipmentRebateRentalPerecent'] as int?,
      subRentalEquipmentRebateRentalPerecent:
          json['SubRentalEquipmentRebateRentalPerecent'] as int?,
      splitRentalLogoFileName: json['SplitRentalLogoFileName'] as String?,
      splitRentalLogoWidth: json['SplitRentalLogoWidth'] as int?,
      splitRentalLogoHeight: json['SplitRentalLogoHeight'] as int?,
      shippingAddressType: json['ShippingAddressType'] as String?,
      shipAttention: json['ShipAttention'] as String?,
      shipAddress1: json['ShipAddress1'] as String?,
      shipAddress2: json['ShipAddress2'] as String?,
      shipCity: json['ShipCity'] as String?,
      shipState: json['ShipState'] as String?,
      shipCountryId: json['ShipCountryId'] as String?,
      shipCountry: json['ShipCountry'] as String?,
      shipZipCode: json['ShipZipCode'] as String?,
      email: json['Email'] as String?,
      multipleCurrencies: json['MultipleCurrencies'] as bool?,
      currencyId: json['CurrencyId'] as String?,
      currencyCode: json['CurrencyCode'] as String?,
      currencySymbol: json['CurrencySymbol'] as String?,
      securityDepositAmount:
          (json['SecurityDepositAmount'] as num?)?.toDouble(),
      inactive: json['Inactive'] as bool?,
      dateStamp: json['DateStamp'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesAgentCustomerCustomerToJson(
    WebApiModulesAgentCustomerCustomer instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('CustomerNumber', instance.customerNumber);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('CustomerTypeId', instance.customerTypeId);
  writeNotNull('CustomerType', instance.customerType);
  writeNotNull('CustomerCategoryId', instance.customerCategoryId);
  writeNotNull('CustomerCategory', instance.customerCategory);
  writeNotNull('Customer', instance.customer);
  writeNotNull('Address1', instance.address1);
  writeNotNull('Address2', instance.address2);
  writeNotNull('City', instance.city);
  writeNotNull('State', instance.state);
  writeNotNull('CountryId', instance.countryId);
  writeNotNull('Country', instance.country);
  writeNotNull('ZipCode', instance.zipCode);
  writeNotNull('ParentCustomerId', instance.parentCustomerId);
  writeNotNull('ParentCustomer', instance.parentCustomer);
  writeNotNull('Phone', instance.phone);
  writeNotNull('Fax', instance.fax);
  writeNotNull('PhoneTollFree', instance.phoneTollFree);
  writeNotNull('OtherPhone', instance.otherPhone);
  writeNotNull('WebAddress', instance.webAddress);
  writeNotNull('CustomerStatusId', instance.customerStatusId);
  writeNotNull('CustomerStatus', instance.customerStatus);
  writeNotNull('StatusAsOf', instance.statusAsOf);
  writeNotNull('TermsAndConditionsOnFile', instance.termsAndConditionsOnFile);
  writeNotNull('BillingAddressType', instance.billingAddressType);
  writeNotNull('BillToAttention1', instance.billToAttention1);
  writeNotNull('BillToAttention2', instance.billToAttention2);
  writeNotNull('BillToAddress1', instance.billToAddress1);
  writeNotNull('BillToAddress2', instance.billToAddress2);
  writeNotNull('BillToCity', instance.billToCity);
  writeNotNull('BillToState', instance.billToState);
  writeNotNull('BillToCountryId', instance.billToCountryId);
  writeNotNull('BillToCountry', instance.billToCountry);
  writeNotNull('BillToZipCode', instance.billToZipCode);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('VehicleRentalAgreementComplete',
      instance.vehicleRentalAgreementComplete);
  writeNotNull('UseDiscountTemplate', instance.useDiscountTemplate);
  writeNotNull('DiscountTemplateId', instance.discountTemplateId);
  writeNotNull('DiscountTemplate', instance.discountTemplate);
  writeNotNull('CreditStatusId', instance.creditStatusId);
  writeNotNull('CreditStatus', instance.creditStatus);
  writeNotNull('CreditStatusThroughDate', instance.creditStatusThroughDate);
  writeNotNull('CreditApplicationOnFile', instance.creditApplicationOnFile);
  writeNotNull('CreditUnlimited', instance.creditUnlimited);
  writeNotNull('CreditLimit', instance.creditLimit);
  writeNotNull('CreditBalance', instance.creditBalance);
  writeNotNull('CreditAvailable', instance.creditAvailable);
  writeNotNull(
      'CreditResponsiblePartyOnFile', instance.creditResponsiblePartyOnFile);
  writeNotNull('CreditResponsibleParty', instance.creditResponsibleParty);
  writeNotNull('TradeReferencesVerified', instance.tradeReferencesVerified);
  writeNotNull('TradeReferencesVerifiedBy', instance.tradeReferencesVerifiedBy);
  writeNotNull('TradeReferencesVerifiedOn', instance.tradeReferencesVerifiedOn);
  writeNotNull('CreditCardTypeId', instance.creditCardTypeId);
  writeNotNull('CreditCardType', instance.creditCardType);
  writeNotNull('CreditCardLimit', instance.creditCardLimit);
  writeNotNull('CreditCardNo', instance.creditCardNo);
  writeNotNull('CreditCardCode', instance.creditCardCode);
  writeNotNull('CreditCardExpirationMonth', instance.creditCardExpirationMonth);
  writeNotNull('CreditCardExpirationYear', instance.creditCardExpirationYear);
  writeNotNull('CreditCardName', instance.creditCardName);
  writeNotNull(
      'CreditCardAuthorizationOnFile', instance.creditCardAuthorizationOnFile);
  writeNotNull(
      'InsuranceCertificationOnFile', instance.insuranceCertificationOnFile);
  writeNotNull('InsuranceCertificationValidThrough',
      instance.insuranceCertificationValidThrough);
  writeNotNull(
      'InsuranceCoverageLiability', instance.insuranceCoverageLiability);
  writeNotNull('InsuranceCoverageLiabilityDeductible',
      instance.insuranceCoverageLiabilityDeductible);
  writeNotNull('InsuranceCoveragePropertyValue',
      instance.insuranceCoveragePropertyValue);
  writeNotNull('InsuranceCoveragePropertyValueDeductible',
      instance.insuranceCoveragePropertyValueDeductible);
  writeNotNull('InsuranceCompanyId', instance.insuranceCompanyId);
  writeNotNull('InsuranceCompany', instance.insuranceCompany);
  writeNotNull('InsuranceAgent', instance.insuranceAgent);
  writeNotNull('InsuranceCompanyAddress1', instance.insuranceCompanyAddress1);
  writeNotNull('InsuranceCompanyAddress2', instance.insuranceCompanyAddress2);
  writeNotNull('InsuranceCompanyCity', instance.insuranceCompanyCity);
  writeNotNull('InsuranceCompanyState', instance.insuranceCompanyState);
  writeNotNull('InsuranceCompanyZipCode', instance.insuranceCompanyZipCode);
  writeNotNull('InsuranceCompanyCountryId', instance.insuranceCompanyCountryId);
  writeNotNull('InsuranceCompanyCountry', instance.insuranceCompanyCountry);
  writeNotNull('InsuranceCompanyPhone', instance.insuranceCompanyPhone);
  writeNotNull('InsuranceCompanyFax', instance.insuranceCompanyFax);
  writeNotNull('VehicleInsuranceCertficationOnFile',
      instance.vehicleInsuranceCertficationOnFile);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('TaxStateOfIncorporationId', instance.taxStateOfIncorporationId);
  writeNotNull('TaxStateOfIncorporation', instance.taxStateOfIncorporation);
  writeNotNull('TaxFederalNo', instance.taxFederalNo);
  writeNotNull('NonTaxableYear', instance.nonTaxableYear);
  writeNotNull('NonTaxableCertificateNo', instance.nonTaxableCertificateNo);
  writeNotNull('NonTaxableCertificateValidThrough',
      instance.nonTaxableCertificateValidThrough);
  writeNotNull(
      'NonTaxableCertificateOnFile', instance.nonTaxableCertificateOnFile);
  writeNotNull('DisableQuoteOrderActivity', instance.disableQuoteOrderActivity);
  writeNotNull('DisableRental', instance.disableRental);
  writeNotNull('DisableSales', instance.disableSales);
  writeNotNull('DisableFacilities', instance.disableFacilities);
  writeNotNull('DisableTransportation', instance.disableTransportation);
  writeNotNull('DisableLabor', instance.disableLabor);
  writeNotNull('DisableMisc', instance.disableMisc);
  writeNotNull('DisableRentalSale', instance.disableRentalSale);
  writeNotNull('DisableSubRental', instance.disableSubRental);
  writeNotNull('DisableSubSale', instance.disableSubSale);
  writeNotNull('DisableSubLabor', instance.disableSubLabor);
  writeNotNull('DisableSubMisc', instance.disableSubMisc);
  writeNotNull('SplitRental', instance.splitRental);
  writeNotNull('SplitRentalTaxCustomer', instance.splitRentalTaxCustomer);
  writeNotNull('OwnedEquipmentSplitRentalPerecent',
      instance.ownedEquipmentSplitRentalPerecent);
  writeNotNull('SubRentalEquipmentSplitRentalPerecent',
      instance.subRentalEquipmentSplitRentalPerecent);
  writeNotNull('RebateRental', instance.rebateRental);
  writeNotNull('OwnedEquipmentRebateRentalPerecent',
      instance.ownedEquipmentRebateRentalPerecent);
  writeNotNull('SubRentalEquipmentRebateRentalPerecent',
      instance.subRentalEquipmentRebateRentalPerecent);
  writeNotNull('SplitRentalLogoFileName', instance.splitRentalLogoFileName);
  writeNotNull('SplitRentalLogoWidth', instance.splitRentalLogoWidth);
  writeNotNull('SplitRentalLogoHeight', instance.splitRentalLogoHeight);
  writeNotNull('ShippingAddressType', instance.shippingAddressType);
  writeNotNull('ShipAttention', instance.shipAttention);
  writeNotNull('ShipAddress1', instance.shipAddress1);
  writeNotNull('ShipAddress2', instance.shipAddress2);
  writeNotNull('ShipCity', instance.shipCity);
  writeNotNull('ShipState', instance.shipState);
  writeNotNull('ShipCountryId', instance.shipCountryId);
  writeNotNull('ShipCountry', instance.shipCountry);
  writeNotNull('ShipZipCode', instance.shipZipCode);
  writeNotNull('Email', instance.email);
  writeNotNull('MultipleCurrencies', instance.multipleCurrencies);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('SecurityDepositAmount', instance.securityDepositAmount);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentCustomerCustomerDocument
    _$WebApiModulesAgentCustomerCustomerDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentCustomerCustomerDocument(
          customerId: json['CustomerId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesAgentCustomerCustomerDocumentToJson(
    WebApiModulesAgentCustomerCustomerDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentCustomerCustomerDocumentPostRequest
    _$WebApiModulesAgentCustomerCustomerDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentCustomerCustomerDocumentPostRequest(
          customerId: json['CustomerId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentCustomerCustomerDocumentPostRequestToJson(
        WebApiModulesAgentCustomerCustomerDocumentPostRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentCustomerCustomerDocumentPutRequest
    _$WebApiModulesAgentCustomerCustomerDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentCustomerCustomerDocumentPutRequest(
          customerId: json['CustomerId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentCustomerCustomerDocumentPutRequestToJson(
        WebApiModulesAgentCustomerCustomerDocumentPutRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentDealCopyContactsFromCustomerResponse
    _$WebApiModulesAgentDealCopyContactsFromCustomerResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentDealCopyContactsFromCustomerResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentDealCopyContactsFromCustomerResponseToJson(
        WebApiModulesAgentDealCopyContactsFromCustomerResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentDealDeal _$WebApiModulesAgentDealDealFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesAgentDealDeal(
      dealId: json['DealId'] as String?,
      deal: json['Deal'] as String?,
      dealNumber: json['DealNumber'] as String?,
      customerId: json['CustomerId'] as String?,
      customer: json['Customer'] as String?,
      customerNumber: json['CustomerNumber'] as String?,
      officeLocationId: json['OfficeLocationId'] as String?,
      officeLocation: json['OfficeLocation'] as String?,
      dealTypeId: json['DealTypeId'] as String?,
      dealType: json['DealType'] as String?,
      address1: json['Address1'] as String?,
      address2: json['Address2'] as String?,
      city: json['City'] as String?,
      state: json['State'] as String?,
      zipCode: json['ZipCode'] as String?,
      countryId: json['CountryId'] as String?,
      country: json['Country'] as String?,
      phone: json['Phone'] as String?,
      phoneTollFree: json['PhoneTollFree'] as String?,
      fax: json['Fax'] as String?,
      phoneOther: json['PhoneOther'] as String?,
      departmentId: json['DepartmentId'] as String?,
      department: json['Department'] as String?,
      csrId: json['CsrId'] as String?,
      csr: json['Csr'] as String?,
      defaultAgentId: json['DefaultAgentId'] as String?,
      defaultAgent: json['DefaultAgent'] as String?,
      defaultProjectManagerId: json['DefaultProjectManagerId'] as String?,
      defaultProjectManager: json['DefaultProjectManager'] as String?,
      dealClassificationId: json['DealClassificationId'] as String?,
      dealClassification: json['DealClassification'] as String?,
      productionTypeId: json['ProductionTypeId'] as String?,
      productionType: json['ProductionType'] as String?,
      dealStatusId: json['DealStatusId'] as String?,
      dealStatus: json['DealStatus'] as String?,
      statusAsOf: json['StatusAsOf'] as String?,
      expectedWrapDate: json['ExpectedWrapDate'] as String?,
      billingCycleId: json['BillingCycleId'] as String?,
      billingCycle: json['BillingCycle'] as String?,
      paymentTermsId: json['PaymentTermsId'] as String?,
      paymentTerms: json['PaymentTerms'] as String?,
      paymentTypeId: json['PaymentTypeId'] as String?,
      paymentType: json['PaymentType'] as String?,
      defaultRate: json['DefaultRate'] as String?,
      multipleCurrencies: json['MultipleCurrencies'] as bool?,
      currencyId: json['CurrencyId'] as String?,
      currencyCode: json['CurrencyCode'] as String?,
      currencySymbol: json['CurrencySymbol'] as String?,
      useCustomerDiscount: json['UseCustomerDiscount'] as bool?,
      customerDiscountTemplateId: json['CustomerDiscountTemplateId'] as String?,
      useDiscountTemplate: json['UseDiscountTemplate'] as bool?,
      discountTemplateId: json['DiscountTemplateId'] as String?,
      discountTemplate: json['DiscountTemplate'] as String?,
      rentalDaysPerWeek: (json['RentalDaysPerWeek'] as num?)?.toDouble(),
      rentalDiscountPercent:
          (json['RentalDiscountPercent'] as num?)?.toDouble(),
      salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
      facilitiesDaysPerWeek:
          (json['FacilitiesDaysPerWeek'] as num?)?.toDouble(),
      facilitiesDiscountPercent:
          (json['FacilitiesDiscountPercent'] as num?)?.toDouble(),
      outsideSalesRepresentativeId:
          json['OutsideSalesRepresentativeId'] as String?,
      outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
      commissionRate: (json['CommissionRate'] as num?)?.toDouble(),
      commissionIncludesVendorItems:
          json['CommissionIncludesVendorItems'] as bool?,
      poRequired: json['PoRequired'] as bool?,
      poType: json['PoType'] as String?,
      billToAddressType: json['BillToAddressType'] as String?,
      billToAttention1: json['BillToAttention1'] as String?,
      billToAttention2: json['BillToAttention2'] as String?,
      billToAddress1: json['BillToAddress1'] as String?,
      billToAddress2: json['BillToAddress2'] as String?,
      billToCity: json['BillToCity'] as String?,
      billToState: json['BillToState'] as String?,
      billToCountryId: json['BillToCountryId'] as String?,
      billToCountry: json['BillToCountry'] as String?,
      billToZipCode: json['BillToZipCode'] as String?,
      assessFinanceCharge: json['AssessFinanceCharge'] as bool?,
      allowBillingScheduleOverride:
          json['AllowBillingScheduleOverride'] as bool?,
      allowRebateCreditInvoices: json['AllowRebateCreditInvoices'] as bool?,
      useCustomerCredit: json['UseCustomerCredit'] as bool?,
      creditStatusId: json['CreditStatusId'] as String?,
      creditStatus: json['CreditStatus'] as String?,
      creditStatusThrough: json['CreditStatusThrough'] as String?,
      creditApplicationOnFile: json['CreditApplicationOnFile'] as bool?,
      unlimitedCredit: json['UnlimitedCredit'] as bool?,
      creditLimit: json['CreditLimit'] as int?,
      creditBalance: json['CreditBalance'] as int?,
      creditAvailable: json['CreditAvailable'] as int?,
      customerCreditLimit: json['CustomerCreditLimit'] as int?,
      customerCreditBalance: json['CustomerCreditBalance'] as int?,
      customerCreditAvailable: json['CustomerCreditAvailable'] as int?,
      creditResponsiblePartyOnFile:
          json['CreditResponsiblePartyOnFile'] as bool?,
      creditResponsibleParty: json['CreditResponsibleParty'] as String?,
      tradeReferencesVerified: json['TradeReferencesVerified'] as bool?,
      tradeReferencesVerifiedBy: json['TradeReferencesVerifiedBy'] as String?,
      tradeReferencesVerifiedOn: json['TradeReferencesVerifiedOn'] as String?,
      creditCardTypeId: json['CreditCardTypeId'] as String?,
      creditCardType: json['CreditCardType'] as String?,
      creditCardLimit: json['CreditCardLimit'] as int?,
      creditCardNumber: json['CreditCardNumber'] as String?,
      creditCardCode: json['CreditCardCode'] as String?,
      creditCardName: json['CreditCardName'] as String?,
      creditCardExpirationMonth: json['CreditCardExpirationMonth'] as int?,
      creditCardExpirationYear: json['CreditCardExpirationYear'] as int?,
      creditCardAuthorizationFormOnFile:
          json['CreditCardAuthorizationFormOnFile'] as bool?,
      depletingDepositThresholdAmount:
          (json['DepletingDepositThresholdAmount'] as num?)?.toDouble(),
      depletingDepositThresholdPercent:
          json['DepletingDepositThresholdPercent'] as int?,
      depletingDepositTotal:
          (json['DepletingDepositTotal'] as num?)?.toDouble(),
      depletingDepositApplied:
          (json['DepletingDepositApplied'] as num?)?.toDouble(),
      depletingDepositRemaining:
          (json['DepletingDepositRemaining'] as num?)?.toDouble(),
      useCustomerInsurance: json['UseCustomerInsurance'] as bool?,
      insuranceCertification: json['InsuranceCertification'] as bool?,
      insuranceCertificationValidThrough:
          json['InsuranceCertificationValidThrough'] as String?,
      insuranceCoverageLiability: json['InsuranceCoverageLiability'] as int?,
      insuranceCoverageLiabilityDeductible:
          json['InsuranceCoverageLiabilityDeductible'] as int?,
      insuranceCoverageProperty: json['InsuranceCoverageProperty'] as int?,
      insuranceCoveragePropertyDeductible:
          json['InsuranceCoveragePropertyDeductible'] as int?,
      securityDepositAmount:
          (json['SecurityDepositAmount'] as num?)?.toDouble(),
      insuranceCompanyId: json['InsuranceCompanyId'] as String?,
      insuranceCompany: json['InsuranceCompany'] as String?,
      insuranceCompanyAgent: json['InsuranceCompanyAgent'] as String?,
      insuranceCompanyAddress1: json['InsuranceCompanyAddress1'] as String?,
      insuranceCompanyAddress2: json['InsuranceCompanyAddress2'] as String?,
      insuranceCompanyCity: json['InsuranceCompanyCity'] as String?,
      insuranceCompanyState: json['InsuranceCompanyState'] as String?,
      insuranceCompanyZipCode: json['InsuranceCompanyZipCode'] as String?,
      insuranceCompanyCountryId: json['InsuranceCompanyCountryId'] as String?,
      insuranceCompanyCountry: json['InsuranceCompanyCountry'] as String?,
      insuranceCompanyPhone: json['InsuranceCompanyPhone'] as String?,
      insuranceCompanyFax: json['InsuranceCompanyFax'] as String?,
      vehicleInsuranceCertification:
          json['VehicleInsuranceCertification'] as bool?,
      useCustomerTax: json['UseCustomerTax'] as bool?,
      taxable: json['Taxable'] as bool?,
      taxStateOfIncorporationId: json['TaxStateOfIncorporationId'] as String?,
      taxStateOfIncorporation: json['TaxStateOfIncorporation'] as String?,
      taxFederalNo: json['TaxFederalNo'] as String?,
      nonTaxableYear: json['NonTaxableYear'] as int?,
      nonTaxableCertificateNo: json['NonTaxableCertificateNo'] as String?,
      nonTaxableCertificateValidThrough:
          json['NonTaxableCertificateValidThrough'] as String?,
      nonTaxableCertificateOnFile: json['NonTaxableCertificateOnFile'] as bool?,
      disableQuoteOrderActivity: json['DisableQuoteOrderActivity'] as bool?,
      disableRental: json['DisableRental'] as bool?,
      disableSales: json['DisableSales'] as bool?,
      disableFacilities: json['DisableFacilities'] as bool?,
      disableTransportation: json['DisableTransportation'] as bool?,
      disableLabor: json['DisableLabor'] as bool?,
      disableMisc: json['DisableMisc'] as bool?,
      disableRentalSale: json['DisableRentalSale'] as bool?,
      disableSubRental: json['DisableSubRental'] as bool?,
      disableSubSale: json['DisableSubSale'] as bool?,
      disableSubLabor: json['DisableSubLabor'] as bool?,
      disableSubMisc: json['DisableSubMisc'] as bool?,
      defaultOutgoingDeliveryType:
          json['DefaultOutgoingDeliveryType'] as String?,
      defaultIncomingDeliveryType:
          json['DefaultIncomingDeliveryType'] as String?,
      shippingAddressType: json['ShippingAddressType'] as String?,
      shipAttention: json['ShipAttention'] as String?,
      shipAddress1: json['ShipAddress1'] as String?,
      shipAddress2: json['ShipAddress2'] as String?,
      shipCity: json['ShipCity'] as String?,
      shipState: json['ShipState'] as String?,
      shipCountryId: json['ShipCountryId'] as String?,
      shipCountry: json['ShipCountry'] as String?,
      shipZipCode: json['ShipZipCode'] as String?,
      rebateRental: json['RebateRental'] as bool?,
      rebateCustomerId: json['RebateCustomerId'] as String?,
      rebateCustomer: json['RebateCustomer'] as String?,
      ownedEquipmentRebateRentalPerecent:
          json['OwnedEquipmentRebateRentalPerecent'] as int?,
      subRentalEquipmentRebateRentalPerecent:
          json['SubRentalEquipmentRebateRentalPerecent'] as int?,
      enableWebQuoteRequest: json['EnableWebQuoteRequest'] as bool?,
      email: json['Email'] as String?,
      dateStamp: json['DateStamp'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesAgentDealDealToJson(
    WebApiModulesAgentDealDeal instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('CustomerNumber', instance.customerNumber);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('DealTypeId', instance.dealTypeId);
  writeNotNull('DealType', instance.dealType);
  writeNotNull('Address1', instance.address1);
  writeNotNull('Address2', instance.address2);
  writeNotNull('City', instance.city);
  writeNotNull('State', instance.state);
  writeNotNull('ZipCode', instance.zipCode);
  writeNotNull('CountryId', instance.countryId);
  writeNotNull('Country', instance.country);
  writeNotNull('Phone', instance.phone);
  writeNotNull('PhoneTollFree', instance.phoneTollFree);
  writeNotNull('Fax', instance.fax);
  writeNotNull('PhoneOther', instance.phoneOther);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('CsrId', instance.csrId);
  writeNotNull('Csr', instance.csr);
  writeNotNull('DefaultAgentId', instance.defaultAgentId);
  writeNotNull('DefaultAgent', instance.defaultAgent);
  writeNotNull('DefaultProjectManagerId', instance.defaultProjectManagerId);
  writeNotNull('DefaultProjectManager', instance.defaultProjectManager);
  writeNotNull('DealClassificationId', instance.dealClassificationId);
  writeNotNull('DealClassification', instance.dealClassification);
  writeNotNull('ProductionTypeId', instance.productionTypeId);
  writeNotNull('ProductionType', instance.productionType);
  writeNotNull('DealStatusId', instance.dealStatusId);
  writeNotNull('DealStatus', instance.dealStatus);
  writeNotNull('StatusAsOf', instance.statusAsOf);
  writeNotNull('ExpectedWrapDate', instance.expectedWrapDate);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('BillingCycle', instance.billingCycle);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('DefaultRate', instance.defaultRate);
  writeNotNull('MultipleCurrencies', instance.multipleCurrencies);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('UseCustomerDiscount', instance.useCustomerDiscount);
  writeNotNull(
      'CustomerDiscountTemplateId', instance.customerDiscountTemplateId);
  writeNotNull('UseDiscountTemplate', instance.useDiscountTemplate);
  writeNotNull('DiscountTemplateId', instance.discountTemplateId);
  writeNotNull('DiscountTemplate', instance.discountTemplate);
  writeNotNull('RentalDaysPerWeek', instance.rentalDaysPerWeek);
  writeNotNull('RentalDiscountPercent', instance.rentalDiscountPercent);
  writeNotNull('SalesDiscountPercent', instance.salesDiscountPercent);
  writeNotNull('FacilitiesDaysPerWeek', instance.facilitiesDaysPerWeek);
  writeNotNull('FacilitiesDiscountPercent', instance.facilitiesDiscountPercent);
  writeNotNull(
      'OutsideSalesRepresentativeId', instance.outsideSalesRepresentativeId);
  writeNotNull(
      'OutsideSalesRepresentative', instance.outsideSalesRepresentative);
  writeNotNull('CommissionRate', instance.commissionRate);
  writeNotNull(
      'CommissionIncludesVendorItems', instance.commissionIncludesVendorItems);
  writeNotNull('PoRequired', instance.poRequired);
  writeNotNull('PoType', instance.poType);
  writeNotNull('BillToAddressType', instance.billToAddressType);
  writeNotNull('BillToAttention1', instance.billToAttention1);
  writeNotNull('BillToAttention2', instance.billToAttention2);
  writeNotNull('BillToAddress1', instance.billToAddress1);
  writeNotNull('BillToAddress2', instance.billToAddress2);
  writeNotNull('BillToCity', instance.billToCity);
  writeNotNull('BillToState', instance.billToState);
  writeNotNull('BillToCountryId', instance.billToCountryId);
  writeNotNull('BillToCountry', instance.billToCountry);
  writeNotNull('BillToZipCode', instance.billToZipCode);
  writeNotNull('AssessFinanceCharge', instance.assessFinanceCharge);
  writeNotNull(
      'AllowBillingScheduleOverride', instance.allowBillingScheduleOverride);
  writeNotNull('AllowRebateCreditInvoices', instance.allowRebateCreditInvoices);
  writeNotNull('UseCustomerCredit', instance.useCustomerCredit);
  writeNotNull('CreditStatusId', instance.creditStatusId);
  writeNotNull('CreditStatus', instance.creditStatus);
  writeNotNull('CreditStatusThrough', instance.creditStatusThrough);
  writeNotNull('CreditApplicationOnFile', instance.creditApplicationOnFile);
  writeNotNull('UnlimitedCredit', instance.unlimitedCredit);
  writeNotNull('CreditLimit', instance.creditLimit);
  writeNotNull('CreditBalance', instance.creditBalance);
  writeNotNull('CreditAvailable', instance.creditAvailable);
  writeNotNull('CustomerCreditLimit', instance.customerCreditLimit);
  writeNotNull('CustomerCreditBalance', instance.customerCreditBalance);
  writeNotNull('CustomerCreditAvailable', instance.customerCreditAvailable);
  writeNotNull(
      'CreditResponsiblePartyOnFile', instance.creditResponsiblePartyOnFile);
  writeNotNull('CreditResponsibleParty', instance.creditResponsibleParty);
  writeNotNull('TradeReferencesVerified', instance.tradeReferencesVerified);
  writeNotNull('TradeReferencesVerifiedBy', instance.tradeReferencesVerifiedBy);
  writeNotNull('TradeReferencesVerifiedOn', instance.tradeReferencesVerifiedOn);
  writeNotNull('CreditCardTypeId', instance.creditCardTypeId);
  writeNotNull('CreditCardType', instance.creditCardType);
  writeNotNull('CreditCardLimit', instance.creditCardLimit);
  writeNotNull('CreditCardNumber', instance.creditCardNumber);
  writeNotNull('CreditCardCode', instance.creditCardCode);
  writeNotNull('CreditCardName', instance.creditCardName);
  writeNotNull('CreditCardExpirationMonth', instance.creditCardExpirationMonth);
  writeNotNull('CreditCardExpirationYear', instance.creditCardExpirationYear);
  writeNotNull('CreditCardAuthorizationFormOnFile',
      instance.creditCardAuthorizationFormOnFile);
  writeNotNull('DepletingDepositThresholdAmount',
      instance.depletingDepositThresholdAmount);
  writeNotNull('DepletingDepositThresholdPercent',
      instance.depletingDepositThresholdPercent);
  writeNotNull('DepletingDepositTotal', instance.depletingDepositTotal);
  writeNotNull('DepletingDepositApplied', instance.depletingDepositApplied);
  writeNotNull('DepletingDepositRemaining', instance.depletingDepositRemaining);
  writeNotNull('UseCustomerInsurance', instance.useCustomerInsurance);
  writeNotNull('InsuranceCertification', instance.insuranceCertification);
  writeNotNull('InsuranceCertificationValidThrough',
      instance.insuranceCertificationValidThrough);
  writeNotNull(
      'InsuranceCoverageLiability', instance.insuranceCoverageLiability);
  writeNotNull('InsuranceCoverageLiabilityDeductible',
      instance.insuranceCoverageLiabilityDeductible);
  writeNotNull('InsuranceCoverageProperty', instance.insuranceCoverageProperty);
  writeNotNull('InsuranceCoveragePropertyDeductible',
      instance.insuranceCoveragePropertyDeductible);
  writeNotNull('SecurityDepositAmount', instance.securityDepositAmount);
  writeNotNull('InsuranceCompanyId', instance.insuranceCompanyId);
  writeNotNull('InsuranceCompany', instance.insuranceCompany);
  writeNotNull('InsuranceCompanyAgent', instance.insuranceCompanyAgent);
  writeNotNull('InsuranceCompanyAddress1', instance.insuranceCompanyAddress1);
  writeNotNull('InsuranceCompanyAddress2', instance.insuranceCompanyAddress2);
  writeNotNull('InsuranceCompanyCity', instance.insuranceCompanyCity);
  writeNotNull('InsuranceCompanyState', instance.insuranceCompanyState);
  writeNotNull('InsuranceCompanyZipCode', instance.insuranceCompanyZipCode);
  writeNotNull('InsuranceCompanyCountryId', instance.insuranceCompanyCountryId);
  writeNotNull('InsuranceCompanyCountry', instance.insuranceCompanyCountry);
  writeNotNull('InsuranceCompanyPhone', instance.insuranceCompanyPhone);
  writeNotNull('InsuranceCompanyFax', instance.insuranceCompanyFax);
  writeNotNull(
      'VehicleInsuranceCertification', instance.vehicleInsuranceCertification);
  writeNotNull('UseCustomerTax', instance.useCustomerTax);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('TaxStateOfIncorporationId', instance.taxStateOfIncorporationId);
  writeNotNull('TaxStateOfIncorporation', instance.taxStateOfIncorporation);
  writeNotNull('TaxFederalNo', instance.taxFederalNo);
  writeNotNull('NonTaxableYear', instance.nonTaxableYear);
  writeNotNull('NonTaxableCertificateNo', instance.nonTaxableCertificateNo);
  writeNotNull('NonTaxableCertificateValidThrough',
      instance.nonTaxableCertificateValidThrough);
  writeNotNull(
      'NonTaxableCertificateOnFile', instance.nonTaxableCertificateOnFile);
  writeNotNull('DisableQuoteOrderActivity', instance.disableQuoteOrderActivity);
  writeNotNull('DisableRental', instance.disableRental);
  writeNotNull('DisableSales', instance.disableSales);
  writeNotNull('DisableFacilities', instance.disableFacilities);
  writeNotNull('DisableTransportation', instance.disableTransportation);
  writeNotNull('DisableLabor', instance.disableLabor);
  writeNotNull('DisableMisc', instance.disableMisc);
  writeNotNull('DisableRentalSale', instance.disableRentalSale);
  writeNotNull('DisableSubRental', instance.disableSubRental);
  writeNotNull('DisableSubSale', instance.disableSubSale);
  writeNotNull('DisableSubLabor', instance.disableSubLabor);
  writeNotNull('DisableSubMisc', instance.disableSubMisc);
  writeNotNull(
      'DefaultOutgoingDeliveryType', instance.defaultOutgoingDeliveryType);
  writeNotNull(
      'DefaultIncomingDeliveryType', instance.defaultIncomingDeliveryType);
  writeNotNull('ShippingAddressType', instance.shippingAddressType);
  writeNotNull('ShipAttention', instance.shipAttention);
  writeNotNull('ShipAddress1', instance.shipAddress1);
  writeNotNull('ShipAddress2', instance.shipAddress2);
  writeNotNull('ShipCity', instance.shipCity);
  writeNotNull('ShipState', instance.shipState);
  writeNotNull('ShipCountryId', instance.shipCountryId);
  writeNotNull('ShipCountry', instance.shipCountry);
  writeNotNull('ShipZipCode', instance.shipZipCode);
  writeNotNull('RebateRental', instance.rebateRental);
  writeNotNull('RebateCustomerId', instance.rebateCustomerId);
  writeNotNull('RebateCustomer', instance.rebateCustomer);
  writeNotNull('OwnedEquipmentRebateRentalPerecent',
      instance.ownedEquipmentRebateRentalPerecent);
  writeNotNull('SubRentalEquipmentRebateRentalPerecent',
      instance.subRentalEquipmentRebateRentalPerecent);
  writeNotNull('EnableWebQuoteRequest', instance.enableWebQuoteRequest);
  writeNotNull('Email', instance.email);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentDealDealDocument _$WebApiModulesAgentDealDealDocumentFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesAgentDealDealDocument(
      dealId: json['DealId'] as String?,
      copying: json['copying'] as bool?,
      documentId: json['DocumentId'] as String?,
      documentTypeId: json['DocumentTypeId'] as String?,
      uniqueId1: json['UniqueId1'] as String?,
      uniqueId2: json['UniqueId2'] as String?,
      uniqueId1Int: json['UniqueId1Int'] as int?,
      description: json['Description'] as String?,
      inputByUsersId: json['InputByUsersId'] as String?,
      attachDate: json['AttachDate'] as String?,
      attachTime: json['AttachTime'] as String?,
      attachToEmail: json['AttachToEmail'] as bool?,
      inactive: json['Inactive'] as bool?,
      dateStamp: json['DateStamp'] as String?,
      extension: json['Extension'] as String?,
      documentType: json['DocumentType'] as String?,
      inputBy: json['InputBy'] as String?,
      hasImage: json['HasImage'] as bool?,
      hasFile: json['HasFile'] as bool?,
      fileIsModified: json['FileIsModified'] as bool?,
      fileDataUrl: json['FileDataUrl'] as String?,
      filePath: json['FilePath'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesAgentDealDealDocumentToJson(
    WebApiModulesAgentDealDealDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DealId', instance.dealId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentDealDealDocumentPostRequest
    _$WebApiModulesAgentDealDealDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentDealDealDocumentPostRequest(
          dealId: json['DealId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentDealDealDocumentPostRequestToJson(
    WebApiModulesAgentDealDealDocumentPostRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DealId', instance.dealId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentDealDealDocumentPutRequest
    _$WebApiModulesAgentDealDealDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentDealDealDocumentPutRequest(
          dealId: json['DealId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentDealDealDocumentPutRequestToJson(
    WebApiModulesAgentDealDealDocumentPutRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DealId', instance.dealId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentOrderCancelUncancelQuoteResponse
    _$WebApiModulesAgentOrderCancelUncancelQuoteResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCancelUncancelQuoteResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          quote: json['Quote'] == null
              ? null
              : WebApiModulesAgentQuoteQuote.fromJson(
                  json['Quote'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$WebApiModulesAgentOrderCancelUncancelQuoteResponseToJson(
    WebApiModulesAgentOrderCancelUncancelQuoteResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('Quote', instance.quote?.toJson());
  return val;
}

WebApiModulesAgentOrderChangeOrderOfficeLocationRequest
    _$WebApiModulesAgentOrderChangeOrderOfficeLocationRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderChangeOrderOfficeLocationRequest(
          officeLocationId: json['OfficeLocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderChangeOrderOfficeLocationRequestToJson(
        WebApiModulesAgentOrderChangeOrderOfficeLocationRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesAgentOrderChangeOrderOfficeLocationResponse
    _$WebApiModulesAgentOrderChangeOrderOfficeLocationResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderChangeOrderOfficeLocationResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          quoteOrOrder: json['quoteOrOrder'] == null
              ? null
              : WebApiModulesAgentOrderOrderBase.fromJson(
                  json['quoteOrOrder'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderChangeOrderOfficeLocationResponseToJson(
        WebApiModulesAgentOrderChangeOrderOfficeLocationResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('quoteOrOrder', instance.quoteOrOrder?.toJson());
  return val;
}

WebApiModulesAgentOrderCompletePoWorksheetSessionRequest
    _$WebApiModulesAgentOrderCompletePoWorksheetSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCompletePoWorksheetSessionRequest(
          sessionId: json['SessionId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderCompletePoWorksheetSessionRequestToJson(
        WebApiModulesAgentOrderCompletePoWorksheetSessionRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  return val;
}

WebApiModulesAgentOrderCompletePoWorksheetSessionResponse
    _$WebApiModulesAgentOrderCompletePoWorksheetSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCompletePoWorksheetSessionResponse(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderCompletePoWorksheetSessionResponseToJson(
        WebApiModulesAgentOrderCompletePoWorksheetSessionResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentOrderCopyOrderItemsRequest
    _$WebApiModulesAgentOrderCopyOrderItemsRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCopyOrderItemsRequest(
          orderId: json['OrderId'] as String?,
          orderItemIds: (json['OrderItemIds'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
        );

Map<String, dynamic> _$WebApiModulesAgentOrderCopyOrderItemsRequestToJson(
    WebApiModulesAgentOrderCopyOrderItemsRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemIds', instance.orderItemIds);
  return val;
}

WebApiModulesAgentOrderCopyOrderItemsResponse
    _$WebApiModulesAgentOrderCopyOrderItemsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCopyOrderItemsResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          orderItemIds: (json['OrderItemIds'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
        );

Map<String, dynamic> _$WebApiModulesAgentOrderCopyOrderItemsResponseToJson(
    WebApiModulesAgentOrderCopyOrderItemsResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('OrderItemIds', instance.orderItemIds);
  return val;
}

WebApiModulesAgentOrderCopyQuoteOrderRequest
    _$WebApiModulesAgentOrderCopyQuoteOrderRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCopyQuoteOrderRequest(
          copyToType: json['CopyToType'] as String?,
          locationId: json['LocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          copyLineItemNotes: json['CopyLineItemNotes'] as bool?,
          copyOrderNotes: json['CopyOrderNotes'] as bool?,
          copyDocuments: json['CopyDocuments'] as bool?,
        );

Map<String, dynamic> _$WebApiModulesAgentOrderCopyQuoteOrderRequestToJson(
    WebApiModulesAgentOrderCopyQuoteOrderRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CopyToType', instance.copyToType);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('CopyLineItemNotes', instance.copyLineItemNotes);
  writeNotNull('CopyOrderNotes', instance.copyOrderNotes);
  writeNotNull('CopyDocuments', instance.copyDocuments);
  return val;
}

WebApiModulesAgentOrderCopyQuoteOrderResponse
    _$WebApiModulesAgentOrderCopyQuoteOrderResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCopyQuoteOrderResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          copy: json['Copy'] == null
              ? null
              : WebApiModulesAgentOrderOrderBase.fromJson(
                  json['Copy'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$WebApiModulesAgentOrderCopyQuoteOrderResponseToJson(
    WebApiModulesAgentOrderCopyQuoteOrderResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('Copy', instance.copy?.toJson());
  return val;
}

WebApiModulesAgentOrderCopyTemplateRequest
    _$WebApiModulesAgentOrderCopyTemplateRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCopyTemplateRequest(
          templateIds: (json['TemplateIds'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
          orderId: json['OrderId'] as String?,
          recType: json['RecType'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentOrderCopyTemplateRequestToJson(
    WebApiModulesAgentOrderCopyTemplateRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('TemplateIds', instance.templateIds);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('RecType', instance.recType);
  return val;
}

WebApiModulesAgentOrderCopyTemplateResponse
    _$WebApiModulesAgentOrderCopyTemplateResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCopyTemplateResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentOrderCopyTemplateResponseToJson(
    WebApiModulesAgentOrderCopyTemplateResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentOrderCreateInvoiceRequest
    _$WebApiModulesAgentOrderCreateInvoiceRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCreateInvoiceRequest(
          orderId: json['OrderId'] as String?,
          asOf: json['AsOf'] == null
              ? null
              : DateTime.parse(json['AsOf'] as String),
        );

Map<String, dynamic> _$WebApiModulesAgentOrderCreateInvoiceRequestToJson(
    WebApiModulesAgentOrderCreateInvoiceRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('AsOf', instance.asOf?.toIso8601String());
  return val;
}

WebApiModulesAgentOrderCreateInvoiceResponse
    _$WebApiModulesAgentOrderCreateInvoiceResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCreateInvoiceResponse(
          invoiceId: json['InvoiceId'] as String?,
          invoice: json['Invoice'] == null
              ? null
              : WebApiModulesBillingInvoiceInvoice.fromJson(
                  json['Invoice'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$WebApiModulesAgentOrderCreateInvoiceResponseToJson(
    WebApiModulesAgentOrderCreateInvoiceResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('Invoice', instance.invoice?.toJson());
  return val;
}

WebApiModulesAgentOrderCreatePoWorksheetSessionRequest
    _$WebApiModulesAgentOrderCreatePoWorksheetSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCreatePoWorksheetSessionRequest(
          orderId: json['OrderId'] as String?,
          recType: json['RecType'] as String?,
          vendorId: json['VendorId'] as String?,
          contactId: json['ContactId'] as String?,
          rateType: json['RateType'] as String?,
          currencyId: json['CurrencyId'] as String?,
          billingCycleId: json['BillingCycleId'] as String?,
          requiredDate: json['RequiredDate'] == null
              ? null
              : DateTime.parse(json['RequiredDate'] as String),
          requiredTime: json['RequiredTime'] as String?,
          fromDate: json['FromDate'] == null
              ? null
              : DateTime.parse(json['FromDate'] as String),
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
          deliveryId: json['DeliveryId'] as String?,
          adjustContractDates: json['AdjustContractDates'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderCreatePoWorksheetSessionRequestToJson(
        WebApiModulesAgentOrderCreatePoWorksheetSessionRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('RecType', instance.recType);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('ContactId', instance.contactId);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('RequiredDate', instance.requiredDate?.toIso8601String());
  writeNotNull('RequiredTime', instance.requiredTime);
  writeNotNull('FromDate', instance.fromDate?.toIso8601String());
  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  writeNotNull('DeliveryId', instance.deliveryId);
  writeNotNull('AdjustContractDates', instance.adjustContractDates);
  return val;
}

WebApiModulesAgentOrderCreatePoWorksheetSessionResponse
    _$WebApiModulesAgentOrderCreatePoWorksheetSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderCreatePoWorksheetSessionResponse(
          sessionId: json['SessionId'] as String?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderCreatePoWorksheetSessionResponseToJson(
        WebApiModulesAgentOrderCreatePoWorksheetSessionResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentOrderCustomRates _$WebApiModulesAgentOrderCustomRatesFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesAgentOrderCustomRates(
      dailyRate: (json['DailyRate'] as num?)?.toDouble(),
      weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
      week2Rate: (json['Week2Rate'] as num?)?.toDouble(),
      week3Rate: (json['Week3Rate'] as num?)?.toDouble(),
      week4Rate: (json['Week4Rate'] as num?)?.toDouble(),
      week5Rate: (json['Week5Rate'] as num?)?.toDouble(),
      monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
    );

Map<String, dynamic> _$WebApiModulesAgentOrderCustomRatesToJson(
    WebApiModulesAgentOrderCustomRates instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DailyRate', instance.dailyRate);
  writeNotNull('WeeklyRate', instance.weeklyRate);
  writeNotNull('Week2Rate', instance.week2Rate);
  writeNotNull('Week3Rate', instance.week3Rate);
  writeNotNull('Week4Rate', instance.week4Rate);
  writeNotNull('Week5Rate', instance.week5Rate);
  writeNotNull('MonthlyRate', instance.monthlyRate);
  return val;
}

WebApiModulesAgentOrderGetCustomRatesRequest
    _$WebApiModulesAgentOrderGetCustomRatesRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderGetCustomRatesRequest(
          orderId: json['OrderId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          recType: json['RecType'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentOrderGetCustomRatesRequestToJson(
    WebApiModulesAgentOrderGetCustomRatesRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('RecType', instance.recType);
  return val;
}

WebApiModulesAgentOrderGetCustomRatesResponse
    _$WebApiModulesAgentOrderGetCustomRatesResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderGetCustomRatesResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          hasDiscount: json['HasDiscount'] as bool?,
          applyDiscountToCustomRate: json['ApplyDiscountToCustomRate'] as bool?,
          customRates: json['CustomRates'] == null
              ? null
              : WebApiModulesAgentOrderCustomRates.fromJson(
                  json['CustomRates'] as Map<String, dynamic>),
          daysPerWeek: (json['DaysPerWeek'] as num?)?.toDouble(),
          discountPercent: (json['DiscountPercent'] as num?)?.toDouble(),
          markupPercent: (json['MarkupPercent'] as num?)?.toDouble(),
          marginPercent: (json['MarginPercent'] as num?)?.toDouble(),
        );

Map<String, dynamic> _$WebApiModulesAgentOrderGetCustomRatesResponseToJson(
    WebApiModulesAgentOrderGetCustomRatesResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('HasDiscount', instance.hasDiscount);
  writeNotNull('ApplyDiscountToCustomRate', instance.applyDiscountToCustomRate);
  writeNotNull('CustomRates', instance.customRates?.toJson());
  writeNotNull('DaysPerWeek', instance.daysPerWeek);
  writeNotNull('DiscountPercent', instance.discountPercent);
  writeNotNull('MarkupPercent', instance.markupPercent);
  writeNotNull('MarginPercent', instance.marginPercent);
  return val;
}

WebApiModulesAgentOrderGetOrderResponse
    _$WebApiModulesAgentOrderGetOrderResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderGetOrderResponse(
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDate: json['OrderDate'] as String?,
          sourceQuoteId: json['SourceQuoteId'] as String?,
          sourceQuoteNumber: json['SourceQuoteNumber'] as String?,
          creditCardPreAuthorizationStatus:
              json['CreditCardPreAuthorizationStatus'] as String?,
          description: json['Description'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          officeLocation: json['OfficeLocation'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          customerId: json['CustomerId'] as String?,
          customer: json['Customer'] as String?,
          customerNumber: json['CustomerNumber'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          dealNumber: json['DealNumber'] as String?,
          rateType: json['RateType'] as String?,
          rateTypeDisplay: json['RateTypeDisplay'] as String?,
          agentId: json['AgentId'] as String?,
          agent: json['Agent'] as String?,
          projectManagerId: json['ProjectManagerId'] as String?,
          projectManager: json['ProjectManager'] as String?,
          rental: json['Rental'] as bool?,
          sales: json['Sales'] as bool?,
          miscellaneous: json['Miscellaneous'] as bool?,
          labor: json['Labor'] as bool?,
          facilities: json['Facilities'] as bool?,
          transportation: json['Transportation'] as bool?,
          rentalSale: json['RentalSale'] as bool?,
          lossAndDamage: json['LossAndDamage'] as bool?,
          repair: json['Repair'] as bool?,
          hasRentalItem: json['HasRentalItem'] as bool?,
          hasSalesItem: json['HasSalesItem'] as bool?,
          hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
          hasLaborItem: json['HasLaborItem'] as bool?,
          hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
          hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
          hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
          hasRepair: json['HasRepair'] as bool?,
          activityDatesAndTimes: (json['ActivityDatesAndTimes']
                      as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          pickDate: json['PickDate'] as String?,
          pickTime: json['PickTime'] as String?,
          estimatedStartDate: json['EstimatedStartDate'] as String?,
          estimatedStartTime: json['EstimatedStartTime'] as String?,
          estimatedStopDate: json['EstimatedStopDate'] as String?,
          estimatedStopTime: json['EstimatedStopTime'] as String?,
          pickUpDate: json['PickUpDate'] as String?,
          pickUpTime: json['PickUpTime'] as String?,
          prepDate: json['PrepDate'] as String?,
          prepTime: json['PrepTime'] as String?,
          loadInDate: json['LoadInDate'] as String?,
          loadInTime: json['LoadInTime'] as String?,
          strikeDate: json['StrikeDate'] as String?,
          strikeTime: json['StrikeTime'] as String?,
          testDate: json['TestDate'] as String?,
          testTime: json['TestTime'] as String?,
          orderTypeId: json['OrderTypeId'] as String?,
          orderType: json['OrderType'] as String?,
          orderTypeCombineActivityTabs:
              json['OrderTypeCombineActivityTabs'] as bool?,
          pendingPo: json['PendingPo'] as bool?,
          poNumber: json['PoNumber'] as String?,
          poAmount: (json['PoAmount'] as num?)?.toDouble(),
          location: json['Location'] as String?,
          orderLocationId: json['OrderLocationId'] as String?,
          orderLocation: json['OrderLocation'] as String?,
          referenceNumber: json['ReferenceNumber'] as String?,
          total: (json['Total'] as num?)?.toDouble(),
          status: json['Status'] as String?,
          statusDate: json['StatusDate'] as String?,
          poApprovalStatusId: json['PoApprovalStatusId'] as String?,
          lockBillingDates: json['LockBillingDates'] as bool?,
          specifyBillingDatesByType: json['SpecifyBillingDatesByType'] as bool?,
          rentalBillingStartDate: json['RentalBillingStartDate'] as String?,
          rentalBillingEndDate: json['RentalBillingEndDate'] as String?,
          laborBillingStartDate: json['LaborBillingStartDate'] as String?,
          laborBillingEndDate: json['LaborBillingEndDate'] as String?,
          miscellaneousBillingStartDate:
              json['MiscellaneousBillingStartDate'] as String?,
          miscellaneousBillingEndDate:
              json['MiscellaneousBillingEndDate'] as String?,
          facilitiesBillingStartDate:
              json['FacilitiesBillingStartDate'] as String?,
          facilitiesBillingEndDate: json['FacilitiesBillingEndDate'] as String?,
          vehicleBillingStartDate: json['VehicleBillingStartDate'] as String?,
          vehicleBillingEndDate: json['VehicleBillingEndDate'] as String?,
          delayBillingSearchUntil: json['DelayBillingSearchUntil'] as String?,
          includePrepFeesInRentalRate:
              json['IncludePrepFeesInRentalRate'] as bool?,
          billingStartDate: json['BillingStartDate'] as String?,
          billingEndDate: json['BillingEndDate'] as String?,
          billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
          billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
          determineQuantitiesToBillBasedOn:
              json['DetermineQuantitiesToBillBasedOn'] as String?,
          billingCycleId: json['BillingCycleId'] as String?,
          billingCycle: json['BillingCycle'] as String?,
          billingCycleType: json['BillingCycleType'] as String?,
          paymentTermsId: json['PaymentTermsId'] as String?,
          paymentTerms: json['PaymentTerms'] as String?,
          paymentTypeId: json['PaymentTypeId'] as String?,
          paymentType: json['PaymentType'] as String?,
          currencyId: json['CurrencyId'] as String?,
          updateAllRatesToNewCurrency:
              json['UpdateAllRatesToNewCurrency'] as bool?,
          confirmUpdateAllRatesToNewCurrency:
              json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currency: json['Currency'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          taxOptionId: json['TaxOptionId'] as String?,
          taxOption: json['TaxOption'] as String?,
          tax1Name: json['Tax1Name'] as String?,
          tax2Name: json['Tax2Name'] as String?,
          taxId: json['TaxId'] as String?,
          rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
          salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
          laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
          rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
          salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
          laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
          noCharge: json['NoCharge'] as bool?,
          noChargeReason: json['NoChargeReason'] as String?,
          printIssuedToAddressFrom: json['PrintIssuedToAddressFrom'] as String?,
          issuedToName: json['IssuedToName'] as String?,
          issuedToAttention: json['IssuedToAttention'] as String?,
          issuedToAttention2: json['IssuedToAttention2'] as String?,
          issuedToAddress1: json['IssuedToAddress1'] as String?,
          issuedToAddress2: json['IssuedToAddress2'] as String?,
          issuedToCity: json['IssuedToCity'] as String?,
          issuedToState: json['IssuedToState'] as String?,
          issuedToZipCode: json['IssuedToZipCode'] as String?,
          issuedToCountryId: json['IssuedToCountryId'] as String?,
          issuedToCountry: json['IssuedToCountry'] as String?,
          billToAddressDifferentFromIssuedToAddress:
              json['BillToAddressDifferentFromIssuedToAddress'] as bool?,
          billToAddressId: json['BillToAddressId'] as String?,
          billToName: json['BillToName'] as String?,
          billToAttention: json['BillToAttention'] as String?,
          billToAttention2: json['BillToAttention2'] as String?,
          billToAddress1: json['BillToAddress1'] as String?,
          billToAddress2: json['BillToAddress2'] as String?,
          billToCity: json['BillToCity'] as String?,
          billToState: json['BillToState'] as String?,
          billToZipCode: json['BillToZipCode'] as String?,
          billToCountryId: json['BillToCountryId'] as String?,
          billToCountry: json['BillToCountry'] as String?,
          discountReasonId: json['DiscountReasonId'] as String?,
          discountReason: json['DiscountReason'] as String?,
          requireContactConfirmation:
              json['RequireContactConfirmation'] as bool?,
          includeInBillingAnalysis: json['IncludeInBillingAnalysis'] as bool?,
          hiatusDiscountFrom: json['HiatusDiscountFrom'] as String?,
          roundTripRentals: json['RoundTripRentals'] as bool?,
          inGroup: json['InGroup'] as bool?,
          groupNumber: json['GroupNumber'] as int?,
          groupColor: json['GroupColor'] as int?,
          groupOrderBy: (json['GroupOrderBy'] as num?)?.toDouble(),
          coverLetterId: json['CoverLetterId'] as String?,
          coverLetter: json['CoverLetter'] as String?,
          termsConditionsId: json['TermsConditionsId'] as String?,
          termsConditions: json['TermsConditions'] as String?,
          outsideSalesRepresentativeId:
              json['OutsideSalesRepresentativeId'] as String?,
          outsideSalesRepresentative:
              json['OutsideSalesRepresentative'] as String?,
          marketTypeId: json['MarketTypeId'] as String?,
          marketType: json['MarketType'] as String?,
          marketSegmentId: json['MarketSegmentId'] as String?,
          marketSegment: json['MarketSegment'] as String?,
          marketSegmentJobId: json['MarketSegmentJobId'] as String?,
          marketSegmentJob: json['MarketSegmentJob'] as String?,
          outDeliveryId: json['OutDeliveryId'] as String?,
          outDeliveryDeliveryType: json['OutDeliveryDeliveryType'] as String?,
          outDeliveryRequiredDate: json['OutDeliveryRequiredDate'] as String?,
          outDeliveryRequiredTime: json['OutDeliveryRequiredTime'] as String?,
          outDeliveryTargetShipDate:
              json['OutDeliveryTargetShipDate'] as String?,
          outDeliveryTargetShipTime:
              json['OutDeliveryTargetShipTime'] as String?,
          outDeliveryDirection: json['OutDeliveryDirection'] as String?,
          outDeliveryAddressType: json['OutDeliveryAddressType'] as String?,
          outDeliveryFromLocation: json['OutDeliveryFromLocation'] as String?,
          outDeliveryFromContact: json['OutDeliveryFromContact'] as String?,
          outDeliveryFromContactPhone:
              json['OutDeliveryFromContactPhone'] as String?,
          outDeliveryFromAlternateContact:
              json['OutDeliveryFromAlternateContact'] as String?,
          outDeliveryFromAlternateContactPhone:
              json['OutDeliveryFromAlternateContactPhone'] as String?,
          outDeliveryFromAttention: json['OutDeliveryFromAttention'] as String?,
          outDeliveryFromAddress1: json['OutDeliveryFromAddress1'] as String?,
          outDeliveryFromAdd2ress: json['OutDeliveryFromAdd2ress'] as String?,
          outDeliveryFromCity: json['OutDeliveryFromCity'] as String?,
          outDeliveryFromState: json['OutDeliveryFromState'] as String?,
          outDeliveryFromZipCode: json['OutDeliveryFromZipCode'] as String?,
          outDeliveryFromCountry: json['OutDeliveryFromCountry'] as String?,
          outDeliveryFromCountryId: json['OutDeliveryFromCountryId'] as String?,
          outDeliveryFromCrossStreets:
              json['OutDeliveryFromCrossStreets'] as String?,
          outDeliveryToLocation: json['OutDeliveryToLocation'] as String?,
          outDeliveryToContact: json['OutDeliveryToContact'] as String?,
          outDeliveryToContactPhone:
              json['OutDeliveryToContactPhone'] as String?,
          outDeliveryToAlternateContact:
              json['OutDeliveryToAlternateContact'] as String?,
          outDeliveryToAlternateContactPhone:
              json['OutDeliveryToAlternateContactPhone'] as String?,
          outDeliveryToAttention: json['OutDeliveryToAttention'] as String?,
          outDeliveryToAddress1: json['OutDeliveryToAddress1'] as String?,
          outDeliveryToAddress2: json['OutDeliveryToAddress2'] as String?,
          outDeliveryToCity: json['OutDeliveryToCity'] as String?,
          outDeliveryToState: json['OutDeliveryToState'] as String?,
          outDeliveryToZipCode: json['OutDeliveryToZipCode'] as String?,
          outDeliveryToCountryId: json['OutDeliveryToCountryId'] as String?,
          outDeliveryToCountry: json['OutDeliveryToCountry'] as String?,
          outDeliveryToContactFax: json['OutDeliveryToContactFax'] as String?,
          outDeliveryToCrossStreets:
              json['OutDeliveryToCrossStreets'] as String?,
          outDeliveryDeliveryNotes: json['OutDeliveryDeliveryNotes'] as String?,
          outDeliveryCarrierId: json['OutDeliveryCarrierId'] as String?,
          outDeliveryCarrier: json['OutDeliveryCarrier'] as String?,
          outDeliveryCarrierAccount:
              json['OutDeliveryCarrierAccount'] as String?,
          outDeliveryShipViaId: json['OutDeliveryShipViaId'] as String?,
          outDeliveryShipVia: json['OutDeliveryShipVia'] as String?,
          outDeliveryInvoiceId: json['OutDeliveryInvoiceId'] as String?,
          outDeliveryVendorInvoiceId:
              json['OutDeliveryVendorInvoiceId'] as String?,
          outDeliveryEstimatedFreight:
              (json['OutDeliveryEstimatedFreight'] as num?)?.toDouble(),
          outDeliveryFreightInvoiceAmount:
              (json['OutDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
          outDeliveryChargeType: json['OutDeliveryChargeType'] as String?,
          outDeliveryFreightTrackingNumber:
              json['OutDeliveryFreightTrackingNumber'] as String?,
          outDeliveryFreightTrackingUrl:
              json['OutDeliveryFreightTrackingUrl'] as String?,
          outDeliveryPackageCode: json['OutDeliveryPackageCode'] as String?,
          outDeliveryBillPoFreightOnOrder:
              json['OutDeliveryBillPoFreightOnOrder'] as bool?,
          outDeliveryOnlineOrderNumber:
              json['OutDeliveryOnlineOrderNumber'] as String?,
          outDeliveryToVenue: json['OutDeliveryToVenue'] as String?,
          outDeliveryToVenueId: json['OutDeliveryToVenueId'] as String?,
          outDeliveryToWarehouse: json['OutDeliveryToWarehouse'] as String?,
          outDeliveryToWarehouseId: json['OutDeliveryToWarehouseId'] as String?,
          outDeliveryDateStamp: json['OutDeliveryDateStamp'] as String?,
          inDeliveryId: json['InDeliveryId'] as String?,
          inDeliveryDeliveryType: json['InDeliveryDeliveryType'] as String?,
          inDeliveryRequiredDate: json['InDeliveryRequiredDate'] as String?,
          inDeliveryRequiredTime: json['InDeliveryRequiredTime'] as String?,
          inDeliveryTargetShipDate: json['InDeliveryTargetShipDate'] as String?,
          inDeliveryTargetShipTime: json['InDeliveryTargetShipTime'] as String?,
          inDeliveryDirection: json['InDeliveryDirection'] as String?,
          inDeliveryAddressType: json['InDeliveryAddressType'] as String?,
          inDeliveryFromLocation: json['InDeliveryFromLocation'] as String?,
          inDeliveryFromContact: json['InDeliveryFromContact'] as String?,
          inDeliveryFromContactPhone:
              json['InDeliveryFromContactPhone'] as String?,
          inDeliveryFromAlternateContact:
              json['InDeliveryFromAlternateContact'] as String?,
          inDeliveryFromAlternateContactPhone:
              json['InDeliveryFromAlternateContactPhone'] as String?,
          inDeliveryFromAttention: json['InDeliveryFromAttention'] as String?,
          inDeliveryFromAddress1: json['InDeliveryFromAddress1'] as String?,
          inDeliveryFromAdd2ress: json['InDeliveryFromAdd2ress'] as String?,
          inDeliveryFromCity: json['InDeliveryFromCity'] as String?,
          inDeliveryFromState: json['InDeliveryFromState'] as String?,
          inDeliveryFromZipCode: json['InDeliveryFromZipCode'] as String?,
          inDeliveryFromCountry: json['InDeliveryFromCountry'] as String?,
          inDeliveryFromCountryId: json['InDeliveryFromCountryId'] as String?,
          inDeliveryFromCrossStreets:
              json['InDeliveryFromCrossStreets'] as String?,
          inDeliveryToLocation: json['InDeliveryToLocation'] as String?,
          inDeliveryToContact: json['InDeliveryToContact'] as String?,
          inDeliveryToContactPhone: json['InDeliveryToContactPhone'] as String?,
          inDeliveryToAlternateContact:
              json['InDeliveryToAlternateContact'] as String?,
          inDeliveryToAlternateContactPhone:
              json['InDeliveryToAlternateContactPhone'] as String?,
          inDeliveryToAttention: json['InDeliveryToAttention'] as String?,
          inDeliveryToAddress1: json['InDeliveryToAddress1'] as String?,
          inDeliveryToAddress2: json['InDeliveryToAddress2'] as String?,
          inDeliveryToCity: json['InDeliveryToCity'] as String?,
          inDeliveryToState: json['InDeliveryToState'] as String?,
          inDeliveryToZipCode: json['InDeliveryToZipCode'] as String?,
          inDeliveryToCountryId: json['InDeliveryToCountryId'] as String?,
          inDeliveryToCountry: json['InDeliveryToCountry'] as String?,
          inDeliveryToContactFax: json['InDeliveryToContactFax'] as String?,
          inDeliveryToCrossStreets: json['InDeliveryToCrossStreets'] as String?,
          inDeliveryDeliveryNotes: json['InDeliveryDeliveryNotes'] as String?,
          inDeliveryCarrierId: json['InDeliveryCarrierId'] as String?,
          inDeliveryCarrier: json['InDeliveryCarrier'] as String?,
          inDeliveryCarrierAccount: json['InDeliveryCarrierAccount'] as String?,
          inDeliveryShipViaId: json['InDeliveryShipViaId'] as String?,
          inDeliveryShipVia: json['InDeliveryShipVia'] as String?,
          inDeliveryInvoiceId: json['InDeliveryInvoiceId'] as String?,
          inDeliveryVendorInvoiceId:
              json['InDeliveryVendorInvoiceId'] as String?,
          inDeliveryEstimatedFreight:
              (json['InDeliveryEstimatedFreight'] as num?)?.toDouble(),
          inDeliveryFreightInvoiceAmount:
              (json['InDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
          inDeliveryChargeType: json['InDeliveryChargeType'] as String?,
          inDeliveryFreightTrackingNumber:
              json['InDeliveryFreightTrackingNumber'] as String?,
          inDeliveryFreightTrackingUrl:
              json['InDeliveryFreightTrackingUrl'] as String?,
          inDeliveryPackageCode: json['InDeliveryPackageCode'] as String?,
          inDeliveryBillPoFreightOnOrder:
              json['InDeliveryBillPoFreightOnOrder'] as bool?,
          inDeliveryOnlineOrderNumber:
              json['InDeliveryOnlineOrderNumber'] as String?,
          inDeliveryOnlineOrderStatus:
              json['InDeliveryOnlineOrderStatus'] as String?,
          inDeliveryToVenue: json['InDeliveryToVenue'] as String?,
          inDeliveryToVenueId: json['InDeliveryToVenueId'] as String?,
          inDeliveryToWarehouse: json['InDeliveryToWarehouse'] as String?,
          inDeliveryToWarehouseId: json['InDeliveryToWarehouseId'] as String?,
          inDeliveryDateStamp: json['InDeliveryDateStamp'] as String?,
          rentalDaysPerWeek: (json['RentalDaysPerWeek'] as num?)?.toDouble(),
          rentalDiscountPercent:
              (json['RentalDiscountPercent'] as num?)?.toDouble(),
          weeklyRentalTotal: (json['WeeklyRentalTotal'] as num?)?.toDouble(),
          monthlyRentalTotal: (json['MonthlyRentalTotal'] as num?)?.toDouble(),
          periodRentalTotal: (json['PeriodRentalTotal'] as num?)?.toDouble(),
          weeklyRentalTotalIncludesTax:
              json['WeeklyRentalTotalIncludesTax'] as bool?,
          monthlyRentalTotalIncludesTax:
              json['MonthlyRentalTotalIncludesTax'] as bool?,
          periodRentalTotalIncludesTax:
              json['PeriodRentalTotalIncludesTax'] as bool?,
          billLockedTotal: json['BillLockedTotal'] as bool?,
          salesDiscountPercent:
              (json['SalesDiscountPercent'] as num?)?.toDouble(),
          salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
          salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
          partsDiscountPercent:
              (json['PartsDiscountPercent'] as num?)?.toDouble(),
          partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
          partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
          spaceDaysPerWeek: (json['SpaceDaysPerWeek'] as num?)?.toDouble(),
          spaceDiscountPercent:
              (json['SpaceDiscountPercent'] as num?)?.toDouble(),
          spaceSplitPercent: (json['SpaceSplitPercent'] as num?)?.toDouble(),
          weeklySpaceTotal: (json['WeeklySpaceTotal'] as num?)?.toDouble(),
          monthlySpaceTotal: (json['MonthlySpaceTotal'] as num?)?.toDouble(),
          periodSpaceTotal: (json['PeriodSpaceTotal'] as num?)?.toDouble(),
          weeklySpaceTotalIncludesTax:
              json['WeeklySpaceTotalIncludesTax'] as bool?,
          monthlySpaceTotalIncludesTax:
              json['MonthlySpaceTotalIncludesTax'] as bool?,
          periodSpaceTotalIncludesTax:
              json['PeriodSpaceTotalIncludesTax'] as bool?,
          vehicleDaysPerWeek: (json['VehicleDaysPerWeek'] as num?)?.toDouble(),
          vehicleDiscountPercent:
              (json['VehicleDiscountPercent'] as num?)?.toDouble(),
          weeklyVehicleTotal: (json['WeeklyVehicleTotal'] as num?)?.toDouble(),
          monthlyVehicleTotal:
              (json['MonthlyVehicleTotal'] as num?)?.toDouble(),
          periodVehicleTotal: (json['PeriodVehicleTotal'] as num?)?.toDouble(),
          weeklyVehicleTotalIncludesTax:
              json['WeeklyVehicleTotalIncludesTax'] as bool?,
          monthlyVehicleTotalIncludesTax:
              json['MonthlyVehicleTotalIncludesTax'] as bool?,
          periodVehicleTotalIncludesTax:
              json['PeriodVehicleTotalIncludesTax'] as bool?,
          miscDiscountPercent:
              (json['MiscDiscountPercent'] as num?)?.toDouble(),
          weeklyMiscTotal: (json['WeeklyMiscTotal'] as num?)?.toDouble(),
          monthlyMiscTotal: (json['MonthlyMiscTotal'] as num?)?.toDouble(),
          periodMiscTotal: (json['PeriodMiscTotal'] as num?)?.toDouble(),
          weeklyMiscTotalIncludesTax:
              json['WeeklyMiscTotalIncludesTax'] as bool?,
          monthlyMiscTotalIncludesTax:
              json['MonthlyMiscTotalIncludesTax'] as bool?,
          periodMiscTotalIncludesTax:
              json['PeriodMiscTotalIncludesTax'] as bool?,
          laborDiscountPercent:
              (json['LaborDiscountPercent'] as num?)?.toDouble(),
          weeklyLaborTotal: (json['WeeklyLaborTotal'] as num?)?.toDouble(),
          monthlyLaborTotal: (json['MonthlyLaborTotal'] as num?)?.toDouble(),
          periodLaborTotal: (json['PeriodLaborTotal'] as num?)?.toDouble(),
          weeklyLaborTotalIncludesTax:
              json['WeeklyLaborTotalIncludesTax'] as bool?,
          monthlyLaborTotalIncludesTax:
              json['MonthlyLaborTotalIncludesTax'] as bool?,
          periodLaborTotalIncludesTax:
              json['PeriodLaborTotalIncludesTax'] as bool?,
          rentalSaleDiscountPercent:
              (json['RentalSaleDiscountPercent'] as num?)?.toDouble(),
          rentalSaleTotal: (json['RentalSaleTotal'] as num?)?.toDouble(),
          rentalSaleTotalIncludesTax:
              json['RentalSaleTotalIncludesTax'] as bool?,
          lossAndDamageDiscountPercent:
              (json['LossAndDamageDiscountPercent'] as num?)?.toDouble(),
          lossAndDamageTotal: (json['LossAndDamageTotal'] as num?)?.toDouble(),
          lossAndDamageTotalIncludesTax:
              json['LossAndDamageTotalIncludesTax'] as bool?,
          combinedDaysPerWeek:
              (json['CombinedDaysPerWeek'] as num?)?.toDouble(),
          combinedDiscountPercent:
              (json['CombinedDiscountPercent'] as num?)?.toDouble(),
          weeklyCombinedTotal:
              (json['WeeklyCombinedTotal'] as num?)?.toDouble(),
          monthlyCombinedTotal:
              (json['MonthlyCombinedTotal'] as num?)?.toDouble(),
          periodCombinedTotal:
              (json['PeriodCombinedTotal'] as num?)?.toDouble(),
          weeklyCombinedTotalIncludesTax:
              json['WeeklyCombinedTotalIncludesTax'] as bool?,
          monthlyCombinedTotalIncludesTax:
              json['MonthlyCombinedTotalIncludesTax'] as bool?,
          periodCombinedTotalIncludesTax:
              json['PeriodCombinedTotalIncludesTax'] as bool?,
          disableEditingRentalRate: json['DisableEditingRentalRate'] as bool?,
          disableEditingSalesRate: json['DisableEditingSalesRate'] as bool?,
          disableEditingMiscellaneousRate:
              json['DisableEditingMiscellaneousRate'] as bool?,
          disableEditingLaborRate: json['DisableEditingLaborRate'] as bool?,
          disableEditingRentalSaleRate:
              json['DisableEditingRentalSaleRate'] as bool?,
          disableEditingLossAndDamageRate:
              json['DisableEditingLossAndDamageRate'] as bool?,
          rentalExtendedTotal:
              (json['RentalExtendedTotal'] as num?)?.toDouble(),
          salesExtendedTotal: (json['SalesExtendedTotal'] as num?)?.toDouble(),
          laborExtendedTotal: (json['LaborExtendedTotal'] as num?)?.toDouble(),
          miscellaneousExtendedTotal:
              (json['MiscellaneousExtendedTotal'] as num?)?.toDouble(),
          rentalSaleExtendedTotal:
              (json['RentalSaleExtendedTotal'] as num?)?.toDouble(),
          lossAndDamageExtendedTotal:
              (json['LossAndDamageExtendedTotal'] as num?)?.toDouble(),
          hasNotes: json['HasNotes'] as bool?,
          hasDocuments: json['HasDocuments'] as bool?,
          hasEmailHistory: json['HasEmailHistory'] as bool?,
          hasContacts: json['HasContacts'] as bool?,
          hasSubPurchaseOrders: json['HasSubPurchaseOrders'] as bool?,
          hasPickLists: json['HasPickLists'] as bool?,
          hasContracts: json['HasContracts'] as bool?,
          hasSuspendedContracts: json['HasSuspendedContracts'] as bool?,
          hasMultiOrderContracts: json['HasMultiOrderContracts'] as bool?,
          hasInvoices: json['HasInvoices'] as bool?,
          hasBillingWorksheets: json['HasBillingWorksheets'] as bool?,
          hasMultiOrderInvoices: json['HasMultiOrderInvoices'] as bool?,
          totalReplacementCost:
              (json['TotalReplacementCost'] as num?)?.toDouble(),
          presentationLayerId: json['PresentationLayerId'] as String?,
          presentationLayer: json['PresentationLayer'] as String?,
          isManualSort: json['IsManualSort'] as bool?,
          quoteOrderTitle: json['QuoteOrderTitle'] as String?,
          unassignedSubs: json['UnassignedSubs'] as bool?,
          nonTaxable: json['NonTaxable'] as bool?,
          enableProjects: json['EnableProjects'] as bool?,
          projectId: json['ProjectId'] as String?,
          projectNumber: json['ProjectNumber'] as String?,
          project: json['Project'] as String?,
          projectDrawingsId: json['ProjectDrawingsId'] as String?,
          projectDrawings: json['ProjectDrawings'] as String?,
          projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
          projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
          projectDropShipId: json['ProjectDropShipId'] as String?,
          projectDropShip: json['ProjectDropShip'] as String?,
          projectAsBuildId: json['ProjectAsBuildId'] as String?,
          projectAsBuild: json['ProjectAsBuild'] as String?,
          projectCommissioningId: json['ProjectCommissioningId'] as String?,
          projectCommissioning: json['ProjectCommissioning'] as String?,
          projectDepositId: json['ProjectDepositId'] as String?,
          projectDeposit: json['ProjectDeposit'] as String?,
          inputByUserId: json['InputByUserId'] as String?,
          modifiedByUserId: json['ModifiedByUserId'] as String?,
          useEstimatedDatesForBilling:
              json['UseEstimatedDatesForBilling'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsOrderItemOrderItem.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesAgentOrderGetOrderResponseToJson(
    WebApiModulesAgentOrderGetOrderResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDate', instance.orderDate);
  writeNotNull('SourceQuoteId', instance.sourceQuoteId);
  writeNotNull('SourceQuoteNumber', instance.sourceQuoteNumber);
  writeNotNull('CreditCardPreAuthorizationStatus',
      instance.creditCardPreAuthorizationStatus);
  writeNotNull('Description', instance.description);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('CustomerNumber', instance.customerNumber);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('RateTypeDisplay', instance.rateTypeDisplay);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('ProjectManager', instance.projectManager);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('Miscellaneous', instance.miscellaneous);
  writeNotNull('Labor', instance.labor);
  writeNotNull('Facilities', instance.facilities);
  writeNotNull('Transportation', instance.transportation);
  writeNotNull('RentalSale', instance.rentalSale);
  writeNotNull('LossAndDamage', instance.lossAndDamage);
  writeNotNull('Repair', instance.repair);
  writeNotNull('HasRentalItem', instance.hasRentalItem);
  writeNotNull('HasSalesItem', instance.hasSalesItem);
  writeNotNull('HasMiscellaneousItem', instance.hasMiscellaneousItem);
  writeNotNull('HasLaborItem', instance.hasLaborItem);
  writeNotNull('HasFacilitiesItem', instance.hasFacilitiesItem);
  writeNotNull('HasLossAndDamageItem', instance.hasLossAndDamageItem);
  writeNotNull('HasRentalSaleItem', instance.hasRentalSaleItem);
  writeNotNull('HasRepair', instance.hasRepair);
  writeNotNull('ActivityDatesAndTimes',
      instance.activityDatesAndTimes?.map((e) => e.toJson()).toList());
  writeNotNull('PickDate', instance.pickDate);
  writeNotNull('PickTime', instance.pickTime);
  writeNotNull('EstimatedStartDate', instance.estimatedStartDate);
  writeNotNull('EstimatedStartTime', instance.estimatedStartTime);
  writeNotNull('EstimatedStopDate', instance.estimatedStopDate);
  writeNotNull('EstimatedStopTime', instance.estimatedStopTime);
  writeNotNull('PickUpDate', instance.pickUpDate);
  writeNotNull('PickUpTime', instance.pickUpTime);
  writeNotNull('PrepDate', instance.prepDate);
  writeNotNull('PrepTime', instance.prepTime);
  writeNotNull('LoadInDate', instance.loadInDate);
  writeNotNull('LoadInTime', instance.loadInTime);
  writeNotNull('StrikeDate', instance.strikeDate);
  writeNotNull('StrikeTime', instance.strikeTime);
  writeNotNull('TestDate', instance.testDate);
  writeNotNull('TestTime', instance.testTime);
  writeNotNull('OrderTypeId', instance.orderTypeId);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull(
      'OrderTypeCombineActivityTabs', instance.orderTypeCombineActivityTabs);
  writeNotNull('PendingPo', instance.pendingPo);
  writeNotNull('PoNumber', instance.poNumber);
  writeNotNull('PoAmount', instance.poAmount);
  writeNotNull('Location', instance.location);
  writeNotNull('OrderLocationId', instance.orderLocationId);
  writeNotNull('OrderLocation', instance.orderLocation);
  writeNotNull('ReferenceNumber', instance.referenceNumber);
  writeNotNull('Total', instance.total);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('PoApprovalStatusId', instance.poApprovalStatusId);
  writeNotNull('LockBillingDates', instance.lockBillingDates);
  writeNotNull('SpecifyBillingDatesByType', instance.specifyBillingDatesByType);
  writeNotNull('RentalBillingStartDate', instance.rentalBillingStartDate);
  writeNotNull('RentalBillingEndDate', instance.rentalBillingEndDate);
  writeNotNull('LaborBillingStartDate', instance.laborBillingStartDate);
  writeNotNull('LaborBillingEndDate', instance.laborBillingEndDate);
  writeNotNull(
      'MiscellaneousBillingStartDate', instance.miscellaneousBillingStartDate);
  writeNotNull(
      'MiscellaneousBillingEndDate', instance.miscellaneousBillingEndDate);
  writeNotNull(
      'FacilitiesBillingStartDate', instance.facilitiesBillingStartDate);
  writeNotNull('FacilitiesBillingEndDate', instance.facilitiesBillingEndDate);
  writeNotNull('VehicleBillingStartDate', instance.vehicleBillingStartDate);
  writeNotNull('VehicleBillingEndDate', instance.vehicleBillingEndDate);
  writeNotNull('DelayBillingSearchUntil', instance.delayBillingSearchUntil);
  writeNotNull(
      'IncludePrepFeesInRentalRate', instance.includePrepFeesInRentalRate);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingEndDate', instance.billingEndDate);
  writeNotNull('BillingWeeks', instance.billingWeeks);
  writeNotNull('BillingMonths', instance.billingMonths);
  writeNotNull('DetermineQuantitiesToBillBasedOn',
      instance.determineQuantitiesToBillBasedOn);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('BillingCycle', instance.billingCycle);
  writeNotNull('BillingCycleType', instance.billingCycleType);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull(
      'UpdateAllRatesToNewCurrency', instance.updateAllRatesToNewCurrency);
  writeNotNull('ConfirmUpdateAllRatesToNewCurrency',
      instance.confirmUpdateAllRatesToNewCurrency);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('Tax1Name', instance.tax1Name);
  writeNotNull('Tax2Name', instance.tax2Name);
  writeNotNull('TaxId', instance.taxId);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('NoCharge', instance.noCharge);
  writeNotNull('NoChargeReason', instance.noChargeReason);
  writeNotNull('PrintIssuedToAddressFrom', instance.printIssuedToAddressFrom);
  writeNotNull('IssuedToName', instance.issuedToName);
  writeNotNull('IssuedToAttention', instance.issuedToAttention);
  writeNotNull('IssuedToAttention2', instance.issuedToAttention2);
  writeNotNull('IssuedToAddress1', instance.issuedToAddress1);
  writeNotNull('IssuedToAddress2', instance.issuedToAddress2);
  writeNotNull('IssuedToCity', instance.issuedToCity);
  writeNotNull('IssuedToState', instance.issuedToState);
  writeNotNull('IssuedToZipCode', instance.issuedToZipCode);
  writeNotNull('IssuedToCountryId', instance.issuedToCountryId);
  writeNotNull('IssuedToCountry', instance.issuedToCountry);
  writeNotNull('BillToAddressDifferentFromIssuedToAddress',
      instance.billToAddressDifferentFromIssuedToAddress);
  writeNotNull('BillToAddressId', instance.billToAddressId);
  writeNotNull('BillToName', instance.billToName);
  writeNotNull('BillToAttention', instance.billToAttention);
  writeNotNull('BillToAttention2', instance.billToAttention2);
  writeNotNull('BillToAddress1', instance.billToAddress1);
  writeNotNull('BillToAddress2', instance.billToAddress2);
  writeNotNull('BillToCity', instance.billToCity);
  writeNotNull('BillToState', instance.billToState);
  writeNotNull('BillToZipCode', instance.billToZipCode);
  writeNotNull('BillToCountryId', instance.billToCountryId);
  writeNotNull('BillToCountry', instance.billToCountry);
  writeNotNull('DiscountReasonId', instance.discountReasonId);
  writeNotNull('DiscountReason', instance.discountReason);
  writeNotNull(
      'RequireContactConfirmation', instance.requireContactConfirmation);
  writeNotNull('IncludeInBillingAnalysis', instance.includeInBillingAnalysis);
  writeNotNull('HiatusDiscountFrom', instance.hiatusDiscountFrom);
  writeNotNull('RoundTripRentals', instance.roundTripRentals);
  writeNotNull('InGroup', instance.inGroup);
  writeNotNull('GroupNumber', instance.groupNumber);
  writeNotNull('GroupColor', instance.groupColor);
  writeNotNull('GroupOrderBy', instance.groupOrderBy);
  writeNotNull('CoverLetterId', instance.coverLetterId);
  writeNotNull('CoverLetter', instance.coverLetter);
  writeNotNull('TermsConditionsId', instance.termsConditionsId);
  writeNotNull('TermsConditions', instance.termsConditions);
  writeNotNull(
      'OutsideSalesRepresentativeId', instance.outsideSalesRepresentativeId);
  writeNotNull(
      'OutsideSalesRepresentative', instance.outsideSalesRepresentative);
  writeNotNull('MarketTypeId', instance.marketTypeId);
  writeNotNull('MarketType', instance.marketType);
  writeNotNull('MarketSegmentId', instance.marketSegmentId);
  writeNotNull('MarketSegment', instance.marketSegment);
  writeNotNull('MarketSegmentJobId', instance.marketSegmentJobId);
  writeNotNull('MarketSegmentJob', instance.marketSegmentJob);
  writeNotNull('OutDeliveryId', instance.outDeliveryId);
  writeNotNull('OutDeliveryDeliveryType', instance.outDeliveryDeliveryType);
  writeNotNull('OutDeliveryRequiredDate', instance.outDeliveryRequiredDate);
  writeNotNull('OutDeliveryRequiredTime', instance.outDeliveryRequiredTime);
  writeNotNull('OutDeliveryTargetShipDate', instance.outDeliveryTargetShipDate);
  writeNotNull('OutDeliveryTargetShipTime', instance.outDeliveryTargetShipTime);
  writeNotNull('OutDeliveryDirection', instance.outDeliveryDirection);
  writeNotNull('OutDeliveryAddressType', instance.outDeliveryAddressType);
  writeNotNull('OutDeliveryFromLocation', instance.outDeliveryFromLocation);
  writeNotNull('OutDeliveryFromContact', instance.outDeliveryFromContact);
  writeNotNull(
      'OutDeliveryFromContactPhone', instance.outDeliveryFromContactPhone);
  writeNotNull('OutDeliveryFromAlternateContact',
      instance.outDeliveryFromAlternateContact);
  writeNotNull('OutDeliveryFromAlternateContactPhone',
      instance.outDeliveryFromAlternateContactPhone);
  writeNotNull('OutDeliveryFromAttention', instance.outDeliveryFromAttention);
  writeNotNull('OutDeliveryFromAddress1', instance.outDeliveryFromAddress1);
  writeNotNull('OutDeliveryFromAdd2ress', instance.outDeliveryFromAdd2ress);
  writeNotNull('OutDeliveryFromCity', instance.outDeliveryFromCity);
  writeNotNull('OutDeliveryFromState', instance.outDeliveryFromState);
  writeNotNull('OutDeliveryFromZipCode', instance.outDeliveryFromZipCode);
  writeNotNull('OutDeliveryFromCountry', instance.outDeliveryFromCountry);
  writeNotNull('OutDeliveryFromCountryId', instance.outDeliveryFromCountryId);
  writeNotNull(
      'OutDeliveryFromCrossStreets', instance.outDeliveryFromCrossStreets);
  writeNotNull('OutDeliveryToLocation', instance.outDeliveryToLocation);
  writeNotNull('OutDeliveryToContact', instance.outDeliveryToContact);
  writeNotNull('OutDeliveryToContactPhone', instance.outDeliveryToContactPhone);
  writeNotNull(
      'OutDeliveryToAlternateContact', instance.outDeliveryToAlternateContact);
  writeNotNull('OutDeliveryToAlternateContactPhone',
      instance.outDeliveryToAlternateContactPhone);
  writeNotNull('OutDeliveryToAttention', instance.outDeliveryToAttention);
  writeNotNull('OutDeliveryToAddress1', instance.outDeliveryToAddress1);
  writeNotNull('OutDeliveryToAddress2', instance.outDeliveryToAddress2);
  writeNotNull('OutDeliveryToCity', instance.outDeliveryToCity);
  writeNotNull('OutDeliveryToState', instance.outDeliveryToState);
  writeNotNull('OutDeliveryToZipCode', instance.outDeliveryToZipCode);
  writeNotNull('OutDeliveryToCountryId', instance.outDeliveryToCountryId);
  writeNotNull('OutDeliveryToCountry', instance.outDeliveryToCountry);
  writeNotNull('OutDeliveryToContactFax', instance.outDeliveryToContactFax);
  writeNotNull('OutDeliveryToCrossStreets', instance.outDeliveryToCrossStreets);
  writeNotNull('OutDeliveryDeliveryNotes', instance.outDeliveryDeliveryNotes);
  writeNotNull('OutDeliveryCarrierId', instance.outDeliveryCarrierId);
  writeNotNull('OutDeliveryCarrier', instance.outDeliveryCarrier);
  writeNotNull('OutDeliveryCarrierAccount', instance.outDeliveryCarrierAccount);
  writeNotNull('OutDeliveryShipViaId', instance.outDeliveryShipViaId);
  writeNotNull('OutDeliveryShipVia', instance.outDeliveryShipVia);
  writeNotNull('OutDeliveryInvoiceId', instance.outDeliveryInvoiceId);
  writeNotNull(
      'OutDeliveryVendorInvoiceId', instance.outDeliveryVendorInvoiceId);
  writeNotNull(
      'OutDeliveryEstimatedFreight', instance.outDeliveryEstimatedFreight);
  writeNotNull('OutDeliveryFreightInvoiceAmount',
      instance.outDeliveryFreightInvoiceAmount);
  writeNotNull('OutDeliveryChargeType', instance.outDeliveryChargeType);
  writeNotNull('OutDeliveryFreightTrackingNumber',
      instance.outDeliveryFreightTrackingNumber);
  writeNotNull(
      'OutDeliveryFreightTrackingUrl', instance.outDeliveryFreightTrackingUrl);
  writeNotNull('OutDeliveryPackageCode', instance.outDeliveryPackageCode);
  writeNotNull('OutDeliveryBillPoFreightOnOrder',
      instance.outDeliveryBillPoFreightOnOrder);
  writeNotNull(
      'OutDeliveryOnlineOrderNumber', instance.outDeliveryOnlineOrderNumber);
  writeNotNull('OutDeliveryToVenue', instance.outDeliveryToVenue);
  writeNotNull('OutDeliveryToVenueId', instance.outDeliveryToVenueId);
  writeNotNull('OutDeliveryToWarehouse', instance.outDeliveryToWarehouse);
  writeNotNull('OutDeliveryToWarehouseId', instance.outDeliveryToWarehouseId);
  writeNotNull('OutDeliveryDateStamp', instance.outDeliveryDateStamp);
  writeNotNull('InDeliveryId', instance.inDeliveryId);
  writeNotNull('InDeliveryDeliveryType', instance.inDeliveryDeliveryType);
  writeNotNull('InDeliveryRequiredDate', instance.inDeliveryRequiredDate);
  writeNotNull('InDeliveryRequiredTime', instance.inDeliveryRequiredTime);
  writeNotNull('InDeliveryTargetShipDate', instance.inDeliveryTargetShipDate);
  writeNotNull('InDeliveryTargetShipTime', instance.inDeliveryTargetShipTime);
  writeNotNull('InDeliveryDirection', instance.inDeliveryDirection);
  writeNotNull('InDeliveryAddressType', instance.inDeliveryAddressType);
  writeNotNull('InDeliveryFromLocation', instance.inDeliveryFromLocation);
  writeNotNull('InDeliveryFromContact', instance.inDeliveryFromContact);
  writeNotNull(
      'InDeliveryFromContactPhone', instance.inDeliveryFromContactPhone);
  writeNotNull('InDeliveryFromAlternateContact',
      instance.inDeliveryFromAlternateContact);
  writeNotNull('InDeliveryFromAlternateContactPhone',
      instance.inDeliveryFromAlternateContactPhone);
  writeNotNull('InDeliveryFromAttention', instance.inDeliveryFromAttention);
  writeNotNull('InDeliveryFromAddress1', instance.inDeliveryFromAddress1);
  writeNotNull('InDeliveryFromAdd2ress', instance.inDeliveryFromAdd2ress);
  writeNotNull('InDeliveryFromCity', instance.inDeliveryFromCity);
  writeNotNull('InDeliveryFromState', instance.inDeliveryFromState);
  writeNotNull('InDeliveryFromZipCode', instance.inDeliveryFromZipCode);
  writeNotNull('InDeliveryFromCountry', instance.inDeliveryFromCountry);
  writeNotNull('InDeliveryFromCountryId', instance.inDeliveryFromCountryId);
  writeNotNull(
      'InDeliveryFromCrossStreets', instance.inDeliveryFromCrossStreets);
  writeNotNull('InDeliveryToLocation', instance.inDeliveryToLocation);
  writeNotNull('InDeliveryToContact', instance.inDeliveryToContact);
  writeNotNull('InDeliveryToContactPhone', instance.inDeliveryToContactPhone);
  writeNotNull(
      'InDeliveryToAlternateContact', instance.inDeliveryToAlternateContact);
  writeNotNull('InDeliveryToAlternateContactPhone',
      instance.inDeliveryToAlternateContactPhone);
  writeNotNull('InDeliveryToAttention', instance.inDeliveryToAttention);
  writeNotNull('InDeliveryToAddress1', instance.inDeliveryToAddress1);
  writeNotNull('InDeliveryToAddress2', instance.inDeliveryToAddress2);
  writeNotNull('InDeliveryToCity', instance.inDeliveryToCity);
  writeNotNull('InDeliveryToState', instance.inDeliveryToState);
  writeNotNull('InDeliveryToZipCode', instance.inDeliveryToZipCode);
  writeNotNull('InDeliveryToCountryId', instance.inDeliveryToCountryId);
  writeNotNull('InDeliveryToCountry', instance.inDeliveryToCountry);
  writeNotNull('InDeliveryToContactFax', instance.inDeliveryToContactFax);
  writeNotNull('InDeliveryToCrossStreets', instance.inDeliveryToCrossStreets);
  writeNotNull('InDeliveryDeliveryNotes', instance.inDeliveryDeliveryNotes);
  writeNotNull('InDeliveryCarrierId', instance.inDeliveryCarrierId);
  writeNotNull('InDeliveryCarrier', instance.inDeliveryCarrier);
  writeNotNull('InDeliveryCarrierAccount', instance.inDeliveryCarrierAccount);
  writeNotNull('InDeliveryShipViaId', instance.inDeliveryShipViaId);
  writeNotNull('InDeliveryShipVia', instance.inDeliveryShipVia);
  writeNotNull('InDeliveryInvoiceId', instance.inDeliveryInvoiceId);
  writeNotNull('InDeliveryVendorInvoiceId', instance.inDeliveryVendorInvoiceId);
  writeNotNull(
      'InDeliveryEstimatedFreight', instance.inDeliveryEstimatedFreight);
  writeNotNull('InDeliveryFreightInvoiceAmount',
      instance.inDeliveryFreightInvoiceAmount);
  writeNotNull('InDeliveryChargeType', instance.inDeliveryChargeType);
  writeNotNull('InDeliveryFreightTrackingNumber',
      instance.inDeliveryFreightTrackingNumber);
  writeNotNull(
      'InDeliveryFreightTrackingUrl', instance.inDeliveryFreightTrackingUrl);
  writeNotNull('InDeliveryPackageCode', instance.inDeliveryPackageCode);
  writeNotNull('InDeliveryBillPoFreightOnOrder',
      instance.inDeliveryBillPoFreightOnOrder);
  writeNotNull(
      'InDeliveryOnlineOrderNumber', instance.inDeliveryOnlineOrderNumber);
  writeNotNull(
      'InDeliveryOnlineOrderStatus', instance.inDeliveryOnlineOrderStatus);
  writeNotNull('InDeliveryToVenue', instance.inDeliveryToVenue);
  writeNotNull('InDeliveryToVenueId', instance.inDeliveryToVenueId);
  writeNotNull('InDeliveryToWarehouse', instance.inDeliveryToWarehouse);
  writeNotNull('InDeliveryToWarehouseId', instance.inDeliveryToWarehouseId);
  writeNotNull('InDeliveryDateStamp', instance.inDeliveryDateStamp);
  writeNotNull('RentalDaysPerWeek', instance.rentalDaysPerWeek);
  writeNotNull('RentalDiscountPercent', instance.rentalDiscountPercent);
  writeNotNull('WeeklyRentalTotal', instance.weeklyRentalTotal);
  writeNotNull('MonthlyRentalTotal', instance.monthlyRentalTotal);
  writeNotNull('PeriodRentalTotal', instance.periodRentalTotal);
  writeNotNull(
      'WeeklyRentalTotalIncludesTax', instance.weeklyRentalTotalIncludesTax);
  writeNotNull(
      'MonthlyRentalTotalIncludesTax', instance.monthlyRentalTotalIncludesTax);
  writeNotNull(
      'PeriodRentalTotalIncludesTax', instance.periodRentalTotalIncludesTax);
  writeNotNull('BillLockedTotal', instance.billLockedTotal);
  writeNotNull('SalesDiscountPercent', instance.salesDiscountPercent);
  writeNotNull('SalesTotal', instance.salesTotal);
  writeNotNull('SalesTotalIncludesTax', instance.salesTotalIncludesTax);
  writeNotNull('PartsDiscountPercent', instance.partsDiscountPercent);
  writeNotNull('PartsTotal', instance.partsTotal);
  writeNotNull('PartsTotalIncludesTax', instance.partsTotalIncludesTax);
  writeNotNull('SpaceDaysPerWeek', instance.spaceDaysPerWeek);
  writeNotNull('SpaceDiscountPercent', instance.spaceDiscountPercent);
  writeNotNull('SpaceSplitPercent', instance.spaceSplitPercent);
  writeNotNull('WeeklySpaceTotal', instance.weeklySpaceTotal);
  writeNotNull('MonthlySpaceTotal', instance.monthlySpaceTotal);
  writeNotNull('PeriodSpaceTotal', instance.periodSpaceTotal);
  writeNotNull(
      'WeeklySpaceTotalIncludesTax', instance.weeklySpaceTotalIncludesTax);
  writeNotNull(
      'MonthlySpaceTotalIncludesTax', instance.monthlySpaceTotalIncludesTax);
  writeNotNull(
      'PeriodSpaceTotalIncludesTax', instance.periodSpaceTotalIncludesTax);
  writeNotNull('VehicleDaysPerWeek', instance.vehicleDaysPerWeek);
  writeNotNull('VehicleDiscountPercent', instance.vehicleDiscountPercent);
  writeNotNull('WeeklyVehicleTotal', instance.weeklyVehicleTotal);
  writeNotNull('MonthlyVehicleTotal', instance.monthlyVehicleTotal);
  writeNotNull('PeriodVehicleTotal', instance.periodVehicleTotal);
  writeNotNull(
      'WeeklyVehicleTotalIncludesTax', instance.weeklyVehicleTotalIncludesTax);
  writeNotNull('MonthlyVehicleTotalIncludesTax',
      instance.monthlyVehicleTotalIncludesTax);
  writeNotNull(
      'PeriodVehicleTotalIncludesTax', instance.periodVehicleTotalIncludesTax);
  writeNotNull('MiscDiscountPercent', instance.miscDiscountPercent);
  writeNotNull('WeeklyMiscTotal', instance.weeklyMiscTotal);
  writeNotNull('MonthlyMiscTotal', instance.monthlyMiscTotal);
  writeNotNull('PeriodMiscTotal', instance.periodMiscTotal);
  writeNotNull(
      'WeeklyMiscTotalIncludesTax', instance.weeklyMiscTotalIncludesTax);
  writeNotNull(
      'MonthlyMiscTotalIncludesTax', instance.monthlyMiscTotalIncludesTax);
  writeNotNull(
      'PeriodMiscTotalIncludesTax', instance.periodMiscTotalIncludesTax);
  writeNotNull('LaborDiscountPercent', instance.laborDiscountPercent);
  writeNotNull('WeeklyLaborTotal', instance.weeklyLaborTotal);
  writeNotNull('MonthlyLaborTotal', instance.monthlyLaborTotal);
  writeNotNull('PeriodLaborTotal', instance.periodLaborTotal);
  writeNotNull(
      'WeeklyLaborTotalIncludesTax', instance.weeklyLaborTotalIncludesTax);
  writeNotNull(
      'MonthlyLaborTotalIncludesTax', instance.monthlyLaborTotalIncludesTax);
  writeNotNull(
      'PeriodLaborTotalIncludesTax', instance.periodLaborTotalIncludesTax);
  writeNotNull('RentalSaleDiscountPercent', instance.rentalSaleDiscountPercent);
  writeNotNull('RentalSaleTotal', instance.rentalSaleTotal);
  writeNotNull(
      'RentalSaleTotalIncludesTax', instance.rentalSaleTotalIncludesTax);
  writeNotNull(
      'LossAndDamageDiscountPercent', instance.lossAndDamageDiscountPercent);
  writeNotNull('LossAndDamageTotal', instance.lossAndDamageTotal);
  writeNotNull(
      'LossAndDamageTotalIncludesTax', instance.lossAndDamageTotalIncludesTax);
  writeNotNull('CombinedDaysPerWeek', instance.combinedDaysPerWeek);
  writeNotNull('CombinedDiscountPercent', instance.combinedDiscountPercent);
  writeNotNull('WeeklyCombinedTotal', instance.weeklyCombinedTotal);
  writeNotNull('MonthlyCombinedTotal', instance.monthlyCombinedTotal);
  writeNotNull('PeriodCombinedTotal', instance.periodCombinedTotal);
  writeNotNull('WeeklyCombinedTotalIncludesTax',
      instance.weeklyCombinedTotalIncludesTax);
  writeNotNull('MonthlyCombinedTotalIncludesTax',
      instance.monthlyCombinedTotalIncludesTax);
  writeNotNull('PeriodCombinedTotalIncludesTax',
      instance.periodCombinedTotalIncludesTax);
  writeNotNull('DisableEditingRentalRate', instance.disableEditingRentalRate);
  writeNotNull('DisableEditingSalesRate', instance.disableEditingSalesRate);
  writeNotNull('DisableEditingMiscellaneousRate',
      instance.disableEditingMiscellaneousRate);
  writeNotNull('DisableEditingLaborRate', instance.disableEditingLaborRate);
  writeNotNull(
      'DisableEditingRentalSaleRate', instance.disableEditingRentalSaleRate);
  writeNotNull('DisableEditingLossAndDamageRate',
      instance.disableEditingLossAndDamageRate);
  writeNotNull('RentalExtendedTotal', instance.rentalExtendedTotal);
  writeNotNull('SalesExtendedTotal', instance.salesExtendedTotal);
  writeNotNull('LaborExtendedTotal', instance.laborExtendedTotal);
  writeNotNull(
      'MiscellaneousExtendedTotal', instance.miscellaneousExtendedTotal);
  writeNotNull('RentalSaleExtendedTotal', instance.rentalSaleExtendedTotal);
  writeNotNull(
      'LossAndDamageExtendedTotal', instance.lossAndDamageExtendedTotal);
  writeNotNull('HasNotes', instance.hasNotes);
  writeNotNull('HasDocuments', instance.hasDocuments);
  writeNotNull('HasEmailHistory', instance.hasEmailHistory);
  writeNotNull('HasContacts', instance.hasContacts);
  writeNotNull('HasSubPurchaseOrders', instance.hasSubPurchaseOrders);
  writeNotNull('HasPickLists', instance.hasPickLists);
  writeNotNull('HasContracts', instance.hasContracts);
  writeNotNull('HasSuspendedContracts', instance.hasSuspendedContracts);
  writeNotNull('HasMultiOrderContracts', instance.hasMultiOrderContracts);
  writeNotNull('HasInvoices', instance.hasInvoices);
  writeNotNull('HasBillingWorksheets', instance.hasBillingWorksheets);
  writeNotNull('HasMultiOrderInvoices', instance.hasMultiOrderInvoices);
  writeNotNull('TotalReplacementCost', instance.totalReplacementCost);
  writeNotNull('PresentationLayerId', instance.presentationLayerId);
  writeNotNull('PresentationLayer', instance.presentationLayer);
  writeNotNull('IsManualSort', instance.isManualSort);
  writeNotNull('QuoteOrderTitle', instance.quoteOrderTitle);
  writeNotNull('UnassignedSubs', instance.unassignedSubs);
  writeNotNull('NonTaxable', instance.nonTaxable);
  writeNotNull('EnableProjects', instance.enableProjects);
  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('ProjectNumber', instance.projectNumber);
  writeNotNull('Project', instance.project);
  writeNotNull('ProjectDrawingsId', instance.projectDrawingsId);
  writeNotNull('ProjectDrawings', instance.projectDrawings);
  writeNotNull('ProjectItemsOrderedId', instance.projectItemsOrderedId);
  writeNotNull('ProjectItemsOrdered', instance.projectItemsOrdered);
  writeNotNull('ProjectDropShipId', instance.projectDropShipId);
  writeNotNull('ProjectDropShip', instance.projectDropShip);
  writeNotNull('ProjectAsBuildId', instance.projectAsBuildId);
  writeNotNull('ProjectAsBuild', instance.projectAsBuild);
  writeNotNull('ProjectCommissioningId', instance.projectCommissioningId);
  writeNotNull('ProjectCommissioning', instance.projectCommissioning);
  writeNotNull('ProjectDepositId', instance.projectDepositId);
  writeNotNull('ProjectDeposit', instance.projectDeposit);
  writeNotNull('InputByUserId', instance.inputByUserId);
  writeNotNull('ModifiedByUserId', instance.modifiedByUserId);
  writeNotNull(
      'UseEstimatedDatesForBilling', instance.useEstimatedDatesForBilling);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentOrderModifyPoWorksheetSessionRequest
    _$WebApiModulesAgentOrderModifyPoWorksheetSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderModifyPoWorksheetSessionRequest(
          orderId: json['OrderId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          recType: json['RecType'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderModifyPoWorksheetSessionRequestToJson(
        WebApiModulesAgentOrderModifyPoWorksheetSessionRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('RecType', instance.recType);
  return val;
}

WebApiModulesAgentOrderModifyPoWorksheetSessionResponse
    _$WebApiModulesAgentOrderModifyPoWorksheetSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderModifyPoWorksheetSessionResponse(
          sessionId: json['SessionId'] as String?,
          vendorId: json['VendorId'] as String?,
          vendor: json['Vendor'] as String?,
          contactId: json['ContactId'] as String?,
          contact: json['Contact'] as String?,
          rateType: json['RateType'] as String?,
          billingCycleId: json['BillingCycleId'] as String?,
          billingCycle: json['BillingCycle'] as String?,
          requiredDate: json['RequiredDate'] == null
              ? null
              : DateTime.parse(json['RequiredDate'] as String),
          requiredTime: json['RequiredTime'] as String?,
          fromDate: json['FromDate'] == null
              ? null
              : DateTime.parse(json['FromDate'] as String),
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
          deliveryId: json['DeliveryId'] as String?,
          adjustContractDates: json['AdjustContractDates'] as bool?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderModifyPoWorksheetSessionResponseToJson(
        WebApiModulesAgentOrderModifyPoWorksheetSessionResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('ContactId', instance.contactId);
  writeNotNull('Contact', instance.contact);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('BillingCycle', instance.billingCycle);
  writeNotNull('RequiredDate', instance.requiredDate?.toIso8601String());
  writeNotNull('RequiredTime', instance.requiredTime);
  writeNotNull('FromDate', instance.fromDate?.toIso8601String());
  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  writeNotNull('DeliveryId', instance.deliveryId);
  writeNotNull('AdjustContractDates', instance.adjustContractDates);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentOrderOrder _$WebApiModulesAgentOrderOrderFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesAgentOrderOrder(
      orderId: json['OrderId'] as String?,
      orderNumber: json['OrderNumber'] as String?,
      orderDate: json['OrderDate'] as String?,
      sourceQuoteId: json['SourceQuoteId'] as String?,
      sourceQuoteNumber: json['SourceQuoteNumber'] as String?,
      creditCardPreAuthorizationStatus:
          json['CreditCardPreAuthorizationStatus'] as String?,
      description: json['Description'] as String?,
      officeLocationId: json['OfficeLocationId'] as String?,
      officeLocation: json['OfficeLocation'] as String?,
      warehouseId: json['WarehouseId'] as String?,
      warehouse: json['Warehouse'] as String?,
      warehouseCode: json['WarehouseCode'] as String?,
      departmentId: json['DepartmentId'] as String?,
      department: json['Department'] as String?,
      customerId: json['CustomerId'] as String?,
      customer: json['Customer'] as String?,
      customerNumber: json['CustomerNumber'] as String?,
      dealId: json['DealId'] as String?,
      deal: json['Deal'] as String?,
      dealNumber: json['DealNumber'] as String?,
      rateType: json['RateType'] as String?,
      rateTypeDisplay: json['RateTypeDisplay'] as String?,
      agentId: json['AgentId'] as String?,
      agent: json['Agent'] as String?,
      projectManagerId: json['ProjectManagerId'] as String?,
      projectManager: json['ProjectManager'] as String?,
      rental: json['Rental'] as bool?,
      sales: json['Sales'] as bool?,
      miscellaneous: json['Miscellaneous'] as bool?,
      labor: json['Labor'] as bool?,
      facilities: json['Facilities'] as bool?,
      transportation: json['Transportation'] as bool?,
      rentalSale: json['RentalSale'] as bool?,
      lossAndDamage: json['LossAndDamage'] as bool?,
      repair: json['Repair'] as bool?,
      hasRentalItem: json['HasRentalItem'] as bool?,
      hasSalesItem: json['HasSalesItem'] as bool?,
      hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
      hasLaborItem: json['HasLaborItem'] as bool?,
      hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
      hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
      hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
      hasRepair: json['HasRepair'] as bool?,
      activityDatesAndTimes: (json['ActivityDatesAndTimes'] as List<dynamic>?)
              ?.map((e) =>
                  WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                      e as Map<String, dynamic>))
              .toList() ??
          [],
      pickDate: json['PickDate'] as String?,
      pickTime: json['PickTime'] as String?,
      estimatedStartDate: json['EstimatedStartDate'] as String?,
      estimatedStartTime: json['EstimatedStartTime'] as String?,
      estimatedStopDate: json['EstimatedStopDate'] as String?,
      estimatedStopTime: json['EstimatedStopTime'] as String?,
      pickUpDate: json['PickUpDate'] as String?,
      pickUpTime: json['PickUpTime'] as String?,
      prepDate: json['PrepDate'] as String?,
      prepTime: json['PrepTime'] as String?,
      loadInDate: json['LoadInDate'] as String?,
      loadInTime: json['LoadInTime'] as String?,
      strikeDate: json['StrikeDate'] as String?,
      strikeTime: json['StrikeTime'] as String?,
      testDate: json['TestDate'] as String?,
      testTime: json['TestTime'] as String?,
      orderTypeId: json['OrderTypeId'] as String?,
      orderType: json['OrderType'] as String?,
      orderTypeCombineActivityTabs:
          json['OrderTypeCombineActivityTabs'] as bool?,
      pendingPo: json['PendingPo'] as bool?,
      poNumber: json['PoNumber'] as String?,
      poAmount: (json['PoAmount'] as num?)?.toDouble(),
      location: json['Location'] as String?,
      orderLocationId: json['OrderLocationId'] as String?,
      orderLocation: json['OrderLocation'] as String?,
      referenceNumber: json['ReferenceNumber'] as String?,
      total: (json['Total'] as num?)?.toDouble(),
      status: json['Status'] as String?,
      statusDate: json['StatusDate'] as String?,
      poApprovalStatusId: json['PoApprovalStatusId'] as String?,
      lockBillingDates: json['LockBillingDates'] as bool?,
      specifyBillingDatesByType: json['SpecifyBillingDatesByType'] as bool?,
      rentalBillingStartDate: json['RentalBillingStartDate'] as String?,
      rentalBillingEndDate: json['RentalBillingEndDate'] as String?,
      laborBillingStartDate: json['LaborBillingStartDate'] as String?,
      laborBillingEndDate: json['LaborBillingEndDate'] as String?,
      miscellaneousBillingStartDate:
          json['MiscellaneousBillingStartDate'] as String?,
      miscellaneousBillingEndDate:
          json['MiscellaneousBillingEndDate'] as String?,
      facilitiesBillingStartDate: json['FacilitiesBillingStartDate'] as String?,
      facilitiesBillingEndDate: json['FacilitiesBillingEndDate'] as String?,
      vehicleBillingStartDate: json['VehicleBillingStartDate'] as String?,
      vehicleBillingEndDate: json['VehicleBillingEndDate'] as String?,
      delayBillingSearchUntil: json['DelayBillingSearchUntil'] as String?,
      includePrepFeesInRentalRate: json['IncludePrepFeesInRentalRate'] as bool?,
      billingStartDate: json['BillingStartDate'] as String?,
      billingEndDate: json['BillingEndDate'] as String?,
      billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
      billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
      determineQuantitiesToBillBasedOn:
          json['DetermineQuantitiesToBillBasedOn'] as String?,
      billingCycleId: json['BillingCycleId'] as String?,
      billingCycle: json['BillingCycle'] as String?,
      billingCycleType: json['BillingCycleType'] as String?,
      paymentTermsId: json['PaymentTermsId'] as String?,
      paymentTerms: json['PaymentTerms'] as String?,
      paymentTypeId: json['PaymentTypeId'] as String?,
      paymentType: json['PaymentType'] as String?,
      currencyId: json['CurrencyId'] as String?,
      updateAllRatesToNewCurrency: json['UpdateAllRatesToNewCurrency'] as bool?,
      confirmUpdateAllRatesToNewCurrency:
          json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
      currencyCode: json['CurrencyCode'] as String?,
      currency: json['Currency'] as String?,
      currencySymbol: json['CurrencySymbol'] as String?,
      taxOptionId: json['TaxOptionId'] as String?,
      taxOption: json['TaxOption'] as String?,
      tax1Name: json['Tax1Name'] as String?,
      tax2Name: json['Tax2Name'] as String?,
      taxId: json['TaxId'] as String?,
      rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
      salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
      laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
      rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
      salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
      laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
      noCharge: json['NoCharge'] as bool?,
      noChargeReason: json['NoChargeReason'] as String?,
      printIssuedToAddressFrom: json['PrintIssuedToAddressFrom'] as String?,
      issuedToName: json['IssuedToName'] as String?,
      issuedToAttention: json['IssuedToAttention'] as String?,
      issuedToAttention2: json['IssuedToAttention2'] as String?,
      issuedToAddress1: json['IssuedToAddress1'] as String?,
      issuedToAddress2: json['IssuedToAddress2'] as String?,
      issuedToCity: json['IssuedToCity'] as String?,
      issuedToState: json['IssuedToState'] as String?,
      issuedToZipCode: json['IssuedToZipCode'] as String?,
      issuedToCountryId: json['IssuedToCountryId'] as String?,
      issuedToCountry: json['IssuedToCountry'] as String?,
      billToAddressDifferentFromIssuedToAddress:
          json['BillToAddressDifferentFromIssuedToAddress'] as bool?,
      billToAddressId: json['BillToAddressId'] as String?,
      billToName: json['BillToName'] as String?,
      billToAttention: json['BillToAttention'] as String?,
      billToAttention2: json['BillToAttention2'] as String?,
      billToAddress1: json['BillToAddress1'] as String?,
      billToAddress2: json['BillToAddress2'] as String?,
      billToCity: json['BillToCity'] as String?,
      billToState: json['BillToState'] as String?,
      billToZipCode: json['BillToZipCode'] as String?,
      billToCountryId: json['BillToCountryId'] as String?,
      billToCountry: json['BillToCountry'] as String?,
      discountReasonId: json['DiscountReasonId'] as String?,
      discountReason: json['DiscountReason'] as String?,
      requireContactConfirmation: json['RequireContactConfirmation'] as bool?,
      includeInBillingAnalysis: json['IncludeInBillingAnalysis'] as bool?,
      hiatusDiscountFrom: json['HiatusDiscountFrom'] as String?,
      roundTripRentals: json['RoundTripRentals'] as bool?,
      inGroup: json['InGroup'] as bool?,
      groupNumber: json['GroupNumber'] as int?,
      groupColor: json['GroupColor'] as int?,
      groupOrderBy: (json['GroupOrderBy'] as num?)?.toDouble(),
      coverLetterId: json['CoverLetterId'] as String?,
      coverLetter: json['CoverLetter'] as String?,
      termsConditionsId: json['TermsConditionsId'] as String?,
      termsConditions: json['TermsConditions'] as String?,
      outsideSalesRepresentativeId:
          json['OutsideSalesRepresentativeId'] as String?,
      outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
      marketTypeId: json['MarketTypeId'] as String?,
      marketType: json['MarketType'] as String?,
      marketSegmentId: json['MarketSegmentId'] as String?,
      marketSegment: json['MarketSegment'] as String?,
      marketSegmentJobId: json['MarketSegmentJobId'] as String?,
      marketSegmentJob: json['MarketSegmentJob'] as String?,
      outDeliveryId: json['OutDeliveryId'] as String?,
      outDeliveryDeliveryType: json['OutDeliveryDeliveryType'] as String?,
      outDeliveryRequiredDate: json['OutDeliveryRequiredDate'] as String?,
      outDeliveryRequiredTime: json['OutDeliveryRequiredTime'] as String?,
      outDeliveryTargetShipDate: json['OutDeliveryTargetShipDate'] as String?,
      outDeliveryTargetShipTime: json['OutDeliveryTargetShipTime'] as String?,
      outDeliveryDirection: json['OutDeliveryDirection'] as String?,
      outDeliveryAddressType: json['OutDeliveryAddressType'] as String?,
      outDeliveryFromLocation: json['OutDeliveryFromLocation'] as String?,
      outDeliveryFromContact: json['OutDeliveryFromContact'] as String?,
      outDeliveryFromContactPhone:
          json['OutDeliveryFromContactPhone'] as String?,
      outDeliveryFromAlternateContact:
          json['OutDeliveryFromAlternateContact'] as String?,
      outDeliveryFromAlternateContactPhone:
          json['OutDeliveryFromAlternateContactPhone'] as String?,
      outDeliveryFromAttention: json['OutDeliveryFromAttention'] as String?,
      outDeliveryFromAddress1: json['OutDeliveryFromAddress1'] as String?,
      outDeliveryFromAdd2ress: json['OutDeliveryFromAdd2ress'] as String?,
      outDeliveryFromCity: json['OutDeliveryFromCity'] as String?,
      outDeliveryFromState: json['OutDeliveryFromState'] as String?,
      outDeliveryFromZipCode: json['OutDeliveryFromZipCode'] as String?,
      outDeliveryFromCountry: json['OutDeliveryFromCountry'] as String?,
      outDeliveryFromCountryId: json['OutDeliveryFromCountryId'] as String?,
      outDeliveryFromCrossStreets:
          json['OutDeliveryFromCrossStreets'] as String?,
      outDeliveryToLocation: json['OutDeliveryToLocation'] as String?,
      outDeliveryToContact: json['OutDeliveryToContact'] as String?,
      outDeliveryToContactPhone: json['OutDeliveryToContactPhone'] as String?,
      outDeliveryToAlternateContact:
          json['OutDeliveryToAlternateContact'] as String?,
      outDeliveryToAlternateContactPhone:
          json['OutDeliveryToAlternateContactPhone'] as String?,
      outDeliveryToAttention: json['OutDeliveryToAttention'] as String?,
      outDeliveryToAddress1: json['OutDeliveryToAddress1'] as String?,
      outDeliveryToAddress2: json['OutDeliveryToAddress2'] as String?,
      outDeliveryToCity: json['OutDeliveryToCity'] as String?,
      outDeliveryToState: json['OutDeliveryToState'] as String?,
      outDeliveryToZipCode: json['OutDeliveryToZipCode'] as String?,
      outDeliveryToCountryId: json['OutDeliveryToCountryId'] as String?,
      outDeliveryToCountry: json['OutDeliveryToCountry'] as String?,
      outDeliveryToContactFax: json['OutDeliveryToContactFax'] as String?,
      outDeliveryToCrossStreets: json['OutDeliveryToCrossStreets'] as String?,
      outDeliveryDeliveryNotes: json['OutDeliveryDeliveryNotes'] as String?,
      outDeliveryCarrierId: json['OutDeliveryCarrierId'] as String?,
      outDeliveryCarrier: json['OutDeliveryCarrier'] as String?,
      outDeliveryCarrierAccount: json['OutDeliveryCarrierAccount'] as String?,
      outDeliveryShipViaId: json['OutDeliveryShipViaId'] as String?,
      outDeliveryShipVia: json['OutDeliveryShipVia'] as String?,
      outDeliveryInvoiceId: json['OutDeliveryInvoiceId'] as String?,
      outDeliveryVendorInvoiceId: json['OutDeliveryVendorInvoiceId'] as String?,
      outDeliveryEstimatedFreight:
          (json['OutDeliveryEstimatedFreight'] as num?)?.toDouble(),
      outDeliveryFreightInvoiceAmount:
          (json['OutDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
      outDeliveryChargeType: json['OutDeliveryChargeType'] as String?,
      outDeliveryFreightTrackingNumber:
          json['OutDeliveryFreightTrackingNumber'] as String?,
      outDeliveryFreightTrackingUrl:
          json['OutDeliveryFreightTrackingUrl'] as String?,
      outDeliveryPackageCode: json['OutDeliveryPackageCode'] as String?,
      outDeliveryBillPoFreightOnOrder:
          json['OutDeliveryBillPoFreightOnOrder'] as bool?,
      outDeliveryOnlineOrderNumber:
          json['OutDeliveryOnlineOrderNumber'] as String?,
      outDeliveryToVenue: json['OutDeliveryToVenue'] as String?,
      outDeliveryToVenueId: json['OutDeliveryToVenueId'] as String?,
      outDeliveryToWarehouse: json['OutDeliveryToWarehouse'] as String?,
      outDeliveryToWarehouseId: json['OutDeliveryToWarehouseId'] as String?,
      outDeliveryDateStamp: json['OutDeliveryDateStamp'] as String?,
      inDeliveryId: json['InDeliveryId'] as String?,
      inDeliveryDeliveryType: json['InDeliveryDeliveryType'] as String?,
      inDeliveryRequiredDate: json['InDeliveryRequiredDate'] as String?,
      inDeliveryRequiredTime: json['InDeliveryRequiredTime'] as String?,
      inDeliveryTargetShipDate: json['InDeliveryTargetShipDate'] as String?,
      inDeliveryTargetShipTime: json['InDeliveryTargetShipTime'] as String?,
      inDeliveryDirection: json['InDeliveryDirection'] as String?,
      inDeliveryAddressType: json['InDeliveryAddressType'] as String?,
      inDeliveryFromLocation: json['InDeliveryFromLocation'] as String?,
      inDeliveryFromContact: json['InDeliveryFromContact'] as String?,
      inDeliveryFromContactPhone: json['InDeliveryFromContactPhone'] as String?,
      inDeliveryFromAlternateContact:
          json['InDeliveryFromAlternateContact'] as String?,
      inDeliveryFromAlternateContactPhone:
          json['InDeliveryFromAlternateContactPhone'] as String?,
      inDeliveryFromAttention: json['InDeliveryFromAttention'] as String?,
      inDeliveryFromAddress1: json['InDeliveryFromAddress1'] as String?,
      inDeliveryFromAdd2ress: json['InDeliveryFromAdd2ress'] as String?,
      inDeliveryFromCity: json['InDeliveryFromCity'] as String?,
      inDeliveryFromState: json['InDeliveryFromState'] as String?,
      inDeliveryFromZipCode: json['InDeliveryFromZipCode'] as String?,
      inDeliveryFromCountry: json['InDeliveryFromCountry'] as String?,
      inDeliveryFromCountryId: json['InDeliveryFromCountryId'] as String?,
      inDeliveryFromCrossStreets: json['InDeliveryFromCrossStreets'] as String?,
      inDeliveryToLocation: json['InDeliveryToLocation'] as String?,
      inDeliveryToContact: json['InDeliveryToContact'] as String?,
      inDeliveryToContactPhone: json['InDeliveryToContactPhone'] as String?,
      inDeliveryToAlternateContact:
          json['InDeliveryToAlternateContact'] as String?,
      inDeliveryToAlternateContactPhone:
          json['InDeliveryToAlternateContactPhone'] as String?,
      inDeliveryToAttention: json['InDeliveryToAttention'] as String?,
      inDeliveryToAddress1: json['InDeliveryToAddress1'] as String?,
      inDeliveryToAddress2: json['InDeliveryToAddress2'] as String?,
      inDeliveryToCity: json['InDeliveryToCity'] as String?,
      inDeliveryToState: json['InDeliveryToState'] as String?,
      inDeliveryToZipCode: json['InDeliveryToZipCode'] as String?,
      inDeliveryToCountryId: json['InDeliveryToCountryId'] as String?,
      inDeliveryToCountry: json['InDeliveryToCountry'] as String?,
      inDeliveryToContactFax: json['InDeliveryToContactFax'] as String?,
      inDeliveryToCrossStreets: json['InDeliveryToCrossStreets'] as String?,
      inDeliveryDeliveryNotes: json['InDeliveryDeliveryNotes'] as String?,
      inDeliveryCarrierId: json['InDeliveryCarrierId'] as String?,
      inDeliveryCarrier: json['InDeliveryCarrier'] as String?,
      inDeliveryCarrierAccount: json['InDeliveryCarrierAccount'] as String?,
      inDeliveryShipViaId: json['InDeliveryShipViaId'] as String?,
      inDeliveryShipVia: json['InDeliveryShipVia'] as String?,
      inDeliveryInvoiceId: json['InDeliveryInvoiceId'] as String?,
      inDeliveryVendorInvoiceId: json['InDeliveryVendorInvoiceId'] as String?,
      inDeliveryEstimatedFreight:
          (json['InDeliveryEstimatedFreight'] as num?)?.toDouble(),
      inDeliveryFreightInvoiceAmount:
          (json['InDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
      inDeliveryChargeType: json['InDeliveryChargeType'] as String?,
      inDeliveryFreightTrackingNumber:
          json['InDeliveryFreightTrackingNumber'] as String?,
      inDeliveryFreightTrackingUrl:
          json['InDeliveryFreightTrackingUrl'] as String?,
      inDeliveryPackageCode: json['InDeliveryPackageCode'] as String?,
      inDeliveryBillPoFreightOnOrder:
          json['InDeliveryBillPoFreightOnOrder'] as bool?,
      inDeliveryOnlineOrderNumber:
          json['InDeliveryOnlineOrderNumber'] as String?,
      inDeliveryOnlineOrderStatus:
          json['InDeliveryOnlineOrderStatus'] as String?,
      inDeliveryToVenue: json['InDeliveryToVenue'] as String?,
      inDeliveryToVenueId: json['InDeliveryToVenueId'] as String?,
      inDeliveryToWarehouse: json['InDeliveryToWarehouse'] as String?,
      inDeliveryToWarehouseId: json['InDeliveryToWarehouseId'] as String?,
      inDeliveryDateStamp: json['InDeliveryDateStamp'] as String?,
      rentalDaysPerWeek: (json['RentalDaysPerWeek'] as num?)?.toDouble(),
      rentalDiscountPercent:
          (json['RentalDiscountPercent'] as num?)?.toDouble(),
      weeklyRentalTotal: (json['WeeklyRentalTotal'] as num?)?.toDouble(),
      monthlyRentalTotal: (json['MonthlyRentalTotal'] as num?)?.toDouble(),
      periodRentalTotal: (json['PeriodRentalTotal'] as num?)?.toDouble(),
      weeklyRentalTotalIncludesTax:
          json['WeeklyRentalTotalIncludesTax'] as bool?,
      monthlyRentalTotalIncludesTax:
          json['MonthlyRentalTotalIncludesTax'] as bool?,
      periodRentalTotalIncludesTax:
          json['PeriodRentalTotalIncludesTax'] as bool?,
      billLockedTotal: json['BillLockedTotal'] as bool?,
      salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
      salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
      salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
      partsDiscountPercent: (json['PartsDiscountPercent'] as num?)?.toDouble(),
      partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
      partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
      spaceDaysPerWeek: (json['SpaceDaysPerWeek'] as num?)?.toDouble(),
      spaceDiscountPercent: (json['SpaceDiscountPercent'] as num?)?.toDouble(),
      spaceSplitPercent: (json['SpaceSplitPercent'] as num?)?.toDouble(),
      weeklySpaceTotal: (json['WeeklySpaceTotal'] as num?)?.toDouble(),
      monthlySpaceTotal: (json['MonthlySpaceTotal'] as num?)?.toDouble(),
      periodSpaceTotal: (json['PeriodSpaceTotal'] as num?)?.toDouble(),
      weeklySpaceTotalIncludesTax: json['WeeklySpaceTotalIncludesTax'] as bool?,
      monthlySpaceTotalIncludesTax:
          json['MonthlySpaceTotalIncludesTax'] as bool?,
      periodSpaceTotalIncludesTax: json['PeriodSpaceTotalIncludesTax'] as bool?,
      vehicleDaysPerWeek: (json['VehicleDaysPerWeek'] as num?)?.toDouble(),
      vehicleDiscountPercent:
          (json['VehicleDiscountPercent'] as num?)?.toDouble(),
      weeklyVehicleTotal: (json['WeeklyVehicleTotal'] as num?)?.toDouble(),
      monthlyVehicleTotal: (json['MonthlyVehicleTotal'] as num?)?.toDouble(),
      periodVehicleTotal: (json['PeriodVehicleTotal'] as num?)?.toDouble(),
      weeklyVehicleTotalIncludesTax:
          json['WeeklyVehicleTotalIncludesTax'] as bool?,
      monthlyVehicleTotalIncludesTax:
          json['MonthlyVehicleTotalIncludesTax'] as bool?,
      periodVehicleTotalIncludesTax:
          json['PeriodVehicleTotalIncludesTax'] as bool?,
      miscDiscountPercent: (json['MiscDiscountPercent'] as num?)?.toDouble(),
      weeklyMiscTotal: (json['WeeklyMiscTotal'] as num?)?.toDouble(),
      monthlyMiscTotal: (json['MonthlyMiscTotal'] as num?)?.toDouble(),
      periodMiscTotal: (json['PeriodMiscTotal'] as num?)?.toDouble(),
      weeklyMiscTotalIncludesTax: json['WeeklyMiscTotalIncludesTax'] as bool?,
      monthlyMiscTotalIncludesTax: json['MonthlyMiscTotalIncludesTax'] as bool?,
      periodMiscTotalIncludesTax: json['PeriodMiscTotalIncludesTax'] as bool?,
      laborDiscountPercent: (json['LaborDiscountPercent'] as num?)?.toDouble(),
      weeklyLaborTotal: (json['WeeklyLaborTotal'] as num?)?.toDouble(),
      monthlyLaborTotal: (json['MonthlyLaborTotal'] as num?)?.toDouble(),
      periodLaborTotal: (json['PeriodLaborTotal'] as num?)?.toDouble(),
      weeklyLaborTotalIncludesTax: json['WeeklyLaborTotalIncludesTax'] as bool?,
      monthlyLaborTotalIncludesTax:
          json['MonthlyLaborTotalIncludesTax'] as bool?,
      periodLaborTotalIncludesTax: json['PeriodLaborTotalIncludesTax'] as bool?,
      rentalSaleDiscountPercent:
          (json['RentalSaleDiscountPercent'] as num?)?.toDouble(),
      rentalSaleTotal: (json['RentalSaleTotal'] as num?)?.toDouble(),
      rentalSaleTotalIncludesTax: json['RentalSaleTotalIncludesTax'] as bool?,
      lossAndDamageDiscountPercent:
          (json['LossAndDamageDiscountPercent'] as num?)?.toDouble(),
      lossAndDamageTotal: (json['LossAndDamageTotal'] as num?)?.toDouble(),
      lossAndDamageTotalIncludesTax:
          json['LossAndDamageTotalIncludesTax'] as bool?,
      combinedDaysPerWeek: (json['CombinedDaysPerWeek'] as num?)?.toDouble(),
      combinedDiscountPercent:
          (json['CombinedDiscountPercent'] as num?)?.toDouble(),
      weeklyCombinedTotal: (json['WeeklyCombinedTotal'] as num?)?.toDouble(),
      monthlyCombinedTotal: (json['MonthlyCombinedTotal'] as num?)?.toDouble(),
      periodCombinedTotal: (json['PeriodCombinedTotal'] as num?)?.toDouble(),
      weeklyCombinedTotalIncludesTax:
          json['WeeklyCombinedTotalIncludesTax'] as bool?,
      monthlyCombinedTotalIncludesTax:
          json['MonthlyCombinedTotalIncludesTax'] as bool?,
      periodCombinedTotalIncludesTax:
          json['PeriodCombinedTotalIncludesTax'] as bool?,
      disableEditingRentalRate: json['DisableEditingRentalRate'] as bool?,
      disableEditingSalesRate: json['DisableEditingSalesRate'] as bool?,
      disableEditingMiscellaneousRate:
          json['DisableEditingMiscellaneousRate'] as bool?,
      disableEditingLaborRate: json['DisableEditingLaborRate'] as bool?,
      disableEditingRentalSaleRate:
          json['DisableEditingRentalSaleRate'] as bool?,
      disableEditingLossAndDamageRate:
          json['DisableEditingLossAndDamageRate'] as bool?,
      rentalExtendedTotal: (json['RentalExtendedTotal'] as num?)?.toDouble(),
      salesExtendedTotal: (json['SalesExtendedTotal'] as num?)?.toDouble(),
      laborExtendedTotal: (json['LaborExtendedTotal'] as num?)?.toDouble(),
      miscellaneousExtendedTotal:
          (json['MiscellaneousExtendedTotal'] as num?)?.toDouble(),
      rentalSaleExtendedTotal:
          (json['RentalSaleExtendedTotal'] as num?)?.toDouble(),
      lossAndDamageExtendedTotal:
          (json['LossAndDamageExtendedTotal'] as num?)?.toDouble(),
      hasNotes: json['HasNotes'] as bool?,
      hasDocuments: json['HasDocuments'] as bool?,
      hasEmailHistory: json['HasEmailHistory'] as bool?,
      hasContacts: json['HasContacts'] as bool?,
      hasSubPurchaseOrders: json['HasSubPurchaseOrders'] as bool?,
      hasPickLists: json['HasPickLists'] as bool?,
      hasContracts: json['HasContracts'] as bool?,
      hasSuspendedContracts: json['HasSuspendedContracts'] as bool?,
      hasMultiOrderContracts: json['HasMultiOrderContracts'] as bool?,
      hasInvoices: json['HasInvoices'] as bool?,
      hasBillingWorksheets: json['HasBillingWorksheets'] as bool?,
      hasMultiOrderInvoices: json['HasMultiOrderInvoices'] as bool?,
      totalReplacementCost: (json['TotalReplacementCost'] as num?)?.toDouble(),
      presentationLayerId: json['PresentationLayerId'] as String?,
      presentationLayer: json['PresentationLayer'] as String?,
      isManualSort: json['IsManualSort'] as bool?,
      quoteOrderTitle: json['QuoteOrderTitle'] as String?,
      unassignedSubs: json['UnassignedSubs'] as bool?,
      nonTaxable: json['NonTaxable'] as bool?,
      enableProjects: json['EnableProjects'] as bool?,
      projectId: json['ProjectId'] as String?,
      projectNumber: json['ProjectNumber'] as String?,
      project: json['Project'] as String?,
      projectDrawingsId: json['ProjectDrawingsId'] as String?,
      projectDrawings: json['ProjectDrawings'] as String?,
      projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
      projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
      projectDropShipId: json['ProjectDropShipId'] as String?,
      projectDropShip: json['ProjectDropShip'] as String?,
      projectAsBuildId: json['ProjectAsBuildId'] as String?,
      projectAsBuild: json['ProjectAsBuild'] as String?,
      projectCommissioningId: json['ProjectCommissioningId'] as String?,
      projectCommissioning: json['ProjectCommissioning'] as String?,
      projectDepositId: json['ProjectDepositId'] as String?,
      projectDeposit: json['ProjectDeposit'] as String?,
      inputByUserId: json['InputByUserId'] as String?,
      modifiedByUserId: json['ModifiedByUserId'] as String?,
      useEstimatedDatesForBilling: json['UseEstimatedDatesForBilling'] as bool?,
      dateStamp: json['DateStamp'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesAgentOrderOrderToJson(
    WebApiModulesAgentOrderOrder instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDate', instance.orderDate);
  writeNotNull('SourceQuoteId', instance.sourceQuoteId);
  writeNotNull('SourceQuoteNumber', instance.sourceQuoteNumber);
  writeNotNull('CreditCardPreAuthorizationStatus',
      instance.creditCardPreAuthorizationStatus);
  writeNotNull('Description', instance.description);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('CustomerNumber', instance.customerNumber);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('RateTypeDisplay', instance.rateTypeDisplay);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('ProjectManager', instance.projectManager);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('Miscellaneous', instance.miscellaneous);
  writeNotNull('Labor', instance.labor);
  writeNotNull('Facilities', instance.facilities);
  writeNotNull('Transportation', instance.transportation);
  writeNotNull('RentalSale', instance.rentalSale);
  writeNotNull('LossAndDamage', instance.lossAndDamage);
  writeNotNull('Repair', instance.repair);
  writeNotNull('HasRentalItem', instance.hasRentalItem);
  writeNotNull('HasSalesItem', instance.hasSalesItem);
  writeNotNull('HasMiscellaneousItem', instance.hasMiscellaneousItem);
  writeNotNull('HasLaborItem', instance.hasLaborItem);
  writeNotNull('HasFacilitiesItem', instance.hasFacilitiesItem);
  writeNotNull('HasLossAndDamageItem', instance.hasLossAndDamageItem);
  writeNotNull('HasRentalSaleItem', instance.hasRentalSaleItem);
  writeNotNull('HasRepair', instance.hasRepair);
  writeNotNull('ActivityDatesAndTimes',
      instance.activityDatesAndTimes?.map((e) => e.toJson()).toList());
  writeNotNull('PickDate', instance.pickDate);
  writeNotNull('PickTime', instance.pickTime);
  writeNotNull('EstimatedStartDate', instance.estimatedStartDate);
  writeNotNull('EstimatedStartTime', instance.estimatedStartTime);
  writeNotNull('EstimatedStopDate', instance.estimatedStopDate);
  writeNotNull('EstimatedStopTime', instance.estimatedStopTime);
  writeNotNull('PickUpDate', instance.pickUpDate);
  writeNotNull('PickUpTime', instance.pickUpTime);
  writeNotNull('PrepDate', instance.prepDate);
  writeNotNull('PrepTime', instance.prepTime);
  writeNotNull('LoadInDate', instance.loadInDate);
  writeNotNull('LoadInTime', instance.loadInTime);
  writeNotNull('StrikeDate', instance.strikeDate);
  writeNotNull('StrikeTime', instance.strikeTime);
  writeNotNull('TestDate', instance.testDate);
  writeNotNull('TestTime', instance.testTime);
  writeNotNull('OrderTypeId', instance.orderTypeId);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull(
      'OrderTypeCombineActivityTabs', instance.orderTypeCombineActivityTabs);
  writeNotNull('PendingPo', instance.pendingPo);
  writeNotNull('PoNumber', instance.poNumber);
  writeNotNull('PoAmount', instance.poAmount);
  writeNotNull('Location', instance.location);
  writeNotNull('OrderLocationId', instance.orderLocationId);
  writeNotNull('OrderLocation', instance.orderLocation);
  writeNotNull('ReferenceNumber', instance.referenceNumber);
  writeNotNull('Total', instance.total);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('PoApprovalStatusId', instance.poApprovalStatusId);
  writeNotNull('LockBillingDates', instance.lockBillingDates);
  writeNotNull('SpecifyBillingDatesByType', instance.specifyBillingDatesByType);
  writeNotNull('RentalBillingStartDate', instance.rentalBillingStartDate);
  writeNotNull('RentalBillingEndDate', instance.rentalBillingEndDate);
  writeNotNull('LaborBillingStartDate', instance.laborBillingStartDate);
  writeNotNull('LaborBillingEndDate', instance.laborBillingEndDate);
  writeNotNull(
      'MiscellaneousBillingStartDate', instance.miscellaneousBillingStartDate);
  writeNotNull(
      'MiscellaneousBillingEndDate', instance.miscellaneousBillingEndDate);
  writeNotNull(
      'FacilitiesBillingStartDate', instance.facilitiesBillingStartDate);
  writeNotNull('FacilitiesBillingEndDate', instance.facilitiesBillingEndDate);
  writeNotNull('VehicleBillingStartDate', instance.vehicleBillingStartDate);
  writeNotNull('VehicleBillingEndDate', instance.vehicleBillingEndDate);
  writeNotNull('DelayBillingSearchUntil', instance.delayBillingSearchUntil);
  writeNotNull(
      'IncludePrepFeesInRentalRate', instance.includePrepFeesInRentalRate);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingEndDate', instance.billingEndDate);
  writeNotNull('BillingWeeks', instance.billingWeeks);
  writeNotNull('BillingMonths', instance.billingMonths);
  writeNotNull('DetermineQuantitiesToBillBasedOn',
      instance.determineQuantitiesToBillBasedOn);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('BillingCycle', instance.billingCycle);
  writeNotNull('BillingCycleType', instance.billingCycleType);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull(
      'UpdateAllRatesToNewCurrency', instance.updateAllRatesToNewCurrency);
  writeNotNull('ConfirmUpdateAllRatesToNewCurrency',
      instance.confirmUpdateAllRatesToNewCurrency);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('Tax1Name', instance.tax1Name);
  writeNotNull('Tax2Name', instance.tax2Name);
  writeNotNull('TaxId', instance.taxId);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('NoCharge', instance.noCharge);
  writeNotNull('NoChargeReason', instance.noChargeReason);
  writeNotNull('PrintIssuedToAddressFrom', instance.printIssuedToAddressFrom);
  writeNotNull('IssuedToName', instance.issuedToName);
  writeNotNull('IssuedToAttention', instance.issuedToAttention);
  writeNotNull('IssuedToAttention2', instance.issuedToAttention2);
  writeNotNull('IssuedToAddress1', instance.issuedToAddress1);
  writeNotNull('IssuedToAddress2', instance.issuedToAddress2);
  writeNotNull('IssuedToCity', instance.issuedToCity);
  writeNotNull('IssuedToState', instance.issuedToState);
  writeNotNull('IssuedToZipCode', instance.issuedToZipCode);
  writeNotNull('IssuedToCountryId', instance.issuedToCountryId);
  writeNotNull('IssuedToCountry', instance.issuedToCountry);
  writeNotNull('BillToAddressDifferentFromIssuedToAddress',
      instance.billToAddressDifferentFromIssuedToAddress);
  writeNotNull('BillToAddressId', instance.billToAddressId);
  writeNotNull('BillToName', instance.billToName);
  writeNotNull('BillToAttention', instance.billToAttention);
  writeNotNull('BillToAttention2', instance.billToAttention2);
  writeNotNull('BillToAddress1', instance.billToAddress1);
  writeNotNull('BillToAddress2', instance.billToAddress2);
  writeNotNull('BillToCity', instance.billToCity);
  writeNotNull('BillToState', instance.billToState);
  writeNotNull('BillToZipCode', instance.billToZipCode);
  writeNotNull('BillToCountryId', instance.billToCountryId);
  writeNotNull('BillToCountry', instance.billToCountry);
  writeNotNull('DiscountReasonId', instance.discountReasonId);
  writeNotNull('DiscountReason', instance.discountReason);
  writeNotNull(
      'RequireContactConfirmation', instance.requireContactConfirmation);
  writeNotNull('IncludeInBillingAnalysis', instance.includeInBillingAnalysis);
  writeNotNull('HiatusDiscountFrom', instance.hiatusDiscountFrom);
  writeNotNull('RoundTripRentals', instance.roundTripRentals);
  writeNotNull('InGroup', instance.inGroup);
  writeNotNull('GroupNumber', instance.groupNumber);
  writeNotNull('GroupColor', instance.groupColor);
  writeNotNull('GroupOrderBy', instance.groupOrderBy);
  writeNotNull('CoverLetterId', instance.coverLetterId);
  writeNotNull('CoverLetter', instance.coverLetter);
  writeNotNull('TermsConditionsId', instance.termsConditionsId);
  writeNotNull('TermsConditions', instance.termsConditions);
  writeNotNull(
      'OutsideSalesRepresentativeId', instance.outsideSalesRepresentativeId);
  writeNotNull(
      'OutsideSalesRepresentative', instance.outsideSalesRepresentative);
  writeNotNull('MarketTypeId', instance.marketTypeId);
  writeNotNull('MarketType', instance.marketType);
  writeNotNull('MarketSegmentId', instance.marketSegmentId);
  writeNotNull('MarketSegment', instance.marketSegment);
  writeNotNull('MarketSegmentJobId', instance.marketSegmentJobId);
  writeNotNull('MarketSegmentJob', instance.marketSegmentJob);
  writeNotNull('OutDeliveryId', instance.outDeliveryId);
  writeNotNull('OutDeliveryDeliveryType', instance.outDeliveryDeliveryType);
  writeNotNull('OutDeliveryRequiredDate', instance.outDeliveryRequiredDate);
  writeNotNull('OutDeliveryRequiredTime', instance.outDeliveryRequiredTime);
  writeNotNull('OutDeliveryTargetShipDate', instance.outDeliveryTargetShipDate);
  writeNotNull('OutDeliveryTargetShipTime', instance.outDeliveryTargetShipTime);
  writeNotNull('OutDeliveryDirection', instance.outDeliveryDirection);
  writeNotNull('OutDeliveryAddressType', instance.outDeliveryAddressType);
  writeNotNull('OutDeliveryFromLocation', instance.outDeliveryFromLocation);
  writeNotNull('OutDeliveryFromContact', instance.outDeliveryFromContact);
  writeNotNull(
      'OutDeliveryFromContactPhone', instance.outDeliveryFromContactPhone);
  writeNotNull('OutDeliveryFromAlternateContact',
      instance.outDeliveryFromAlternateContact);
  writeNotNull('OutDeliveryFromAlternateContactPhone',
      instance.outDeliveryFromAlternateContactPhone);
  writeNotNull('OutDeliveryFromAttention', instance.outDeliveryFromAttention);
  writeNotNull('OutDeliveryFromAddress1', instance.outDeliveryFromAddress1);
  writeNotNull('OutDeliveryFromAdd2ress', instance.outDeliveryFromAdd2ress);
  writeNotNull('OutDeliveryFromCity', instance.outDeliveryFromCity);
  writeNotNull('OutDeliveryFromState', instance.outDeliveryFromState);
  writeNotNull('OutDeliveryFromZipCode', instance.outDeliveryFromZipCode);
  writeNotNull('OutDeliveryFromCountry', instance.outDeliveryFromCountry);
  writeNotNull('OutDeliveryFromCountryId', instance.outDeliveryFromCountryId);
  writeNotNull(
      'OutDeliveryFromCrossStreets', instance.outDeliveryFromCrossStreets);
  writeNotNull('OutDeliveryToLocation', instance.outDeliveryToLocation);
  writeNotNull('OutDeliveryToContact', instance.outDeliveryToContact);
  writeNotNull('OutDeliveryToContactPhone', instance.outDeliveryToContactPhone);
  writeNotNull(
      'OutDeliveryToAlternateContact', instance.outDeliveryToAlternateContact);
  writeNotNull('OutDeliveryToAlternateContactPhone',
      instance.outDeliveryToAlternateContactPhone);
  writeNotNull('OutDeliveryToAttention', instance.outDeliveryToAttention);
  writeNotNull('OutDeliveryToAddress1', instance.outDeliveryToAddress1);
  writeNotNull('OutDeliveryToAddress2', instance.outDeliveryToAddress2);
  writeNotNull('OutDeliveryToCity', instance.outDeliveryToCity);
  writeNotNull('OutDeliveryToState', instance.outDeliveryToState);
  writeNotNull('OutDeliveryToZipCode', instance.outDeliveryToZipCode);
  writeNotNull('OutDeliveryToCountryId', instance.outDeliveryToCountryId);
  writeNotNull('OutDeliveryToCountry', instance.outDeliveryToCountry);
  writeNotNull('OutDeliveryToContactFax', instance.outDeliveryToContactFax);
  writeNotNull('OutDeliveryToCrossStreets', instance.outDeliveryToCrossStreets);
  writeNotNull('OutDeliveryDeliveryNotes', instance.outDeliveryDeliveryNotes);
  writeNotNull('OutDeliveryCarrierId', instance.outDeliveryCarrierId);
  writeNotNull('OutDeliveryCarrier', instance.outDeliveryCarrier);
  writeNotNull('OutDeliveryCarrierAccount', instance.outDeliveryCarrierAccount);
  writeNotNull('OutDeliveryShipViaId', instance.outDeliveryShipViaId);
  writeNotNull('OutDeliveryShipVia', instance.outDeliveryShipVia);
  writeNotNull('OutDeliveryInvoiceId', instance.outDeliveryInvoiceId);
  writeNotNull(
      'OutDeliveryVendorInvoiceId', instance.outDeliveryVendorInvoiceId);
  writeNotNull(
      'OutDeliveryEstimatedFreight', instance.outDeliveryEstimatedFreight);
  writeNotNull('OutDeliveryFreightInvoiceAmount',
      instance.outDeliveryFreightInvoiceAmount);
  writeNotNull('OutDeliveryChargeType', instance.outDeliveryChargeType);
  writeNotNull('OutDeliveryFreightTrackingNumber',
      instance.outDeliveryFreightTrackingNumber);
  writeNotNull(
      'OutDeliveryFreightTrackingUrl', instance.outDeliveryFreightTrackingUrl);
  writeNotNull('OutDeliveryPackageCode', instance.outDeliveryPackageCode);
  writeNotNull('OutDeliveryBillPoFreightOnOrder',
      instance.outDeliveryBillPoFreightOnOrder);
  writeNotNull(
      'OutDeliveryOnlineOrderNumber', instance.outDeliveryOnlineOrderNumber);
  writeNotNull('OutDeliveryToVenue', instance.outDeliveryToVenue);
  writeNotNull('OutDeliveryToVenueId', instance.outDeliveryToVenueId);
  writeNotNull('OutDeliveryToWarehouse', instance.outDeliveryToWarehouse);
  writeNotNull('OutDeliveryToWarehouseId', instance.outDeliveryToWarehouseId);
  writeNotNull('OutDeliveryDateStamp', instance.outDeliveryDateStamp);
  writeNotNull('InDeliveryId', instance.inDeliveryId);
  writeNotNull('InDeliveryDeliveryType', instance.inDeliveryDeliveryType);
  writeNotNull('InDeliveryRequiredDate', instance.inDeliveryRequiredDate);
  writeNotNull('InDeliveryRequiredTime', instance.inDeliveryRequiredTime);
  writeNotNull('InDeliveryTargetShipDate', instance.inDeliveryTargetShipDate);
  writeNotNull('InDeliveryTargetShipTime', instance.inDeliveryTargetShipTime);
  writeNotNull('InDeliveryDirection', instance.inDeliveryDirection);
  writeNotNull('InDeliveryAddressType', instance.inDeliveryAddressType);
  writeNotNull('InDeliveryFromLocation', instance.inDeliveryFromLocation);
  writeNotNull('InDeliveryFromContact', instance.inDeliveryFromContact);
  writeNotNull(
      'InDeliveryFromContactPhone', instance.inDeliveryFromContactPhone);
  writeNotNull('InDeliveryFromAlternateContact',
      instance.inDeliveryFromAlternateContact);
  writeNotNull('InDeliveryFromAlternateContactPhone',
      instance.inDeliveryFromAlternateContactPhone);
  writeNotNull('InDeliveryFromAttention', instance.inDeliveryFromAttention);
  writeNotNull('InDeliveryFromAddress1', instance.inDeliveryFromAddress1);
  writeNotNull('InDeliveryFromAdd2ress', instance.inDeliveryFromAdd2ress);
  writeNotNull('InDeliveryFromCity', instance.inDeliveryFromCity);
  writeNotNull('InDeliveryFromState', instance.inDeliveryFromState);
  writeNotNull('InDeliveryFromZipCode', instance.inDeliveryFromZipCode);
  writeNotNull('InDeliveryFromCountry', instance.inDeliveryFromCountry);
  writeNotNull('InDeliveryFromCountryId', instance.inDeliveryFromCountryId);
  writeNotNull(
      'InDeliveryFromCrossStreets', instance.inDeliveryFromCrossStreets);
  writeNotNull('InDeliveryToLocation', instance.inDeliveryToLocation);
  writeNotNull('InDeliveryToContact', instance.inDeliveryToContact);
  writeNotNull('InDeliveryToContactPhone', instance.inDeliveryToContactPhone);
  writeNotNull(
      'InDeliveryToAlternateContact', instance.inDeliveryToAlternateContact);
  writeNotNull('InDeliveryToAlternateContactPhone',
      instance.inDeliveryToAlternateContactPhone);
  writeNotNull('InDeliveryToAttention', instance.inDeliveryToAttention);
  writeNotNull('InDeliveryToAddress1', instance.inDeliveryToAddress1);
  writeNotNull('InDeliveryToAddress2', instance.inDeliveryToAddress2);
  writeNotNull('InDeliveryToCity', instance.inDeliveryToCity);
  writeNotNull('InDeliveryToState', instance.inDeliveryToState);
  writeNotNull('InDeliveryToZipCode', instance.inDeliveryToZipCode);
  writeNotNull('InDeliveryToCountryId', instance.inDeliveryToCountryId);
  writeNotNull('InDeliveryToCountry', instance.inDeliveryToCountry);
  writeNotNull('InDeliveryToContactFax', instance.inDeliveryToContactFax);
  writeNotNull('InDeliveryToCrossStreets', instance.inDeliveryToCrossStreets);
  writeNotNull('InDeliveryDeliveryNotes', instance.inDeliveryDeliveryNotes);
  writeNotNull('InDeliveryCarrierId', instance.inDeliveryCarrierId);
  writeNotNull('InDeliveryCarrier', instance.inDeliveryCarrier);
  writeNotNull('InDeliveryCarrierAccount', instance.inDeliveryCarrierAccount);
  writeNotNull('InDeliveryShipViaId', instance.inDeliveryShipViaId);
  writeNotNull('InDeliveryShipVia', instance.inDeliveryShipVia);
  writeNotNull('InDeliveryInvoiceId', instance.inDeliveryInvoiceId);
  writeNotNull('InDeliveryVendorInvoiceId', instance.inDeliveryVendorInvoiceId);
  writeNotNull(
      'InDeliveryEstimatedFreight', instance.inDeliveryEstimatedFreight);
  writeNotNull('InDeliveryFreightInvoiceAmount',
      instance.inDeliveryFreightInvoiceAmount);
  writeNotNull('InDeliveryChargeType', instance.inDeliveryChargeType);
  writeNotNull('InDeliveryFreightTrackingNumber',
      instance.inDeliveryFreightTrackingNumber);
  writeNotNull(
      'InDeliveryFreightTrackingUrl', instance.inDeliveryFreightTrackingUrl);
  writeNotNull('InDeliveryPackageCode', instance.inDeliveryPackageCode);
  writeNotNull('InDeliveryBillPoFreightOnOrder',
      instance.inDeliveryBillPoFreightOnOrder);
  writeNotNull(
      'InDeliveryOnlineOrderNumber', instance.inDeliveryOnlineOrderNumber);
  writeNotNull(
      'InDeliveryOnlineOrderStatus', instance.inDeliveryOnlineOrderStatus);
  writeNotNull('InDeliveryToVenue', instance.inDeliveryToVenue);
  writeNotNull('InDeliveryToVenueId', instance.inDeliveryToVenueId);
  writeNotNull('InDeliveryToWarehouse', instance.inDeliveryToWarehouse);
  writeNotNull('InDeliveryToWarehouseId', instance.inDeliveryToWarehouseId);
  writeNotNull('InDeliveryDateStamp', instance.inDeliveryDateStamp);
  writeNotNull('RentalDaysPerWeek', instance.rentalDaysPerWeek);
  writeNotNull('RentalDiscountPercent', instance.rentalDiscountPercent);
  writeNotNull('WeeklyRentalTotal', instance.weeklyRentalTotal);
  writeNotNull('MonthlyRentalTotal', instance.monthlyRentalTotal);
  writeNotNull('PeriodRentalTotal', instance.periodRentalTotal);
  writeNotNull(
      'WeeklyRentalTotalIncludesTax', instance.weeklyRentalTotalIncludesTax);
  writeNotNull(
      'MonthlyRentalTotalIncludesTax', instance.monthlyRentalTotalIncludesTax);
  writeNotNull(
      'PeriodRentalTotalIncludesTax', instance.periodRentalTotalIncludesTax);
  writeNotNull('BillLockedTotal', instance.billLockedTotal);
  writeNotNull('SalesDiscountPercent', instance.salesDiscountPercent);
  writeNotNull('SalesTotal', instance.salesTotal);
  writeNotNull('SalesTotalIncludesTax', instance.salesTotalIncludesTax);
  writeNotNull('PartsDiscountPercent', instance.partsDiscountPercent);
  writeNotNull('PartsTotal', instance.partsTotal);
  writeNotNull('PartsTotalIncludesTax', instance.partsTotalIncludesTax);
  writeNotNull('SpaceDaysPerWeek', instance.spaceDaysPerWeek);
  writeNotNull('SpaceDiscountPercent', instance.spaceDiscountPercent);
  writeNotNull('SpaceSplitPercent', instance.spaceSplitPercent);
  writeNotNull('WeeklySpaceTotal', instance.weeklySpaceTotal);
  writeNotNull('MonthlySpaceTotal', instance.monthlySpaceTotal);
  writeNotNull('PeriodSpaceTotal', instance.periodSpaceTotal);
  writeNotNull(
      'WeeklySpaceTotalIncludesTax', instance.weeklySpaceTotalIncludesTax);
  writeNotNull(
      'MonthlySpaceTotalIncludesTax', instance.monthlySpaceTotalIncludesTax);
  writeNotNull(
      'PeriodSpaceTotalIncludesTax', instance.periodSpaceTotalIncludesTax);
  writeNotNull('VehicleDaysPerWeek', instance.vehicleDaysPerWeek);
  writeNotNull('VehicleDiscountPercent', instance.vehicleDiscountPercent);
  writeNotNull('WeeklyVehicleTotal', instance.weeklyVehicleTotal);
  writeNotNull('MonthlyVehicleTotal', instance.monthlyVehicleTotal);
  writeNotNull('PeriodVehicleTotal', instance.periodVehicleTotal);
  writeNotNull(
      'WeeklyVehicleTotalIncludesTax', instance.weeklyVehicleTotalIncludesTax);
  writeNotNull('MonthlyVehicleTotalIncludesTax',
      instance.monthlyVehicleTotalIncludesTax);
  writeNotNull(
      'PeriodVehicleTotalIncludesTax', instance.periodVehicleTotalIncludesTax);
  writeNotNull('MiscDiscountPercent', instance.miscDiscountPercent);
  writeNotNull('WeeklyMiscTotal', instance.weeklyMiscTotal);
  writeNotNull('MonthlyMiscTotal', instance.monthlyMiscTotal);
  writeNotNull('PeriodMiscTotal', instance.periodMiscTotal);
  writeNotNull(
      'WeeklyMiscTotalIncludesTax', instance.weeklyMiscTotalIncludesTax);
  writeNotNull(
      'MonthlyMiscTotalIncludesTax', instance.monthlyMiscTotalIncludesTax);
  writeNotNull(
      'PeriodMiscTotalIncludesTax', instance.periodMiscTotalIncludesTax);
  writeNotNull('LaborDiscountPercent', instance.laborDiscountPercent);
  writeNotNull('WeeklyLaborTotal', instance.weeklyLaborTotal);
  writeNotNull('MonthlyLaborTotal', instance.monthlyLaborTotal);
  writeNotNull('PeriodLaborTotal', instance.periodLaborTotal);
  writeNotNull(
      'WeeklyLaborTotalIncludesTax', instance.weeklyLaborTotalIncludesTax);
  writeNotNull(
      'MonthlyLaborTotalIncludesTax', instance.monthlyLaborTotalIncludesTax);
  writeNotNull(
      'PeriodLaborTotalIncludesTax', instance.periodLaborTotalIncludesTax);
  writeNotNull('RentalSaleDiscountPercent', instance.rentalSaleDiscountPercent);
  writeNotNull('RentalSaleTotal', instance.rentalSaleTotal);
  writeNotNull(
      'RentalSaleTotalIncludesTax', instance.rentalSaleTotalIncludesTax);
  writeNotNull(
      'LossAndDamageDiscountPercent', instance.lossAndDamageDiscountPercent);
  writeNotNull('LossAndDamageTotal', instance.lossAndDamageTotal);
  writeNotNull(
      'LossAndDamageTotalIncludesTax', instance.lossAndDamageTotalIncludesTax);
  writeNotNull('CombinedDaysPerWeek', instance.combinedDaysPerWeek);
  writeNotNull('CombinedDiscountPercent', instance.combinedDiscountPercent);
  writeNotNull('WeeklyCombinedTotal', instance.weeklyCombinedTotal);
  writeNotNull('MonthlyCombinedTotal', instance.monthlyCombinedTotal);
  writeNotNull('PeriodCombinedTotal', instance.periodCombinedTotal);
  writeNotNull('WeeklyCombinedTotalIncludesTax',
      instance.weeklyCombinedTotalIncludesTax);
  writeNotNull('MonthlyCombinedTotalIncludesTax',
      instance.monthlyCombinedTotalIncludesTax);
  writeNotNull('PeriodCombinedTotalIncludesTax',
      instance.periodCombinedTotalIncludesTax);
  writeNotNull('DisableEditingRentalRate', instance.disableEditingRentalRate);
  writeNotNull('DisableEditingSalesRate', instance.disableEditingSalesRate);
  writeNotNull('DisableEditingMiscellaneousRate',
      instance.disableEditingMiscellaneousRate);
  writeNotNull('DisableEditingLaborRate', instance.disableEditingLaborRate);
  writeNotNull(
      'DisableEditingRentalSaleRate', instance.disableEditingRentalSaleRate);
  writeNotNull('DisableEditingLossAndDamageRate',
      instance.disableEditingLossAndDamageRate);
  writeNotNull('RentalExtendedTotal', instance.rentalExtendedTotal);
  writeNotNull('SalesExtendedTotal', instance.salesExtendedTotal);
  writeNotNull('LaborExtendedTotal', instance.laborExtendedTotal);
  writeNotNull(
      'MiscellaneousExtendedTotal', instance.miscellaneousExtendedTotal);
  writeNotNull('RentalSaleExtendedTotal', instance.rentalSaleExtendedTotal);
  writeNotNull(
      'LossAndDamageExtendedTotal', instance.lossAndDamageExtendedTotal);
  writeNotNull('HasNotes', instance.hasNotes);
  writeNotNull('HasDocuments', instance.hasDocuments);
  writeNotNull('HasEmailHistory', instance.hasEmailHistory);
  writeNotNull('HasContacts', instance.hasContacts);
  writeNotNull('HasSubPurchaseOrders', instance.hasSubPurchaseOrders);
  writeNotNull('HasPickLists', instance.hasPickLists);
  writeNotNull('HasContracts', instance.hasContracts);
  writeNotNull('HasSuspendedContracts', instance.hasSuspendedContracts);
  writeNotNull('HasMultiOrderContracts', instance.hasMultiOrderContracts);
  writeNotNull('HasInvoices', instance.hasInvoices);
  writeNotNull('HasBillingWorksheets', instance.hasBillingWorksheets);
  writeNotNull('HasMultiOrderInvoices', instance.hasMultiOrderInvoices);
  writeNotNull('TotalReplacementCost', instance.totalReplacementCost);
  writeNotNull('PresentationLayerId', instance.presentationLayerId);
  writeNotNull('PresentationLayer', instance.presentationLayer);
  writeNotNull('IsManualSort', instance.isManualSort);
  writeNotNull('QuoteOrderTitle', instance.quoteOrderTitle);
  writeNotNull('UnassignedSubs', instance.unassignedSubs);
  writeNotNull('NonTaxable', instance.nonTaxable);
  writeNotNull('EnableProjects', instance.enableProjects);
  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('ProjectNumber', instance.projectNumber);
  writeNotNull('Project', instance.project);
  writeNotNull('ProjectDrawingsId', instance.projectDrawingsId);
  writeNotNull('ProjectDrawings', instance.projectDrawings);
  writeNotNull('ProjectItemsOrderedId', instance.projectItemsOrderedId);
  writeNotNull('ProjectItemsOrdered', instance.projectItemsOrdered);
  writeNotNull('ProjectDropShipId', instance.projectDropShipId);
  writeNotNull('ProjectDropShip', instance.projectDropShip);
  writeNotNull('ProjectAsBuildId', instance.projectAsBuildId);
  writeNotNull('ProjectAsBuild', instance.projectAsBuild);
  writeNotNull('ProjectCommissioningId', instance.projectCommissioningId);
  writeNotNull('ProjectCommissioning', instance.projectCommissioning);
  writeNotNull('ProjectDepositId', instance.projectDepositId);
  writeNotNull('ProjectDeposit', instance.projectDeposit);
  writeNotNull('InputByUserId', instance.inputByUserId);
  writeNotNull('ModifiedByUserId', instance.modifiedByUserId);
  writeNotNull(
      'UseEstimatedDatesForBilling', instance.useEstimatedDatesForBilling);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentOrderOrderBase _$WebApiModulesAgentOrderOrderBaseFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesAgentOrderOrderBase(
      description: json['Description'] as String?,
      officeLocationId: json['OfficeLocationId'] as String?,
      officeLocation: json['OfficeLocation'] as String?,
      warehouseId: json['WarehouseId'] as String?,
      warehouse: json['Warehouse'] as String?,
      warehouseCode: json['WarehouseCode'] as String?,
      departmentId: json['DepartmentId'] as String?,
      department: json['Department'] as String?,
      customerId: json['CustomerId'] as String?,
      customer: json['Customer'] as String?,
      customerNumber: json['CustomerNumber'] as String?,
      dealId: json['DealId'] as String?,
      deal: json['Deal'] as String?,
      dealNumber: json['DealNumber'] as String?,
      rateType: json['RateType'] as String?,
      rateTypeDisplay: json['RateTypeDisplay'] as String?,
      agentId: json['AgentId'] as String?,
      agent: json['Agent'] as String?,
      projectManagerId: json['ProjectManagerId'] as String?,
      projectManager: json['ProjectManager'] as String?,
      rental: json['Rental'] as bool?,
      sales: json['Sales'] as bool?,
      miscellaneous: json['Miscellaneous'] as bool?,
      labor: json['Labor'] as bool?,
      facilities: json['Facilities'] as bool?,
      transportation: json['Transportation'] as bool?,
      rentalSale: json['RentalSale'] as bool?,
      lossAndDamage: json['LossAndDamage'] as bool?,
      repair: json['Repair'] as bool?,
      hasRentalItem: json['HasRentalItem'] as bool?,
      hasSalesItem: json['HasSalesItem'] as bool?,
      hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
      hasLaborItem: json['HasLaborItem'] as bool?,
      hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
      hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
      hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
      hasRepair: json['HasRepair'] as bool?,
      activityDatesAndTimes: (json['ActivityDatesAndTimes'] as List<dynamic>?)
              ?.map((e) =>
                  WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                      e as Map<String, dynamic>))
              .toList() ??
          [],
      pickDate: json['PickDate'] as String?,
      pickTime: json['PickTime'] as String?,
      estimatedStartDate: json['EstimatedStartDate'] as String?,
      estimatedStartTime: json['EstimatedStartTime'] as String?,
      estimatedStopDate: json['EstimatedStopDate'] as String?,
      estimatedStopTime: json['EstimatedStopTime'] as String?,
      pickUpDate: json['PickUpDate'] as String?,
      pickUpTime: json['PickUpTime'] as String?,
      prepDate: json['PrepDate'] as String?,
      prepTime: json['PrepTime'] as String?,
      loadInDate: json['LoadInDate'] as String?,
      loadInTime: json['LoadInTime'] as String?,
      strikeDate: json['StrikeDate'] as String?,
      strikeTime: json['StrikeTime'] as String?,
      testDate: json['TestDate'] as String?,
      testTime: json['TestTime'] as String?,
      orderTypeId: json['OrderTypeId'] as String?,
      orderType: json['OrderType'] as String?,
      orderTypeCombineActivityTabs:
          json['OrderTypeCombineActivityTabs'] as bool?,
      pendingPo: json['PendingPo'] as bool?,
      poNumber: json['PoNumber'] as String?,
      poAmount: (json['PoAmount'] as num?)?.toDouble(),
      location: json['Location'] as String?,
      orderLocationId: json['OrderLocationId'] as String?,
      orderLocation: json['OrderLocation'] as String?,
      referenceNumber: json['ReferenceNumber'] as String?,
      total: (json['Total'] as num?)?.toDouble(),
      status: json['Status'] as String?,
      statusDate: json['StatusDate'] as String?,
      poApprovalStatusId: json['PoApprovalStatusId'] as String?,
      lockBillingDates: json['LockBillingDates'] as bool?,
      specifyBillingDatesByType: json['SpecifyBillingDatesByType'] as bool?,
      rentalBillingStartDate: json['RentalBillingStartDate'] as String?,
      rentalBillingEndDate: json['RentalBillingEndDate'] as String?,
      laborBillingStartDate: json['LaborBillingStartDate'] as String?,
      laborBillingEndDate: json['LaborBillingEndDate'] as String?,
      miscellaneousBillingStartDate:
          json['MiscellaneousBillingStartDate'] as String?,
      miscellaneousBillingEndDate:
          json['MiscellaneousBillingEndDate'] as String?,
      facilitiesBillingStartDate: json['FacilitiesBillingStartDate'] as String?,
      facilitiesBillingEndDate: json['FacilitiesBillingEndDate'] as String?,
      vehicleBillingStartDate: json['VehicleBillingStartDate'] as String?,
      vehicleBillingEndDate: json['VehicleBillingEndDate'] as String?,
      delayBillingSearchUntil: json['DelayBillingSearchUntil'] as String?,
      includePrepFeesInRentalRate: json['IncludePrepFeesInRentalRate'] as bool?,
      billingStartDate: json['BillingStartDate'] as String?,
      billingEndDate: json['BillingEndDate'] as String?,
      billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
      billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
      determineQuantitiesToBillBasedOn:
          json['DetermineQuantitiesToBillBasedOn'] as String?,
      billingCycleId: json['BillingCycleId'] as String?,
      billingCycle: json['BillingCycle'] as String?,
      billingCycleType: json['BillingCycleType'] as String?,
      paymentTermsId: json['PaymentTermsId'] as String?,
      paymentTerms: json['PaymentTerms'] as String?,
      paymentTypeId: json['PaymentTypeId'] as String?,
      paymentType: json['PaymentType'] as String?,
      currencyId: json['CurrencyId'] as String?,
      updateAllRatesToNewCurrency: json['UpdateAllRatesToNewCurrency'] as bool?,
      confirmUpdateAllRatesToNewCurrency:
          json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
      currencyCode: json['CurrencyCode'] as String?,
      currency: json['Currency'] as String?,
      currencySymbol: json['CurrencySymbol'] as String?,
      taxOptionId: json['TaxOptionId'] as String?,
      taxOption: json['TaxOption'] as String?,
      tax1Name: json['Tax1Name'] as String?,
      tax2Name: json['Tax2Name'] as String?,
      taxId: json['TaxId'] as String?,
      rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
      salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
      laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
      rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
      salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
      laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
      noCharge: json['NoCharge'] as bool?,
      noChargeReason: json['NoChargeReason'] as String?,
      printIssuedToAddressFrom: json['PrintIssuedToAddressFrom'] as String?,
      issuedToName: json['IssuedToName'] as String?,
      issuedToAttention: json['IssuedToAttention'] as String?,
      issuedToAttention2: json['IssuedToAttention2'] as String?,
      issuedToAddress1: json['IssuedToAddress1'] as String?,
      issuedToAddress2: json['IssuedToAddress2'] as String?,
      issuedToCity: json['IssuedToCity'] as String?,
      issuedToState: json['IssuedToState'] as String?,
      issuedToZipCode: json['IssuedToZipCode'] as String?,
      issuedToCountryId: json['IssuedToCountryId'] as String?,
      issuedToCountry: json['IssuedToCountry'] as String?,
      billToAddressDifferentFromIssuedToAddress:
          json['BillToAddressDifferentFromIssuedToAddress'] as bool?,
      billToAddressId: json['BillToAddressId'] as String?,
      billToName: json['BillToName'] as String?,
      billToAttention: json['BillToAttention'] as String?,
      billToAttention2: json['BillToAttention2'] as String?,
      billToAddress1: json['BillToAddress1'] as String?,
      billToAddress2: json['BillToAddress2'] as String?,
      billToCity: json['BillToCity'] as String?,
      billToState: json['BillToState'] as String?,
      billToZipCode: json['BillToZipCode'] as String?,
      billToCountryId: json['BillToCountryId'] as String?,
      billToCountry: json['BillToCountry'] as String?,
      discountReasonId: json['DiscountReasonId'] as String?,
      discountReason: json['DiscountReason'] as String?,
      requireContactConfirmation: json['RequireContactConfirmation'] as bool?,
      includeInBillingAnalysis: json['IncludeInBillingAnalysis'] as bool?,
      hiatusDiscountFrom: json['HiatusDiscountFrom'] as String?,
      roundTripRentals: json['RoundTripRentals'] as bool?,
      inGroup: json['InGroup'] as bool?,
      groupNumber: json['GroupNumber'] as int?,
      groupColor: json['GroupColor'] as int?,
      groupOrderBy: (json['GroupOrderBy'] as num?)?.toDouble(),
      coverLetterId: json['CoverLetterId'] as String?,
      coverLetter: json['CoverLetter'] as String?,
      termsConditionsId: json['TermsConditionsId'] as String?,
      termsConditions: json['TermsConditions'] as String?,
      outsideSalesRepresentativeId:
          json['OutsideSalesRepresentativeId'] as String?,
      outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
      marketTypeId: json['MarketTypeId'] as String?,
      marketType: json['MarketType'] as String?,
      marketSegmentId: json['MarketSegmentId'] as String?,
      marketSegment: json['MarketSegment'] as String?,
      marketSegmentJobId: json['MarketSegmentJobId'] as String?,
      marketSegmentJob: json['MarketSegmentJob'] as String?,
      outDeliveryId: json['OutDeliveryId'] as String?,
      outDeliveryDeliveryType: json['OutDeliveryDeliveryType'] as String?,
      outDeliveryRequiredDate: json['OutDeliveryRequiredDate'] as String?,
      outDeliveryRequiredTime: json['OutDeliveryRequiredTime'] as String?,
      outDeliveryTargetShipDate: json['OutDeliveryTargetShipDate'] as String?,
      outDeliveryTargetShipTime: json['OutDeliveryTargetShipTime'] as String?,
      outDeliveryDirection: json['OutDeliveryDirection'] as String?,
      outDeliveryAddressType: json['OutDeliveryAddressType'] as String?,
      outDeliveryFromLocation: json['OutDeliveryFromLocation'] as String?,
      outDeliveryFromContact: json['OutDeliveryFromContact'] as String?,
      outDeliveryFromContactPhone:
          json['OutDeliveryFromContactPhone'] as String?,
      outDeliveryFromAlternateContact:
          json['OutDeliveryFromAlternateContact'] as String?,
      outDeliveryFromAlternateContactPhone:
          json['OutDeliveryFromAlternateContactPhone'] as String?,
      outDeliveryFromAttention: json['OutDeliveryFromAttention'] as String?,
      outDeliveryFromAddress1: json['OutDeliveryFromAddress1'] as String?,
      outDeliveryFromAdd2ress: json['OutDeliveryFromAdd2ress'] as String?,
      outDeliveryFromCity: json['OutDeliveryFromCity'] as String?,
      outDeliveryFromState: json['OutDeliveryFromState'] as String?,
      outDeliveryFromZipCode: json['OutDeliveryFromZipCode'] as String?,
      outDeliveryFromCountry: json['OutDeliveryFromCountry'] as String?,
      outDeliveryFromCountryId: json['OutDeliveryFromCountryId'] as String?,
      outDeliveryFromCrossStreets:
          json['OutDeliveryFromCrossStreets'] as String?,
      outDeliveryToLocation: json['OutDeliveryToLocation'] as String?,
      outDeliveryToContact: json['OutDeliveryToContact'] as String?,
      outDeliveryToContactPhone: json['OutDeliveryToContactPhone'] as String?,
      outDeliveryToAlternateContact:
          json['OutDeliveryToAlternateContact'] as String?,
      outDeliveryToAlternateContactPhone:
          json['OutDeliveryToAlternateContactPhone'] as String?,
      outDeliveryToAttention: json['OutDeliveryToAttention'] as String?,
      outDeliveryToAddress1: json['OutDeliveryToAddress1'] as String?,
      outDeliveryToAddress2: json['OutDeliveryToAddress2'] as String?,
      outDeliveryToCity: json['OutDeliveryToCity'] as String?,
      outDeliveryToState: json['OutDeliveryToState'] as String?,
      outDeliveryToZipCode: json['OutDeliveryToZipCode'] as String?,
      outDeliveryToCountryId: json['OutDeliveryToCountryId'] as String?,
      outDeliveryToCountry: json['OutDeliveryToCountry'] as String?,
      outDeliveryToContactFax: json['OutDeliveryToContactFax'] as String?,
      outDeliveryToCrossStreets: json['OutDeliveryToCrossStreets'] as String?,
      outDeliveryDeliveryNotes: json['OutDeliveryDeliveryNotes'] as String?,
      outDeliveryCarrierId: json['OutDeliveryCarrierId'] as String?,
      outDeliveryCarrier: json['OutDeliveryCarrier'] as String?,
      outDeliveryCarrierAccount: json['OutDeliveryCarrierAccount'] as String?,
      outDeliveryShipViaId: json['OutDeliveryShipViaId'] as String?,
      outDeliveryShipVia: json['OutDeliveryShipVia'] as String?,
      outDeliveryInvoiceId: json['OutDeliveryInvoiceId'] as String?,
      outDeliveryVendorInvoiceId: json['OutDeliveryVendorInvoiceId'] as String?,
      outDeliveryEstimatedFreight:
          (json['OutDeliveryEstimatedFreight'] as num?)?.toDouble(),
      outDeliveryFreightInvoiceAmount:
          (json['OutDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
      outDeliveryChargeType: json['OutDeliveryChargeType'] as String?,
      outDeliveryFreightTrackingNumber:
          json['OutDeliveryFreightTrackingNumber'] as String?,
      outDeliveryFreightTrackingUrl:
          json['OutDeliveryFreightTrackingUrl'] as String?,
      outDeliveryPackageCode: json['OutDeliveryPackageCode'] as String?,
      outDeliveryBillPoFreightOnOrder:
          json['OutDeliveryBillPoFreightOnOrder'] as bool?,
      outDeliveryOnlineOrderNumber:
          json['OutDeliveryOnlineOrderNumber'] as String?,
      outDeliveryToVenue: json['OutDeliveryToVenue'] as String?,
      outDeliveryToVenueId: json['OutDeliveryToVenueId'] as String?,
      outDeliveryToWarehouse: json['OutDeliveryToWarehouse'] as String?,
      outDeliveryToWarehouseId: json['OutDeliveryToWarehouseId'] as String?,
      outDeliveryDateStamp: json['OutDeliveryDateStamp'] as String?,
      inDeliveryId: json['InDeliveryId'] as String?,
      inDeliveryDeliveryType: json['InDeliveryDeliveryType'] as String?,
      inDeliveryRequiredDate: json['InDeliveryRequiredDate'] as String?,
      inDeliveryRequiredTime: json['InDeliveryRequiredTime'] as String?,
      inDeliveryTargetShipDate: json['InDeliveryTargetShipDate'] as String?,
      inDeliveryTargetShipTime: json['InDeliveryTargetShipTime'] as String?,
      inDeliveryDirection: json['InDeliveryDirection'] as String?,
      inDeliveryAddressType: json['InDeliveryAddressType'] as String?,
      inDeliveryFromLocation: json['InDeliveryFromLocation'] as String?,
      inDeliveryFromContact: json['InDeliveryFromContact'] as String?,
      inDeliveryFromContactPhone: json['InDeliveryFromContactPhone'] as String?,
      inDeliveryFromAlternateContact:
          json['InDeliveryFromAlternateContact'] as String?,
      inDeliveryFromAlternateContactPhone:
          json['InDeliveryFromAlternateContactPhone'] as String?,
      inDeliveryFromAttention: json['InDeliveryFromAttention'] as String?,
      inDeliveryFromAddress1: json['InDeliveryFromAddress1'] as String?,
      inDeliveryFromAdd2ress: json['InDeliveryFromAdd2ress'] as String?,
      inDeliveryFromCity: json['InDeliveryFromCity'] as String?,
      inDeliveryFromState: json['InDeliveryFromState'] as String?,
      inDeliveryFromZipCode: json['InDeliveryFromZipCode'] as String?,
      inDeliveryFromCountry: json['InDeliveryFromCountry'] as String?,
      inDeliveryFromCountryId: json['InDeliveryFromCountryId'] as String?,
      inDeliveryFromCrossStreets: json['InDeliveryFromCrossStreets'] as String?,
      inDeliveryToLocation: json['InDeliveryToLocation'] as String?,
      inDeliveryToContact: json['InDeliveryToContact'] as String?,
      inDeliveryToContactPhone: json['InDeliveryToContactPhone'] as String?,
      inDeliveryToAlternateContact:
          json['InDeliveryToAlternateContact'] as String?,
      inDeliveryToAlternateContactPhone:
          json['InDeliveryToAlternateContactPhone'] as String?,
      inDeliveryToAttention: json['InDeliveryToAttention'] as String?,
      inDeliveryToAddress1: json['InDeliveryToAddress1'] as String?,
      inDeliveryToAddress2: json['InDeliveryToAddress2'] as String?,
      inDeliveryToCity: json['InDeliveryToCity'] as String?,
      inDeliveryToState: json['InDeliveryToState'] as String?,
      inDeliveryToZipCode: json['InDeliveryToZipCode'] as String?,
      inDeliveryToCountryId: json['InDeliveryToCountryId'] as String?,
      inDeliveryToCountry: json['InDeliveryToCountry'] as String?,
      inDeliveryToContactFax: json['InDeliveryToContactFax'] as String?,
      inDeliveryToCrossStreets: json['InDeliveryToCrossStreets'] as String?,
      inDeliveryDeliveryNotes: json['InDeliveryDeliveryNotes'] as String?,
      inDeliveryCarrierId: json['InDeliveryCarrierId'] as String?,
      inDeliveryCarrier: json['InDeliveryCarrier'] as String?,
      inDeliveryCarrierAccount: json['InDeliveryCarrierAccount'] as String?,
      inDeliveryShipViaId: json['InDeliveryShipViaId'] as String?,
      inDeliveryShipVia: json['InDeliveryShipVia'] as String?,
      inDeliveryInvoiceId: json['InDeliveryInvoiceId'] as String?,
      inDeliveryVendorInvoiceId: json['InDeliveryVendorInvoiceId'] as String?,
      inDeliveryEstimatedFreight:
          (json['InDeliveryEstimatedFreight'] as num?)?.toDouble(),
      inDeliveryFreightInvoiceAmount:
          (json['InDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
      inDeliveryChargeType: json['InDeliveryChargeType'] as String?,
      inDeliveryFreightTrackingNumber:
          json['InDeliveryFreightTrackingNumber'] as String?,
      inDeliveryFreightTrackingUrl:
          json['InDeliveryFreightTrackingUrl'] as String?,
      inDeliveryPackageCode: json['InDeliveryPackageCode'] as String?,
      inDeliveryBillPoFreightOnOrder:
          json['InDeliveryBillPoFreightOnOrder'] as bool?,
      inDeliveryOnlineOrderNumber:
          json['InDeliveryOnlineOrderNumber'] as String?,
      inDeliveryOnlineOrderStatus:
          json['InDeliveryOnlineOrderStatus'] as String?,
      inDeliveryToVenue: json['InDeliveryToVenue'] as String?,
      inDeliveryToVenueId: json['InDeliveryToVenueId'] as String?,
      inDeliveryToWarehouse: json['InDeliveryToWarehouse'] as String?,
      inDeliveryToWarehouseId: json['InDeliveryToWarehouseId'] as String?,
      inDeliveryDateStamp: json['InDeliveryDateStamp'] as String?,
      rentalDaysPerWeek: (json['RentalDaysPerWeek'] as num?)?.toDouble(),
      rentalDiscountPercent:
          (json['RentalDiscountPercent'] as num?)?.toDouble(),
      weeklyRentalTotal: (json['WeeklyRentalTotal'] as num?)?.toDouble(),
      monthlyRentalTotal: (json['MonthlyRentalTotal'] as num?)?.toDouble(),
      periodRentalTotal: (json['PeriodRentalTotal'] as num?)?.toDouble(),
      weeklyRentalTotalIncludesTax:
          json['WeeklyRentalTotalIncludesTax'] as bool?,
      monthlyRentalTotalIncludesTax:
          json['MonthlyRentalTotalIncludesTax'] as bool?,
      periodRentalTotalIncludesTax:
          json['PeriodRentalTotalIncludesTax'] as bool?,
      billLockedTotal: json['BillLockedTotal'] as bool?,
      salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
      salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
      salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
      partsDiscountPercent: (json['PartsDiscountPercent'] as num?)?.toDouble(),
      partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
      partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
      spaceDaysPerWeek: (json['SpaceDaysPerWeek'] as num?)?.toDouble(),
      spaceDiscountPercent: (json['SpaceDiscountPercent'] as num?)?.toDouble(),
      spaceSplitPercent: (json['SpaceSplitPercent'] as num?)?.toDouble(),
      weeklySpaceTotal: (json['WeeklySpaceTotal'] as num?)?.toDouble(),
      monthlySpaceTotal: (json['MonthlySpaceTotal'] as num?)?.toDouble(),
      periodSpaceTotal: (json['PeriodSpaceTotal'] as num?)?.toDouble(),
      weeklySpaceTotalIncludesTax: json['WeeklySpaceTotalIncludesTax'] as bool?,
      monthlySpaceTotalIncludesTax:
          json['MonthlySpaceTotalIncludesTax'] as bool?,
      periodSpaceTotalIncludesTax: json['PeriodSpaceTotalIncludesTax'] as bool?,
      vehicleDaysPerWeek: (json['VehicleDaysPerWeek'] as num?)?.toDouble(),
      vehicleDiscountPercent:
          (json['VehicleDiscountPercent'] as num?)?.toDouble(),
      weeklyVehicleTotal: (json['WeeklyVehicleTotal'] as num?)?.toDouble(),
      monthlyVehicleTotal: (json['MonthlyVehicleTotal'] as num?)?.toDouble(),
      periodVehicleTotal: (json['PeriodVehicleTotal'] as num?)?.toDouble(),
      weeklyVehicleTotalIncludesTax:
          json['WeeklyVehicleTotalIncludesTax'] as bool?,
      monthlyVehicleTotalIncludesTax:
          json['MonthlyVehicleTotalIncludesTax'] as bool?,
      periodVehicleTotalIncludesTax:
          json['PeriodVehicleTotalIncludesTax'] as bool?,
      miscDiscountPercent: (json['MiscDiscountPercent'] as num?)?.toDouble(),
      weeklyMiscTotal: (json['WeeklyMiscTotal'] as num?)?.toDouble(),
      monthlyMiscTotal: (json['MonthlyMiscTotal'] as num?)?.toDouble(),
      periodMiscTotal: (json['PeriodMiscTotal'] as num?)?.toDouble(),
      weeklyMiscTotalIncludesTax: json['WeeklyMiscTotalIncludesTax'] as bool?,
      monthlyMiscTotalIncludesTax: json['MonthlyMiscTotalIncludesTax'] as bool?,
      periodMiscTotalIncludesTax: json['PeriodMiscTotalIncludesTax'] as bool?,
      laborDiscountPercent: (json['LaborDiscountPercent'] as num?)?.toDouble(),
      weeklyLaborTotal: (json['WeeklyLaborTotal'] as num?)?.toDouble(),
      monthlyLaborTotal: (json['MonthlyLaborTotal'] as num?)?.toDouble(),
      periodLaborTotal: (json['PeriodLaborTotal'] as num?)?.toDouble(),
      weeklyLaborTotalIncludesTax: json['WeeklyLaborTotalIncludesTax'] as bool?,
      monthlyLaborTotalIncludesTax:
          json['MonthlyLaborTotalIncludesTax'] as bool?,
      periodLaborTotalIncludesTax: json['PeriodLaborTotalIncludesTax'] as bool?,
      rentalSaleDiscountPercent:
          (json['RentalSaleDiscountPercent'] as num?)?.toDouble(),
      rentalSaleTotal: (json['RentalSaleTotal'] as num?)?.toDouble(),
      rentalSaleTotalIncludesTax: json['RentalSaleTotalIncludesTax'] as bool?,
      lossAndDamageDiscountPercent:
          (json['LossAndDamageDiscountPercent'] as num?)?.toDouble(),
      lossAndDamageTotal: (json['LossAndDamageTotal'] as num?)?.toDouble(),
      lossAndDamageTotalIncludesTax:
          json['LossAndDamageTotalIncludesTax'] as bool?,
      combinedDaysPerWeek: (json['CombinedDaysPerWeek'] as num?)?.toDouble(),
      combinedDiscountPercent:
          (json['CombinedDiscountPercent'] as num?)?.toDouble(),
      weeklyCombinedTotal: (json['WeeklyCombinedTotal'] as num?)?.toDouble(),
      monthlyCombinedTotal: (json['MonthlyCombinedTotal'] as num?)?.toDouble(),
      periodCombinedTotal: (json['PeriodCombinedTotal'] as num?)?.toDouble(),
      weeklyCombinedTotalIncludesTax:
          json['WeeklyCombinedTotalIncludesTax'] as bool?,
      monthlyCombinedTotalIncludesTax:
          json['MonthlyCombinedTotalIncludesTax'] as bool?,
      periodCombinedTotalIncludesTax:
          json['PeriodCombinedTotalIncludesTax'] as bool?,
      disableEditingRentalRate: json['DisableEditingRentalRate'] as bool?,
      disableEditingSalesRate: json['DisableEditingSalesRate'] as bool?,
      disableEditingMiscellaneousRate:
          json['DisableEditingMiscellaneousRate'] as bool?,
      disableEditingLaborRate: json['DisableEditingLaborRate'] as bool?,
      disableEditingRentalSaleRate:
          json['DisableEditingRentalSaleRate'] as bool?,
      disableEditingLossAndDamageRate:
          json['DisableEditingLossAndDamageRate'] as bool?,
      rentalExtendedTotal: (json['RentalExtendedTotal'] as num?)?.toDouble(),
      salesExtendedTotal: (json['SalesExtendedTotal'] as num?)?.toDouble(),
      laborExtendedTotal: (json['LaborExtendedTotal'] as num?)?.toDouble(),
      miscellaneousExtendedTotal:
          (json['MiscellaneousExtendedTotal'] as num?)?.toDouble(),
      rentalSaleExtendedTotal:
          (json['RentalSaleExtendedTotal'] as num?)?.toDouble(),
      lossAndDamageExtendedTotal:
          (json['LossAndDamageExtendedTotal'] as num?)?.toDouble(),
      hasNotes: json['HasNotes'] as bool?,
      hasDocuments: json['HasDocuments'] as bool?,
      hasEmailHistory: json['HasEmailHistory'] as bool?,
      hasContacts: json['HasContacts'] as bool?,
      hasSubPurchaseOrders: json['HasSubPurchaseOrders'] as bool?,
      hasPickLists: json['HasPickLists'] as bool?,
      hasContracts: json['HasContracts'] as bool?,
      hasSuspendedContracts: json['HasSuspendedContracts'] as bool?,
      hasMultiOrderContracts: json['HasMultiOrderContracts'] as bool?,
      hasInvoices: json['HasInvoices'] as bool?,
      hasBillingWorksheets: json['HasBillingWorksheets'] as bool?,
      hasMultiOrderInvoices: json['HasMultiOrderInvoices'] as bool?,
      totalReplacementCost: (json['TotalReplacementCost'] as num?)?.toDouble(),
      presentationLayerId: json['PresentationLayerId'] as String?,
      presentationLayer: json['PresentationLayer'] as String?,
      isManualSort: json['IsManualSort'] as bool?,
      quoteOrderTitle: json['QuoteOrderTitle'] as String?,
      unassignedSubs: json['UnassignedSubs'] as bool?,
      nonTaxable: json['NonTaxable'] as bool?,
      enableProjects: json['EnableProjects'] as bool?,
      projectId: json['ProjectId'] as String?,
      projectNumber: json['ProjectNumber'] as String?,
      project: json['Project'] as String?,
      projectDrawingsId: json['ProjectDrawingsId'] as String?,
      projectDrawings: json['ProjectDrawings'] as String?,
      projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
      projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
      projectDropShipId: json['ProjectDropShipId'] as String?,
      projectDropShip: json['ProjectDropShip'] as String?,
      projectAsBuildId: json['ProjectAsBuildId'] as String?,
      projectAsBuild: json['ProjectAsBuild'] as String?,
      projectCommissioningId: json['ProjectCommissioningId'] as String?,
      projectCommissioning: json['ProjectCommissioning'] as String?,
      projectDepositId: json['ProjectDepositId'] as String?,
      projectDeposit: json['ProjectDeposit'] as String?,
      inputByUserId: json['InputByUserId'] as String?,
      modifiedByUserId: json['ModifiedByUserId'] as String?,
      useEstimatedDatesForBilling: json['UseEstimatedDatesForBilling'] as bool?,
      dateStamp: json['DateStamp'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesAgentOrderOrderBaseToJson(
    WebApiModulesAgentOrderOrderBase instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Description', instance.description);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('CustomerNumber', instance.customerNumber);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('RateTypeDisplay', instance.rateTypeDisplay);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('ProjectManager', instance.projectManager);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('Miscellaneous', instance.miscellaneous);
  writeNotNull('Labor', instance.labor);
  writeNotNull('Facilities', instance.facilities);
  writeNotNull('Transportation', instance.transportation);
  writeNotNull('RentalSale', instance.rentalSale);
  writeNotNull('LossAndDamage', instance.lossAndDamage);
  writeNotNull('Repair', instance.repair);
  writeNotNull('HasRentalItem', instance.hasRentalItem);
  writeNotNull('HasSalesItem', instance.hasSalesItem);
  writeNotNull('HasMiscellaneousItem', instance.hasMiscellaneousItem);
  writeNotNull('HasLaborItem', instance.hasLaborItem);
  writeNotNull('HasFacilitiesItem', instance.hasFacilitiesItem);
  writeNotNull('HasLossAndDamageItem', instance.hasLossAndDamageItem);
  writeNotNull('HasRentalSaleItem', instance.hasRentalSaleItem);
  writeNotNull('HasRepair', instance.hasRepair);
  writeNotNull('ActivityDatesAndTimes',
      instance.activityDatesAndTimes?.map((e) => e.toJson()).toList());
  writeNotNull('PickDate', instance.pickDate);
  writeNotNull('PickTime', instance.pickTime);
  writeNotNull('EstimatedStartDate', instance.estimatedStartDate);
  writeNotNull('EstimatedStartTime', instance.estimatedStartTime);
  writeNotNull('EstimatedStopDate', instance.estimatedStopDate);
  writeNotNull('EstimatedStopTime', instance.estimatedStopTime);
  writeNotNull('PickUpDate', instance.pickUpDate);
  writeNotNull('PickUpTime', instance.pickUpTime);
  writeNotNull('PrepDate', instance.prepDate);
  writeNotNull('PrepTime', instance.prepTime);
  writeNotNull('LoadInDate', instance.loadInDate);
  writeNotNull('LoadInTime', instance.loadInTime);
  writeNotNull('StrikeDate', instance.strikeDate);
  writeNotNull('StrikeTime', instance.strikeTime);
  writeNotNull('TestDate', instance.testDate);
  writeNotNull('TestTime', instance.testTime);
  writeNotNull('OrderTypeId', instance.orderTypeId);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull(
      'OrderTypeCombineActivityTabs', instance.orderTypeCombineActivityTabs);
  writeNotNull('PendingPo', instance.pendingPo);
  writeNotNull('PoNumber', instance.poNumber);
  writeNotNull('PoAmount', instance.poAmount);
  writeNotNull('Location', instance.location);
  writeNotNull('OrderLocationId', instance.orderLocationId);
  writeNotNull('OrderLocation', instance.orderLocation);
  writeNotNull('ReferenceNumber', instance.referenceNumber);
  writeNotNull('Total', instance.total);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('PoApprovalStatusId', instance.poApprovalStatusId);
  writeNotNull('LockBillingDates', instance.lockBillingDates);
  writeNotNull('SpecifyBillingDatesByType', instance.specifyBillingDatesByType);
  writeNotNull('RentalBillingStartDate', instance.rentalBillingStartDate);
  writeNotNull('RentalBillingEndDate', instance.rentalBillingEndDate);
  writeNotNull('LaborBillingStartDate', instance.laborBillingStartDate);
  writeNotNull('LaborBillingEndDate', instance.laborBillingEndDate);
  writeNotNull(
      'MiscellaneousBillingStartDate', instance.miscellaneousBillingStartDate);
  writeNotNull(
      'MiscellaneousBillingEndDate', instance.miscellaneousBillingEndDate);
  writeNotNull(
      'FacilitiesBillingStartDate', instance.facilitiesBillingStartDate);
  writeNotNull('FacilitiesBillingEndDate', instance.facilitiesBillingEndDate);
  writeNotNull('VehicleBillingStartDate', instance.vehicleBillingStartDate);
  writeNotNull('VehicleBillingEndDate', instance.vehicleBillingEndDate);
  writeNotNull('DelayBillingSearchUntil', instance.delayBillingSearchUntil);
  writeNotNull(
      'IncludePrepFeesInRentalRate', instance.includePrepFeesInRentalRate);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingEndDate', instance.billingEndDate);
  writeNotNull('BillingWeeks', instance.billingWeeks);
  writeNotNull('BillingMonths', instance.billingMonths);
  writeNotNull('DetermineQuantitiesToBillBasedOn',
      instance.determineQuantitiesToBillBasedOn);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('BillingCycle', instance.billingCycle);
  writeNotNull('BillingCycleType', instance.billingCycleType);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull(
      'UpdateAllRatesToNewCurrency', instance.updateAllRatesToNewCurrency);
  writeNotNull('ConfirmUpdateAllRatesToNewCurrency',
      instance.confirmUpdateAllRatesToNewCurrency);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('Tax1Name', instance.tax1Name);
  writeNotNull('Tax2Name', instance.tax2Name);
  writeNotNull('TaxId', instance.taxId);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('NoCharge', instance.noCharge);
  writeNotNull('NoChargeReason', instance.noChargeReason);
  writeNotNull('PrintIssuedToAddressFrom', instance.printIssuedToAddressFrom);
  writeNotNull('IssuedToName', instance.issuedToName);
  writeNotNull('IssuedToAttention', instance.issuedToAttention);
  writeNotNull('IssuedToAttention2', instance.issuedToAttention2);
  writeNotNull('IssuedToAddress1', instance.issuedToAddress1);
  writeNotNull('IssuedToAddress2', instance.issuedToAddress2);
  writeNotNull('IssuedToCity', instance.issuedToCity);
  writeNotNull('IssuedToState', instance.issuedToState);
  writeNotNull('IssuedToZipCode', instance.issuedToZipCode);
  writeNotNull('IssuedToCountryId', instance.issuedToCountryId);
  writeNotNull('IssuedToCountry', instance.issuedToCountry);
  writeNotNull('BillToAddressDifferentFromIssuedToAddress',
      instance.billToAddressDifferentFromIssuedToAddress);
  writeNotNull('BillToAddressId', instance.billToAddressId);
  writeNotNull('BillToName', instance.billToName);
  writeNotNull('BillToAttention', instance.billToAttention);
  writeNotNull('BillToAttention2', instance.billToAttention2);
  writeNotNull('BillToAddress1', instance.billToAddress1);
  writeNotNull('BillToAddress2', instance.billToAddress2);
  writeNotNull('BillToCity', instance.billToCity);
  writeNotNull('BillToState', instance.billToState);
  writeNotNull('BillToZipCode', instance.billToZipCode);
  writeNotNull('BillToCountryId', instance.billToCountryId);
  writeNotNull('BillToCountry', instance.billToCountry);
  writeNotNull('DiscountReasonId', instance.discountReasonId);
  writeNotNull('DiscountReason', instance.discountReason);
  writeNotNull(
      'RequireContactConfirmation', instance.requireContactConfirmation);
  writeNotNull('IncludeInBillingAnalysis', instance.includeInBillingAnalysis);
  writeNotNull('HiatusDiscountFrom', instance.hiatusDiscountFrom);
  writeNotNull('RoundTripRentals', instance.roundTripRentals);
  writeNotNull('InGroup', instance.inGroup);
  writeNotNull('GroupNumber', instance.groupNumber);
  writeNotNull('GroupColor', instance.groupColor);
  writeNotNull('GroupOrderBy', instance.groupOrderBy);
  writeNotNull('CoverLetterId', instance.coverLetterId);
  writeNotNull('CoverLetter', instance.coverLetter);
  writeNotNull('TermsConditionsId', instance.termsConditionsId);
  writeNotNull('TermsConditions', instance.termsConditions);
  writeNotNull(
      'OutsideSalesRepresentativeId', instance.outsideSalesRepresentativeId);
  writeNotNull(
      'OutsideSalesRepresentative', instance.outsideSalesRepresentative);
  writeNotNull('MarketTypeId', instance.marketTypeId);
  writeNotNull('MarketType', instance.marketType);
  writeNotNull('MarketSegmentId', instance.marketSegmentId);
  writeNotNull('MarketSegment', instance.marketSegment);
  writeNotNull('MarketSegmentJobId', instance.marketSegmentJobId);
  writeNotNull('MarketSegmentJob', instance.marketSegmentJob);
  writeNotNull('OutDeliveryId', instance.outDeliveryId);
  writeNotNull('OutDeliveryDeliveryType', instance.outDeliveryDeliveryType);
  writeNotNull('OutDeliveryRequiredDate', instance.outDeliveryRequiredDate);
  writeNotNull('OutDeliveryRequiredTime', instance.outDeliveryRequiredTime);
  writeNotNull('OutDeliveryTargetShipDate', instance.outDeliveryTargetShipDate);
  writeNotNull('OutDeliveryTargetShipTime', instance.outDeliveryTargetShipTime);
  writeNotNull('OutDeliveryDirection', instance.outDeliveryDirection);
  writeNotNull('OutDeliveryAddressType', instance.outDeliveryAddressType);
  writeNotNull('OutDeliveryFromLocation', instance.outDeliveryFromLocation);
  writeNotNull('OutDeliveryFromContact', instance.outDeliveryFromContact);
  writeNotNull(
      'OutDeliveryFromContactPhone', instance.outDeliveryFromContactPhone);
  writeNotNull('OutDeliveryFromAlternateContact',
      instance.outDeliveryFromAlternateContact);
  writeNotNull('OutDeliveryFromAlternateContactPhone',
      instance.outDeliveryFromAlternateContactPhone);
  writeNotNull('OutDeliveryFromAttention', instance.outDeliveryFromAttention);
  writeNotNull('OutDeliveryFromAddress1', instance.outDeliveryFromAddress1);
  writeNotNull('OutDeliveryFromAdd2ress', instance.outDeliveryFromAdd2ress);
  writeNotNull('OutDeliveryFromCity', instance.outDeliveryFromCity);
  writeNotNull('OutDeliveryFromState', instance.outDeliveryFromState);
  writeNotNull('OutDeliveryFromZipCode', instance.outDeliveryFromZipCode);
  writeNotNull('OutDeliveryFromCountry', instance.outDeliveryFromCountry);
  writeNotNull('OutDeliveryFromCountryId', instance.outDeliveryFromCountryId);
  writeNotNull(
      'OutDeliveryFromCrossStreets', instance.outDeliveryFromCrossStreets);
  writeNotNull('OutDeliveryToLocation', instance.outDeliveryToLocation);
  writeNotNull('OutDeliveryToContact', instance.outDeliveryToContact);
  writeNotNull('OutDeliveryToContactPhone', instance.outDeliveryToContactPhone);
  writeNotNull(
      'OutDeliveryToAlternateContact', instance.outDeliveryToAlternateContact);
  writeNotNull('OutDeliveryToAlternateContactPhone',
      instance.outDeliveryToAlternateContactPhone);
  writeNotNull('OutDeliveryToAttention', instance.outDeliveryToAttention);
  writeNotNull('OutDeliveryToAddress1', instance.outDeliveryToAddress1);
  writeNotNull('OutDeliveryToAddress2', instance.outDeliveryToAddress2);
  writeNotNull('OutDeliveryToCity', instance.outDeliveryToCity);
  writeNotNull('OutDeliveryToState', instance.outDeliveryToState);
  writeNotNull('OutDeliveryToZipCode', instance.outDeliveryToZipCode);
  writeNotNull('OutDeliveryToCountryId', instance.outDeliveryToCountryId);
  writeNotNull('OutDeliveryToCountry', instance.outDeliveryToCountry);
  writeNotNull('OutDeliveryToContactFax', instance.outDeliveryToContactFax);
  writeNotNull('OutDeliveryToCrossStreets', instance.outDeliveryToCrossStreets);
  writeNotNull('OutDeliveryDeliveryNotes', instance.outDeliveryDeliveryNotes);
  writeNotNull('OutDeliveryCarrierId', instance.outDeliveryCarrierId);
  writeNotNull('OutDeliveryCarrier', instance.outDeliveryCarrier);
  writeNotNull('OutDeliveryCarrierAccount', instance.outDeliveryCarrierAccount);
  writeNotNull('OutDeliveryShipViaId', instance.outDeliveryShipViaId);
  writeNotNull('OutDeliveryShipVia', instance.outDeliveryShipVia);
  writeNotNull('OutDeliveryInvoiceId', instance.outDeliveryInvoiceId);
  writeNotNull(
      'OutDeliveryVendorInvoiceId', instance.outDeliveryVendorInvoiceId);
  writeNotNull(
      'OutDeliveryEstimatedFreight', instance.outDeliveryEstimatedFreight);
  writeNotNull('OutDeliveryFreightInvoiceAmount',
      instance.outDeliveryFreightInvoiceAmount);
  writeNotNull('OutDeliveryChargeType', instance.outDeliveryChargeType);
  writeNotNull('OutDeliveryFreightTrackingNumber',
      instance.outDeliveryFreightTrackingNumber);
  writeNotNull(
      'OutDeliveryFreightTrackingUrl', instance.outDeliveryFreightTrackingUrl);
  writeNotNull('OutDeliveryPackageCode', instance.outDeliveryPackageCode);
  writeNotNull('OutDeliveryBillPoFreightOnOrder',
      instance.outDeliveryBillPoFreightOnOrder);
  writeNotNull(
      'OutDeliveryOnlineOrderNumber', instance.outDeliveryOnlineOrderNumber);
  writeNotNull('OutDeliveryToVenue', instance.outDeliveryToVenue);
  writeNotNull('OutDeliveryToVenueId', instance.outDeliveryToVenueId);
  writeNotNull('OutDeliveryToWarehouse', instance.outDeliveryToWarehouse);
  writeNotNull('OutDeliveryToWarehouseId', instance.outDeliveryToWarehouseId);
  writeNotNull('OutDeliveryDateStamp', instance.outDeliveryDateStamp);
  writeNotNull('InDeliveryId', instance.inDeliveryId);
  writeNotNull('InDeliveryDeliveryType', instance.inDeliveryDeliveryType);
  writeNotNull('InDeliveryRequiredDate', instance.inDeliveryRequiredDate);
  writeNotNull('InDeliveryRequiredTime', instance.inDeliveryRequiredTime);
  writeNotNull('InDeliveryTargetShipDate', instance.inDeliveryTargetShipDate);
  writeNotNull('InDeliveryTargetShipTime', instance.inDeliveryTargetShipTime);
  writeNotNull('InDeliveryDirection', instance.inDeliveryDirection);
  writeNotNull('InDeliveryAddressType', instance.inDeliveryAddressType);
  writeNotNull('InDeliveryFromLocation', instance.inDeliveryFromLocation);
  writeNotNull('InDeliveryFromContact', instance.inDeliveryFromContact);
  writeNotNull(
      'InDeliveryFromContactPhone', instance.inDeliveryFromContactPhone);
  writeNotNull('InDeliveryFromAlternateContact',
      instance.inDeliveryFromAlternateContact);
  writeNotNull('InDeliveryFromAlternateContactPhone',
      instance.inDeliveryFromAlternateContactPhone);
  writeNotNull('InDeliveryFromAttention', instance.inDeliveryFromAttention);
  writeNotNull('InDeliveryFromAddress1', instance.inDeliveryFromAddress1);
  writeNotNull('InDeliveryFromAdd2ress', instance.inDeliveryFromAdd2ress);
  writeNotNull('InDeliveryFromCity', instance.inDeliveryFromCity);
  writeNotNull('InDeliveryFromState', instance.inDeliveryFromState);
  writeNotNull('InDeliveryFromZipCode', instance.inDeliveryFromZipCode);
  writeNotNull('InDeliveryFromCountry', instance.inDeliveryFromCountry);
  writeNotNull('InDeliveryFromCountryId', instance.inDeliveryFromCountryId);
  writeNotNull(
      'InDeliveryFromCrossStreets', instance.inDeliveryFromCrossStreets);
  writeNotNull('InDeliveryToLocation', instance.inDeliveryToLocation);
  writeNotNull('InDeliveryToContact', instance.inDeliveryToContact);
  writeNotNull('InDeliveryToContactPhone', instance.inDeliveryToContactPhone);
  writeNotNull(
      'InDeliveryToAlternateContact', instance.inDeliveryToAlternateContact);
  writeNotNull('InDeliveryToAlternateContactPhone',
      instance.inDeliveryToAlternateContactPhone);
  writeNotNull('InDeliveryToAttention', instance.inDeliveryToAttention);
  writeNotNull('InDeliveryToAddress1', instance.inDeliveryToAddress1);
  writeNotNull('InDeliveryToAddress2', instance.inDeliveryToAddress2);
  writeNotNull('InDeliveryToCity', instance.inDeliveryToCity);
  writeNotNull('InDeliveryToState', instance.inDeliveryToState);
  writeNotNull('InDeliveryToZipCode', instance.inDeliveryToZipCode);
  writeNotNull('InDeliveryToCountryId', instance.inDeliveryToCountryId);
  writeNotNull('InDeliveryToCountry', instance.inDeliveryToCountry);
  writeNotNull('InDeliveryToContactFax', instance.inDeliveryToContactFax);
  writeNotNull('InDeliveryToCrossStreets', instance.inDeliveryToCrossStreets);
  writeNotNull('InDeliveryDeliveryNotes', instance.inDeliveryDeliveryNotes);
  writeNotNull('InDeliveryCarrierId', instance.inDeliveryCarrierId);
  writeNotNull('InDeliveryCarrier', instance.inDeliveryCarrier);
  writeNotNull('InDeliveryCarrierAccount', instance.inDeliveryCarrierAccount);
  writeNotNull('InDeliveryShipViaId', instance.inDeliveryShipViaId);
  writeNotNull('InDeliveryShipVia', instance.inDeliveryShipVia);
  writeNotNull('InDeliveryInvoiceId', instance.inDeliveryInvoiceId);
  writeNotNull('InDeliveryVendorInvoiceId', instance.inDeliveryVendorInvoiceId);
  writeNotNull(
      'InDeliveryEstimatedFreight', instance.inDeliveryEstimatedFreight);
  writeNotNull('InDeliveryFreightInvoiceAmount',
      instance.inDeliveryFreightInvoiceAmount);
  writeNotNull('InDeliveryChargeType', instance.inDeliveryChargeType);
  writeNotNull('InDeliveryFreightTrackingNumber',
      instance.inDeliveryFreightTrackingNumber);
  writeNotNull(
      'InDeliveryFreightTrackingUrl', instance.inDeliveryFreightTrackingUrl);
  writeNotNull('InDeliveryPackageCode', instance.inDeliveryPackageCode);
  writeNotNull('InDeliveryBillPoFreightOnOrder',
      instance.inDeliveryBillPoFreightOnOrder);
  writeNotNull(
      'InDeliveryOnlineOrderNumber', instance.inDeliveryOnlineOrderNumber);
  writeNotNull(
      'InDeliveryOnlineOrderStatus', instance.inDeliveryOnlineOrderStatus);
  writeNotNull('InDeliveryToVenue', instance.inDeliveryToVenue);
  writeNotNull('InDeliveryToVenueId', instance.inDeliveryToVenueId);
  writeNotNull('InDeliveryToWarehouse', instance.inDeliveryToWarehouse);
  writeNotNull('InDeliveryToWarehouseId', instance.inDeliveryToWarehouseId);
  writeNotNull('InDeliveryDateStamp', instance.inDeliveryDateStamp);
  writeNotNull('RentalDaysPerWeek', instance.rentalDaysPerWeek);
  writeNotNull('RentalDiscountPercent', instance.rentalDiscountPercent);
  writeNotNull('WeeklyRentalTotal', instance.weeklyRentalTotal);
  writeNotNull('MonthlyRentalTotal', instance.monthlyRentalTotal);
  writeNotNull('PeriodRentalTotal', instance.periodRentalTotal);
  writeNotNull(
      'WeeklyRentalTotalIncludesTax', instance.weeklyRentalTotalIncludesTax);
  writeNotNull(
      'MonthlyRentalTotalIncludesTax', instance.monthlyRentalTotalIncludesTax);
  writeNotNull(
      'PeriodRentalTotalIncludesTax', instance.periodRentalTotalIncludesTax);
  writeNotNull('BillLockedTotal', instance.billLockedTotal);
  writeNotNull('SalesDiscountPercent', instance.salesDiscountPercent);
  writeNotNull('SalesTotal', instance.salesTotal);
  writeNotNull('SalesTotalIncludesTax', instance.salesTotalIncludesTax);
  writeNotNull('PartsDiscountPercent', instance.partsDiscountPercent);
  writeNotNull('PartsTotal', instance.partsTotal);
  writeNotNull('PartsTotalIncludesTax', instance.partsTotalIncludesTax);
  writeNotNull('SpaceDaysPerWeek', instance.spaceDaysPerWeek);
  writeNotNull('SpaceDiscountPercent', instance.spaceDiscountPercent);
  writeNotNull('SpaceSplitPercent', instance.spaceSplitPercent);
  writeNotNull('WeeklySpaceTotal', instance.weeklySpaceTotal);
  writeNotNull('MonthlySpaceTotal', instance.monthlySpaceTotal);
  writeNotNull('PeriodSpaceTotal', instance.periodSpaceTotal);
  writeNotNull(
      'WeeklySpaceTotalIncludesTax', instance.weeklySpaceTotalIncludesTax);
  writeNotNull(
      'MonthlySpaceTotalIncludesTax', instance.monthlySpaceTotalIncludesTax);
  writeNotNull(
      'PeriodSpaceTotalIncludesTax', instance.periodSpaceTotalIncludesTax);
  writeNotNull('VehicleDaysPerWeek', instance.vehicleDaysPerWeek);
  writeNotNull('VehicleDiscountPercent', instance.vehicleDiscountPercent);
  writeNotNull('WeeklyVehicleTotal', instance.weeklyVehicleTotal);
  writeNotNull('MonthlyVehicleTotal', instance.monthlyVehicleTotal);
  writeNotNull('PeriodVehicleTotal', instance.periodVehicleTotal);
  writeNotNull(
      'WeeklyVehicleTotalIncludesTax', instance.weeklyVehicleTotalIncludesTax);
  writeNotNull('MonthlyVehicleTotalIncludesTax',
      instance.monthlyVehicleTotalIncludesTax);
  writeNotNull(
      'PeriodVehicleTotalIncludesTax', instance.periodVehicleTotalIncludesTax);
  writeNotNull('MiscDiscountPercent', instance.miscDiscountPercent);
  writeNotNull('WeeklyMiscTotal', instance.weeklyMiscTotal);
  writeNotNull('MonthlyMiscTotal', instance.monthlyMiscTotal);
  writeNotNull('PeriodMiscTotal', instance.periodMiscTotal);
  writeNotNull(
      'WeeklyMiscTotalIncludesTax', instance.weeklyMiscTotalIncludesTax);
  writeNotNull(
      'MonthlyMiscTotalIncludesTax', instance.monthlyMiscTotalIncludesTax);
  writeNotNull(
      'PeriodMiscTotalIncludesTax', instance.periodMiscTotalIncludesTax);
  writeNotNull('LaborDiscountPercent', instance.laborDiscountPercent);
  writeNotNull('WeeklyLaborTotal', instance.weeklyLaborTotal);
  writeNotNull('MonthlyLaborTotal', instance.monthlyLaborTotal);
  writeNotNull('PeriodLaborTotal', instance.periodLaborTotal);
  writeNotNull(
      'WeeklyLaborTotalIncludesTax', instance.weeklyLaborTotalIncludesTax);
  writeNotNull(
      'MonthlyLaborTotalIncludesTax', instance.monthlyLaborTotalIncludesTax);
  writeNotNull(
      'PeriodLaborTotalIncludesTax', instance.periodLaborTotalIncludesTax);
  writeNotNull('RentalSaleDiscountPercent', instance.rentalSaleDiscountPercent);
  writeNotNull('RentalSaleTotal', instance.rentalSaleTotal);
  writeNotNull(
      'RentalSaleTotalIncludesTax', instance.rentalSaleTotalIncludesTax);
  writeNotNull(
      'LossAndDamageDiscountPercent', instance.lossAndDamageDiscountPercent);
  writeNotNull('LossAndDamageTotal', instance.lossAndDamageTotal);
  writeNotNull(
      'LossAndDamageTotalIncludesTax', instance.lossAndDamageTotalIncludesTax);
  writeNotNull('CombinedDaysPerWeek', instance.combinedDaysPerWeek);
  writeNotNull('CombinedDiscountPercent', instance.combinedDiscountPercent);
  writeNotNull('WeeklyCombinedTotal', instance.weeklyCombinedTotal);
  writeNotNull('MonthlyCombinedTotal', instance.monthlyCombinedTotal);
  writeNotNull('PeriodCombinedTotal', instance.periodCombinedTotal);
  writeNotNull('WeeklyCombinedTotalIncludesTax',
      instance.weeklyCombinedTotalIncludesTax);
  writeNotNull('MonthlyCombinedTotalIncludesTax',
      instance.monthlyCombinedTotalIncludesTax);
  writeNotNull('PeriodCombinedTotalIncludesTax',
      instance.periodCombinedTotalIncludesTax);
  writeNotNull('DisableEditingRentalRate', instance.disableEditingRentalRate);
  writeNotNull('DisableEditingSalesRate', instance.disableEditingSalesRate);
  writeNotNull('DisableEditingMiscellaneousRate',
      instance.disableEditingMiscellaneousRate);
  writeNotNull('DisableEditingLaborRate', instance.disableEditingLaborRate);
  writeNotNull(
      'DisableEditingRentalSaleRate', instance.disableEditingRentalSaleRate);
  writeNotNull('DisableEditingLossAndDamageRate',
      instance.disableEditingLossAndDamageRate);
  writeNotNull('RentalExtendedTotal', instance.rentalExtendedTotal);
  writeNotNull('SalesExtendedTotal', instance.salesExtendedTotal);
  writeNotNull('LaborExtendedTotal', instance.laborExtendedTotal);
  writeNotNull(
      'MiscellaneousExtendedTotal', instance.miscellaneousExtendedTotal);
  writeNotNull('RentalSaleExtendedTotal', instance.rentalSaleExtendedTotal);
  writeNotNull(
      'LossAndDamageExtendedTotal', instance.lossAndDamageExtendedTotal);
  writeNotNull('HasNotes', instance.hasNotes);
  writeNotNull('HasDocuments', instance.hasDocuments);
  writeNotNull('HasEmailHistory', instance.hasEmailHistory);
  writeNotNull('HasContacts', instance.hasContacts);
  writeNotNull('HasSubPurchaseOrders', instance.hasSubPurchaseOrders);
  writeNotNull('HasPickLists', instance.hasPickLists);
  writeNotNull('HasContracts', instance.hasContracts);
  writeNotNull('HasSuspendedContracts', instance.hasSuspendedContracts);
  writeNotNull('HasMultiOrderContracts', instance.hasMultiOrderContracts);
  writeNotNull('HasInvoices', instance.hasInvoices);
  writeNotNull('HasBillingWorksheets', instance.hasBillingWorksheets);
  writeNotNull('HasMultiOrderInvoices', instance.hasMultiOrderInvoices);
  writeNotNull('TotalReplacementCost', instance.totalReplacementCost);
  writeNotNull('PresentationLayerId', instance.presentationLayerId);
  writeNotNull('PresentationLayer', instance.presentationLayer);
  writeNotNull('IsManualSort', instance.isManualSort);
  writeNotNull('QuoteOrderTitle', instance.quoteOrderTitle);
  writeNotNull('UnassignedSubs', instance.unassignedSubs);
  writeNotNull('NonTaxable', instance.nonTaxable);
  writeNotNull('EnableProjects', instance.enableProjects);
  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('ProjectNumber', instance.projectNumber);
  writeNotNull('Project', instance.project);
  writeNotNull('ProjectDrawingsId', instance.projectDrawingsId);
  writeNotNull('ProjectDrawings', instance.projectDrawings);
  writeNotNull('ProjectItemsOrderedId', instance.projectItemsOrderedId);
  writeNotNull('ProjectItemsOrdered', instance.projectItemsOrdered);
  writeNotNull('ProjectDropShipId', instance.projectDropShipId);
  writeNotNull('ProjectDropShip', instance.projectDropShip);
  writeNotNull('ProjectAsBuildId', instance.projectAsBuildId);
  writeNotNull('ProjectAsBuild', instance.projectAsBuild);
  writeNotNull('ProjectCommissioningId', instance.projectCommissioningId);
  writeNotNull('ProjectCommissioning', instance.projectCommissioning);
  writeNotNull('ProjectDepositId', instance.projectDepositId);
  writeNotNull('ProjectDeposit', instance.projectDeposit);
  writeNotNull('InputByUserId', instance.inputByUserId);
  writeNotNull('ModifiedByUserId', instance.modifiedByUserId);
  writeNotNull(
      'UseEstimatedDatesForBilling', instance.useEstimatedDatesForBilling);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentOrderOrderDocument
    _$WebApiModulesAgentOrderOrderDocumentFromJson(Map<String, dynamic> json) =>
        WebApiModulesAgentOrderOrderDocument(
          orderId: json['OrderId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesAgentOrderOrderDocumentToJson(
    WebApiModulesAgentOrderOrderDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentOrderOrderDocumentPostRequest
    _$WebApiModulesAgentOrderOrderDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderOrderDocumentPostRequest(
          orderId: json['OrderId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentOrderOrderDocumentPostRequestToJson(
    WebApiModulesAgentOrderOrderDocumentPostRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentOrderOrderDocumentPutRequest
    _$WebApiModulesAgentOrderOrderDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderOrderDocumentPutRequest(
          orderId: json['OrderId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentOrderOrderDocumentPutRequestToJson(
    WebApiModulesAgentOrderOrderDocumentPutRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentOrderOrderMessage
    _$WebApiModulesAgentOrderOrderMessageFromJson(Map<String, dynamic> json) =>
        WebApiModulesAgentOrderOrderMessage(
          message: json['Message'] as String?,
          preventCheckOut: json['PreventCheckOut'] as bool?,
        );

Map<String, dynamic> _$WebApiModulesAgentOrderOrderMessageToJson(
    WebApiModulesAgentOrderOrderMessage instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Message', instance.message);
  writeNotNull('PreventCheckOut', instance.preventCheckOut);
  return val;
}

WebApiModulesAgentOrderOrderMessagesResponse
    _$WebApiModulesAgentOrderOrderMessagesResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderOrderMessagesResponse(
          messages: (json['Messages'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesAgentOrderOrderMessage.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentOrderOrderMessagesResponseToJson(
    WebApiModulesAgentOrderOrderMessagesResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Messages', instance.messages?.map((e) => e.toJson()).toList());
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentOrderPoWorksheetSessionTotalsResponse
    _$WebApiModulesAgentOrderPoWorksheetSessionTotalsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderPoWorksheetSessionTotalsResponse(
          grossTotal: (json['GrossTotal'] as num?)?.toDouble(),
          discount: (json['Discount'] as num?)?.toDouble(),
          subTotal: (json['SubTotal'] as num?)?.toDouble(),
          tax: (json['Tax'] as num?)?.toDouble(),
          total: (json['Total'] as num?)?.toDouble(),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderPoWorksheetSessionTotalsResponseToJson(
        WebApiModulesAgentOrderPoWorksheetSessionTotalsResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('GrossTotal', instance.grossTotal);
  writeNotNull('Discount', instance.discount);
  writeNotNull('SubTotal', instance.subTotal);
  writeNotNull('Tax', instance.tax);
  writeNotNull('Total', instance.total);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentOrderQuoteNewVersionResponse
    _$WebApiModulesAgentOrderQuoteNewVersionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderQuoteNewVersionResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          newVersion: json['NewVersion'] == null
              ? null
              : WebApiModulesAgentQuoteQuote.fromJson(
                  json['NewVersion'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$WebApiModulesAgentOrderQuoteNewVersionResponseToJson(
    WebApiModulesAgentOrderQuoteNewVersionResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('NewVersion', instance.newVersion?.toJson());
  return val;
}

WebApiModulesAgentOrderQuoteToOrderRequest
    _$WebApiModulesAgentOrderQuoteToOrderRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderQuoteToOrderRequest(
          quoteId: json['QuoteId'] as String?,
          locationId: json['LocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentOrderQuoteToOrderRequestToJson(
    WebApiModulesAgentOrderQuoteToOrderRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuoteId', instance.quoteId);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesAgentOrderQuoteToOrderResponse
    _$WebApiModulesAgentOrderQuoteToOrderResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderQuoteToOrderResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          order: json['Order'] == null
              ? null
              : WebApiModulesAgentOrderOrder.fromJson(
                  json['Order'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$WebApiModulesAgentOrderQuoteToOrderResponseToJson(
    WebApiModulesAgentOrderQuoteToOrderResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('Order', instance.order?.toJson());
  return val;
}

WebApiModulesAgentOrderReserveUnreserveQuoteResponse
    _$WebApiModulesAgentOrderReserveUnreserveQuoteResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderReserveUnreserveQuoteResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          quote: json['Quote'] == null
              ? null
              : WebApiModulesAgentQuoteQuote.fromJson(
                  json['Quote'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderReserveUnreserveQuoteResponseToJson(
        WebApiModulesAgentOrderReserveUnreserveQuoteResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('Quote', instance.quote?.toJson());
  return val;
}

WebApiModulesAgentOrderUpdatePoWorksheetSessionRequest
    _$WebApiModulesAgentOrderUpdatePoWorksheetSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderUpdatePoWorksheetSessionRequest(
          recType: json['RecType'] as String?,
          vendorId: json['VendorId'] as String?,
          contactId: json['ContactId'] as String?,
          rateType: json['RateType'] as String?,
          currencyId: json['CurrencyId'] as String?,
          billingCycleId: json['BillingCycleId'] as String?,
          requiredDate: json['RequiredDate'] == null
              ? null
              : DateTime.parse(json['RequiredDate'] as String),
          requiredTime: json['RequiredTime'] as String?,
          fromDate: json['FromDate'] == null
              ? null
              : DateTime.parse(json['FromDate'] as String),
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
          deliveryId: json['DeliveryId'] as String?,
          adjustContractDates: json['AdjustContractDates'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderUpdatePoWorksheetSessionRequestToJson(
        WebApiModulesAgentOrderUpdatePoWorksheetSessionRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('RecType', instance.recType);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('ContactId', instance.contactId);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('RequiredDate', instance.requiredDate?.toIso8601String());
  writeNotNull('RequiredTime', instance.requiredTime);
  writeNotNull('FromDate', instance.fromDate?.toIso8601String());
  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  writeNotNull('DeliveryId', instance.deliveryId);
  writeNotNull('AdjustContractDates', instance.adjustContractDates);
  return val;
}

WebApiModulesAgentOrderUpdatePoWorksheetSessionResponse
    _$WebApiModulesAgentOrderUpdatePoWorksheetSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderUpdatePoWorksheetSessionResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentOrderUpdatePoWorksheetSessionResponseToJson(
        WebApiModulesAgentOrderUpdatePoWorksheetSessionResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentOrderUserCanInsertResponse
    _$WebApiModulesAgentOrderUserCanInsertResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentOrderUserCanInsertResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentOrderUserCanInsertResponseToJson(
    WebApiModulesAgentOrderUserCanInsertResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentProjectCreateQuoteFromProjectRequest
    _$WebApiModulesAgentProjectCreateQuoteFromProjectRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentProjectCreateQuoteFromProjectRequest(
          projectId: json['ProjectId'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentProjectCreateQuoteFromProjectRequestToJson(
        WebApiModulesAgentProjectCreateQuoteFromProjectRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  return val;
}

WebApiModulesAgentProjectCreateQuoteFromProjectResponse
    _$WebApiModulesAgentProjectCreateQuoteFromProjectResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentProjectCreateQuoteFromProjectResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          quoteId: json['QuoteId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentProjectCreateQuoteFromProjectResponseToJson(
        WebApiModulesAgentProjectCreateQuoteFromProjectResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('QuoteId', instance.quoteId);
  return val;
}

WebApiModulesAgentProjectProject _$WebApiModulesAgentProjectProjectFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesAgentProjectProject(
      projectId: json['ProjectId'] as String?,
      projectNumber: json['ProjectNumber'] as String?,
      project: json['Project'] as String?,
      officeLocationId: json['OfficeLocationId'] as String?,
      officeLocation: json['OfficeLocation'] as String?,
      warehouseId: json['WarehouseId'] as String?,
      warehouse: json['Warehouse'] as String?,
      departmentId: json['DepartmentId'] as String?,
      department: json['Department'] as String?,
      dealId: json['DealId'] as String?,
      deal: json['Deal'] as String?,
      status: json['Status'] as String?,
      statusDate: json['StatusDate'] as String?,
      projectManagerId: json['ProjectManagerId'] as String?,
      projectManager: json['ProjectManager'] as String?,
      agentId: json['AgentId'] as String?,
      agent: json['Agent'] as String?,
      primaryContact: json['PrimaryContact'] as String?,
      requestedBy: json['RequestedBy'] as String?,
      outsideSalesRepresentativeId:
          json['OutsideSalesRepresentativeId'] as String?,
      outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
      projectDescription: json['ProjectDescription'] as String?,
      rental: json['Rental'] as bool?,
      sales: json['Sales'] as bool?,
      facilities: json['Facilities'] as bool?,
      labor: json['Labor'] as bool?,
      miscellaneous: json['Miscellaneous'] as bool?,
      transportation: json['Transportation'] as bool?,
      pickDate: json['PickDate'] as String?,
      pickTime: json['PickTime'] as String?,
      estimatedStartDate: json['EstimatedStartDate'] as String?,
      estimatedStartTime: json['EstimatedStartTime'] as String?,
      estimatedStopDate: json['EstimatedStopDate'] as String?,
      estimatedStopTime: json['EstimatedStopTime'] as String?,
      ccPrimaryApproverWhenEmailingBackupApprover:
          json['CcPrimaryApproverWhenEmailingBackupApprover'] as bool?,
      inactive: json['Inactive'] as bool?,
      dateStamp: json['DateStamp'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesAgentProjectProjectToJson(
    WebApiModulesAgentProjectProject instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('ProjectNumber', instance.projectNumber);
  writeNotNull('Project', instance.project);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('ProjectManager', instance.projectManager);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('PrimaryContact', instance.primaryContact);
  writeNotNull('RequestedBy', instance.requestedBy);
  writeNotNull(
      'OutsideSalesRepresentativeId', instance.outsideSalesRepresentativeId);
  writeNotNull(
      'OutsideSalesRepresentative', instance.outsideSalesRepresentative);
  writeNotNull('ProjectDescription', instance.projectDescription);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('Facilities', instance.facilities);
  writeNotNull('Labor', instance.labor);
  writeNotNull('Miscellaneous', instance.miscellaneous);
  writeNotNull('Transportation', instance.transportation);
  writeNotNull('PickDate', instance.pickDate);
  writeNotNull('PickTime', instance.pickTime);
  writeNotNull('EstimatedStartDate', instance.estimatedStartDate);
  writeNotNull('EstimatedStartTime', instance.estimatedStartTime);
  writeNotNull('EstimatedStopDate', instance.estimatedStopDate);
  writeNotNull('EstimatedStopTime', instance.estimatedStopTime);
  writeNotNull('CcPrimaryApproverWhenEmailingBackupApprover',
      instance.ccPrimaryApproverWhenEmailingBackupApprover);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentProjectProjectDocument
    _$WebApiModulesAgentProjectProjectDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentProjectProjectDocument(
          projectId: json['ProjectId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesAgentProjectProjectDocumentToJson(
    WebApiModulesAgentProjectProjectDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentProjectProjectDocumentPostRequest
    _$WebApiModulesAgentProjectProjectDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentProjectProjectDocumentPostRequest(
          projectId: json['ProjectId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentProjectProjectDocumentPostRequestToJson(
        WebApiModulesAgentProjectProjectDocumentPostRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentProjectProjectDocumentPutRequest
    _$WebApiModulesAgentProjectProjectDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentProjectProjectDocumentPutRequest(
          projectId: json['ProjectId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentProjectProjectDocumentPutRequestToJson(
    WebApiModulesAgentProjectProjectDocumentPutRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentPurchaseOrderCompleteReceiveContractRequest
    _$WebApiModulesAgentPurchaseOrderCompleteReceiveContractRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderCompleteReceiveContractRequest(
          createOutContracts: json['CreateOutContracts'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderCompleteReceiveContractRequestToJson(
        WebApiModulesAgentPurchaseOrderCompleteReceiveContractRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CreateOutContracts', instance.createOutContracts);
  return val;
}

WebApiModulesAgentPurchaseOrderConfirmDropShipRequest
    _$WebApiModulesAgentPurchaseOrderConfirmDropShipRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderConfirmDropShipRequest(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          deliveryId: json['DeliveryId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderConfirmDropShipRequestToJson(
        WebApiModulesAgentPurchaseOrderConfirmDropShipRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('DeliveryId', instance.deliveryId);
  return val;
}

WebApiModulesAgentPurchaseOrderConfirmDropShipResponse
    _$WebApiModulesAgentPurchaseOrderConfirmDropShipResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderConfirmDropShipResponse(
          receiveContractIds: json['ReceiveContractIds'] as String?,
          outContractIds: json['OutContractIds'] as String?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          contracts: (json['Contracts'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesWarehouseContractContract.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderConfirmDropShipResponseToJson(
        WebApiModulesAgentPurchaseOrderConfirmDropShipResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ReceiveContractIds', instance.receiveContractIds);
  writeNotNull('OutContractIds', instance.outContractIds);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull(
      'Contracts', instance.contracts?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveRequest
    _$WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveRequest(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          deliveryId: json['DeliveryId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveRequestToJson(
        WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('DeliveryId', instance.deliveryId);
  return val;
}

WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveResponse
    _$WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveResponse(
          returnContractIds: json['ReturnContractIds'] as String?,
          inContractIds: json['InContractIds'] as String?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          contracts: (json['Contracts'] as List<dynamic>?)
                  ?.map((e) => WebApiModulesWarehouseContractContract.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveResponseToJson(
        WebApiModulesAgentPurchaseOrderConfirmVendorRetrieveResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ReturnContractIds', instance.returnContractIds);
  writeNotNull('InContractIds', instance.inContractIds);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull(
      'Contracts', instance.contracts?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentPurchaseOrderCopyPurchaseOrderRequest
    _$WebApiModulesAgentPurchaseOrderCopyPurchaseOrderRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderCopyPurchaseOrderRequest(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          locationId: json['LocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderCopyPurchaseOrderRequestToJson(
        WebApiModulesAgentPurchaseOrderCopyPurchaseOrderRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesAgentPurchaseOrderCopyPurchaseOrderResponse
    _$WebApiModulesAgentPurchaseOrderCopyPurchaseOrderResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderCopyPurchaseOrderResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          purchaseOrder: json['PurchaseOrder'] == null
              ? null
              : WebApiModulesAgentPurchaseOrderPurchaseOrder.fromJson(
                  json['PurchaseOrder'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderCopyPurchaseOrderResponseToJson(
        WebApiModulesAgentPurchaseOrderCopyPurchaseOrderResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('PurchaseOrder', instance.purchaseOrder?.toJson());
  return val;
}

WebApiModulesAgentPurchaseOrderGetPurchaseOrderResponse
    _$WebApiModulesAgentPurchaseOrderGetPurchaseOrderResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderGetPurchaseOrderResponse(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
          description: json['Description'] as String?,
          purchaseOrderDate: json['PurchaseOrderDate'] as String?,
          requisitionNumber: json['RequisitionNumber'] as String?,
          requisitionDate: json['RequisitionDate'] as String?,
          vendorId: json['VendorId'] as String?,
          vendor: json['Vendor'] as String?,
          agentId: json['AgentId'] as String?,
          agent: json['Agent'] as String?,
          status: json['Status'] as String?,
          statusDate: json['StatusDate'] as String?,
          referenceNumber: json['ReferenceNumber'] as String?,
          needsApproval: json['NeedsApproval'] as bool?,
          approvedByUserId: json['ApprovedByUserId'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          officeLocation: json['OfficeLocation'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          quantityHolding: json['QuantityHolding'] as int?,
          quantityToBarCode: json['QuantityToBarCode'] as int?,
          rental: json['Rental'] as bool?,
          sales: json['Sales'] as bool?,
          parts: json['Parts'] as bool?,
          labor: json['Labor'] as bool?,
          miscellaneous: json['Miscellaneous'] as bool?,
          vehicle: json['Vehicle'] as bool?,
          subRent: json['SubRent'] as bool?,
          subSale: json['SubSale'] as bool?,
          subLabor: json['SubLabor'] as bool?,
          subMiscellaneous: json['SubMiscellaneous'] as bool?,
          subVehicle: json['SubVehicle'] as bool?,
          repair: json['Repair'] as bool?,
          consignment: json['Consignment'] as bool?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
          vendorHasConsignment: json['VendorHasConsignment'] as bool?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          dealNumber: json['DealNumber'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          rateType: json['RateType'] as String?,
          termsConditionsId: json['TermsConditionsId'] as String?,
          termsConditions: json['TermsConditions'] as String?,
          departmentLocationRequiresApproval:
              json['DepartmentLocationRequiresApproval'] as bool?,
          total: (json['Total'] as num?)?.toDouble(),
          poTypeId: json['PoTypeId'] as String?,
          poType: json['PoType'] as String?,
          poClassificationId: json['PoClassificationId'] as String?,
          poClassification: json['PoClassification'] as String?,
          activityDatesAndTimes: (json['ActivityDatesAndTimes']
                      as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          estimatedStartDate: json['EstimatedStartDate'] as String?,
          estimatedStartTime: json['EstimatedStartTime'] as String?,
          estimatedStopDate: json['EstimatedStopDate'] as String?,
          estimatedStopTime: json['EstimatedStopTime'] as String?,
          billingStartDate: json['BillingStartDate'] as String?,
          billingEndDate: json['BillingEndDate'] as String?,
          billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
          billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
          invoicedAmount: (json['InvoicedAmount'] as num?)?.toDouble(),
          projectManagerId: json['ProjectManagerId'] as String?,
          projectManager: json['ProjectManager'] as String?,
          receiveDeliveryId: json['ReceiveDeliveryId'] as String?,
          receiveDeliveryDeliveryType:
              json['ReceiveDeliveryDeliveryType'] as String?,
          receiveDeliveryRequiredDate:
              json['ReceiveDeliveryRequiredDate'] as String?,
          receiveDeliveryRequiredTime:
              json['ReceiveDeliveryRequiredTime'] as String?,
          receiveDeliveryTargetShipDate:
              json['ReceiveDeliveryTargetShipDate'] as String?,
          receiveDeliveryTargetShipTime:
              json['ReceiveDeliveryTargetShipTime'] as String?,
          receiveDeliveryDirection: json['ReceiveDeliveryDirection'] as String?,
          receiveDeliveryAddressType:
              json['ReceiveDeliveryAddressType'] as String?,
          receiveDeliveryFromLocation:
              json['ReceiveDeliveryFromLocation'] as String?,
          receiveDeliveryFromContact:
              json['ReceiveDeliveryFromContact'] as String?,
          receiveDeliveryFromContactPhone:
              json['ReceiveDeliveryFromContactPhone'] as String?,
          receiveDeliveryFromAlternateContact:
              json['ReceiveDeliveryFromAlternateContact'] as String?,
          receiveDeliveryFromAlternateContactPhone:
              json['ReceiveDeliveryFromAlternateContactPhone'] as String?,
          receiveDeliveryFromAttention:
              json['ReceiveDeliveryFromAttention'] as String?,
          receiveDeliveryFromAddress1:
              json['ReceiveDeliveryFromAddress1'] as String?,
          receiveDeliveryFromAdd2ress:
              json['ReceiveDeliveryFromAdd2ress'] as String?,
          receiveDeliveryFromCity: json['ReceiveDeliveryFromCity'] as String?,
          receiveDeliveryFromState: json['ReceiveDeliveryFromState'] as String?,
          receiveDeliveryFromZipCode:
              json['ReceiveDeliveryFromZipCode'] as String?,
          receiveDeliveryFromCountry:
              json['ReceiveDeliveryFromCountry'] as String?,
          receiveDeliveryFromCountryId:
              json['ReceiveDeliveryFromCountryId'] as String?,
          receiveDeliveryFromCrossStreets:
              json['ReceiveDeliveryFromCrossStreets'] as String?,
          receiveDeliveryToLocation:
              json['ReceiveDeliveryToLocation'] as String?,
          receiveDeliveryToVenue: json['ReceiveDeliveryToVenue'] as String?,
          receiveDeliveryToVenueId: json['ReceiveDeliveryToVenueId'] as String?,
          receiveDeliveryToWarehouse:
              json['ReceiveDeliveryToWarehouse'] as String?,
          receiveDeliveryToWarehouseId:
              json['ReceiveDeliveryToWarehouseId'] as String?,
          receiveDeliveryToContact: json['ReceiveDeliveryToContact'] as String?,
          receiveDeliveryToContactPhone:
              json['ReceiveDeliveryToContactPhone'] as String?,
          receiveDeliveryToAlternateContact:
              json['ReceiveDeliveryToAlternateContact'] as String?,
          receiveDeliveryToAlternateContactPhone:
              json['ReceiveDeliveryToAlternateContactPhone'] as String?,
          receiveDeliveryToAttention:
              json['ReceiveDeliveryToAttention'] as String?,
          receiveDeliveryToAddress1:
              json['ReceiveDeliveryToAddress1'] as String?,
          receiveDeliveryToAddress2:
              json['ReceiveDeliveryToAddress2'] as String?,
          receiveDeliveryToCity: json['ReceiveDeliveryToCity'] as String?,
          receiveDeliveryToState: json['ReceiveDeliveryToState'] as String?,
          receiveDeliveryToZipCode: json['ReceiveDeliveryToZipCode'] as String?,
          receiveDeliveryToCountryId:
              json['ReceiveDeliveryToCountryId'] as String?,
          receiveDeliveryToCountry: json['ReceiveDeliveryToCountry'] as String?,
          receiveDeliveryToContactFax:
              json['ReceiveDeliveryToContactFax'] as String?,
          receiveDeliveryToCrossStreets:
              json['ReceiveDeliveryToCrossStreets'] as String?,
          receiveDeliveryDeliveryNotes:
              json['ReceiveDeliveryDeliveryNotes'] as String?,
          receiveDeliveryCarrierId: json['ReceiveDeliveryCarrierId'] as String?,
          receiveDeliveryCarrier: json['ReceiveDeliveryCarrier'] as String?,
          receiveDeliveryCarrierAccount:
              json['ReceiveDeliveryCarrierAccount'] as String?,
          receiveDeliveryShipViaId: json['ReceiveDeliveryShipViaId'] as String?,
          receiveDeliveryShipVia: json['ReceiveDeliveryShipVia'] as String?,
          receiveDeliveryInvoiceId: json['ReceiveDeliveryInvoiceId'] as String?,
          receiveDeliveryVendorInvoiceId:
              json['ReceiveDeliveryVendorInvoiceId'] as String?,
          receiveDeliveryEstimatedFreight:
              (json['ReceiveDeliveryEstimatedFreight'] as num?)?.toDouble(),
          receiveDeliveryFreightInvoiceAmount:
              (json['ReceiveDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
          receiveDeliveryChargeType:
              json['ReceiveDeliveryChargeType'] as String?,
          receiveDeliveryFreightTrackingNumber:
              json['ReceiveDeliveryFreightTrackingNumber'] as String?,
          receiveDeliveryFreightTrackingUrl:
              json['ReceiveDeliveryFreightTrackingUrl'] as String?,
          receiveDeliveryDropShip: json['ReceiveDeliveryDropShip'] as bool?,
          receiveDeliveryPackageCode:
              json['ReceiveDeliveryPackageCode'] as String?,
          receiveDeliveryBillPoFreightOnOrder:
              json['ReceiveDeliveryBillPoFreightOnOrder'] as bool?,
          receiveDeliveryOnlineOrderNumber:
              json['ReceiveDeliveryOnlineOrderNumber'] as String?,
          receiveDeliveryOnlineOrderStatus:
              json['ReceiveDeliveryOnlineOrderStatus'] as String?,
          receiveDeliveryDateStamp: json['ReceiveDeliveryDateStamp'] as String?,
          returnDeliveryId: json['ReturnDeliveryId'] as String?,
          returnDeliveryDeliveryType:
              json['ReturnDeliveryDeliveryType'] as String?,
          returnDeliveryRequiredDate:
              json['ReturnDeliveryRequiredDate'] as String?,
          returnDeliveryRequiredTime:
              json['ReturnDeliveryRequiredTime'] as String?,
          returnDeliveryTargetShipDate:
              json['ReturnDeliveryTargetShipDate'] as String?,
          returnDeliveryTargetShipTime:
              json['ReturnDeliveryTargetShipTime'] as String?,
          returnDeliveryDirection: json['ReturnDeliveryDirection'] as String?,
          returnDeliveryAddressType:
              json['ReturnDeliveryAddressType'] as String?,
          returnDeliveryFromLocation:
              json['ReturnDeliveryFromLocation'] as String?,
          returnDeliveryFromContact:
              json['ReturnDeliveryFromContact'] as String?,
          returnDeliveryFromContactPhone:
              json['ReturnDeliveryFromContactPhone'] as String?,
          returnDeliveryFromAlternateContact:
              json['ReturnDeliveryFromAlternateContact'] as String?,
          returnDeliveryFromAlternateContactPhone:
              json['ReturnDeliveryFromAlternateContactPhone'] as String?,
          returnDeliveryFromAttention:
              json['ReturnDeliveryFromAttention'] as String?,
          returnDeliveryFromAddress1:
              json['ReturnDeliveryFromAddress1'] as String?,
          returnDeliveryFromAdd2ress:
              json['ReturnDeliveryFromAdd2ress'] as String?,
          returnDeliveryFromCity: json['ReturnDeliveryFromCity'] as String?,
          returnDeliveryFromState: json['ReturnDeliveryFromState'] as String?,
          returnDeliveryFromZipCode:
              json['ReturnDeliveryFromZipCode'] as String?,
          returnDeliveryFromCountry:
              json['ReturnDeliveryFromCountry'] as String?,
          returnDeliveryFromCountryId:
              json['ReturnDeliveryFromCountryId'] as String?,
          returnDeliveryFromCrossStreets:
              json['ReturnDeliveryFromCrossStreets'] as String?,
          returnDeliveryToLocation: json['ReturnDeliveryToLocation'] as String?,
          returnDeliveryToVenue: json['ReturnDeliveryToVenue'] as String?,
          returnDeliveryToVenueId: json['ReturnDeliveryToVenueId'] as String?,
          returnDeliveryToWarehouse:
              json['ReturnDeliveryToWarehouse'] as String?,
          returnDeliveryToWarehouseId:
              json['ReturnDeliveryToWarehouseId'] as String?,
          returnDeliveryToContact: json['ReturnDeliveryToContact'] as String?,
          returnDeliveryToContactPhone:
              json['ReturnDeliveryToContactPhone'] as String?,
          returnDeliveryToAlternateContact:
              json['ReturnDeliveryToAlternateContact'] as String?,
          returnDeliveryToAlternateContactPhone:
              json['ReturnDeliveryToAlternateContactPhone'] as String?,
          returnDeliveryToAttention:
              json['ReturnDeliveryToAttention'] as String?,
          returnDeliveryToAddress1: json['ReturnDeliveryToAddress1'] as String?,
          returnDeliveryToAddress2: json['ReturnDeliveryToAddress2'] as String?,
          returnDeliveryToCity: json['ReturnDeliveryToCity'] as String?,
          returnDeliveryToState: json['ReturnDeliveryToState'] as String?,
          returnDeliveryToZipCode: json['ReturnDeliveryToZipCode'] as String?,
          returnDeliveryToCountryId:
              json['ReturnDeliveryToCountryId'] as String?,
          returnDeliveryToCountry: json['ReturnDeliveryToCountry'] as String?,
          returnDeliveryToContactFax:
              json['ReturnDeliveryToContactFax'] as String?,
          returnDeliveryToCrossStreets:
              json['ReturnDeliveryToCrossStreets'] as String?,
          returnDeliveryDeliveryNotes:
              json['ReturnDeliveryDeliveryNotes'] as String?,
          returnDeliveryCarrierId: json['ReturnDeliveryCarrierId'] as String?,
          returnDeliveryCarrier: json['ReturnDeliveryCarrier'] as String?,
          returnDeliveryCarrierAccount:
              json['ReturnDeliveryCarrierAccount'] as String?,
          returnDeliveryShipViaId: json['ReturnDeliveryShipViaId'] as String?,
          returnDeliveryShipVia: json['ReturnDeliveryShipVia'] as String?,
          returnDeliveryInvoiceId: json['ReturnDeliveryInvoiceId'] as String?,
          returnDeliveryVendorInvoiceId:
              json['ReturnDeliveryVendorInvoiceId'] as String?,
          returnDeliveryEstimatedFreight:
              (json['ReturnDeliveryEstimatedFreight'] as num?)?.toDouble(),
          returnDeliveryFreightInvoiceAmount:
              (json['ReturnDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
          returnDeliveryChargeType: json['ReturnDeliveryChargeType'] as String?,
          returnDeliveryFreightTrackingNumber:
              json['ReturnDeliveryFreightTrackingNumber'] as String?,
          returnDeliveryFreightTrackingUrl:
              json['ReturnDeliveryFreightTrackingUrl'] as String?,
          returnDeliveryVendorRetrieve:
              json['ReturnDeliveryVendorRetrieve'] as bool?,
          returnDeliveryPackageCode:
              json['ReturnDeliveryPackageCode'] as String?,
          returnDeliveryBillPoFreightOnOrder:
              json['ReturnDeliveryBillPoFreightOnOrder'] as bool?,
          returnDeliveryOnlineOrderNumber:
              json['ReturnDeliveryOnlineOrderNumber'] as String?,
          returnDeliveryOnlineOrderStatus:
              json['ReturnDeliveryOnlineOrderStatus'] as String?,
          returnDeliveryDateStamp: json['ReturnDeliveryDateStamp'] as String?,
          enableProjects: json['EnableProjects'] as bool?,
          projectId: json['ProjectId'] as String?,
          projectNumber: json['ProjectNumber'] as String?,
          project: json['Project'] as String?,
          projectDrawingsId: json['ProjectDrawingsId'] as String?,
          projectDrawings: json['ProjectDrawings'] as String?,
          projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
          projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
          projectDropShipId: json['ProjectDropShipId'] as String?,
          projectDropShip: json['ProjectDropShip'] as String?,
          projectAsBuildId: json['ProjectAsBuildId'] as String?,
          projectAsBuild: json['ProjectAsBuild'] as String?,
          projectCommissioningId: json['ProjectCommissioningId'] as String?,
          projectCommissioning: json['ProjectCommissioning'] as String?,
          projectDepositId: json['ProjectDepositId'] as String?,
          projectDeposit: json['ProjectDeposit'] as String?,
          location: json['Location'] as String?,
          currencyId: json['CurrencyId'] as String?,
          updateAllRatesToNewCurrency:
              json['UpdateAllRatesToNewCurrency'] as bool?,
          confirmUpdateAllRatesToNewCurrency:
              json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currency: json['Currency'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          billingCycleId: json['BillingCycleId'] as String?,
          billingCycle: json['BillingCycle'] as String?,
          remitToAttention1: json['RemitToAttention1'] as String?,
          remitToAttention2: json['RemitToAttention2'] as String?,
          remitToAddress1: json['RemitToAddress1'] as String?,
          remitToAddress2: json['RemitToAddress2'] as String?,
          remitToCity: json['RemitToCity'] as String?,
          remitToState: json['RemitToState'] as String?,
          remitToCountryId: json['RemitToCountryId'] as String?,
          remitToCountry: json['RemitToCountry'] as String?,
          remitToZipCode: json['RemitToZipCode'] as String?,
          remitToEmail: json['RemitToEmail'] as String?,
          remitToPhone: json['RemitToPhone'] as String?,
          paymentTypeId: json['PaymentTypeId'] as String?,
          paymentType: json['PaymentType'] as String?,
          paymentTermsId: json['PaymentTermsId'] as String?,
          paymentTerms: json['PaymentTerms'] as String?,
          paymentTermsDueInDays: json['PaymentTermsDueInDays'] as int?,
          taxOptionId: json['TaxOptionId'] as String?,
          taxOption: json['TaxOption'] as String?,
          taxId: json['TaxId'] as String?,
          tax1Name: json['Tax1Name'] as String?,
          tax2Name: json['Tax2Name'] as String?,
          rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
          salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
          laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
          rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
          salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
          laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
          hasRentalItem: json['HasRentalItem'] as bool?,
          hasSalesItem: json['HasSalesItem'] as bool?,
          hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
          hasLaborItem: json['HasLaborItem'] as bool?,
          hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
          hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
          hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
          hasConsignItem: json['HasConsignItem'] as bool?,
          hasPartsItem: json['HasPartsItem'] as bool?,
          rentalDiscountPercent:
              (json['RentalDiscountPercent'] as num?)?.toDouble(),
          rentalTotal: (json['RentalTotal'] as num?)?.toDouble(),
          rentalTotalIncludesTax: json['RentalTotalIncludesTax'] as bool?,
          salesDiscountPercent:
              (json['SalesDiscountPercent'] as num?)?.toDouble(),
          salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
          salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
          partsDiscountPercent:
              (json['PartsDiscountPercent'] as num?)?.toDouble(),
          partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
          partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
          vehicleDiscountPercent:
              (json['VehicleDiscountPercent'] as num?)?.toDouble(),
          vehicleTotal: (json['VehicleTotal'] as num?)?.toDouble(),
          vehicleTotalIncludesTax: json['VehicleTotalIncludesTax'] as bool?,
          miscDiscountPercent:
              (json['MiscDiscountPercent'] as num?)?.toDouble(),
          miscTotal: (json['MiscTotal'] as num?)?.toDouble(),
          miscTotalIncludesTax: json['MiscTotalIncludesTax'] as bool?,
          laborDiscountPercent:
              (json['LaborDiscountPercent'] as num?)?.toDouble(),
          laborTotal: (json['LaborTotal'] as num?)?.toDouble(),
          laborTotalIncludesTax: json['LaborTotalIncludesTax'] as bool?,
          subRentalDaysPerWeek:
              (json['SubRentalDaysPerWeek'] as num?)?.toDouble(),
          subRentalDiscountPercent:
              (json['SubRentalDiscountPercent'] as num?)?.toDouble(),
          weeklySubRentalTotal:
              (json['WeeklySubRentalTotal'] as num?)?.toDouble(),
          monthlySubRentalTotal:
              (json['MonthlySubRentalTotal'] as num?)?.toDouble(),
          periodSubRentalTotal:
              (json['PeriodSubRentalTotal'] as num?)?.toDouble(),
          weeklySubRentalTotalIncludesTax:
              json['WeeklySubRentalTotalIncludesTax'] as bool?,
          monthlySubRentalTotalIncludesTax:
              json['MonthlySubRentalTotalIncludesTax'] as bool?,
          periodSubRentalTotalIncludesTax:
              json['PeriodSubRentalTotalIncludesTax'] as bool?,
          subSalesDiscountPercent:
              (json['SubSalesDiscountPercent'] as num?)?.toDouble(),
          subSalesTotal: (json['SubSalesTotal'] as num?)?.toDouble(),
          subSalesTotalIncludesTax: json['SubSalesTotalIncludesTax'] as bool?,
          subVehicleDaysPerWeek:
              (json['SubVehicleDaysPerWeek'] as num?)?.toDouble(),
          subvehicleDiscountPercent:
              (json['SubvehicleDiscountPercent'] as num?)?.toDouble(),
          weeklySubVehicleTotal:
              (json['WeeklySubVehicleTotal'] as num?)?.toDouble(),
          monthlySubVehicleTotal:
              (json['MonthlySubVehicleTotal'] as num?)?.toDouble(),
          periodSubVehicleTotal:
              (json['PeriodSubVehicleTotal'] as num?)?.toDouble(),
          weeklySubVehicleTotalIncludesTax:
              json['WeeklySubVehicleTotalIncludesTax'] as bool?,
          monthlySubVehicleTotalIncludesTax:
              json['MonthlySubVehicleTotalIncludesTax'] as bool?,
          periodSubVehicleTotalIncludesTax:
              json['PeriodSubVehicleTotalIncludesTax'] as bool?,
          subMiscDiscountPercent:
              (json['SubMiscDiscountPercent'] as num?)?.toDouble(),
          weeklySubMiscTotal: (json['WeeklySubMiscTotal'] as num?)?.toDouble(),
          monthlySubMiscTotal:
              (json['MonthlySubMiscTotal'] as num?)?.toDouble(),
          periodSubMiscTotal: (json['PeriodSubMiscTotal'] as num?)?.toDouble(),
          weeklySubMiscTotalIncludesTax:
              json['WeeklySubMiscTotalIncludesTax'] as bool?,
          monthlySubMiscTotalIncludesTax:
              json['MonthlySubMiscTotalIncludesTax'] as bool?,
          periodSubMiscTotalIncludesTax:
              json['PeriodSubMiscTotalIncludesTax'] as bool?,
          subLaborDiscountPercent:
              (json['SubLaborDiscountPercent'] as num?)?.toDouble(),
          weeklySubLaborTotal:
              (json['WeeklySubLaborTotal'] as num?)?.toDouble(),
          monthlySubLaborTotal:
              (json['MonthlySubLaborTotal'] as num?)?.toDouble(),
          periodSubLaborTotal:
              (json['PeriodSubLaborTotal'] as num?)?.toDouble(),
          weeklySubLaborTotalIncludesTax:
              json['WeeklySubLaborTotalIncludesTax'] as bool?,
          monthlySubLaborTotalIncludesTax:
              json['MonthlySubLaborTotalIncludesTax'] as bool?,
          periodSubLaborTotalIncludesTax:
              json['PeriodSubLaborTotalIncludesTax'] as bool?,
          miscellaneousIsComplete: json['MiscellaneousIsComplete'] as bool?,
          subMiscellaneousIsComplete:
              json['SubMiscellaneousIsComplete'] as bool?,
          laborIsComplete: json['LaborIsComplete'] as bool?,
          subLaborIsComplete: json['SubLaborIsComplete'] as bool?,
          currencyColor: json['CurrencyColor'] as String?,
          statusColor: json['StatusColor'] as String?,
          purchaseOrderNumberColor: json['PurchaseOrderNumberColor'] as String?,
          vendorColor: json['VendorColor'] as String?,
          descriptionColor: json['DescriptionColor'] as String?,
          expensePOColor: json['ExpensePOColor'] as String?,
          hasConsignorFee: json['HasConsignorFee'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsOrderItemOrderItem.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderGetPurchaseOrderResponseToJson(
        WebApiModulesAgentPurchaseOrderGetPurchaseOrderResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderNumber', instance.purchaseOrderNumber);
  writeNotNull('Description', instance.description);
  writeNotNull('PurchaseOrderDate', instance.purchaseOrderDate);
  writeNotNull('RequisitionNumber', instance.requisitionNumber);
  writeNotNull('RequisitionDate', instance.requisitionDate);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('ReferenceNumber', instance.referenceNumber);
  writeNotNull('NeedsApproval', instance.needsApproval);
  writeNotNull('ApprovedByUserId', instance.approvedByUserId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('QuantityHolding', instance.quantityHolding);
  writeNotNull('QuantityToBarCode', instance.quantityToBarCode);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('Parts', instance.parts);
  writeNotNull('Labor', instance.labor);
  writeNotNull('Miscellaneous', instance.miscellaneous);
  writeNotNull('Vehicle', instance.vehicle);
  writeNotNull('SubRent', instance.subRent);
  writeNotNull('SubSale', instance.subSale);
  writeNotNull('SubLabor', instance.subLabor);
  writeNotNull('SubMiscellaneous', instance.subMiscellaneous);
  writeNotNull('SubVehicle', instance.subVehicle);
  writeNotNull('Repair', instance.repair);
  writeNotNull('Consignment', instance.consignment);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('ConsignorAgreementNumber', instance.consignorAgreementNumber);
  writeNotNull('VendorHasConsignment', instance.vendorHasConsignment);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('TermsConditionsId', instance.termsConditionsId);
  writeNotNull('TermsConditions', instance.termsConditions);
  writeNotNull('DepartmentLocationRequiresApproval',
      instance.departmentLocationRequiresApproval);
  writeNotNull('Total', instance.total);
  writeNotNull('PoTypeId', instance.poTypeId);
  writeNotNull('PoType', instance.poType);
  writeNotNull('PoClassificationId', instance.poClassificationId);
  writeNotNull('PoClassification', instance.poClassification);
  writeNotNull('ActivityDatesAndTimes',
      instance.activityDatesAndTimes?.map((e) => e.toJson()).toList());
  writeNotNull('EstimatedStartDate', instance.estimatedStartDate);
  writeNotNull('EstimatedStartTime', instance.estimatedStartTime);
  writeNotNull('EstimatedStopDate', instance.estimatedStopDate);
  writeNotNull('EstimatedStopTime', instance.estimatedStopTime);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingEndDate', instance.billingEndDate);
  writeNotNull('BillingWeeks', instance.billingWeeks);
  writeNotNull('BillingMonths', instance.billingMonths);
  writeNotNull('InvoicedAmount', instance.invoicedAmount);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('ProjectManager', instance.projectManager);
  writeNotNull('ReceiveDeliveryId', instance.receiveDeliveryId);
  writeNotNull(
      'ReceiveDeliveryDeliveryType', instance.receiveDeliveryDeliveryType);
  writeNotNull(
      'ReceiveDeliveryRequiredDate', instance.receiveDeliveryRequiredDate);
  writeNotNull(
      'ReceiveDeliveryRequiredTime', instance.receiveDeliveryRequiredTime);
  writeNotNull(
      'ReceiveDeliveryTargetShipDate', instance.receiveDeliveryTargetShipDate);
  writeNotNull(
      'ReceiveDeliveryTargetShipTime', instance.receiveDeliveryTargetShipTime);
  writeNotNull('ReceiveDeliveryDirection', instance.receiveDeliveryDirection);
  writeNotNull(
      'ReceiveDeliveryAddressType', instance.receiveDeliveryAddressType);
  writeNotNull(
      'ReceiveDeliveryFromLocation', instance.receiveDeliveryFromLocation);
  writeNotNull(
      'ReceiveDeliveryFromContact', instance.receiveDeliveryFromContact);
  writeNotNull('ReceiveDeliveryFromContactPhone',
      instance.receiveDeliveryFromContactPhone);
  writeNotNull('ReceiveDeliveryFromAlternateContact',
      instance.receiveDeliveryFromAlternateContact);
  writeNotNull('ReceiveDeliveryFromAlternateContactPhone',
      instance.receiveDeliveryFromAlternateContactPhone);
  writeNotNull(
      'ReceiveDeliveryFromAttention', instance.receiveDeliveryFromAttention);
  writeNotNull(
      'ReceiveDeliveryFromAddress1', instance.receiveDeliveryFromAddress1);
  writeNotNull(
      'ReceiveDeliveryFromAdd2ress', instance.receiveDeliveryFromAdd2ress);
  writeNotNull('ReceiveDeliveryFromCity', instance.receiveDeliveryFromCity);
  writeNotNull('ReceiveDeliveryFromState', instance.receiveDeliveryFromState);
  writeNotNull(
      'ReceiveDeliveryFromZipCode', instance.receiveDeliveryFromZipCode);
  writeNotNull(
      'ReceiveDeliveryFromCountry', instance.receiveDeliveryFromCountry);
  writeNotNull(
      'ReceiveDeliveryFromCountryId', instance.receiveDeliveryFromCountryId);
  writeNotNull('ReceiveDeliveryFromCrossStreets',
      instance.receiveDeliveryFromCrossStreets);
  writeNotNull('ReceiveDeliveryToLocation', instance.receiveDeliveryToLocation);
  writeNotNull('ReceiveDeliveryToVenue', instance.receiveDeliveryToVenue);
  writeNotNull('ReceiveDeliveryToVenueId', instance.receiveDeliveryToVenueId);
  writeNotNull(
      'ReceiveDeliveryToWarehouse', instance.receiveDeliveryToWarehouse);
  writeNotNull(
      'ReceiveDeliveryToWarehouseId', instance.receiveDeliveryToWarehouseId);
  writeNotNull('ReceiveDeliveryToContact', instance.receiveDeliveryToContact);
  writeNotNull(
      'ReceiveDeliveryToContactPhone', instance.receiveDeliveryToContactPhone);
  writeNotNull('ReceiveDeliveryToAlternateContact',
      instance.receiveDeliveryToAlternateContact);
  writeNotNull('ReceiveDeliveryToAlternateContactPhone',
      instance.receiveDeliveryToAlternateContactPhone);
  writeNotNull(
      'ReceiveDeliveryToAttention', instance.receiveDeliveryToAttention);
  writeNotNull('ReceiveDeliveryToAddress1', instance.receiveDeliveryToAddress1);
  writeNotNull('ReceiveDeliveryToAddress2', instance.receiveDeliveryToAddress2);
  writeNotNull('ReceiveDeliveryToCity', instance.receiveDeliveryToCity);
  writeNotNull('ReceiveDeliveryToState', instance.receiveDeliveryToState);
  writeNotNull('ReceiveDeliveryToZipCode', instance.receiveDeliveryToZipCode);
  writeNotNull(
      'ReceiveDeliveryToCountryId', instance.receiveDeliveryToCountryId);
  writeNotNull('ReceiveDeliveryToCountry', instance.receiveDeliveryToCountry);
  writeNotNull(
      'ReceiveDeliveryToContactFax', instance.receiveDeliveryToContactFax);
  writeNotNull(
      'ReceiveDeliveryToCrossStreets', instance.receiveDeliveryToCrossStreets);
  writeNotNull(
      'ReceiveDeliveryDeliveryNotes', instance.receiveDeliveryDeliveryNotes);
  writeNotNull('ReceiveDeliveryCarrierId', instance.receiveDeliveryCarrierId);
  writeNotNull('ReceiveDeliveryCarrier', instance.receiveDeliveryCarrier);
  writeNotNull(
      'ReceiveDeliveryCarrierAccount', instance.receiveDeliveryCarrierAccount);
  writeNotNull('ReceiveDeliveryShipViaId', instance.receiveDeliveryShipViaId);
  writeNotNull('ReceiveDeliveryShipVia', instance.receiveDeliveryShipVia);
  writeNotNull('ReceiveDeliveryInvoiceId', instance.receiveDeliveryInvoiceId);
  writeNotNull('ReceiveDeliveryVendorInvoiceId',
      instance.receiveDeliveryVendorInvoiceId);
  writeNotNull('ReceiveDeliveryEstimatedFreight',
      instance.receiveDeliveryEstimatedFreight);
  writeNotNull('ReceiveDeliveryFreightInvoiceAmount',
      instance.receiveDeliveryFreightInvoiceAmount);
  writeNotNull('ReceiveDeliveryChargeType', instance.receiveDeliveryChargeType);
  writeNotNull('ReceiveDeliveryFreightTrackingNumber',
      instance.receiveDeliveryFreightTrackingNumber);
  writeNotNull('ReceiveDeliveryFreightTrackingUrl',
      instance.receiveDeliveryFreightTrackingUrl);
  writeNotNull('ReceiveDeliveryDropShip', instance.receiveDeliveryDropShip);
  writeNotNull(
      'ReceiveDeliveryPackageCode', instance.receiveDeliveryPackageCode);
  writeNotNull('ReceiveDeliveryBillPoFreightOnOrder',
      instance.receiveDeliveryBillPoFreightOnOrder);
  writeNotNull('ReceiveDeliveryOnlineOrderNumber',
      instance.receiveDeliveryOnlineOrderNumber);
  writeNotNull('ReceiveDeliveryOnlineOrderStatus',
      instance.receiveDeliveryOnlineOrderStatus);
  writeNotNull('ReceiveDeliveryDateStamp', instance.receiveDeliveryDateStamp);
  writeNotNull('ReturnDeliveryId', instance.returnDeliveryId);
  writeNotNull(
      'ReturnDeliveryDeliveryType', instance.returnDeliveryDeliveryType);
  writeNotNull(
      'ReturnDeliveryRequiredDate', instance.returnDeliveryRequiredDate);
  writeNotNull(
      'ReturnDeliveryRequiredTime', instance.returnDeliveryRequiredTime);
  writeNotNull(
      'ReturnDeliveryTargetShipDate', instance.returnDeliveryTargetShipDate);
  writeNotNull(
      'ReturnDeliveryTargetShipTime', instance.returnDeliveryTargetShipTime);
  writeNotNull('ReturnDeliveryDirection', instance.returnDeliveryDirection);
  writeNotNull('ReturnDeliveryAddressType', instance.returnDeliveryAddressType);
  writeNotNull(
      'ReturnDeliveryFromLocation', instance.returnDeliveryFromLocation);
  writeNotNull('ReturnDeliveryFromContact', instance.returnDeliveryFromContact);
  writeNotNull('ReturnDeliveryFromContactPhone',
      instance.returnDeliveryFromContactPhone);
  writeNotNull('ReturnDeliveryFromAlternateContact',
      instance.returnDeliveryFromAlternateContact);
  writeNotNull('ReturnDeliveryFromAlternateContactPhone',
      instance.returnDeliveryFromAlternateContactPhone);
  writeNotNull(
      'ReturnDeliveryFromAttention', instance.returnDeliveryFromAttention);
  writeNotNull(
      'ReturnDeliveryFromAddress1', instance.returnDeliveryFromAddress1);
  writeNotNull(
      'ReturnDeliveryFromAdd2ress', instance.returnDeliveryFromAdd2ress);
  writeNotNull('ReturnDeliveryFromCity', instance.returnDeliveryFromCity);
  writeNotNull('ReturnDeliveryFromState', instance.returnDeliveryFromState);
  writeNotNull('ReturnDeliveryFromZipCode', instance.returnDeliveryFromZipCode);
  writeNotNull('ReturnDeliveryFromCountry', instance.returnDeliveryFromCountry);
  writeNotNull(
      'ReturnDeliveryFromCountryId', instance.returnDeliveryFromCountryId);
  writeNotNull('ReturnDeliveryFromCrossStreets',
      instance.returnDeliveryFromCrossStreets);
  writeNotNull('ReturnDeliveryToLocation', instance.returnDeliveryToLocation);
  writeNotNull('ReturnDeliveryToVenue', instance.returnDeliveryToVenue);
  writeNotNull('ReturnDeliveryToVenueId', instance.returnDeliveryToVenueId);
  writeNotNull('ReturnDeliveryToWarehouse', instance.returnDeliveryToWarehouse);
  writeNotNull(
      'ReturnDeliveryToWarehouseId', instance.returnDeliveryToWarehouseId);
  writeNotNull('ReturnDeliveryToContact', instance.returnDeliveryToContact);
  writeNotNull(
      'ReturnDeliveryToContactPhone', instance.returnDeliveryToContactPhone);
  writeNotNull('ReturnDeliveryToAlternateContact',
      instance.returnDeliveryToAlternateContact);
  writeNotNull('ReturnDeliveryToAlternateContactPhone',
      instance.returnDeliveryToAlternateContactPhone);
  writeNotNull('ReturnDeliveryToAttention', instance.returnDeliveryToAttention);
  writeNotNull('ReturnDeliveryToAddress1', instance.returnDeliveryToAddress1);
  writeNotNull('ReturnDeliveryToAddress2', instance.returnDeliveryToAddress2);
  writeNotNull('ReturnDeliveryToCity', instance.returnDeliveryToCity);
  writeNotNull('ReturnDeliveryToState', instance.returnDeliveryToState);
  writeNotNull('ReturnDeliveryToZipCode', instance.returnDeliveryToZipCode);
  writeNotNull('ReturnDeliveryToCountryId', instance.returnDeliveryToCountryId);
  writeNotNull('ReturnDeliveryToCountry', instance.returnDeliveryToCountry);
  writeNotNull(
      'ReturnDeliveryToContactFax', instance.returnDeliveryToContactFax);
  writeNotNull(
      'ReturnDeliveryToCrossStreets', instance.returnDeliveryToCrossStreets);
  writeNotNull(
      'ReturnDeliveryDeliveryNotes', instance.returnDeliveryDeliveryNotes);
  writeNotNull('ReturnDeliveryCarrierId', instance.returnDeliveryCarrierId);
  writeNotNull('ReturnDeliveryCarrier', instance.returnDeliveryCarrier);
  writeNotNull(
      'ReturnDeliveryCarrierAccount', instance.returnDeliveryCarrierAccount);
  writeNotNull('ReturnDeliveryShipViaId', instance.returnDeliveryShipViaId);
  writeNotNull('ReturnDeliveryShipVia', instance.returnDeliveryShipVia);
  writeNotNull('ReturnDeliveryInvoiceId', instance.returnDeliveryInvoiceId);
  writeNotNull(
      'ReturnDeliveryVendorInvoiceId', instance.returnDeliveryVendorInvoiceId);
  writeNotNull('ReturnDeliveryEstimatedFreight',
      instance.returnDeliveryEstimatedFreight);
  writeNotNull('ReturnDeliveryFreightInvoiceAmount',
      instance.returnDeliveryFreightInvoiceAmount);
  writeNotNull('ReturnDeliveryChargeType', instance.returnDeliveryChargeType);
  writeNotNull('ReturnDeliveryFreightTrackingNumber',
      instance.returnDeliveryFreightTrackingNumber);
  writeNotNull('ReturnDeliveryFreightTrackingUrl',
      instance.returnDeliveryFreightTrackingUrl);
  writeNotNull(
      'ReturnDeliveryVendorRetrieve', instance.returnDeliveryVendorRetrieve);
  writeNotNull('ReturnDeliveryPackageCode', instance.returnDeliveryPackageCode);
  writeNotNull('ReturnDeliveryBillPoFreightOnOrder',
      instance.returnDeliveryBillPoFreightOnOrder);
  writeNotNull('ReturnDeliveryOnlineOrderNumber',
      instance.returnDeliveryOnlineOrderNumber);
  writeNotNull('ReturnDeliveryOnlineOrderStatus',
      instance.returnDeliveryOnlineOrderStatus);
  writeNotNull('ReturnDeliveryDateStamp', instance.returnDeliveryDateStamp);
  writeNotNull('EnableProjects', instance.enableProjects);
  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('ProjectNumber', instance.projectNumber);
  writeNotNull('Project', instance.project);
  writeNotNull('ProjectDrawingsId', instance.projectDrawingsId);
  writeNotNull('ProjectDrawings', instance.projectDrawings);
  writeNotNull('ProjectItemsOrderedId', instance.projectItemsOrderedId);
  writeNotNull('ProjectItemsOrdered', instance.projectItemsOrdered);
  writeNotNull('ProjectDropShipId', instance.projectDropShipId);
  writeNotNull('ProjectDropShip', instance.projectDropShip);
  writeNotNull('ProjectAsBuildId', instance.projectAsBuildId);
  writeNotNull('ProjectAsBuild', instance.projectAsBuild);
  writeNotNull('ProjectCommissioningId', instance.projectCommissioningId);
  writeNotNull('ProjectCommissioning', instance.projectCommissioning);
  writeNotNull('ProjectDepositId', instance.projectDepositId);
  writeNotNull('ProjectDeposit', instance.projectDeposit);
  writeNotNull('Location', instance.location);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull(
      'UpdateAllRatesToNewCurrency', instance.updateAllRatesToNewCurrency);
  writeNotNull('ConfirmUpdateAllRatesToNewCurrency',
      instance.confirmUpdateAllRatesToNewCurrency);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('BillingCycle', instance.billingCycle);
  writeNotNull('RemitToAttention1', instance.remitToAttention1);
  writeNotNull('RemitToAttention2', instance.remitToAttention2);
  writeNotNull('RemitToAddress1', instance.remitToAddress1);
  writeNotNull('RemitToAddress2', instance.remitToAddress2);
  writeNotNull('RemitToCity', instance.remitToCity);
  writeNotNull('RemitToState', instance.remitToState);
  writeNotNull('RemitToCountryId', instance.remitToCountryId);
  writeNotNull('RemitToCountry', instance.remitToCountry);
  writeNotNull('RemitToZipCode', instance.remitToZipCode);
  writeNotNull('RemitToEmail', instance.remitToEmail);
  writeNotNull('RemitToPhone', instance.remitToPhone);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('PaymentTermsDueInDays', instance.paymentTermsDueInDays);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('TaxId', instance.taxId);
  writeNotNull('Tax1Name', instance.tax1Name);
  writeNotNull('Tax2Name', instance.tax2Name);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('HasRentalItem', instance.hasRentalItem);
  writeNotNull('HasSalesItem', instance.hasSalesItem);
  writeNotNull('HasMiscellaneousItem', instance.hasMiscellaneousItem);
  writeNotNull('HasLaborItem', instance.hasLaborItem);
  writeNotNull('HasFacilitiesItem', instance.hasFacilitiesItem);
  writeNotNull('HasLossAndDamageItem', instance.hasLossAndDamageItem);
  writeNotNull('HasRentalSaleItem', instance.hasRentalSaleItem);
  writeNotNull('HasConsignItem', instance.hasConsignItem);
  writeNotNull('HasPartsItem', instance.hasPartsItem);
  writeNotNull('RentalDiscountPercent', instance.rentalDiscountPercent);
  writeNotNull('RentalTotal', instance.rentalTotal);
  writeNotNull('RentalTotalIncludesTax', instance.rentalTotalIncludesTax);
  writeNotNull('SalesDiscountPercent', instance.salesDiscountPercent);
  writeNotNull('SalesTotal', instance.salesTotal);
  writeNotNull('SalesTotalIncludesTax', instance.salesTotalIncludesTax);
  writeNotNull('PartsDiscountPercent', instance.partsDiscountPercent);
  writeNotNull('PartsTotal', instance.partsTotal);
  writeNotNull('PartsTotalIncludesTax', instance.partsTotalIncludesTax);
  writeNotNull('VehicleDiscountPercent', instance.vehicleDiscountPercent);
  writeNotNull('VehicleTotal', instance.vehicleTotal);
  writeNotNull('VehicleTotalIncludesTax', instance.vehicleTotalIncludesTax);
  writeNotNull('MiscDiscountPercent', instance.miscDiscountPercent);
  writeNotNull('MiscTotal', instance.miscTotal);
  writeNotNull('MiscTotalIncludesTax', instance.miscTotalIncludesTax);
  writeNotNull('LaborDiscountPercent', instance.laborDiscountPercent);
  writeNotNull('LaborTotal', instance.laborTotal);
  writeNotNull('LaborTotalIncludesTax', instance.laborTotalIncludesTax);
  writeNotNull('SubRentalDaysPerWeek', instance.subRentalDaysPerWeek);
  writeNotNull('SubRentalDiscountPercent', instance.subRentalDiscountPercent);
  writeNotNull('WeeklySubRentalTotal', instance.weeklySubRentalTotal);
  writeNotNull('MonthlySubRentalTotal', instance.monthlySubRentalTotal);
  writeNotNull('PeriodSubRentalTotal', instance.periodSubRentalTotal);
  writeNotNull('WeeklySubRentalTotalIncludesTax',
      instance.weeklySubRentalTotalIncludesTax);
  writeNotNull('MonthlySubRentalTotalIncludesTax',
      instance.monthlySubRentalTotalIncludesTax);
  writeNotNull('PeriodSubRentalTotalIncludesTax',
      instance.periodSubRentalTotalIncludesTax);
  writeNotNull('SubSalesDiscountPercent', instance.subSalesDiscountPercent);
  writeNotNull('SubSalesTotal', instance.subSalesTotal);
  writeNotNull('SubSalesTotalIncludesTax', instance.subSalesTotalIncludesTax);
  writeNotNull('SubVehicleDaysPerWeek', instance.subVehicleDaysPerWeek);
  writeNotNull('SubvehicleDiscountPercent', instance.subvehicleDiscountPercent);
  writeNotNull('WeeklySubVehicleTotal', instance.weeklySubVehicleTotal);
  writeNotNull('MonthlySubVehicleTotal', instance.monthlySubVehicleTotal);
  writeNotNull('PeriodSubVehicleTotal', instance.periodSubVehicleTotal);
  writeNotNull('WeeklySubVehicleTotalIncludesTax',
      instance.weeklySubVehicleTotalIncludesTax);
  writeNotNull('MonthlySubVehicleTotalIncludesTax',
      instance.monthlySubVehicleTotalIncludesTax);
  writeNotNull('PeriodSubVehicleTotalIncludesTax',
      instance.periodSubVehicleTotalIncludesTax);
  writeNotNull('SubMiscDiscountPercent', instance.subMiscDiscountPercent);
  writeNotNull('WeeklySubMiscTotal', instance.weeklySubMiscTotal);
  writeNotNull('MonthlySubMiscTotal', instance.monthlySubMiscTotal);
  writeNotNull('PeriodSubMiscTotal', instance.periodSubMiscTotal);
  writeNotNull(
      'WeeklySubMiscTotalIncludesTax', instance.weeklySubMiscTotalIncludesTax);
  writeNotNull('MonthlySubMiscTotalIncludesTax',
      instance.monthlySubMiscTotalIncludesTax);
  writeNotNull(
      'PeriodSubMiscTotalIncludesTax', instance.periodSubMiscTotalIncludesTax);
  writeNotNull('SubLaborDiscountPercent', instance.subLaborDiscountPercent);
  writeNotNull('WeeklySubLaborTotal', instance.weeklySubLaborTotal);
  writeNotNull('MonthlySubLaborTotal', instance.monthlySubLaborTotal);
  writeNotNull('PeriodSubLaborTotal', instance.periodSubLaborTotal);
  writeNotNull('WeeklySubLaborTotalIncludesTax',
      instance.weeklySubLaborTotalIncludesTax);
  writeNotNull('MonthlySubLaborTotalIncludesTax',
      instance.monthlySubLaborTotalIncludesTax);
  writeNotNull('PeriodSubLaborTotalIncludesTax',
      instance.periodSubLaborTotalIncludesTax);
  writeNotNull('MiscellaneousIsComplete', instance.miscellaneousIsComplete);
  writeNotNull(
      'SubMiscellaneousIsComplete', instance.subMiscellaneousIsComplete);
  writeNotNull('LaborIsComplete', instance.laborIsComplete);
  writeNotNull('SubLaborIsComplete', instance.subLaborIsComplete);
  writeNotNull('CurrencyColor', instance.currencyColor);
  writeNotNull('StatusColor', instance.statusColor);
  writeNotNull('PurchaseOrderNumberColor', instance.purchaseOrderNumberColor);
  writeNotNull('VendorColor', instance.vendorColor);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('ExpensePOColor', instance.expensePOColor);
  writeNotNull('HasConsignorFee', instance.hasConsignorFee);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentPurchaseOrderNextVendorInvoiceDefaultDatesResponse
    _$WebApiModulesAgentPurchaseOrderNextVendorInvoiceDefaultDatesResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderNextVendorInvoiceDefaultDatesResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          billingStartDate: json['BillingStartDate'] == null
              ? null
              : DateTime.parse(json['BillingStartDate'] as String),
          billingEndDate: json['BillingEndDate'] == null
              ? null
              : DateTime.parse(json['BillingEndDate'] as String),
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderNextVendorInvoiceDefaultDatesResponseToJson(
        WebApiModulesAgentPurchaseOrderNextVendorInvoiceDefaultDatesResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull(
      'BillingStartDate', instance.billingStartDate?.toIso8601String());
  writeNotNull('BillingEndDate', instance.billingEndDate?.toIso8601String());
  return val;
}

WebApiModulesAgentPurchaseOrderPurchaseOrder
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderPurchaseOrder(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
          description: json['Description'] as String?,
          purchaseOrderDate: json['PurchaseOrderDate'] as String?,
          requisitionNumber: json['RequisitionNumber'] as String?,
          requisitionDate: json['RequisitionDate'] as String?,
          vendorId: json['VendorId'] as String?,
          vendor: json['Vendor'] as String?,
          agentId: json['AgentId'] as String?,
          agent: json['Agent'] as String?,
          status: json['Status'] as String?,
          statusDate: json['StatusDate'] as String?,
          referenceNumber: json['ReferenceNumber'] as String?,
          needsApproval: json['NeedsApproval'] as bool?,
          approvedByUserId: json['ApprovedByUserId'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          officeLocation: json['OfficeLocation'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          quantityHolding: json['QuantityHolding'] as int?,
          quantityToBarCode: json['QuantityToBarCode'] as int?,
          rental: json['Rental'] as bool?,
          sales: json['Sales'] as bool?,
          parts: json['Parts'] as bool?,
          labor: json['Labor'] as bool?,
          miscellaneous: json['Miscellaneous'] as bool?,
          vehicle: json['Vehicle'] as bool?,
          subRent: json['SubRent'] as bool?,
          subSale: json['SubSale'] as bool?,
          subLabor: json['SubLabor'] as bool?,
          subMiscellaneous: json['SubMiscellaneous'] as bool?,
          subVehicle: json['SubVehicle'] as bool?,
          repair: json['Repair'] as bool?,
          consignment: json['Consignment'] as bool?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
          vendorHasConsignment: json['VendorHasConsignment'] as bool?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          dealNumber: json['DealNumber'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          rateType: json['RateType'] as String?,
          termsConditionsId: json['TermsConditionsId'] as String?,
          termsConditions: json['TermsConditions'] as String?,
          departmentLocationRequiresApproval:
              json['DepartmentLocationRequiresApproval'] as bool?,
          total: (json['Total'] as num?)?.toDouble(),
          poTypeId: json['PoTypeId'] as String?,
          poType: json['PoType'] as String?,
          poClassificationId: json['PoClassificationId'] as String?,
          poClassification: json['PoClassification'] as String?,
          activityDatesAndTimes: (json['ActivityDatesAndTimes']
                      as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          estimatedStartDate: json['EstimatedStartDate'] as String?,
          estimatedStartTime: json['EstimatedStartTime'] as String?,
          estimatedStopDate: json['EstimatedStopDate'] as String?,
          estimatedStopTime: json['EstimatedStopTime'] as String?,
          billingStartDate: json['BillingStartDate'] as String?,
          billingEndDate: json['BillingEndDate'] as String?,
          billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
          billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
          invoicedAmount: (json['InvoicedAmount'] as num?)?.toDouble(),
          projectManagerId: json['ProjectManagerId'] as String?,
          projectManager: json['ProjectManager'] as String?,
          receiveDeliveryId: json['ReceiveDeliveryId'] as String?,
          receiveDeliveryDeliveryType:
              json['ReceiveDeliveryDeliveryType'] as String?,
          receiveDeliveryRequiredDate:
              json['ReceiveDeliveryRequiredDate'] as String?,
          receiveDeliveryRequiredTime:
              json['ReceiveDeliveryRequiredTime'] as String?,
          receiveDeliveryTargetShipDate:
              json['ReceiveDeliveryTargetShipDate'] as String?,
          receiveDeliveryTargetShipTime:
              json['ReceiveDeliveryTargetShipTime'] as String?,
          receiveDeliveryDirection: json['ReceiveDeliveryDirection'] as String?,
          receiveDeliveryAddressType:
              json['ReceiveDeliveryAddressType'] as String?,
          receiveDeliveryFromLocation:
              json['ReceiveDeliveryFromLocation'] as String?,
          receiveDeliveryFromContact:
              json['ReceiveDeliveryFromContact'] as String?,
          receiveDeliveryFromContactPhone:
              json['ReceiveDeliveryFromContactPhone'] as String?,
          receiveDeliveryFromAlternateContact:
              json['ReceiveDeliveryFromAlternateContact'] as String?,
          receiveDeliveryFromAlternateContactPhone:
              json['ReceiveDeliveryFromAlternateContactPhone'] as String?,
          receiveDeliveryFromAttention:
              json['ReceiveDeliveryFromAttention'] as String?,
          receiveDeliveryFromAddress1:
              json['ReceiveDeliveryFromAddress1'] as String?,
          receiveDeliveryFromAdd2ress:
              json['ReceiveDeliveryFromAdd2ress'] as String?,
          receiveDeliveryFromCity: json['ReceiveDeliveryFromCity'] as String?,
          receiveDeliveryFromState: json['ReceiveDeliveryFromState'] as String?,
          receiveDeliveryFromZipCode:
              json['ReceiveDeliveryFromZipCode'] as String?,
          receiveDeliveryFromCountry:
              json['ReceiveDeliveryFromCountry'] as String?,
          receiveDeliveryFromCountryId:
              json['ReceiveDeliveryFromCountryId'] as String?,
          receiveDeliveryFromCrossStreets:
              json['ReceiveDeliveryFromCrossStreets'] as String?,
          receiveDeliveryToLocation:
              json['ReceiveDeliveryToLocation'] as String?,
          receiveDeliveryToVenue: json['ReceiveDeliveryToVenue'] as String?,
          receiveDeliveryToVenueId: json['ReceiveDeliveryToVenueId'] as String?,
          receiveDeliveryToWarehouse:
              json['ReceiveDeliveryToWarehouse'] as String?,
          receiveDeliveryToWarehouseId:
              json['ReceiveDeliveryToWarehouseId'] as String?,
          receiveDeliveryToContact: json['ReceiveDeliveryToContact'] as String?,
          receiveDeliveryToContactPhone:
              json['ReceiveDeliveryToContactPhone'] as String?,
          receiveDeliveryToAlternateContact:
              json['ReceiveDeliveryToAlternateContact'] as String?,
          receiveDeliveryToAlternateContactPhone:
              json['ReceiveDeliveryToAlternateContactPhone'] as String?,
          receiveDeliveryToAttention:
              json['ReceiveDeliveryToAttention'] as String?,
          receiveDeliveryToAddress1:
              json['ReceiveDeliveryToAddress1'] as String?,
          receiveDeliveryToAddress2:
              json['ReceiveDeliveryToAddress2'] as String?,
          receiveDeliveryToCity: json['ReceiveDeliveryToCity'] as String?,
          receiveDeliveryToState: json['ReceiveDeliveryToState'] as String?,
          receiveDeliveryToZipCode: json['ReceiveDeliveryToZipCode'] as String?,
          receiveDeliveryToCountryId:
              json['ReceiveDeliveryToCountryId'] as String?,
          receiveDeliveryToCountry: json['ReceiveDeliveryToCountry'] as String?,
          receiveDeliveryToContactFax:
              json['ReceiveDeliveryToContactFax'] as String?,
          receiveDeliveryToCrossStreets:
              json['ReceiveDeliveryToCrossStreets'] as String?,
          receiveDeliveryDeliveryNotes:
              json['ReceiveDeliveryDeliveryNotes'] as String?,
          receiveDeliveryCarrierId: json['ReceiveDeliveryCarrierId'] as String?,
          receiveDeliveryCarrier: json['ReceiveDeliveryCarrier'] as String?,
          receiveDeliveryCarrierAccount:
              json['ReceiveDeliveryCarrierAccount'] as String?,
          receiveDeliveryShipViaId: json['ReceiveDeliveryShipViaId'] as String?,
          receiveDeliveryShipVia: json['ReceiveDeliveryShipVia'] as String?,
          receiveDeliveryInvoiceId: json['ReceiveDeliveryInvoiceId'] as String?,
          receiveDeliveryVendorInvoiceId:
              json['ReceiveDeliveryVendorInvoiceId'] as String?,
          receiveDeliveryEstimatedFreight:
              (json['ReceiveDeliveryEstimatedFreight'] as num?)?.toDouble(),
          receiveDeliveryFreightInvoiceAmount:
              (json['ReceiveDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
          receiveDeliveryChargeType:
              json['ReceiveDeliveryChargeType'] as String?,
          receiveDeliveryFreightTrackingNumber:
              json['ReceiveDeliveryFreightTrackingNumber'] as String?,
          receiveDeliveryFreightTrackingUrl:
              json['ReceiveDeliveryFreightTrackingUrl'] as String?,
          receiveDeliveryDropShip: json['ReceiveDeliveryDropShip'] as bool?,
          receiveDeliveryPackageCode:
              json['ReceiveDeliveryPackageCode'] as String?,
          receiveDeliveryBillPoFreightOnOrder:
              json['ReceiveDeliveryBillPoFreightOnOrder'] as bool?,
          receiveDeliveryOnlineOrderNumber:
              json['ReceiveDeliveryOnlineOrderNumber'] as String?,
          receiveDeliveryOnlineOrderStatus:
              json['ReceiveDeliveryOnlineOrderStatus'] as String?,
          receiveDeliveryDateStamp: json['ReceiveDeliveryDateStamp'] as String?,
          returnDeliveryId: json['ReturnDeliveryId'] as String?,
          returnDeliveryDeliveryType:
              json['ReturnDeliveryDeliveryType'] as String?,
          returnDeliveryRequiredDate:
              json['ReturnDeliveryRequiredDate'] as String?,
          returnDeliveryRequiredTime:
              json['ReturnDeliveryRequiredTime'] as String?,
          returnDeliveryTargetShipDate:
              json['ReturnDeliveryTargetShipDate'] as String?,
          returnDeliveryTargetShipTime:
              json['ReturnDeliveryTargetShipTime'] as String?,
          returnDeliveryDirection: json['ReturnDeliveryDirection'] as String?,
          returnDeliveryAddressType:
              json['ReturnDeliveryAddressType'] as String?,
          returnDeliveryFromLocation:
              json['ReturnDeliveryFromLocation'] as String?,
          returnDeliveryFromContact:
              json['ReturnDeliveryFromContact'] as String?,
          returnDeliveryFromContactPhone:
              json['ReturnDeliveryFromContactPhone'] as String?,
          returnDeliveryFromAlternateContact:
              json['ReturnDeliveryFromAlternateContact'] as String?,
          returnDeliveryFromAlternateContactPhone:
              json['ReturnDeliveryFromAlternateContactPhone'] as String?,
          returnDeliveryFromAttention:
              json['ReturnDeliveryFromAttention'] as String?,
          returnDeliveryFromAddress1:
              json['ReturnDeliveryFromAddress1'] as String?,
          returnDeliveryFromAdd2ress:
              json['ReturnDeliveryFromAdd2ress'] as String?,
          returnDeliveryFromCity: json['ReturnDeliveryFromCity'] as String?,
          returnDeliveryFromState: json['ReturnDeliveryFromState'] as String?,
          returnDeliveryFromZipCode:
              json['ReturnDeliveryFromZipCode'] as String?,
          returnDeliveryFromCountry:
              json['ReturnDeliveryFromCountry'] as String?,
          returnDeliveryFromCountryId:
              json['ReturnDeliveryFromCountryId'] as String?,
          returnDeliveryFromCrossStreets:
              json['ReturnDeliveryFromCrossStreets'] as String?,
          returnDeliveryToLocation: json['ReturnDeliveryToLocation'] as String?,
          returnDeliveryToVenue: json['ReturnDeliveryToVenue'] as String?,
          returnDeliveryToVenueId: json['ReturnDeliveryToVenueId'] as String?,
          returnDeliveryToWarehouse:
              json['ReturnDeliveryToWarehouse'] as String?,
          returnDeliveryToWarehouseId:
              json['ReturnDeliveryToWarehouseId'] as String?,
          returnDeliveryToContact: json['ReturnDeliveryToContact'] as String?,
          returnDeliveryToContactPhone:
              json['ReturnDeliveryToContactPhone'] as String?,
          returnDeliveryToAlternateContact:
              json['ReturnDeliveryToAlternateContact'] as String?,
          returnDeliveryToAlternateContactPhone:
              json['ReturnDeliveryToAlternateContactPhone'] as String?,
          returnDeliveryToAttention:
              json['ReturnDeliveryToAttention'] as String?,
          returnDeliveryToAddress1: json['ReturnDeliveryToAddress1'] as String?,
          returnDeliveryToAddress2: json['ReturnDeliveryToAddress2'] as String?,
          returnDeliveryToCity: json['ReturnDeliveryToCity'] as String?,
          returnDeliveryToState: json['ReturnDeliveryToState'] as String?,
          returnDeliveryToZipCode: json['ReturnDeliveryToZipCode'] as String?,
          returnDeliveryToCountryId:
              json['ReturnDeliveryToCountryId'] as String?,
          returnDeliveryToCountry: json['ReturnDeliveryToCountry'] as String?,
          returnDeliveryToContactFax:
              json['ReturnDeliveryToContactFax'] as String?,
          returnDeliveryToCrossStreets:
              json['ReturnDeliveryToCrossStreets'] as String?,
          returnDeliveryDeliveryNotes:
              json['ReturnDeliveryDeliveryNotes'] as String?,
          returnDeliveryCarrierId: json['ReturnDeliveryCarrierId'] as String?,
          returnDeliveryCarrier: json['ReturnDeliveryCarrier'] as String?,
          returnDeliveryCarrierAccount:
              json['ReturnDeliveryCarrierAccount'] as String?,
          returnDeliveryShipViaId: json['ReturnDeliveryShipViaId'] as String?,
          returnDeliveryShipVia: json['ReturnDeliveryShipVia'] as String?,
          returnDeliveryInvoiceId: json['ReturnDeliveryInvoiceId'] as String?,
          returnDeliveryVendorInvoiceId:
              json['ReturnDeliveryVendorInvoiceId'] as String?,
          returnDeliveryEstimatedFreight:
              (json['ReturnDeliveryEstimatedFreight'] as num?)?.toDouble(),
          returnDeliveryFreightInvoiceAmount:
              (json['ReturnDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
          returnDeliveryChargeType: json['ReturnDeliveryChargeType'] as String?,
          returnDeliveryFreightTrackingNumber:
              json['ReturnDeliveryFreightTrackingNumber'] as String?,
          returnDeliveryFreightTrackingUrl:
              json['ReturnDeliveryFreightTrackingUrl'] as String?,
          returnDeliveryVendorRetrieve:
              json['ReturnDeliveryVendorRetrieve'] as bool?,
          returnDeliveryPackageCode:
              json['ReturnDeliveryPackageCode'] as String?,
          returnDeliveryBillPoFreightOnOrder:
              json['ReturnDeliveryBillPoFreightOnOrder'] as bool?,
          returnDeliveryOnlineOrderNumber:
              json['ReturnDeliveryOnlineOrderNumber'] as String?,
          returnDeliveryOnlineOrderStatus:
              json['ReturnDeliveryOnlineOrderStatus'] as String?,
          returnDeliveryDateStamp: json['ReturnDeliveryDateStamp'] as String?,
          enableProjects: json['EnableProjects'] as bool?,
          projectId: json['ProjectId'] as String?,
          projectNumber: json['ProjectNumber'] as String?,
          project: json['Project'] as String?,
          projectDrawingsId: json['ProjectDrawingsId'] as String?,
          projectDrawings: json['ProjectDrawings'] as String?,
          projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
          projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
          projectDropShipId: json['ProjectDropShipId'] as String?,
          projectDropShip: json['ProjectDropShip'] as String?,
          projectAsBuildId: json['ProjectAsBuildId'] as String?,
          projectAsBuild: json['ProjectAsBuild'] as String?,
          projectCommissioningId: json['ProjectCommissioningId'] as String?,
          projectCommissioning: json['ProjectCommissioning'] as String?,
          projectDepositId: json['ProjectDepositId'] as String?,
          projectDeposit: json['ProjectDeposit'] as String?,
          location: json['Location'] as String?,
          currencyId: json['CurrencyId'] as String?,
          updateAllRatesToNewCurrency:
              json['UpdateAllRatesToNewCurrency'] as bool?,
          confirmUpdateAllRatesToNewCurrency:
              json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currency: json['Currency'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          billingCycleId: json['BillingCycleId'] as String?,
          billingCycle: json['BillingCycle'] as String?,
          remitToAttention1: json['RemitToAttention1'] as String?,
          remitToAttention2: json['RemitToAttention2'] as String?,
          remitToAddress1: json['RemitToAddress1'] as String?,
          remitToAddress2: json['RemitToAddress2'] as String?,
          remitToCity: json['RemitToCity'] as String?,
          remitToState: json['RemitToState'] as String?,
          remitToCountryId: json['RemitToCountryId'] as String?,
          remitToCountry: json['RemitToCountry'] as String?,
          remitToZipCode: json['RemitToZipCode'] as String?,
          remitToEmail: json['RemitToEmail'] as String?,
          remitToPhone: json['RemitToPhone'] as String?,
          paymentTypeId: json['PaymentTypeId'] as String?,
          paymentType: json['PaymentType'] as String?,
          paymentTermsId: json['PaymentTermsId'] as String?,
          paymentTerms: json['PaymentTerms'] as String?,
          paymentTermsDueInDays: json['PaymentTermsDueInDays'] as int?,
          taxOptionId: json['TaxOptionId'] as String?,
          taxOption: json['TaxOption'] as String?,
          taxId: json['TaxId'] as String?,
          tax1Name: json['Tax1Name'] as String?,
          tax2Name: json['Tax2Name'] as String?,
          rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
          salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
          laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
          rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
          salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
          laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
          hasRentalItem: json['HasRentalItem'] as bool?,
          hasSalesItem: json['HasSalesItem'] as bool?,
          hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
          hasLaborItem: json['HasLaborItem'] as bool?,
          hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
          hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
          hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
          hasConsignItem: json['HasConsignItem'] as bool?,
          hasPartsItem: json['HasPartsItem'] as bool?,
          rentalDiscountPercent:
              (json['RentalDiscountPercent'] as num?)?.toDouble(),
          rentalTotal: (json['RentalTotal'] as num?)?.toDouble(),
          rentalTotalIncludesTax: json['RentalTotalIncludesTax'] as bool?,
          salesDiscountPercent:
              (json['SalesDiscountPercent'] as num?)?.toDouble(),
          salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
          salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
          partsDiscountPercent:
              (json['PartsDiscountPercent'] as num?)?.toDouble(),
          partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
          partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
          vehicleDiscountPercent:
              (json['VehicleDiscountPercent'] as num?)?.toDouble(),
          vehicleTotal: (json['VehicleTotal'] as num?)?.toDouble(),
          vehicleTotalIncludesTax: json['VehicleTotalIncludesTax'] as bool?,
          miscDiscountPercent:
              (json['MiscDiscountPercent'] as num?)?.toDouble(),
          miscTotal: (json['MiscTotal'] as num?)?.toDouble(),
          miscTotalIncludesTax: json['MiscTotalIncludesTax'] as bool?,
          laborDiscountPercent:
              (json['LaborDiscountPercent'] as num?)?.toDouble(),
          laborTotal: (json['LaborTotal'] as num?)?.toDouble(),
          laborTotalIncludesTax: json['LaborTotalIncludesTax'] as bool?,
          subRentalDaysPerWeek:
              (json['SubRentalDaysPerWeek'] as num?)?.toDouble(),
          subRentalDiscountPercent:
              (json['SubRentalDiscountPercent'] as num?)?.toDouble(),
          weeklySubRentalTotal:
              (json['WeeklySubRentalTotal'] as num?)?.toDouble(),
          monthlySubRentalTotal:
              (json['MonthlySubRentalTotal'] as num?)?.toDouble(),
          periodSubRentalTotal:
              (json['PeriodSubRentalTotal'] as num?)?.toDouble(),
          weeklySubRentalTotalIncludesTax:
              json['WeeklySubRentalTotalIncludesTax'] as bool?,
          monthlySubRentalTotalIncludesTax:
              json['MonthlySubRentalTotalIncludesTax'] as bool?,
          periodSubRentalTotalIncludesTax:
              json['PeriodSubRentalTotalIncludesTax'] as bool?,
          subSalesDiscountPercent:
              (json['SubSalesDiscountPercent'] as num?)?.toDouble(),
          subSalesTotal: (json['SubSalesTotal'] as num?)?.toDouble(),
          subSalesTotalIncludesTax: json['SubSalesTotalIncludesTax'] as bool?,
          subVehicleDaysPerWeek:
              (json['SubVehicleDaysPerWeek'] as num?)?.toDouble(),
          subvehicleDiscountPercent:
              (json['SubvehicleDiscountPercent'] as num?)?.toDouble(),
          weeklySubVehicleTotal:
              (json['WeeklySubVehicleTotal'] as num?)?.toDouble(),
          monthlySubVehicleTotal:
              (json['MonthlySubVehicleTotal'] as num?)?.toDouble(),
          periodSubVehicleTotal:
              (json['PeriodSubVehicleTotal'] as num?)?.toDouble(),
          weeklySubVehicleTotalIncludesTax:
              json['WeeklySubVehicleTotalIncludesTax'] as bool?,
          monthlySubVehicleTotalIncludesTax:
              json['MonthlySubVehicleTotalIncludesTax'] as bool?,
          periodSubVehicleTotalIncludesTax:
              json['PeriodSubVehicleTotalIncludesTax'] as bool?,
          subMiscDiscountPercent:
              (json['SubMiscDiscountPercent'] as num?)?.toDouble(),
          weeklySubMiscTotal: (json['WeeklySubMiscTotal'] as num?)?.toDouble(),
          monthlySubMiscTotal:
              (json['MonthlySubMiscTotal'] as num?)?.toDouble(),
          periodSubMiscTotal: (json['PeriodSubMiscTotal'] as num?)?.toDouble(),
          weeklySubMiscTotalIncludesTax:
              json['WeeklySubMiscTotalIncludesTax'] as bool?,
          monthlySubMiscTotalIncludesTax:
              json['MonthlySubMiscTotalIncludesTax'] as bool?,
          periodSubMiscTotalIncludesTax:
              json['PeriodSubMiscTotalIncludesTax'] as bool?,
          subLaborDiscountPercent:
              (json['SubLaborDiscountPercent'] as num?)?.toDouble(),
          weeklySubLaborTotal:
              (json['WeeklySubLaborTotal'] as num?)?.toDouble(),
          monthlySubLaborTotal:
              (json['MonthlySubLaborTotal'] as num?)?.toDouble(),
          periodSubLaborTotal:
              (json['PeriodSubLaborTotal'] as num?)?.toDouble(),
          weeklySubLaborTotalIncludesTax:
              json['WeeklySubLaborTotalIncludesTax'] as bool?,
          monthlySubLaborTotalIncludesTax:
              json['MonthlySubLaborTotalIncludesTax'] as bool?,
          periodSubLaborTotalIncludesTax:
              json['PeriodSubLaborTotalIncludesTax'] as bool?,
          miscellaneousIsComplete: json['MiscellaneousIsComplete'] as bool?,
          subMiscellaneousIsComplete:
              json['SubMiscellaneousIsComplete'] as bool?,
          laborIsComplete: json['LaborIsComplete'] as bool?,
          subLaborIsComplete: json['SubLaborIsComplete'] as bool?,
          currencyColor: json['CurrencyColor'] as String?,
          statusColor: json['StatusColor'] as String?,
          purchaseOrderNumberColor: json['PurchaseOrderNumberColor'] as String?,
          vendorColor: json['VendorColor'] as String?,
          descriptionColor: json['DescriptionColor'] as String?,
          expensePOColor: json['ExpensePOColor'] as String?,
          hasConsignorFee: json['HasConsignorFee'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesAgentPurchaseOrderPurchaseOrderToJson(
    WebApiModulesAgentPurchaseOrderPurchaseOrder instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderNumber', instance.purchaseOrderNumber);
  writeNotNull('Description', instance.description);
  writeNotNull('PurchaseOrderDate', instance.purchaseOrderDate);
  writeNotNull('RequisitionNumber', instance.requisitionNumber);
  writeNotNull('RequisitionDate', instance.requisitionDate);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('ReferenceNumber', instance.referenceNumber);
  writeNotNull('NeedsApproval', instance.needsApproval);
  writeNotNull('ApprovedByUserId', instance.approvedByUserId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('QuantityHolding', instance.quantityHolding);
  writeNotNull('QuantityToBarCode', instance.quantityToBarCode);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('Parts', instance.parts);
  writeNotNull('Labor', instance.labor);
  writeNotNull('Miscellaneous', instance.miscellaneous);
  writeNotNull('Vehicle', instance.vehicle);
  writeNotNull('SubRent', instance.subRent);
  writeNotNull('SubSale', instance.subSale);
  writeNotNull('SubLabor', instance.subLabor);
  writeNotNull('SubMiscellaneous', instance.subMiscellaneous);
  writeNotNull('SubVehicle', instance.subVehicle);
  writeNotNull('Repair', instance.repair);
  writeNotNull('Consignment', instance.consignment);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('ConsignorAgreementNumber', instance.consignorAgreementNumber);
  writeNotNull('VendorHasConsignment', instance.vendorHasConsignment);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('TermsConditionsId', instance.termsConditionsId);
  writeNotNull('TermsConditions', instance.termsConditions);
  writeNotNull('DepartmentLocationRequiresApproval',
      instance.departmentLocationRequiresApproval);
  writeNotNull('Total', instance.total);
  writeNotNull('PoTypeId', instance.poTypeId);
  writeNotNull('PoType', instance.poType);
  writeNotNull('PoClassificationId', instance.poClassificationId);
  writeNotNull('PoClassification', instance.poClassification);
  writeNotNull('ActivityDatesAndTimes',
      instance.activityDatesAndTimes?.map((e) => e.toJson()).toList());
  writeNotNull('EstimatedStartDate', instance.estimatedStartDate);
  writeNotNull('EstimatedStartTime', instance.estimatedStartTime);
  writeNotNull('EstimatedStopDate', instance.estimatedStopDate);
  writeNotNull('EstimatedStopTime', instance.estimatedStopTime);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingEndDate', instance.billingEndDate);
  writeNotNull('BillingWeeks', instance.billingWeeks);
  writeNotNull('BillingMonths', instance.billingMonths);
  writeNotNull('InvoicedAmount', instance.invoicedAmount);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('ProjectManager', instance.projectManager);
  writeNotNull('ReceiveDeliveryId', instance.receiveDeliveryId);
  writeNotNull(
      'ReceiveDeliveryDeliveryType', instance.receiveDeliveryDeliveryType);
  writeNotNull(
      'ReceiveDeliveryRequiredDate', instance.receiveDeliveryRequiredDate);
  writeNotNull(
      'ReceiveDeliveryRequiredTime', instance.receiveDeliveryRequiredTime);
  writeNotNull(
      'ReceiveDeliveryTargetShipDate', instance.receiveDeliveryTargetShipDate);
  writeNotNull(
      'ReceiveDeliveryTargetShipTime', instance.receiveDeliveryTargetShipTime);
  writeNotNull('ReceiveDeliveryDirection', instance.receiveDeliveryDirection);
  writeNotNull(
      'ReceiveDeliveryAddressType', instance.receiveDeliveryAddressType);
  writeNotNull(
      'ReceiveDeliveryFromLocation', instance.receiveDeliveryFromLocation);
  writeNotNull(
      'ReceiveDeliveryFromContact', instance.receiveDeliveryFromContact);
  writeNotNull('ReceiveDeliveryFromContactPhone',
      instance.receiveDeliveryFromContactPhone);
  writeNotNull('ReceiveDeliveryFromAlternateContact',
      instance.receiveDeliveryFromAlternateContact);
  writeNotNull('ReceiveDeliveryFromAlternateContactPhone',
      instance.receiveDeliveryFromAlternateContactPhone);
  writeNotNull(
      'ReceiveDeliveryFromAttention', instance.receiveDeliveryFromAttention);
  writeNotNull(
      'ReceiveDeliveryFromAddress1', instance.receiveDeliveryFromAddress1);
  writeNotNull(
      'ReceiveDeliveryFromAdd2ress', instance.receiveDeliveryFromAdd2ress);
  writeNotNull('ReceiveDeliveryFromCity', instance.receiveDeliveryFromCity);
  writeNotNull('ReceiveDeliveryFromState', instance.receiveDeliveryFromState);
  writeNotNull(
      'ReceiveDeliveryFromZipCode', instance.receiveDeliveryFromZipCode);
  writeNotNull(
      'ReceiveDeliveryFromCountry', instance.receiveDeliveryFromCountry);
  writeNotNull(
      'ReceiveDeliveryFromCountryId', instance.receiveDeliveryFromCountryId);
  writeNotNull('ReceiveDeliveryFromCrossStreets',
      instance.receiveDeliveryFromCrossStreets);
  writeNotNull('ReceiveDeliveryToLocation', instance.receiveDeliveryToLocation);
  writeNotNull('ReceiveDeliveryToVenue', instance.receiveDeliveryToVenue);
  writeNotNull('ReceiveDeliveryToVenueId', instance.receiveDeliveryToVenueId);
  writeNotNull(
      'ReceiveDeliveryToWarehouse', instance.receiveDeliveryToWarehouse);
  writeNotNull(
      'ReceiveDeliveryToWarehouseId', instance.receiveDeliveryToWarehouseId);
  writeNotNull('ReceiveDeliveryToContact', instance.receiveDeliveryToContact);
  writeNotNull(
      'ReceiveDeliveryToContactPhone', instance.receiveDeliveryToContactPhone);
  writeNotNull('ReceiveDeliveryToAlternateContact',
      instance.receiveDeliveryToAlternateContact);
  writeNotNull('ReceiveDeliveryToAlternateContactPhone',
      instance.receiveDeliveryToAlternateContactPhone);
  writeNotNull(
      'ReceiveDeliveryToAttention', instance.receiveDeliveryToAttention);
  writeNotNull('ReceiveDeliveryToAddress1', instance.receiveDeliveryToAddress1);
  writeNotNull('ReceiveDeliveryToAddress2', instance.receiveDeliveryToAddress2);
  writeNotNull('ReceiveDeliveryToCity', instance.receiveDeliveryToCity);
  writeNotNull('ReceiveDeliveryToState', instance.receiveDeliveryToState);
  writeNotNull('ReceiveDeliveryToZipCode', instance.receiveDeliveryToZipCode);
  writeNotNull(
      'ReceiveDeliveryToCountryId', instance.receiveDeliveryToCountryId);
  writeNotNull('ReceiveDeliveryToCountry', instance.receiveDeliveryToCountry);
  writeNotNull(
      'ReceiveDeliveryToContactFax', instance.receiveDeliveryToContactFax);
  writeNotNull(
      'ReceiveDeliveryToCrossStreets', instance.receiveDeliveryToCrossStreets);
  writeNotNull(
      'ReceiveDeliveryDeliveryNotes', instance.receiveDeliveryDeliveryNotes);
  writeNotNull('ReceiveDeliveryCarrierId', instance.receiveDeliveryCarrierId);
  writeNotNull('ReceiveDeliveryCarrier', instance.receiveDeliveryCarrier);
  writeNotNull(
      'ReceiveDeliveryCarrierAccount', instance.receiveDeliveryCarrierAccount);
  writeNotNull('ReceiveDeliveryShipViaId', instance.receiveDeliveryShipViaId);
  writeNotNull('ReceiveDeliveryShipVia', instance.receiveDeliveryShipVia);
  writeNotNull('ReceiveDeliveryInvoiceId', instance.receiveDeliveryInvoiceId);
  writeNotNull('ReceiveDeliveryVendorInvoiceId',
      instance.receiveDeliveryVendorInvoiceId);
  writeNotNull('ReceiveDeliveryEstimatedFreight',
      instance.receiveDeliveryEstimatedFreight);
  writeNotNull('ReceiveDeliveryFreightInvoiceAmount',
      instance.receiveDeliveryFreightInvoiceAmount);
  writeNotNull('ReceiveDeliveryChargeType', instance.receiveDeliveryChargeType);
  writeNotNull('ReceiveDeliveryFreightTrackingNumber',
      instance.receiveDeliveryFreightTrackingNumber);
  writeNotNull('ReceiveDeliveryFreightTrackingUrl',
      instance.receiveDeliveryFreightTrackingUrl);
  writeNotNull('ReceiveDeliveryDropShip', instance.receiveDeliveryDropShip);
  writeNotNull(
      'ReceiveDeliveryPackageCode', instance.receiveDeliveryPackageCode);
  writeNotNull('ReceiveDeliveryBillPoFreightOnOrder',
      instance.receiveDeliveryBillPoFreightOnOrder);
  writeNotNull('ReceiveDeliveryOnlineOrderNumber',
      instance.receiveDeliveryOnlineOrderNumber);
  writeNotNull('ReceiveDeliveryOnlineOrderStatus',
      instance.receiveDeliveryOnlineOrderStatus);
  writeNotNull('ReceiveDeliveryDateStamp', instance.receiveDeliveryDateStamp);
  writeNotNull('ReturnDeliveryId', instance.returnDeliveryId);
  writeNotNull(
      'ReturnDeliveryDeliveryType', instance.returnDeliveryDeliveryType);
  writeNotNull(
      'ReturnDeliveryRequiredDate', instance.returnDeliveryRequiredDate);
  writeNotNull(
      'ReturnDeliveryRequiredTime', instance.returnDeliveryRequiredTime);
  writeNotNull(
      'ReturnDeliveryTargetShipDate', instance.returnDeliveryTargetShipDate);
  writeNotNull(
      'ReturnDeliveryTargetShipTime', instance.returnDeliveryTargetShipTime);
  writeNotNull('ReturnDeliveryDirection', instance.returnDeliveryDirection);
  writeNotNull('ReturnDeliveryAddressType', instance.returnDeliveryAddressType);
  writeNotNull(
      'ReturnDeliveryFromLocation', instance.returnDeliveryFromLocation);
  writeNotNull('ReturnDeliveryFromContact', instance.returnDeliveryFromContact);
  writeNotNull('ReturnDeliveryFromContactPhone',
      instance.returnDeliveryFromContactPhone);
  writeNotNull('ReturnDeliveryFromAlternateContact',
      instance.returnDeliveryFromAlternateContact);
  writeNotNull('ReturnDeliveryFromAlternateContactPhone',
      instance.returnDeliveryFromAlternateContactPhone);
  writeNotNull(
      'ReturnDeliveryFromAttention', instance.returnDeliveryFromAttention);
  writeNotNull(
      'ReturnDeliveryFromAddress1', instance.returnDeliveryFromAddress1);
  writeNotNull(
      'ReturnDeliveryFromAdd2ress', instance.returnDeliveryFromAdd2ress);
  writeNotNull('ReturnDeliveryFromCity', instance.returnDeliveryFromCity);
  writeNotNull('ReturnDeliveryFromState', instance.returnDeliveryFromState);
  writeNotNull('ReturnDeliveryFromZipCode', instance.returnDeliveryFromZipCode);
  writeNotNull('ReturnDeliveryFromCountry', instance.returnDeliveryFromCountry);
  writeNotNull(
      'ReturnDeliveryFromCountryId', instance.returnDeliveryFromCountryId);
  writeNotNull('ReturnDeliveryFromCrossStreets',
      instance.returnDeliveryFromCrossStreets);
  writeNotNull('ReturnDeliveryToLocation', instance.returnDeliveryToLocation);
  writeNotNull('ReturnDeliveryToVenue', instance.returnDeliveryToVenue);
  writeNotNull('ReturnDeliveryToVenueId', instance.returnDeliveryToVenueId);
  writeNotNull('ReturnDeliveryToWarehouse', instance.returnDeliveryToWarehouse);
  writeNotNull(
      'ReturnDeliveryToWarehouseId', instance.returnDeliveryToWarehouseId);
  writeNotNull('ReturnDeliveryToContact', instance.returnDeliveryToContact);
  writeNotNull(
      'ReturnDeliveryToContactPhone', instance.returnDeliveryToContactPhone);
  writeNotNull('ReturnDeliveryToAlternateContact',
      instance.returnDeliveryToAlternateContact);
  writeNotNull('ReturnDeliveryToAlternateContactPhone',
      instance.returnDeliveryToAlternateContactPhone);
  writeNotNull('ReturnDeliveryToAttention', instance.returnDeliveryToAttention);
  writeNotNull('ReturnDeliveryToAddress1', instance.returnDeliveryToAddress1);
  writeNotNull('ReturnDeliveryToAddress2', instance.returnDeliveryToAddress2);
  writeNotNull('ReturnDeliveryToCity', instance.returnDeliveryToCity);
  writeNotNull('ReturnDeliveryToState', instance.returnDeliveryToState);
  writeNotNull('ReturnDeliveryToZipCode', instance.returnDeliveryToZipCode);
  writeNotNull('ReturnDeliveryToCountryId', instance.returnDeliveryToCountryId);
  writeNotNull('ReturnDeliveryToCountry', instance.returnDeliveryToCountry);
  writeNotNull(
      'ReturnDeliveryToContactFax', instance.returnDeliveryToContactFax);
  writeNotNull(
      'ReturnDeliveryToCrossStreets', instance.returnDeliveryToCrossStreets);
  writeNotNull(
      'ReturnDeliveryDeliveryNotes', instance.returnDeliveryDeliveryNotes);
  writeNotNull('ReturnDeliveryCarrierId', instance.returnDeliveryCarrierId);
  writeNotNull('ReturnDeliveryCarrier', instance.returnDeliveryCarrier);
  writeNotNull(
      'ReturnDeliveryCarrierAccount', instance.returnDeliveryCarrierAccount);
  writeNotNull('ReturnDeliveryShipViaId', instance.returnDeliveryShipViaId);
  writeNotNull('ReturnDeliveryShipVia', instance.returnDeliveryShipVia);
  writeNotNull('ReturnDeliveryInvoiceId', instance.returnDeliveryInvoiceId);
  writeNotNull(
      'ReturnDeliveryVendorInvoiceId', instance.returnDeliveryVendorInvoiceId);
  writeNotNull('ReturnDeliveryEstimatedFreight',
      instance.returnDeliveryEstimatedFreight);
  writeNotNull('ReturnDeliveryFreightInvoiceAmount',
      instance.returnDeliveryFreightInvoiceAmount);
  writeNotNull('ReturnDeliveryChargeType', instance.returnDeliveryChargeType);
  writeNotNull('ReturnDeliveryFreightTrackingNumber',
      instance.returnDeliveryFreightTrackingNumber);
  writeNotNull('ReturnDeliveryFreightTrackingUrl',
      instance.returnDeliveryFreightTrackingUrl);
  writeNotNull(
      'ReturnDeliveryVendorRetrieve', instance.returnDeliveryVendorRetrieve);
  writeNotNull('ReturnDeliveryPackageCode', instance.returnDeliveryPackageCode);
  writeNotNull('ReturnDeliveryBillPoFreightOnOrder',
      instance.returnDeliveryBillPoFreightOnOrder);
  writeNotNull('ReturnDeliveryOnlineOrderNumber',
      instance.returnDeliveryOnlineOrderNumber);
  writeNotNull('ReturnDeliveryOnlineOrderStatus',
      instance.returnDeliveryOnlineOrderStatus);
  writeNotNull('ReturnDeliveryDateStamp', instance.returnDeliveryDateStamp);
  writeNotNull('EnableProjects', instance.enableProjects);
  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('ProjectNumber', instance.projectNumber);
  writeNotNull('Project', instance.project);
  writeNotNull('ProjectDrawingsId', instance.projectDrawingsId);
  writeNotNull('ProjectDrawings', instance.projectDrawings);
  writeNotNull('ProjectItemsOrderedId', instance.projectItemsOrderedId);
  writeNotNull('ProjectItemsOrdered', instance.projectItemsOrdered);
  writeNotNull('ProjectDropShipId', instance.projectDropShipId);
  writeNotNull('ProjectDropShip', instance.projectDropShip);
  writeNotNull('ProjectAsBuildId', instance.projectAsBuildId);
  writeNotNull('ProjectAsBuild', instance.projectAsBuild);
  writeNotNull('ProjectCommissioningId', instance.projectCommissioningId);
  writeNotNull('ProjectCommissioning', instance.projectCommissioning);
  writeNotNull('ProjectDepositId', instance.projectDepositId);
  writeNotNull('ProjectDeposit', instance.projectDeposit);
  writeNotNull('Location', instance.location);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull(
      'UpdateAllRatesToNewCurrency', instance.updateAllRatesToNewCurrency);
  writeNotNull('ConfirmUpdateAllRatesToNewCurrency',
      instance.confirmUpdateAllRatesToNewCurrency);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('BillingCycle', instance.billingCycle);
  writeNotNull('RemitToAttention1', instance.remitToAttention1);
  writeNotNull('RemitToAttention2', instance.remitToAttention2);
  writeNotNull('RemitToAddress1', instance.remitToAddress1);
  writeNotNull('RemitToAddress2', instance.remitToAddress2);
  writeNotNull('RemitToCity', instance.remitToCity);
  writeNotNull('RemitToState', instance.remitToState);
  writeNotNull('RemitToCountryId', instance.remitToCountryId);
  writeNotNull('RemitToCountry', instance.remitToCountry);
  writeNotNull('RemitToZipCode', instance.remitToZipCode);
  writeNotNull('RemitToEmail', instance.remitToEmail);
  writeNotNull('RemitToPhone', instance.remitToPhone);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('PaymentTermsDueInDays', instance.paymentTermsDueInDays);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('TaxId', instance.taxId);
  writeNotNull('Tax1Name', instance.tax1Name);
  writeNotNull('Tax2Name', instance.tax2Name);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('HasRentalItem', instance.hasRentalItem);
  writeNotNull('HasSalesItem', instance.hasSalesItem);
  writeNotNull('HasMiscellaneousItem', instance.hasMiscellaneousItem);
  writeNotNull('HasLaborItem', instance.hasLaborItem);
  writeNotNull('HasFacilitiesItem', instance.hasFacilitiesItem);
  writeNotNull('HasLossAndDamageItem', instance.hasLossAndDamageItem);
  writeNotNull('HasRentalSaleItem', instance.hasRentalSaleItem);
  writeNotNull('HasConsignItem', instance.hasConsignItem);
  writeNotNull('HasPartsItem', instance.hasPartsItem);
  writeNotNull('RentalDiscountPercent', instance.rentalDiscountPercent);
  writeNotNull('RentalTotal', instance.rentalTotal);
  writeNotNull('RentalTotalIncludesTax', instance.rentalTotalIncludesTax);
  writeNotNull('SalesDiscountPercent', instance.salesDiscountPercent);
  writeNotNull('SalesTotal', instance.salesTotal);
  writeNotNull('SalesTotalIncludesTax', instance.salesTotalIncludesTax);
  writeNotNull('PartsDiscountPercent', instance.partsDiscountPercent);
  writeNotNull('PartsTotal', instance.partsTotal);
  writeNotNull('PartsTotalIncludesTax', instance.partsTotalIncludesTax);
  writeNotNull('VehicleDiscountPercent', instance.vehicleDiscountPercent);
  writeNotNull('VehicleTotal', instance.vehicleTotal);
  writeNotNull('VehicleTotalIncludesTax', instance.vehicleTotalIncludesTax);
  writeNotNull('MiscDiscountPercent', instance.miscDiscountPercent);
  writeNotNull('MiscTotal', instance.miscTotal);
  writeNotNull('MiscTotalIncludesTax', instance.miscTotalIncludesTax);
  writeNotNull('LaborDiscountPercent', instance.laborDiscountPercent);
  writeNotNull('LaborTotal', instance.laborTotal);
  writeNotNull('LaborTotalIncludesTax', instance.laborTotalIncludesTax);
  writeNotNull('SubRentalDaysPerWeek', instance.subRentalDaysPerWeek);
  writeNotNull('SubRentalDiscountPercent', instance.subRentalDiscountPercent);
  writeNotNull('WeeklySubRentalTotal', instance.weeklySubRentalTotal);
  writeNotNull('MonthlySubRentalTotal', instance.monthlySubRentalTotal);
  writeNotNull('PeriodSubRentalTotal', instance.periodSubRentalTotal);
  writeNotNull('WeeklySubRentalTotalIncludesTax',
      instance.weeklySubRentalTotalIncludesTax);
  writeNotNull('MonthlySubRentalTotalIncludesTax',
      instance.monthlySubRentalTotalIncludesTax);
  writeNotNull('PeriodSubRentalTotalIncludesTax',
      instance.periodSubRentalTotalIncludesTax);
  writeNotNull('SubSalesDiscountPercent', instance.subSalesDiscountPercent);
  writeNotNull('SubSalesTotal', instance.subSalesTotal);
  writeNotNull('SubSalesTotalIncludesTax', instance.subSalesTotalIncludesTax);
  writeNotNull('SubVehicleDaysPerWeek', instance.subVehicleDaysPerWeek);
  writeNotNull('SubvehicleDiscountPercent', instance.subvehicleDiscountPercent);
  writeNotNull('WeeklySubVehicleTotal', instance.weeklySubVehicleTotal);
  writeNotNull('MonthlySubVehicleTotal', instance.monthlySubVehicleTotal);
  writeNotNull('PeriodSubVehicleTotal', instance.periodSubVehicleTotal);
  writeNotNull('WeeklySubVehicleTotalIncludesTax',
      instance.weeklySubVehicleTotalIncludesTax);
  writeNotNull('MonthlySubVehicleTotalIncludesTax',
      instance.monthlySubVehicleTotalIncludesTax);
  writeNotNull('PeriodSubVehicleTotalIncludesTax',
      instance.periodSubVehicleTotalIncludesTax);
  writeNotNull('SubMiscDiscountPercent', instance.subMiscDiscountPercent);
  writeNotNull('WeeklySubMiscTotal', instance.weeklySubMiscTotal);
  writeNotNull('MonthlySubMiscTotal', instance.monthlySubMiscTotal);
  writeNotNull('PeriodSubMiscTotal', instance.periodSubMiscTotal);
  writeNotNull(
      'WeeklySubMiscTotalIncludesTax', instance.weeklySubMiscTotalIncludesTax);
  writeNotNull('MonthlySubMiscTotalIncludesTax',
      instance.monthlySubMiscTotalIncludesTax);
  writeNotNull(
      'PeriodSubMiscTotalIncludesTax', instance.periodSubMiscTotalIncludesTax);
  writeNotNull('SubLaborDiscountPercent', instance.subLaborDiscountPercent);
  writeNotNull('WeeklySubLaborTotal', instance.weeklySubLaborTotal);
  writeNotNull('MonthlySubLaborTotal', instance.monthlySubLaborTotal);
  writeNotNull('PeriodSubLaborTotal', instance.periodSubLaborTotal);
  writeNotNull('WeeklySubLaborTotalIncludesTax',
      instance.weeklySubLaborTotalIncludesTax);
  writeNotNull('MonthlySubLaborTotalIncludesTax',
      instance.monthlySubLaborTotalIncludesTax);
  writeNotNull('PeriodSubLaborTotalIncludesTax',
      instance.periodSubLaborTotalIncludesTax);
  writeNotNull('MiscellaneousIsComplete', instance.miscellaneousIsComplete);
  writeNotNull(
      'SubMiscellaneousIsComplete', instance.subMiscellaneousIsComplete);
  writeNotNull('LaborIsComplete', instance.laborIsComplete);
  writeNotNull('SubLaborIsComplete', instance.subLaborIsComplete);
  writeNotNull('CurrencyColor', instance.currencyColor);
  writeNotNull('StatusColor', instance.statusColor);
  writeNotNull('PurchaseOrderNumberColor', instance.purchaseOrderNumberColor);
  writeNotNull('VendorColor', instance.vendorColor);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('ExpensePOColor', instance.expensePOColor);
  writeNotNull('HasConsignorFee', instance.hasConsignorFee);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentPurchaseOrderPurchaseOrderDocument
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderPurchaseOrderDocument(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentToJson(
        WebApiModulesAgentPurchaseOrderPurchaseOrderDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPostRequest
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPostRequest(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPostRequestToJson(
        WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPostRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPutRequest
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPutRequest(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPutRequestToJson(
        WebApiModulesAgentPurchaseOrderPurchaseOrderDocumentPutRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesRequest
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesRequest(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          contractId: json['ContractId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesRequestToJson(
        WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('ContractId', instance.contractId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesResponse
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesResponseToJson(
        WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveAssignBarCodesResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsRequest
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsRequest(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          contractId: json['ContractId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsRequestToJson(
        WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('ContractId', instance.contractId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsResponse
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsResponse(
          itemsAdded: json['ItemsAdded'] as int?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsResponseToJson(
        WebApiModulesAgentPurchaseOrderPurchaseOrderReceiveBarCodeAddItemsResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ItemsAdded', instance.itemsAdded);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentPurchaseOrderReceiveContractRequest
    _$WebApiModulesAgentPurchaseOrderReceiveContractRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderReceiveContractRequest(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderReceiveContractRequestToJson(
        WebApiModulesAgentPurchaseOrderReceiveContractRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesAgentPurchaseOrderReceiveContractResponse
    _$WebApiModulesAgentPurchaseOrderReceiveContractResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderReceiveContractResponse(
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderReceiveContractResponseToJson(
        WebApiModulesAgentPurchaseOrderReceiveContractResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesAgentPurchaseOrderReceiveItemRequest
    _$WebApiModulesAgentPurchaseOrderReceiveItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderReceiveItemRequest(
          contractId: json['ContractId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
          quantity: json['Quantity'] as int?,
        );

Map<String, dynamic> _$WebApiModulesAgentPurchaseOrderReceiveItemRequestToJson(
    WebApiModulesAgentPurchaseOrderReceiveItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderItemId', instance.purchaseOrderItemId);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesAgentPurchaseOrderReceiveItemResponse
    _$WebApiModulesAgentPurchaseOrderReceiveItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderReceiveItemResponse(
          contractId: json['ContractId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
          quantity: json['Quantity'] as int?,
          quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
          quantityReceived: (json['QuantityReceived'] as num?)?.toDouble(),
          quantityNeedBarCode:
              (json['QuantityNeedBarCode'] as num?)?.toDouble(),
          quantityColor: json['QuantityColor'] as String?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentPurchaseOrderReceiveItemResponseToJson(
    WebApiModulesAgentPurchaseOrderReceiveItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderItemId', instance.purchaseOrderItemId);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('QuantityReceived', instance.quantityReceived);
  writeNotNull('QuantityNeedBarCode', instance.quantityNeedBarCode);
  writeNotNull('QuantityColor', instance.quantityColor);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentPurchaseOrderReturnContractRequest
    _$WebApiModulesAgentPurchaseOrderReturnContractRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderReturnContractRequest(
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderReturnContractRequestToJson(
        WebApiModulesAgentPurchaseOrderReturnContractRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesAgentPurchaseOrderReturnContractResponse
    _$WebApiModulesAgentPurchaseOrderReturnContractResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderReturnContractResponse(
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderReturnContractResponseToJson(
        WebApiModulesAgentPurchaseOrderReturnContractResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesAgentPurchaseOrderReturnItemRequest
    _$WebApiModulesAgentPurchaseOrderReturnItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderReturnItemRequest(
          contractId: json['ContractId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
          quantity: json['Quantity'] as int?,
          barCode: json['BarCode'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentPurchaseOrderReturnItemRequestToJson(
    WebApiModulesAgentPurchaseOrderReturnItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderItemId', instance.purchaseOrderItemId);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('BarCode', instance.barCode);
  return val;
}

WebApiModulesAgentPurchaseOrderReturnItemResponse
    _$WebApiModulesAgentPurchaseOrderReturnItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderReturnItemResponse(
          contractId: json['ContractId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
          quantity: json['Quantity'] as int?,
          quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
          quantityReceived: (json['QuantityReceived'] as num?)?.toDouble(),
          quantityReturned: (json['QuantityReturned'] as num?)?.toDouble(),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentPurchaseOrderReturnItemResponseToJson(
    WebApiModulesAgentPurchaseOrderReturnItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderItemId', instance.purchaseOrderItemId);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('QuantityReceived', instance.quantityReceived);
  writeNotNull('QuantityReturned', instance.quantityReturned);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemRequest
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemRequest(
          contractId: json['ContractId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemRequestToJson(
        WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemResponse
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemResponseToJson(
        WebApiModulesAgentPurchaseOrderSelectAllNoneReceiveItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemRequest
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemRequest(
          contractId: json['ContractId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemRequestToJson(
        WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemResponse
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemResponseToJson(
        WebApiModulesAgentPurchaseOrderSelectAllNoneReturnItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesAgentQuoteQuote _$WebApiModulesAgentQuoteQuoteFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesAgentQuoteQuote(
      quoteId: json['QuoteId'] as String?,
      quoteNumber: json['QuoteNumber'] as String?,
      quoteDate: json['QuoteDate'] as String?,
      versionNumber: json['VersionNumber'] as int?,
      convertedToOrderId: json['ConvertedToOrderId'] as String?,
      convertedToOrderNumber: json['ConvertedToOrderNumber'] as String?,
      description: json['Description'] as String?,
      officeLocationId: json['OfficeLocationId'] as String?,
      officeLocation: json['OfficeLocation'] as String?,
      warehouseId: json['WarehouseId'] as String?,
      warehouse: json['Warehouse'] as String?,
      warehouseCode: json['WarehouseCode'] as String?,
      departmentId: json['DepartmentId'] as String?,
      department: json['Department'] as String?,
      customerId: json['CustomerId'] as String?,
      customer: json['Customer'] as String?,
      customerNumber: json['CustomerNumber'] as String?,
      dealId: json['DealId'] as String?,
      deal: json['Deal'] as String?,
      dealNumber: json['DealNumber'] as String?,
      rateType: json['RateType'] as String?,
      rateTypeDisplay: json['RateTypeDisplay'] as String?,
      agentId: json['AgentId'] as String?,
      agent: json['Agent'] as String?,
      projectManagerId: json['ProjectManagerId'] as String?,
      projectManager: json['ProjectManager'] as String?,
      rental: json['Rental'] as bool?,
      sales: json['Sales'] as bool?,
      miscellaneous: json['Miscellaneous'] as bool?,
      labor: json['Labor'] as bool?,
      facilities: json['Facilities'] as bool?,
      transportation: json['Transportation'] as bool?,
      rentalSale: json['RentalSale'] as bool?,
      lossAndDamage: json['LossAndDamage'] as bool?,
      repair: json['Repair'] as bool?,
      hasRentalItem: json['HasRentalItem'] as bool?,
      hasSalesItem: json['HasSalesItem'] as bool?,
      hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
      hasLaborItem: json['HasLaborItem'] as bool?,
      hasFacilitiesItem: json['HasFacilitiesItem'] as bool?,
      hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
      hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
      hasRepair: json['HasRepair'] as bool?,
      activityDatesAndTimes: (json['ActivityDatesAndTimes'] as List<dynamic>?)
              ?.map((e) =>
                  WebApiModulesHomeControlsOrderDatesOrderDates.fromJson(
                      e as Map<String, dynamic>))
              .toList() ??
          [],
      pickDate: json['PickDate'] as String?,
      pickTime: json['PickTime'] as String?,
      estimatedStartDate: json['EstimatedStartDate'] as String?,
      estimatedStartTime: json['EstimatedStartTime'] as String?,
      estimatedStopDate: json['EstimatedStopDate'] as String?,
      estimatedStopTime: json['EstimatedStopTime'] as String?,
      pickUpDate: json['PickUpDate'] as String?,
      pickUpTime: json['PickUpTime'] as String?,
      prepDate: json['PrepDate'] as String?,
      prepTime: json['PrepTime'] as String?,
      loadInDate: json['LoadInDate'] as String?,
      loadInTime: json['LoadInTime'] as String?,
      strikeDate: json['StrikeDate'] as String?,
      strikeTime: json['StrikeTime'] as String?,
      testDate: json['TestDate'] as String?,
      testTime: json['TestTime'] as String?,
      orderTypeId: json['OrderTypeId'] as String?,
      orderType: json['OrderType'] as String?,
      orderTypeCombineActivityTabs:
          json['OrderTypeCombineActivityTabs'] as bool?,
      pendingPo: json['PendingPo'] as bool?,
      poNumber: json['PoNumber'] as String?,
      poAmount: (json['PoAmount'] as num?)?.toDouble(),
      location: json['Location'] as String?,
      orderLocationId: json['OrderLocationId'] as String?,
      orderLocation: json['OrderLocation'] as String?,
      referenceNumber: json['ReferenceNumber'] as String?,
      total: (json['Total'] as num?)?.toDouble(),
      status: json['Status'] as String?,
      statusDate: json['StatusDate'] as String?,
      poApprovalStatusId: json['PoApprovalStatusId'] as String?,
      lockBillingDates: json['LockBillingDates'] as bool?,
      specifyBillingDatesByType: json['SpecifyBillingDatesByType'] as bool?,
      rentalBillingStartDate: json['RentalBillingStartDate'] as String?,
      rentalBillingEndDate: json['RentalBillingEndDate'] as String?,
      laborBillingStartDate: json['LaborBillingStartDate'] as String?,
      laborBillingEndDate: json['LaborBillingEndDate'] as String?,
      miscellaneousBillingStartDate:
          json['MiscellaneousBillingStartDate'] as String?,
      miscellaneousBillingEndDate:
          json['MiscellaneousBillingEndDate'] as String?,
      facilitiesBillingStartDate: json['FacilitiesBillingStartDate'] as String?,
      facilitiesBillingEndDate: json['FacilitiesBillingEndDate'] as String?,
      vehicleBillingStartDate: json['VehicleBillingStartDate'] as String?,
      vehicleBillingEndDate: json['VehicleBillingEndDate'] as String?,
      delayBillingSearchUntil: json['DelayBillingSearchUntil'] as String?,
      includePrepFeesInRentalRate: json['IncludePrepFeesInRentalRate'] as bool?,
      billingStartDate: json['BillingStartDate'] as String?,
      billingEndDate: json['BillingEndDate'] as String?,
      billingWeeks: (json['BillingWeeks'] as num?)?.toDouble(),
      billingMonths: (json['BillingMonths'] as num?)?.toDouble(),
      determineQuantitiesToBillBasedOn:
          json['DetermineQuantitiesToBillBasedOn'] as String?,
      billingCycleId: json['BillingCycleId'] as String?,
      billingCycle: json['BillingCycle'] as String?,
      billingCycleType: json['BillingCycleType'] as String?,
      paymentTermsId: json['PaymentTermsId'] as String?,
      paymentTerms: json['PaymentTerms'] as String?,
      paymentTypeId: json['PaymentTypeId'] as String?,
      paymentType: json['PaymentType'] as String?,
      currencyId: json['CurrencyId'] as String?,
      updateAllRatesToNewCurrency: json['UpdateAllRatesToNewCurrency'] as bool?,
      confirmUpdateAllRatesToNewCurrency:
          json['ConfirmUpdateAllRatesToNewCurrency'] as String?,
      currencyCode: json['CurrencyCode'] as String?,
      currency: json['Currency'] as String?,
      currencySymbol: json['CurrencySymbol'] as String?,
      taxOptionId: json['TaxOptionId'] as String?,
      taxOption: json['TaxOption'] as String?,
      tax1Name: json['Tax1Name'] as String?,
      tax2Name: json['Tax2Name'] as String?,
      taxId: json['TaxId'] as String?,
      rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
      salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
      laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
      rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
      salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
      laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
      noCharge: json['NoCharge'] as bool?,
      noChargeReason: json['NoChargeReason'] as String?,
      printIssuedToAddressFrom: json['PrintIssuedToAddressFrom'] as String?,
      issuedToName: json['IssuedToName'] as String?,
      issuedToAttention: json['IssuedToAttention'] as String?,
      issuedToAttention2: json['IssuedToAttention2'] as String?,
      issuedToAddress1: json['IssuedToAddress1'] as String?,
      issuedToAddress2: json['IssuedToAddress2'] as String?,
      issuedToCity: json['IssuedToCity'] as String?,
      issuedToState: json['IssuedToState'] as String?,
      issuedToZipCode: json['IssuedToZipCode'] as String?,
      issuedToCountryId: json['IssuedToCountryId'] as String?,
      issuedToCountry: json['IssuedToCountry'] as String?,
      billToAddressDifferentFromIssuedToAddress:
          json['BillToAddressDifferentFromIssuedToAddress'] as bool?,
      billToAddressId: json['BillToAddressId'] as String?,
      billToName: json['BillToName'] as String?,
      billToAttention: json['BillToAttention'] as String?,
      billToAttention2: json['BillToAttention2'] as String?,
      billToAddress1: json['BillToAddress1'] as String?,
      billToAddress2: json['BillToAddress2'] as String?,
      billToCity: json['BillToCity'] as String?,
      billToState: json['BillToState'] as String?,
      billToZipCode: json['BillToZipCode'] as String?,
      billToCountryId: json['BillToCountryId'] as String?,
      billToCountry: json['BillToCountry'] as String?,
      discountReasonId: json['DiscountReasonId'] as String?,
      discountReason: json['DiscountReason'] as String?,
      requireContactConfirmation: json['RequireContactConfirmation'] as bool?,
      includeInBillingAnalysis: json['IncludeInBillingAnalysis'] as bool?,
      hiatusDiscountFrom: json['HiatusDiscountFrom'] as String?,
      roundTripRentals: json['RoundTripRentals'] as bool?,
      inGroup: json['InGroup'] as bool?,
      groupNumber: json['GroupNumber'] as int?,
      groupColor: json['GroupColor'] as int?,
      groupOrderBy: (json['GroupOrderBy'] as num?)?.toDouble(),
      coverLetterId: json['CoverLetterId'] as String?,
      coverLetter: json['CoverLetter'] as String?,
      termsConditionsId: json['TermsConditionsId'] as String?,
      termsConditions: json['TermsConditions'] as String?,
      outsideSalesRepresentativeId:
          json['OutsideSalesRepresentativeId'] as String?,
      outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
      marketTypeId: json['MarketTypeId'] as String?,
      marketType: json['MarketType'] as String?,
      marketSegmentId: json['MarketSegmentId'] as String?,
      marketSegment: json['MarketSegment'] as String?,
      marketSegmentJobId: json['MarketSegmentJobId'] as String?,
      marketSegmentJob: json['MarketSegmentJob'] as String?,
      outDeliveryId: json['OutDeliveryId'] as String?,
      outDeliveryDeliveryType: json['OutDeliveryDeliveryType'] as String?,
      outDeliveryRequiredDate: json['OutDeliveryRequiredDate'] as String?,
      outDeliveryRequiredTime: json['OutDeliveryRequiredTime'] as String?,
      outDeliveryTargetShipDate: json['OutDeliveryTargetShipDate'] as String?,
      outDeliveryTargetShipTime: json['OutDeliveryTargetShipTime'] as String?,
      outDeliveryDirection: json['OutDeliveryDirection'] as String?,
      outDeliveryAddressType: json['OutDeliveryAddressType'] as String?,
      outDeliveryFromLocation: json['OutDeliveryFromLocation'] as String?,
      outDeliveryFromContact: json['OutDeliveryFromContact'] as String?,
      outDeliveryFromContactPhone:
          json['OutDeliveryFromContactPhone'] as String?,
      outDeliveryFromAlternateContact:
          json['OutDeliveryFromAlternateContact'] as String?,
      outDeliveryFromAlternateContactPhone:
          json['OutDeliveryFromAlternateContactPhone'] as String?,
      outDeliveryFromAttention: json['OutDeliveryFromAttention'] as String?,
      outDeliveryFromAddress1: json['OutDeliveryFromAddress1'] as String?,
      outDeliveryFromAdd2ress: json['OutDeliveryFromAdd2ress'] as String?,
      outDeliveryFromCity: json['OutDeliveryFromCity'] as String?,
      outDeliveryFromState: json['OutDeliveryFromState'] as String?,
      outDeliveryFromZipCode: json['OutDeliveryFromZipCode'] as String?,
      outDeliveryFromCountry: json['OutDeliveryFromCountry'] as String?,
      outDeliveryFromCountryId: json['OutDeliveryFromCountryId'] as String?,
      outDeliveryFromCrossStreets:
          json['OutDeliveryFromCrossStreets'] as String?,
      outDeliveryToLocation: json['OutDeliveryToLocation'] as String?,
      outDeliveryToContact: json['OutDeliveryToContact'] as String?,
      outDeliveryToContactPhone: json['OutDeliveryToContactPhone'] as String?,
      outDeliveryToAlternateContact:
          json['OutDeliveryToAlternateContact'] as String?,
      outDeliveryToAlternateContactPhone:
          json['OutDeliveryToAlternateContactPhone'] as String?,
      outDeliveryToAttention: json['OutDeliveryToAttention'] as String?,
      outDeliveryToAddress1: json['OutDeliveryToAddress1'] as String?,
      outDeliveryToAddress2: json['OutDeliveryToAddress2'] as String?,
      outDeliveryToCity: json['OutDeliveryToCity'] as String?,
      outDeliveryToState: json['OutDeliveryToState'] as String?,
      outDeliveryToZipCode: json['OutDeliveryToZipCode'] as String?,
      outDeliveryToCountryId: json['OutDeliveryToCountryId'] as String?,
      outDeliveryToCountry: json['OutDeliveryToCountry'] as String?,
      outDeliveryToContactFax: json['OutDeliveryToContactFax'] as String?,
      outDeliveryToCrossStreets: json['OutDeliveryToCrossStreets'] as String?,
      outDeliveryDeliveryNotes: json['OutDeliveryDeliveryNotes'] as String?,
      outDeliveryCarrierId: json['OutDeliveryCarrierId'] as String?,
      outDeliveryCarrier: json['OutDeliveryCarrier'] as String?,
      outDeliveryCarrierAccount: json['OutDeliveryCarrierAccount'] as String?,
      outDeliveryShipViaId: json['OutDeliveryShipViaId'] as String?,
      outDeliveryShipVia: json['OutDeliveryShipVia'] as String?,
      outDeliveryInvoiceId: json['OutDeliveryInvoiceId'] as String?,
      outDeliveryVendorInvoiceId: json['OutDeliveryVendorInvoiceId'] as String?,
      outDeliveryEstimatedFreight:
          (json['OutDeliveryEstimatedFreight'] as num?)?.toDouble(),
      outDeliveryFreightInvoiceAmount:
          (json['OutDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
      outDeliveryChargeType: json['OutDeliveryChargeType'] as String?,
      outDeliveryFreightTrackingNumber:
          json['OutDeliveryFreightTrackingNumber'] as String?,
      outDeliveryFreightTrackingUrl:
          json['OutDeliveryFreightTrackingUrl'] as String?,
      outDeliveryPackageCode: json['OutDeliveryPackageCode'] as String?,
      outDeliveryBillPoFreightOnOrder:
          json['OutDeliveryBillPoFreightOnOrder'] as bool?,
      outDeliveryOnlineOrderNumber:
          json['OutDeliveryOnlineOrderNumber'] as String?,
      outDeliveryToVenue: json['OutDeliveryToVenue'] as String?,
      outDeliveryToVenueId: json['OutDeliveryToVenueId'] as String?,
      outDeliveryToWarehouse: json['OutDeliveryToWarehouse'] as String?,
      outDeliveryToWarehouseId: json['OutDeliveryToWarehouseId'] as String?,
      outDeliveryDateStamp: json['OutDeliveryDateStamp'] as String?,
      inDeliveryId: json['InDeliveryId'] as String?,
      inDeliveryDeliveryType: json['InDeliveryDeliveryType'] as String?,
      inDeliveryRequiredDate: json['InDeliveryRequiredDate'] as String?,
      inDeliveryRequiredTime: json['InDeliveryRequiredTime'] as String?,
      inDeliveryTargetShipDate: json['InDeliveryTargetShipDate'] as String?,
      inDeliveryTargetShipTime: json['InDeliveryTargetShipTime'] as String?,
      inDeliveryDirection: json['InDeliveryDirection'] as String?,
      inDeliveryAddressType: json['InDeliveryAddressType'] as String?,
      inDeliveryFromLocation: json['InDeliveryFromLocation'] as String?,
      inDeliveryFromContact: json['InDeliveryFromContact'] as String?,
      inDeliveryFromContactPhone: json['InDeliveryFromContactPhone'] as String?,
      inDeliveryFromAlternateContact:
          json['InDeliveryFromAlternateContact'] as String?,
      inDeliveryFromAlternateContactPhone:
          json['InDeliveryFromAlternateContactPhone'] as String?,
      inDeliveryFromAttention: json['InDeliveryFromAttention'] as String?,
      inDeliveryFromAddress1: json['InDeliveryFromAddress1'] as String?,
      inDeliveryFromAdd2ress: json['InDeliveryFromAdd2ress'] as String?,
      inDeliveryFromCity: json['InDeliveryFromCity'] as String?,
      inDeliveryFromState: json['InDeliveryFromState'] as String?,
      inDeliveryFromZipCode: json['InDeliveryFromZipCode'] as String?,
      inDeliveryFromCountry: json['InDeliveryFromCountry'] as String?,
      inDeliveryFromCountryId: json['InDeliveryFromCountryId'] as String?,
      inDeliveryFromCrossStreets: json['InDeliveryFromCrossStreets'] as String?,
      inDeliveryToLocation: json['InDeliveryToLocation'] as String?,
      inDeliveryToContact: json['InDeliveryToContact'] as String?,
      inDeliveryToContactPhone: json['InDeliveryToContactPhone'] as String?,
      inDeliveryToAlternateContact:
          json['InDeliveryToAlternateContact'] as String?,
      inDeliveryToAlternateContactPhone:
          json['InDeliveryToAlternateContactPhone'] as String?,
      inDeliveryToAttention: json['InDeliveryToAttention'] as String?,
      inDeliveryToAddress1: json['InDeliveryToAddress1'] as String?,
      inDeliveryToAddress2: json['InDeliveryToAddress2'] as String?,
      inDeliveryToCity: json['InDeliveryToCity'] as String?,
      inDeliveryToState: json['InDeliveryToState'] as String?,
      inDeliveryToZipCode: json['InDeliveryToZipCode'] as String?,
      inDeliveryToCountryId: json['InDeliveryToCountryId'] as String?,
      inDeliveryToCountry: json['InDeliveryToCountry'] as String?,
      inDeliveryToContactFax: json['InDeliveryToContactFax'] as String?,
      inDeliveryToCrossStreets: json['InDeliveryToCrossStreets'] as String?,
      inDeliveryDeliveryNotes: json['InDeliveryDeliveryNotes'] as String?,
      inDeliveryCarrierId: json['InDeliveryCarrierId'] as String?,
      inDeliveryCarrier: json['InDeliveryCarrier'] as String?,
      inDeliveryCarrierAccount: json['InDeliveryCarrierAccount'] as String?,
      inDeliveryShipViaId: json['InDeliveryShipViaId'] as String?,
      inDeliveryShipVia: json['InDeliveryShipVia'] as String?,
      inDeliveryInvoiceId: json['InDeliveryInvoiceId'] as String?,
      inDeliveryVendorInvoiceId: json['InDeliveryVendorInvoiceId'] as String?,
      inDeliveryEstimatedFreight:
          (json['InDeliveryEstimatedFreight'] as num?)?.toDouble(),
      inDeliveryFreightInvoiceAmount:
          (json['InDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
      inDeliveryChargeType: json['InDeliveryChargeType'] as String?,
      inDeliveryFreightTrackingNumber:
          json['InDeliveryFreightTrackingNumber'] as String?,
      inDeliveryFreightTrackingUrl:
          json['InDeliveryFreightTrackingUrl'] as String?,
      inDeliveryPackageCode: json['InDeliveryPackageCode'] as String?,
      inDeliveryBillPoFreightOnOrder:
          json['InDeliveryBillPoFreightOnOrder'] as bool?,
      inDeliveryOnlineOrderNumber:
          json['InDeliveryOnlineOrderNumber'] as String?,
      inDeliveryOnlineOrderStatus:
          json['InDeliveryOnlineOrderStatus'] as String?,
      inDeliveryToVenue: json['InDeliveryToVenue'] as String?,
      inDeliveryToVenueId: json['InDeliveryToVenueId'] as String?,
      inDeliveryToWarehouse: json['InDeliveryToWarehouse'] as String?,
      inDeliveryToWarehouseId: json['InDeliveryToWarehouseId'] as String?,
      inDeliveryDateStamp: json['InDeliveryDateStamp'] as String?,
      rentalDaysPerWeek: (json['RentalDaysPerWeek'] as num?)?.toDouble(),
      rentalDiscountPercent:
          (json['RentalDiscountPercent'] as num?)?.toDouble(),
      weeklyRentalTotal: (json['WeeklyRentalTotal'] as num?)?.toDouble(),
      monthlyRentalTotal: (json['MonthlyRentalTotal'] as num?)?.toDouble(),
      periodRentalTotal: (json['PeriodRentalTotal'] as num?)?.toDouble(),
      weeklyRentalTotalIncludesTax:
          json['WeeklyRentalTotalIncludesTax'] as bool?,
      monthlyRentalTotalIncludesTax:
          json['MonthlyRentalTotalIncludesTax'] as bool?,
      periodRentalTotalIncludesTax:
          json['PeriodRentalTotalIncludesTax'] as bool?,
      billLockedTotal: json['BillLockedTotal'] as bool?,
      salesDiscountPercent: (json['SalesDiscountPercent'] as num?)?.toDouble(),
      salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
      salesTotalIncludesTax: json['SalesTotalIncludesTax'] as bool?,
      partsDiscountPercent: (json['PartsDiscountPercent'] as num?)?.toDouble(),
      partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
      partsTotalIncludesTax: json['PartsTotalIncludesTax'] as bool?,
      spaceDaysPerWeek: (json['SpaceDaysPerWeek'] as num?)?.toDouble(),
      spaceDiscountPercent: (json['SpaceDiscountPercent'] as num?)?.toDouble(),
      spaceSplitPercent: (json['SpaceSplitPercent'] as num?)?.toDouble(),
      weeklySpaceTotal: (json['WeeklySpaceTotal'] as num?)?.toDouble(),
      monthlySpaceTotal: (json['MonthlySpaceTotal'] as num?)?.toDouble(),
      periodSpaceTotal: (json['PeriodSpaceTotal'] as num?)?.toDouble(),
      weeklySpaceTotalIncludesTax: json['WeeklySpaceTotalIncludesTax'] as bool?,
      monthlySpaceTotalIncludesTax:
          json['MonthlySpaceTotalIncludesTax'] as bool?,
      periodSpaceTotalIncludesTax: json['PeriodSpaceTotalIncludesTax'] as bool?,
      vehicleDaysPerWeek: (json['VehicleDaysPerWeek'] as num?)?.toDouble(),
      vehicleDiscountPercent:
          (json['VehicleDiscountPercent'] as num?)?.toDouble(),
      weeklyVehicleTotal: (json['WeeklyVehicleTotal'] as num?)?.toDouble(),
      monthlyVehicleTotal: (json['MonthlyVehicleTotal'] as num?)?.toDouble(),
      periodVehicleTotal: (json['PeriodVehicleTotal'] as num?)?.toDouble(),
      weeklyVehicleTotalIncludesTax:
          json['WeeklyVehicleTotalIncludesTax'] as bool?,
      monthlyVehicleTotalIncludesTax:
          json['MonthlyVehicleTotalIncludesTax'] as bool?,
      periodVehicleTotalIncludesTax:
          json['PeriodVehicleTotalIncludesTax'] as bool?,
      miscDiscountPercent: (json['MiscDiscountPercent'] as num?)?.toDouble(),
      weeklyMiscTotal: (json['WeeklyMiscTotal'] as num?)?.toDouble(),
      monthlyMiscTotal: (json['MonthlyMiscTotal'] as num?)?.toDouble(),
      periodMiscTotal: (json['PeriodMiscTotal'] as num?)?.toDouble(),
      weeklyMiscTotalIncludesTax: json['WeeklyMiscTotalIncludesTax'] as bool?,
      monthlyMiscTotalIncludesTax: json['MonthlyMiscTotalIncludesTax'] as bool?,
      periodMiscTotalIncludesTax: json['PeriodMiscTotalIncludesTax'] as bool?,
      laborDiscountPercent: (json['LaborDiscountPercent'] as num?)?.toDouble(),
      weeklyLaborTotal: (json['WeeklyLaborTotal'] as num?)?.toDouble(),
      monthlyLaborTotal: (json['MonthlyLaborTotal'] as num?)?.toDouble(),
      periodLaborTotal: (json['PeriodLaborTotal'] as num?)?.toDouble(),
      weeklyLaborTotalIncludesTax: json['WeeklyLaborTotalIncludesTax'] as bool?,
      monthlyLaborTotalIncludesTax:
          json['MonthlyLaborTotalIncludesTax'] as bool?,
      periodLaborTotalIncludesTax: json['PeriodLaborTotalIncludesTax'] as bool?,
      rentalSaleDiscountPercent:
          (json['RentalSaleDiscountPercent'] as num?)?.toDouble(),
      rentalSaleTotal: (json['RentalSaleTotal'] as num?)?.toDouble(),
      rentalSaleTotalIncludesTax: json['RentalSaleTotalIncludesTax'] as bool?,
      lossAndDamageDiscountPercent:
          (json['LossAndDamageDiscountPercent'] as num?)?.toDouble(),
      lossAndDamageTotal: (json['LossAndDamageTotal'] as num?)?.toDouble(),
      lossAndDamageTotalIncludesTax:
          json['LossAndDamageTotalIncludesTax'] as bool?,
      combinedDaysPerWeek: (json['CombinedDaysPerWeek'] as num?)?.toDouble(),
      combinedDiscountPercent:
          (json['CombinedDiscountPercent'] as num?)?.toDouble(),
      weeklyCombinedTotal: (json['WeeklyCombinedTotal'] as num?)?.toDouble(),
      monthlyCombinedTotal: (json['MonthlyCombinedTotal'] as num?)?.toDouble(),
      periodCombinedTotal: (json['PeriodCombinedTotal'] as num?)?.toDouble(),
      weeklyCombinedTotalIncludesTax:
          json['WeeklyCombinedTotalIncludesTax'] as bool?,
      monthlyCombinedTotalIncludesTax:
          json['MonthlyCombinedTotalIncludesTax'] as bool?,
      periodCombinedTotalIncludesTax:
          json['PeriodCombinedTotalIncludesTax'] as bool?,
      disableEditingRentalRate: json['DisableEditingRentalRate'] as bool?,
      disableEditingSalesRate: json['DisableEditingSalesRate'] as bool?,
      disableEditingMiscellaneousRate:
          json['DisableEditingMiscellaneousRate'] as bool?,
      disableEditingLaborRate: json['DisableEditingLaborRate'] as bool?,
      disableEditingRentalSaleRate:
          json['DisableEditingRentalSaleRate'] as bool?,
      disableEditingLossAndDamageRate:
          json['DisableEditingLossAndDamageRate'] as bool?,
      rentalExtendedTotal: (json['RentalExtendedTotal'] as num?)?.toDouble(),
      salesExtendedTotal: (json['SalesExtendedTotal'] as num?)?.toDouble(),
      laborExtendedTotal: (json['LaborExtendedTotal'] as num?)?.toDouble(),
      miscellaneousExtendedTotal:
          (json['MiscellaneousExtendedTotal'] as num?)?.toDouble(),
      rentalSaleExtendedTotal:
          (json['RentalSaleExtendedTotal'] as num?)?.toDouble(),
      lossAndDamageExtendedTotal:
          (json['LossAndDamageExtendedTotal'] as num?)?.toDouble(),
      hasNotes: json['HasNotes'] as bool?,
      hasDocuments: json['HasDocuments'] as bool?,
      hasEmailHistory: json['HasEmailHistory'] as bool?,
      hasContacts: json['HasContacts'] as bool?,
      hasSubPurchaseOrders: json['HasSubPurchaseOrders'] as bool?,
      hasPickLists: json['HasPickLists'] as bool?,
      hasContracts: json['HasContracts'] as bool?,
      hasSuspendedContracts: json['HasSuspendedContracts'] as bool?,
      hasMultiOrderContracts: json['HasMultiOrderContracts'] as bool?,
      hasInvoices: json['HasInvoices'] as bool?,
      hasBillingWorksheets: json['HasBillingWorksheets'] as bool?,
      hasMultiOrderInvoices: json['HasMultiOrderInvoices'] as bool?,
      totalReplacementCost: (json['TotalReplacementCost'] as num?)?.toDouble(),
      presentationLayerId: json['PresentationLayerId'] as String?,
      presentationLayer: json['PresentationLayer'] as String?,
      isManualSort: json['IsManualSort'] as bool?,
      quoteOrderTitle: json['QuoteOrderTitle'] as String?,
      unassignedSubs: json['UnassignedSubs'] as bool?,
      nonTaxable: json['NonTaxable'] as bool?,
      enableProjects: json['EnableProjects'] as bool?,
      projectId: json['ProjectId'] as String?,
      projectNumber: json['ProjectNumber'] as String?,
      project: json['Project'] as String?,
      projectDrawingsId: json['ProjectDrawingsId'] as String?,
      projectDrawings: json['ProjectDrawings'] as String?,
      projectItemsOrderedId: json['ProjectItemsOrderedId'] as String?,
      projectItemsOrdered: json['ProjectItemsOrdered'] as String?,
      projectDropShipId: json['ProjectDropShipId'] as String?,
      projectDropShip: json['ProjectDropShip'] as String?,
      projectAsBuildId: json['ProjectAsBuildId'] as String?,
      projectAsBuild: json['ProjectAsBuild'] as String?,
      projectCommissioningId: json['ProjectCommissioningId'] as String?,
      projectCommissioning: json['ProjectCommissioning'] as String?,
      projectDepositId: json['ProjectDepositId'] as String?,
      projectDeposit: json['ProjectDeposit'] as String?,
      inputByUserId: json['InputByUserId'] as String?,
      modifiedByUserId: json['ModifiedByUserId'] as String?,
      useEstimatedDatesForBilling: json['UseEstimatedDatesForBilling'] as bool?,
      dateStamp: json['DateStamp'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesAgentQuoteQuoteToJson(
    WebApiModulesAgentQuoteQuote instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuoteId', instance.quoteId);
  writeNotNull('QuoteNumber', instance.quoteNumber);
  writeNotNull('QuoteDate', instance.quoteDate);
  writeNotNull('VersionNumber', instance.versionNumber);
  writeNotNull('ConvertedToOrderId', instance.convertedToOrderId);
  writeNotNull('ConvertedToOrderNumber', instance.convertedToOrderNumber);
  writeNotNull('Description', instance.description);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('CustomerNumber', instance.customerNumber);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('RateTypeDisplay', instance.rateTypeDisplay);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('ProjectManager', instance.projectManager);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('Miscellaneous', instance.miscellaneous);
  writeNotNull('Labor', instance.labor);
  writeNotNull('Facilities', instance.facilities);
  writeNotNull('Transportation', instance.transportation);
  writeNotNull('RentalSale', instance.rentalSale);
  writeNotNull('LossAndDamage', instance.lossAndDamage);
  writeNotNull('Repair', instance.repair);
  writeNotNull('HasRentalItem', instance.hasRentalItem);
  writeNotNull('HasSalesItem', instance.hasSalesItem);
  writeNotNull('HasMiscellaneousItem', instance.hasMiscellaneousItem);
  writeNotNull('HasLaborItem', instance.hasLaborItem);
  writeNotNull('HasFacilitiesItem', instance.hasFacilitiesItem);
  writeNotNull('HasLossAndDamageItem', instance.hasLossAndDamageItem);
  writeNotNull('HasRentalSaleItem', instance.hasRentalSaleItem);
  writeNotNull('HasRepair', instance.hasRepair);
  writeNotNull('ActivityDatesAndTimes',
      instance.activityDatesAndTimes?.map((e) => e.toJson()).toList());
  writeNotNull('PickDate', instance.pickDate);
  writeNotNull('PickTime', instance.pickTime);
  writeNotNull('EstimatedStartDate', instance.estimatedStartDate);
  writeNotNull('EstimatedStartTime', instance.estimatedStartTime);
  writeNotNull('EstimatedStopDate', instance.estimatedStopDate);
  writeNotNull('EstimatedStopTime', instance.estimatedStopTime);
  writeNotNull('PickUpDate', instance.pickUpDate);
  writeNotNull('PickUpTime', instance.pickUpTime);
  writeNotNull('PrepDate', instance.prepDate);
  writeNotNull('PrepTime', instance.prepTime);
  writeNotNull('LoadInDate', instance.loadInDate);
  writeNotNull('LoadInTime', instance.loadInTime);
  writeNotNull('StrikeDate', instance.strikeDate);
  writeNotNull('StrikeTime', instance.strikeTime);
  writeNotNull('TestDate', instance.testDate);
  writeNotNull('TestTime', instance.testTime);
  writeNotNull('OrderTypeId', instance.orderTypeId);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull(
      'OrderTypeCombineActivityTabs', instance.orderTypeCombineActivityTabs);
  writeNotNull('PendingPo', instance.pendingPo);
  writeNotNull('PoNumber', instance.poNumber);
  writeNotNull('PoAmount', instance.poAmount);
  writeNotNull('Location', instance.location);
  writeNotNull('OrderLocationId', instance.orderLocationId);
  writeNotNull('OrderLocation', instance.orderLocation);
  writeNotNull('ReferenceNumber', instance.referenceNumber);
  writeNotNull('Total', instance.total);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('PoApprovalStatusId', instance.poApprovalStatusId);
  writeNotNull('LockBillingDates', instance.lockBillingDates);
  writeNotNull('SpecifyBillingDatesByType', instance.specifyBillingDatesByType);
  writeNotNull('RentalBillingStartDate', instance.rentalBillingStartDate);
  writeNotNull('RentalBillingEndDate', instance.rentalBillingEndDate);
  writeNotNull('LaborBillingStartDate', instance.laborBillingStartDate);
  writeNotNull('LaborBillingEndDate', instance.laborBillingEndDate);
  writeNotNull(
      'MiscellaneousBillingStartDate', instance.miscellaneousBillingStartDate);
  writeNotNull(
      'MiscellaneousBillingEndDate', instance.miscellaneousBillingEndDate);
  writeNotNull(
      'FacilitiesBillingStartDate', instance.facilitiesBillingStartDate);
  writeNotNull('FacilitiesBillingEndDate', instance.facilitiesBillingEndDate);
  writeNotNull('VehicleBillingStartDate', instance.vehicleBillingStartDate);
  writeNotNull('VehicleBillingEndDate', instance.vehicleBillingEndDate);
  writeNotNull('DelayBillingSearchUntil', instance.delayBillingSearchUntil);
  writeNotNull(
      'IncludePrepFeesInRentalRate', instance.includePrepFeesInRentalRate);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingEndDate', instance.billingEndDate);
  writeNotNull('BillingWeeks', instance.billingWeeks);
  writeNotNull('BillingMonths', instance.billingMonths);
  writeNotNull('DetermineQuantitiesToBillBasedOn',
      instance.determineQuantitiesToBillBasedOn);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('BillingCycle', instance.billingCycle);
  writeNotNull('BillingCycleType', instance.billingCycleType);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull(
      'UpdateAllRatesToNewCurrency', instance.updateAllRatesToNewCurrency);
  writeNotNull('ConfirmUpdateAllRatesToNewCurrency',
      instance.confirmUpdateAllRatesToNewCurrency);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('Tax1Name', instance.tax1Name);
  writeNotNull('Tax2Name', instance.tax2Name);
  writeNotNull('TaxId', instance.taxId);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('NoCharge', instance.noCharge);
  writeNotNull('NoChargeReason', instance.noChargeReason);
  writeNotNull('PrintIssuedToAddressFrom', instance.printIssuedToAddressFrom);
  writeNotNull('IssuedToName', instance.issuedToName);
  writeNotNull('IssuedToAttention', instance.issuedToAttention);
  writeNotNull('IssuedToAttention2', instance.issuedToAttention2);
  writeNotNull('IssuedToAddress1', instance.issuedToAddress1);
  writeNotNull('IssuedToAddress2', instance.issuedToAddress2);
  writeNotNull('IssuedToCity', instance.issuedToCity);
  writeNotNull('IssuedToState', instance.issuedToState);
  writeNotNull('IssuedToZipCode', instance.issuedToZipCode);
  writeNotNull('IssuedToCountryId', instance.issuedToCountryId);
  writeNotNull('IssuedToCountry', instance.issuedToCountry);
  writeNotNull('BillToAddressDifferentFromIssuedToAddress',
      instance.billToAddressDifferentFromIssuedToAddress);
  writeNotNull('BillToAddressId', instance.billToAddressId);
  writeNotNull('BillToName', instance.billToName);
  writeNotNull('BillToAttention', instance.billToAttention);
  writeNotNull('BillToAttention2', instance.billToAttention2);
  writeNotNull('BillToAddress1', instance.billToAddress1);
  writeNotNull('BillToAddress2', instance.billToAddress2);
  writeNotNull('BillToCity', instance.billToCity);
  writeNotNull('BillToState', instance.billToState);
  writeNotNull('BillToZipCode', instance.billToZipCode);
  writeNotNull('BillToCountryId', instance.billToCountryId);
  writeNotNull('BillToCountry', instance.billToCountry);
  writeNotNull('DiscountReasonId', instance.discountReasonId);
  writeNotNull('DiscountReason', instance.discountReason);
  writeNotNull(
      'RequireContactConfirmation', instance.requireContactConfirmation);
  writeNotNull('IncludeInBillingAnalysis', instance.includeInBillingAnalysis);
  writeNotNull('HiatusDiscountFrom', instance.hiatusDiscountFrom);
  writeNotNull('RoundTripRentals', instance.roundTripRentals);
  writeNotNull('InGroup', instance.inGroup);
  writeNotNull('GroupNumber', instance.groupNumber);
  writeNotNull('GroupColor', instance.groupColor);
  writeNotNull('GroupOrderBy', instance.groupOrderBy);
  writeNotNull('CoverLetterId', instance.coverLetterId);
  writeNotNull('CoverLetter', instance.coverLetter);
  writeNotNull('TermsConditionsId', instance.termsConditionsId);
  writeNotNull('TermsConditions', instance.termsConditions);
  writeNotNull(
      'OutsideSalesRepresentativeId', instance.outsideSalesRepresentativeId);
  writeNotNull(
      'OutsideSalesRepresentative', instance.outsideSalesRepresentative);
  writeNotNull('MarketTypeId', instance.marketTypeId);
  writeNotNull('MarketType', instance.marketType);
  writeNotNull('MarketSegmentId', instance.marketSegmentId);
  writeNotNull('MarketSegment', instance.marketSegment);
  writeNotNull('MarketSegmentJobId', instance.marketSegmentJobId);
  writeNotNull('MarketSegmentJob', instance.marketSegmentJob);
  writeNotNull('OutDeliveryId', instance.outDeliveryId);
  writeNotNull('OutDeliveryDeliveryType', instance.outDeliveryDeliveryType);
  writeNotNull('OutDeliveryRequiredDate', instance.outDeliveryRequiredDate);
  writeNotNull('OutDeliveryRequiredTime', instance.outDeliveryRequiredTime);
  writeNotNull('OutDeliveryTargetShipDate', instance.outDeliveryTargetShipDate);
  writeNotNull('OutDeliveryTargetShipTime', instance.outDeliveryTargetShipTime);
  writeNotNull('OutDeliveryDirection', instance.outDeliveryDirection);
  writeNotNull('OutDeliveryAddressType', instance.outDeliveryAddressType);
  writeNotNull('OutDeliveryFromLocation', instance.outDeliveryFromLocation);
  writeNotNull('OutDeliveryFromContact', instance.outDeliveryFromContact);
  writeNotNull(
      'OutDeliveryFromContactPhone', instance.outDeliveryFromContactPhone);
  writeNotNull('OutDeliveryFromAlternateContact',
      instance.outDeliveryFromAlternateContact);
  writeNotNull('OutDeliveryFromAlternateContactPhone',
      instance.outDeliveryFromAlternateContactPhone);
  writeNotNull('OutDeliveryFromAttention', instance.outDeliveryFromAttention);
  writeNotNull('OutDeliveryFromAddress1', instance.outDeliveryFromAddress1);
  writeNotNull('OutDeliveryFromAdd2ress', instance.outDeliveryFromAdd2ress);
  writeNotNull('OutDeliveryFromCity', instance.outDeliveryFromCity);
  writeNotNull('OutDeliveryFromState', instance.outDeliveryFromState);
  writeNotNull('OutDeliveryFromZipCode', instance.outDeliveryFromZipCode);
  writeNotNull('OutDeliveryFromCountry', instance.outDeliveryFromCountry);
  writeNotNull('OutDeliveryFromCountryId', instance.outDeliveryFromCountryId);
  writeNotNull(
      'OutDeliveryFromCrossStreets', instance.outDeliveryFromCrossStreets);
  writeNotNull('OutDeliveryToLocation', instance.outDeliveryToLocation);
  writeNotNull('OutDeliveryToContact', instance.outDeliveryToContact);
  writeNotNull('OutDeliveryToContactPhone', instance.outDeliveryToContactPhone);
  writeNotNull(
      'OutDeliveryToAlternateContact', instance.outDeliveryToAlternateContact);
  writeNotNull('OutDeliveryToAlternateContactPhone',
      instance.outDeliveryToAlternateContactPhone);
  writeNotNull('OutDeliveryToAttention', instance.outDeliveryToAttention);
  writeNotNull('OutDeliveryToAddress1', instance.outDeliveryToAddress1);
  writeNotNull('OutDeliveryToAddress2', instance.outDeliveryToAddress2);
  writeNotNull('OutDeliveryToCity', instance.outDeliveryToCity);
  writeNotNull('OutDeliveryToState', instance.outDeliveryToState);
  writeNotNull('OutDeliveryToZipCode', instance.outDeliveryToZipCode);
  writeNotNull('OutDeliveryToCountryId', instance.outDeliveryToCountryId);
  writeNotNull('OutDeliveryToCountry', instance.outDeliveryToCountry);
  writeNotNull('OutDeliveryToContactFax', instance.outDeliveryToContactFax);
  writeNotNull('OutDeliveryToCrossStreets', instance.outDeliveryToCrossStreets);
  writeNotNull('OutDeliveryDeliveryNotes', instance.outDeliveryDeliveryNotes);
  writeNotNull('OutDeliveryCarrierId', instance.outDeliveryCarrierId);
  writeNotNull('OutDeliveryCarrier', instance.outDeliveryCarrier);
  writeNotNull('OutDeliveryCarrierAccount', instance.outDeliveryCarrierAccount);
  writeNotNull('OutDeliveryShipViaId', instance.outDeliveryShipViaId);
  writeNotNull('OutDeliveryShipVia', instance.outDeliveryShipVia);
  writeNotNull('OutDeliveryInvoiceId', instance.outDeliveryInvoiceId);
  writeNotNull(
      'OutDeliveryVendorInvoiceId', instance.outDeliveryVendorInvoiceId);
  writeNotNull(
      'OutDeliveryEstimatedFreight', instance.outDeliveryEstimatedFreight);
  writeNotNull('OutDeliveryFreightInvoiceAmount',
      instance.outDeliveryFreightInvoiceAmount);
  writeNotNull('OutDeliveryChargeType', instance.outDeliveryChargeType);
  writeNotNull('OutDeliveryFreightTrackingNumber',
      instance.outDeliveryFreightTrackingNumber);
  writeNotNull(
      'OutDeliveryFreightTrackingUrl', instance.outDeliveryFreightTrackingUrl);
  writeNotNull('OutDeliveryPackageCode', instance.outDeliveryPackageCode);
  writeNotNull('OutDeliveryBillPoFreightOnOrder',
      instance.outDeliveryBillPoFreightOnOrder);
  writeNotNull(
      'OutDeliveryOnlineOrderNumber', instance.outDeliveryOnlineOrderNumber);
  writeNotNull('OutDeliveryToVenue', instance.outDeliveryToVenue);
  writeNotNull('OutDeliveryToVenueId', instance.outDeliveryToVenueId);
  writeNotNull('OutDeliveryToWarehouse', instance.outDeliveryToWarehouse);
  writeNotNull('OutDeliveryToWarehouseId', instance.outDeliveryToWarehouseId);
  writeNotNull('OutDeliveryDateStamp', instance.outDeliveryDateStamp);
  writeNotNull('InDeliveryId', instance.inDeliveryId);
  writeNotNull('InDeliveryDeliveryType', instance.inDeliveryDeliveryType);
  writeNotNull('InDeliveryRequiredDate', instance.inDeliveryRequiredDate);
  writeNotNull('InDeliveryRequiredTime', instance.inDeliveryRequiredTime);
  writeNotNull('InDeliveryTargetShipDate', instance.inDeliveryTargetShipDate);
  writeNotNull('InDeliveryTargetShipTime', instance.inDeliveryTargetShipTime);
  writeNotNull('InDeliveryDirection', instance.inDeliveryDirection);
  writeNotNull('InDeliveryAddressType', instance.inDeliveryAddressType);
  writeNotNull('InDeliveryFromLocation', instance.inDeliveryFromLocation);
  writeNotNull('InDeliveryFromContact', instance.inDeliveryFromContact);
  writeNotNull(
      'InDeliveryFromContactPhone', instance.inDeliveryFromContactPhone);
  writeNotNull('InDeliveryFromAlternateContact',
      instance.inDeliveryFromAlternateContact);
  writeNotNull('InDeliveryFromAlternateContactPhone',
      instance.inDeliveryFromAlternateContactPhone);
  writeNotNull('InDeliveryFromAttention', instance.inDeliveryFromAttention);
  writeNotNull('InDeliveryFromAddress1', instance.inDeliveryFromAddress1);
  writeNotNull('InDeliveryFromAdd2ress', instance.inDeliveryFromAdd2ress);
  writeNotNull('InDeliveryFromCity', instance.inDeliveryFromCity);
  writeNotNull('InDeliveryFromState', instance.inDeliveryFromState);
  writeNotNull('InDeliveryFromZipCode', instance.inDeliveryFromZipCode);
  writeNotNull('InDeliveryFromCountry', instance.inDeliveryFromCountry);
  writeNotNull('InDeliveryFromCountryId', instance.inDeliveryFromCountryId);
  writeNotNull(
      'InDeliveryFromCrossStreets', instance.inDeliveryFromCrossStreets);
  writeNotNull('InDeliveryToLocation', instance.inDeliveryToLocation);
  writeNotNull('InDeliveryToContact', instance.inDeliveryToContact);
  writeNotNull('InDeliveryToContactPhone', instance.inDeliveryToContactPhone);
  writeNotNull(
      'InDeliveryToAlternateContact', instance.inDeliveryToAlternateContact);
  writeNotNull('InDeliveryToAlternateContactPhone',
      instance.inDeliveryToAlternateContactPhone);
  writeNotNull('InDeliveryToAttention', instance.inDeliveryToAttention);
  writeNotNull('InDeliveryToAddress1', instance.inDeliveryToAddress1);
  writeNotNull('InDeliveryToAddress2', instance.inDeliveryToAddress2);
  writeNotNull('InDeliveryToCity', instance.inDeliveryToCity);
  writeNotNull('InDeliveryToState', instance.inDeliveryToState);
  writeNotNull('InDeliveryToZipCode', instance.inDeliveryToZipCode);
  writeNotNull('InDeliveryToCountryId', instance.inDeliveryToCountryId);
  writeNotNull('InDeliveryToCountry', instance.inDeliveryToCountry);
  writeNotNull('InDeliveryToContactFax', instance.inDeliveryToContactFax);
  writeNotNull('InDeliveryToCrossStreets', instance.inDeliveryToCrossStreets);
  writeNotNull('InDeliveryDeliveryNotes', instance.inDeliveryDeliveryNotes);
  writeNotNull('InDeliveryCarrierId', instance.inDeliveryCarrierId);
  writeNotNull('InDeliveryCarrier', instance.inDeliveryCarrier);
  writeNotNull('InDeliveryCarrierAccount', instance.inDeliveryCarrierAccount);
  writeNotNull('InDeliveryShipViaId', instance.inDeliveryShipViaId);
  writeNotNull('InDeliveryShipVia', instance.inDeliveryShipVia);
  writeNotNull('InDeliveryInvoiceId', instance.inDeliveryInvoiceId);
  writeNotNull('InDeliveryVendorInvoiceId', instance.inDeliveryVendorInvoiceId);
  writeNotNull(
      'InDeliveryEstimatedFreight', instance.inDeliveryEstimatedFreight);
  writeNotNull('InDeliveryFreightInvoiceAmount',
      instance.inDeliveryFreightInvoiceAmount);
  writeNotNull('InDeliveryChargeType', instance.inDeliveryChargeType);
  writeNotNull('InDeliveryFreightTrackingNumber',
      instance.inDeliveryFreightTrackingNumber);
  writeNotNull(
      'InDeliveryFreightTrackingUrl', instance.inDeliveryFreightTrackingUrl);
  writeNotNull('InDeliveryPackageCode', instance.inDeliveryPackageCode);
  writeNotNull('InDeliveryBillPoFreightOnOrder',
      instance.inDeliveryBillPoFreightOnOrder);
  writeNotNull(
      'InDeliveryOnlineOrderNumber', instance.inDeliveryOnlineOrderNumber);
  writeNotNull(
      'InDeliveryOnlineOrderStatus', instance.inDeliveryOnlineOrderStatus);
  writeNotNull('InDeliveryToVenue', instance.inDeliveryToVenue);
  writeNotNull('InDeliveryToVenueId', instance.inDeliveryToVenueId);
  writeNotNull('InDeliveryToWarehouse', instance.inDeliveryToWarehouse);
  writeNotNull('InDeliveryToWarehouseId', instance.inDeliveryToWarehouseId);
  writeNotNull('InDeliveryDateStamp', instance.inDeliveryDateStamp);
  writeNotNull('RentalDaysPerWeek', instance.rentalDaysPerWeek);
  writeNotNull('RentalDiscountPercent', instance.rentalDiscountPercent);
  writeNotNull('WeeklyRentalTotal', instance.weeklyRentalTotal);
  writeNotNull('MonthlyRentalTotal', instance.monthlyRentalTotal);
  writeNotNull('PeriodRentalTotal', instance.periodRentalTotal);
  writeNotNull(
      'WeeklyRentalTotalIncludesTax', instance.weeklyRentalTotalIncludesTax);
  writeNotNull(
      'MonthlyRentalTotalIncludesTax', instance.monthlyRentalTotalIncludesTax);
  writeNotNull(
      'PeriodRentalTotalIncludesTax', instance.periodRentalTotalIncludesTax);
  writeNotNull('BillLockedTotal', instance.billLockedTotal);
  writeNotNull('SalesDiscountPercent', instance.salesDiscountPercent);
  writeNotNull('SalesTotal', instance.salesTotal);
  writeNotNull('SalesTotalIncludesTax', instance.salesTotalIncludesTax);
  writeNotNull('PartsDiscountPercent', instance.partsDiscountPercent);
  writeNotNull('PartsTotal', instance.partsTotal);
  writeNotNull('PartsTotalIncludesTax', instance.partsTotalIncludesTax);
  writeNotNull('SpaceDaysPerWeek', instance.spaceDaysPerWeek);
  writeNotNull('SpaceDiscountPercent', instance.spaceDiscountPercent);
  writeNotNull('SpaceSplitPercent', instance.spaceSplitPercent);
  writeNotNull('WeeklySpaceTotal', instance.weeklySpaceTotal);
  writeNotNull('MonthlySpaceTotal', instance.monthlySpaceTotal);
  writeNotNull('PeriodSpaceTotal', instance.periodSpaceTotal);
  writeNotNull(
      'WeeklySpaceTotalIncludesTax', instance.weeklySpaceTotalIncludesTax);
  writeNotNull(
      'MonthlySpaceTotalIncludesTax', instance.monthlySpaceTotalIncludesTax);
  writeNotNull(
      'PeriodSpaceTotalIncludesTax', instance.periodSpaceTotalIncludesTax);
  writeNotNull('VehicleDaysPerWeek', instance.vehicleDaysPerWeek);
  writeNotNull('VehicleDiscountPercent', instance.vehicleDiscountPercent);
  writeNotNull('WeeklyVehicleTotal', instance.weeklyVehicleTotal);
  writeNotNull('MonthlyVehicleTotal', instance.monthlyVehicleTotal);
  writeNotNull('PeriodVehicleTotal', instance.periodVehicleTotal);
  writeNotNull(
      'WeeklyVehicleTotalIncludesTax', instance.weeklyVehicleTotalIncludesTax);
  writeNotNull('MonthlyVehicleTotalIncludesTax',
      instance.monthlyVehicleTotalIncludesTax);
  writeNotNull(
      'PeriodVehicleTotalIncludesTax', instance.periodVehicleTotalIncludesTax);
  writeNotNull('MiscDiscountPercent', instance.miscDiscountPercent);
  writeNotNull('WeeklyMiscTotal', instance.weeklyMiscTotal);
  writeNotNull('MonthlyMiscTotal', instance.monthlyMiscTotal);
  writeNotNull('PeriodMiscTotal', instance.periodMiscTotal);
  writeNotNull(
      'WeeklyMiscTotalIncludesTax', instance.weeklyMiscTotalIncludesTax);
  writeNotNull(
      'MonthlyMiscTotalIncludesTax', instance.monthlyMiscTotalIncludesTax);
  writeNotNull(
      'PeriodMiscTotalIncludesTax', instance.periodMiscTotalIncludesTax);
  writeNotNull('LaborDiscountPercent', instance.laborDiscountPercent);
  writeNotNull('WeeklyLaborTotal', instance.weeklyLaborTotal);
  writeNotNull('MonthlyLaborTotal', instance.monthlyLaborTotal);
  writeNotNull('PeriodLaborTotal', instance.periodLaborTotal);
  writeNotNull(
      'WeeklyLaborTotalIncludesTax', instance.weeklyLaborTotalIncludesTax);
  writeNotNull(
      'MonthlyLaborTotalIncludesTax', instance.monthlyLaborTotalIncludesTax);
  writeNotNull(
      'PeriodLaborTotalIncludesTax', instance.periodLaborTotalIncludesTax);
  writeNotNull('RentalSaleDiscountPercent', instance.rentalSaleDiscountPercent);
  writeNotNull('RentalSaleTotal', instance.rentalSaleTotal);
  writeNotNull(
      'RentalSaleTotalIncludesTax', instance.rentalSaleTotalIncludesTax);
  writeNotNull(
      'LossAndDamageDiscountPercent', instance.lossAndDamageDiscountPercent);
  writeNotNull('LossAndDamageTotal', instance.lossAndDamageTotal);
  writeNotNull(
      'LossAndDamageTotalIncludesTax', instance.lossAndDamageTotalIncludesTax);
  writeNotNull('CombinedDaysPerWeek', instance.combinedDaysPerWeek);
  writeNotNull('CombinedDiscountPercent', instance.combinedDiscountPercent);
  writeNotNull('WeeklyCombinedTotal', instance.weeklyCombinedTotal);
  writeNotNull('MonthlyCombinedTotal', instance.monthlyCombinedTotal);
  writeNotNull('PeriodCombinedTotal', instance.periodCombinedTotal);
  writeNotNull('WeeklyCombinedTotalIncludesTax',
      instance.weeklyCombinedTotalIncludesTax);
  writeNotNull('MonthlyCombinedTotalIncludesTax',
      instance.monthlyCombinedTotalIncludesTax);
  writeNotNull('PeriodCombinedTotalIncludesTax',
      instance.periodCombinedTotalIncludesTax);
  writeNotNull('DisableEditingRentalRate', instance.disableEditingRentalRate);
  writeNotNull('DisableEditingSalesRate', instance.disableEditingSalesRate);
  writeNotNull('DisableEditingMiscellaneousRate',
      instance.disableEditingMiscellaneousRate);
  writeNotNull('DisableEditingLaborRate', instance.disableEditingLaborRate);
  writeNotNull(
      'DisableEditingRentalSaleRate', instance.disableEditingRentalSaleRate);
  writeNotNull('DisableEditingLossAndDamageRate',
      instance.disableEditingLossAndDamageRate);
  writeNotNull('RentalExtendedTotal', instance.rentalExtendedTotal);
  writeNotNull('SalesExtendedTotal', instance.salesExtendedTotal);
  writeNotNull('LaborExtendedTotal', instance.laborExtendedTotal);
  writeNotNull(
      'MiscellaneousExtendedTotal', instance.miscellaneousExtendedTotal);
  writeNotNull('RentalSaleExtendedTotal', instance.rentalSaleExtendedTotal);
  writeNotNull(
      'LossAndDamageExtendedTotal', instance.lossAndDamageExtendedTotal);
  writeNotNull('HasNotes', instance.hasNotes);
  writeNotNull('HasDocuments', instance.hasDocuments);
  writeNotNull('HasEmailHistory', instance.hasEmailHistory);
  writeNotNull('HasContacts', instance.hasContacts);
  writeNotNull('HasSubPurchaseOrders', instance.hasSubPurchaseOrders);
  writeNotNull('HasPickLists', instance.hasPickLists);
  writeNotNull('HasContracts', instance.hasContracts);
  writeNotNull('HasSuspendedContracts', instance.hasSuspendedContracts);
  writeNotNull('HasMultiOrderContracts', instance.hasMultiOrderContracts);
  writeNotNull('HasInvoices', instance.hasInvoices);
  writeNotNull('HasBillingWorksheets', instance.hasBillingWorksheets);
  writeNotNull('HasMultiOrderInvoices', instance.hasMultiOrderInvoices);
  writeNotNull('TotalReplacementCost', instance.totalReplacementCost);
  writeNotNull('PresentationLayerId', instance.presentationLayerId);
  writeNotNull('PresentationLayer', instance.presentationLayer);
  writeNotNull('IsManualSort', instance.isManualSort);
  writeNotNull('QuoteOrderTitle', instance.quoteOrderTitle);
  writeNotNull('UnassignedSubs', instance.unassignedSubs);
  writeNotNull('NonTaxable', instance.nonTaxable);
  writeNotNull('EnableProjects', instance.enableProjects);
  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('ProjectNumber', instance.projectNumber);
  writeNotNull('Project', instance.project);
  writeNotNull('ProjectDrawingsId', instance.projectDrawingsId);
  writeNotNull('ProjectDrawings', instance.projectDrawings);
  writeNotNull('ProjectItemsOrderedId', instance.projectItemsOrderedId);
  writeNotNull('ProjectItemsOrdered', instance.projectItemsOrdered);
  writeNotNull('ProjectDropShipId', instance.projectDropShipId);
  writeNotNull('ProjectDropShip', instance.projectDropShip);
  writeNotNull('ProjectAsBuildId', instance.projectAsBuildId);
  writeNotNull('ProjectAsBuild', instance.projectAsBuild);
  writeNotNull('ProjectCommissioningId', instance.projectCommissioningId);
  writeNotNull('ProjectCommissioning', instance.projectCommissioning);
  writeNotNull('ProjectDepositId', instance.projectDepositId);
  writeNotNull('ProjectDeposit', instance.projectDeposit);
  writeNotNull('InputByUserId', instance.inputByUserId);
  writeNotNull('ModifiedByUserId', instance.modifiedByUserId);
  writeNotNull(
      'UseEstimatedDatesForBilling', instance.useEstimatedDatesForBilling);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentQuoteQuoteDocument
    _$WebApiModulesAgentQuoteQuoteDocumentFromJson(Map<String, dynamic> json) =>
        WebApiModulesAgentQuoteQuoteDocument(
          quoteId: json['QuoteId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesAgentQuoteQuoteDocumentToJson(
    WebApiModulesAgentQuoteQuoteDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuoteId', instance.quoteId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentQuoteQuoteDocumentPostRequest
    _$WebApiModulesAgentQuoteQuoteDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentQuoteQuoteDocumentPostRequest(
          quoteId: json['QuoteId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentQuoteQuoteDocumentPostRequestToJson(
    WebApiModulesAgentQuoteQuoteDocumentPostRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuoteId', instance.quoteId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentQuoteQuoteDocumentPutRequest
    _$WebApiModulesAgentQuoteQuoteDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentQuoteQuoteDocumentPutRequest(
          quoteId: json['QuoteId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentQuoteQuoteDocumentPutRequestToJson(
    WebApiModulesAgentQuoteQuoteDocumentPutRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuoteId', instance.quoteId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentVendorVendor _$WebApiModulesAgentVendorVendorFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesAgentVendorVendor(
      vendorId: json['VendorId'] as String?,
      vendor: json['Vendor'] as String?,
      vendorDisplayName: json['VendorDisplayName'] as String?,
      vendorNameType: json['VendorNameType'] as String?,
      vendorNumber: json['VendorNumber'] as String?,
      federalIdNumber: json['FederalIdNumber'] as String?,
      officeLocationId: json['OfficeLocationId'] as String?,
      officeLocation: json['OfficeLocation'] as String?,
      salutation: json['Salutation'] as String?,
      firstName: json['FirstName'] as String?,
      middleInitial: json['MiddleInitial'] as String?,
      lastName: json['LastName'] as String?,
      address1: json['Address1'] as String?,
      address2: json['Address2'] as String?,
      city: json['City'] as String?,
      state: json['State'] as String?,
      countryId: json['CountryId'] as String?,
      country: json['Country'] as String?,
      zipCode: json['ZipCode'] as String?,
      vendorClassId: json['VendorClassId'] as String?,
      vendorClass: json['VendorClass'] as String?,
      phone: json['Phone'] as String?,
      fax: json['Fax'] as String?,
      phoneTollFree: json['PhoneTollFree'] as String?,
      otherPhone: json['OtherPhone'] as String?,
      webAddress: json['WebAddress'] as String?,
      email: json['Email'] as String?,
      activeDate: json['ActiveDate'] as String?,
      inactiveDate: json['InactiveDate'] as String?,
      subRent: json['SubRent'] as bool?,
      subSales: json['SubSales'] as bool?,
      subMisc: json['SubMisc'] as bool?,
      subLabor: json['SubLabor'] as bool?,
      subVehicle: json['SubVehicle'] as bool?,
      repair: json['Repair'] as bool?,
      rentalInventory: json['RentalInventory'] as bool?,
      salesPartsInventory: json['SalesPartsInventory'] as bool?,
      manufacturer: json['Manufacturer'] as bool?,
      freight: json['Freight'] as bool?,
      insurance: json['Insurance'] as bool?,
      consignment: json['Consignment'] as bool?,
      defaultSubRentDaysPerWeek:
          (json['DefaultSubRentDaysPerWeek'] as num?)?.toDouble(),
      defaultSubRentDiscountPercent:
          (json['DefaultSubRentDiscountPercent'] as num?)?.toDouble(),
      defaultSubSaleDiscountPercent:
          (json['DefaultSubSaleDiscountPercent'] as num?)?.toDouble(),
      defaultRate: json['DefaultRate'] as String?,
      billingCycleId: json['BillingCycleId'] as String?,
      billingCycle: json['BillingCycle'] as String?,
      paymentTermsId: json['PaymentTermsId'] as String?,
      paymentTerms: json['PaymentTerms'] as String?,
      accountNumber: json['AccountNumber'] as String?,
      defaultPoClassificationId: json['DefaultPoClassificationId'] as String?,
      defaultPoClassification: json['DefaultPoClassification'] as String?,
      organizationTypeId: json['OrganizationTypeId'] as String?,
      organizationType: json['OrganizationType'] as String?,
      multipleCurrencies: json['MultipleCurrencies'] as bool?,
      defaultCurrencyId: json['DefaultCurrencyId'] as String?,
      defaultCurrencyCode: json['DefaultCurrencyCode'] as String?,
      defaultCurrency: json['DefaultCurrency'] as String?,
      defaultCurrencySymbol: json['DefaultCurrencySymbol'] as String?,
      remitAttention1: json['RemitAttention1'] as String?,
      remitAttention2: json['RemitAttention2'] as String?,
      remitAddress1: json['RemitAddress1'] as String?,
      remitAddress2: json['RemitAddress2'] as String?,
      remitCity: json['RemitCity'] as String?,
      remitState: json['RemitState'] as String?,
      remitCountryId: json['RemitCountryId'] as String?,
      remitCountry: json['RemitCountry'] as String?,
      remitZipCode: json['RemitZipCode'] as String?,
      remitPayeeNo: json['RemitPayeeNo'] as String?,
      externalId: json['ExternalId'] as String?,
      automaticallyAdjustContractDates:
          json['AutomaticallyAdjustContractDates'] as bool?,
      shippingTrackingLink: json['ShippingTrackingLink'] as String?,
      defaultOutgoingDeliveryType:
          json['DefaultOutgoingDeliveryType'] as String?,
      defaultIncomingDeliveryType:
          json['DefaultIncomingDeliveryType'] as String?,
      customerId: json['CustomerId'] as String?,
      customer: json['Customer'] as String?,
      inputDate: json['InputDate'] as String?,
      lastModifiedDate: json['LastModifiedDate'] as String?,
      primaryContactId: json['PrimaryContactId'] as String?,
      primaryContact: json['PrimaryContact'] as String?,
      primaryContactPhone: json['PrimaryContactPhone'] as String?,
      primaryContactExtension: json['PrimaryContactExtension'] as String?,
      inactive: json['Inactive'] as bool?,
      dateStamp: json['DateStamp'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesAgentVendorVendorToJson(
    WebApiModulesAgentVendorVendor instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('VendorDisplayName', instance.vendorDisplayName);
  writeNotNull('VendorNameType', instance.vendorNameType);
  writeNotNull('VendorNumber', instance.vendorNumber);
  writeNotNull('FederalIdNumber', instance.federalIdNumber);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('Salutation', instance.salutation);
  writeNotNull('FirstName', instance.firstName);
  writeNotNull('MiddleInitial', instance.middleInitial);
  writeNotNull('LastName', instance.lastName);
  writeNotNull('Address1', instance.address1);
  writeNotNull('Address2', instance.address2);
  writeNotNull('City', instance.city);
  writeNotNull('State', instance.state);
  writeNotNull('CountryId', instance.countryId);
  writeNotNull('Country', instance.country);
  writeNotNull('ZipCode', instance.zipCode);
  writeNotNull('VendorClassId', instance.vendorClassId);
  writeNotNull('VendorClass', instance.vendorClass);
  writeNotNull('Phone', instance.phone);
  writeNotNull('Fax', instance.fax);
  writeNotNull('PhoneTollFree', instance.phoneTollFree);
  writeNotNull('OtherPhone', instance.otherPhone);
  writeNotNull('WebAddress', instance.webAddress);
  writeNotNull('Email', instance.email);
  writeNotNull('ActiveDate', instance.activeDate);
  writeNotNull('InactiveDate', instance.inactiveDate);
  writeNotNull('SubRent', instance.subRent);
  writeNotNull('SubSales', instance.subSales);
  writeNotNull('SubMisc', instance.subMisc);
  writeNotNull('SubLabor', instance.subLabor);
  writeNotNull('SubVehicle', instance.subVehicle);
  writeNotNull('Repair', instance.repair);
  writeNotNull('RentalInventory', instance.rentalInventory);
  writeNotNull('SalesPartsInventory', instance.salesPartsInventory);
  writeNotNull('Manufacturer', instance.manufacturer);
  writeNotNull('Freight', instance.freight);
  writeNotNull('Insurance', instance.insurance);
  writeNotNull('Consignment', instance.consignment);
  writeNotNull('DefaultSubRentDaysPerWeek', instance.defaultSubRentDaysPerWeek);
  writeNotNull(
      'DefaultSubRentDiscountPercent', instance.defaultSubRentDiscountPercent);
  writeNotNull(
      'DefaultSubSaleDiscountPercent', instance.defaultSubSaleDiscountPercent);
  writeNotNull('DefaultRate', instance.defaultRate);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('BillingCycle', instance.billingCycle);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('AccountNumber', instance.accountNumber);
  writeNotNull('DefaultPoClassificationId', instance.defaultPoClassificationId);
  writeNotNull('DefaultPoClassification', instance.defaultPoClassification);
  writeNotNull('OrganizationTypeId', instance.organizationTypeId);
  writeNotNull('OrganizationType', instance.organizationType);
  writeNotNull('MultipleCurrencies', instance.multipleCurrencies);
  writeNotNull('DefaultCurrencyId', instance.defaultCurrencyId);
  writeNotNull('DefaultCurrencyCode', instance.defaultCurrencyCode);
  writeNotNull('DefaultCurrency', instance.defaultCurrency);
  writeNotNull('DefaultCurrencySymbol', instance.defaultCurrencySymbol);
  writeNotNull('RemitAttention1', instance.remitAttention1);
  writeNotNull('RemitAttention2', instance.remitAttention2);
  writeNotNull('RemitAddress1', instance.remitAddress1);
  writeNotNull('RemitAddress2', instance.remitAddress2);
  writeNotNull('RemitCity', instance.remitCity);
  writeNotNull('RemitState', instance.remitState);
  writeNotNull('RemitCountryId', instance.remitCountryId);
  writeNotNull('RemitCountry', instance.remitCountry);
  writeNotNull('RemitZipCode', instance.remitZipCode);
  writeNotNull('RemitPayeeNo', instance.remitPayeeNo);
  writeNotNull('ExternalId', instance.externalId);
  writeNotNull('AutomaticallyAdjustContractDates',
      instance.automaticallyAdjustContractDates);
  writeNotNull('ShippingTrackingLink', instance.shippingTrackingLink);
  writeNotNull(
      'DefaultOutgoingDeliveryType', instance.defaultOutgoingDeliveryType);
  writeNotNull(
      'DefaultIncomingDeliveryType', instance.defaultIncomingDeliveryType);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('LastModifiedDate', instance.lastModifiedDate);
  writeNotNull('PrimaryContactId', instance.primaryContactId);
  writeNotNull('PrimaryContact', instance.primaryContact);
  writeNotNull('PrimaryContactPhone', instance.primaryContactPhone);
  writeNotNull('PrimaryContactExtension', instance.primaryContactExtension);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentVendorVendorDocument
    _$WebApiModulesAgentVendorVendorDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentVendorVendorDocument(
          vendorId: json['VendorId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesAgentVendorVendorDocumentToJson(
    WebApiModulesAgentVendorVendorDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesAgentVendorVendorDocumentPostRequest
    _$WebApiModulesAgentVendorVendorDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentVendorVendorDocumentPostRequest(
          vendorId: json['VendorId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentVendorVendorDocumentPostRequestToJson(
    WebApiModulesAgentVendorVendorDocumentPostRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesAgentVendorVendorDocumentPutRequest
    _$WebApiModulesAgentVendorVendorDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesAgentVendorVendorDocumentPutRequest(
          vendorId: json['VendorId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesAgentVendorVendorDocumentPutRequestToJson(
    WebApiModulesAgentVendorVendorDocumentPutRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesBillingBankAccountBankAccount
    _$WebApiModulesBillingBankAccountBankAccountFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBankAccountBankAccount(
          bankAccountId: json['BankAccountId'] as int?,
          accountName: json['AccountName'] as String?,
          checkNumber: json['CheckNumber'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          location: json['Location'] as String?,
          currencyId: json['CurrencyId'] as String?,
          currency: json['Currency'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesBillingBankAccountBankAccountToJson(
    WebApiModulesBillingBankAccountBankAccount instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('BankAccountId', instance.bankAccountId);
  writeNotNull('AccountName', instance.accountName);
  writeNotNull('CheckNumber', instance.checkNumber);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('Location', instance.location);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesBillingBillingBilling _$WebApiModulesBillingBillingBillingFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesBillingBillingBilling(
      sessionId: json['SessionId'] as String?,
      billingId: json['BillingId'] as int?,
      customerId: json['CustomerId'] as String?,
      customer: json['Customer'] as String?,
      dealId: json['DealId'] as String?,
      deal: json['Deal'] as String?,
      flatPoId: json['FlatPoId'] as String?,
      flatPoBillingScheduleId: json['FlatPoBillingScheduleId'] as String?,
      supplementalPoId: json['SupplementalPoId'] as String?,
      departmentId: json['DepartmentId'] as String?,
      department: json['Department'] as String?,
      orderId: json['OrderId'] as String?,
      orderNumber: json['OrderNumber'] as String?,
      orderDate: json['OrderDate'] as String?,
      orderDescription: json['OrderDescription'] as String?,
      status: json['Status'] as String?,
      orderTypeId: json['OrderTypeId'] as String?,
      orderTypeType: json['OrderTypeType'] as String?,
      orderType: json['OrderType'] as String?,
      billingCycleId: json['BillingCycleId'] as String?,
      billingCycle: json['BillingCycle'] as String?,
      billingCycleType: json['BillingCycleType'] as String?,
      officeLocationId: json['OfficeLocationId'] as String?,
      billingStartDate: json['BillingStartDate'] as String?,
      billingStopDate: json['BillingStopDate'] as String?,
      billAsOfDate: json['BillAsOfDate'] as String?,
      isNoCharge: json['IsNoCharge'] as bool?,
      isRepair: json['IsRepair'] as bool?,
      isFlatPo: json['IsFlatPo'] as bool?,
      pendingPo: json['PendingPo'] as bool?,
      poNumber: json['PoNumber'] as String?,
      poAmount: (json['PoAmount'] as num?)?.toDouble(),
      billingPeriodStartDate: json['BillingPeriodStartDate'] as String?,
      billingPeriodEndDate: json['BillingPeriodEndDate'] as String?,
      validchargeno: json['Validchargeno'] as bool?,
      orbitsapchgmajor: json['Orbitsapchgmajor'] as String?,
      orbitsapchgsub: json['Orbitsapchgsub'] as String?,
      orbitsapchgdetail: json['Orbitsapchgdetail'] as String?,
      orbitsapchgdeal: json['Orbitsapchgdeal'] as String?,
      orbitsapchgset: json['Orbitsapchgset'] as String?,
      billingNotes: json['BillingNotes'] as bool?,
      recType: json['RecType'] as String?,
      worksheetId: json['WorksheetId'] as String?,
      billingCycleEvent: json['BillingCycleEvent'] as String?,
      billingCycleEventOrder: json['BillingCycleEventOrder'] as int?,
      inGroup: json['InGroup'] as bool?,
      groupNumber: json['GroupNumber'] as int?,
      groupColor: json['GroupColor'] as int?,
      doNotInvoice: json['DoNotInvoice'] as bool?,
      agentId: json['AgentId'] as String?,
      agent: json['Agent'] as String?,
      episodeNumber: json['EpisodeNumber'] as int?,
      isFinalLossAndDamage: json['IsFinalLossAndDamage'] as bool?,
      billingTotal: (json['BillingTotal'] as num?)?.toDouble(),
      hasRecurring: json['HasRecurring'] as bool?,
      contractId: json['ContractId'] as String?,
      referenceNumber: json['ReferenceNumber'] as String?,
      billedHiatus: json['BilledHiatus'] as bool?,
      missingCrewBreakTime: json['MissingCrewBreakTime'] as bool?,
      missingCrewWorkTime: json['MissingCrewWorkTime'] as bool?,
      currencyId: json['CurrencyId'] as String?,
      currencyCode: json['CurrencyCode'] as String?,
      currencySymbol: json['CurrencySymbol'] as String?,
      officeLocationDefaultCurrencyId:
          json['OfficeLocationDefaultCurrencyId'] as String?,
      projectManagerId: json['ProjectManagerId'] as String?,
      projectManager: json['ProjectManager'] as String?,
      outsideSalesRepresentativeId:
          json['OutsideSalesRepresentativeId'] as String?,
      outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
      orderNumberColor: json['OrderNumberColor'] as String?,
      descriptionColor: json['DescriptionColor'] as String?,
      billingStopDateColor: json['BillingStopDateColor'] as String?,
      orderDateColor: json['OrderDateColor'] as String?,
      purchaseOrderNumberColor: json['PurchaseOrderNumberColor'] as String?,
      totalColor: json['TotalColor'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesBillingBillingBillingToJson(
    WebApiModulesBillingBillingBilling instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('BillingId', instance.billingId);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('FlatPoId', instance.flatPoId);
  writeNotNull('FlatPoBillingScheduleId', instance.flatPoBillingScheduleId);
  writeNotNull('SupplementalPoId', instance.supplementalPoId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDate', instance.orderDate);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('Status', instance.status);
  writeNotNull('OrderTypeId', instance.orderTypeId);
  writeNotNull('OrderTypeType', instance.orderTypeType);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull('BillingCycleId', instance.billingCycleId);
  writeNotNull('BillingCycle', instance.billingCycle);
  writeNotNull('BillingCycleType', instance.billingCycleType);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingStopDate', instance.billingStopDate);
  writeNotNull('BillAsOfDate', instance.billAsOfDate);
  writeNotNull('IsNoCharge', instance.isNoCharge);
  writeNotNull('IsRepair', instance.isRepair);
  writeNotNull('IsFlatPo', instance.isFlatPo);
  writeNotNull('PendingPo', instance.pendingPo);
  writeNotNull('PoNumber', instance.poNumber);
  writeNotNull('PoAmount', instance.poAmount);
  writeNotNull('BillingPeriodStartDate', instance.billingPeriodStartDate);
  writeNotNull('BillingPeriodEndDate', instance.billingPeriodEndDate);
  writeNotNull('Validchargeno', instance.validchargeno);
  writeNotNull('Orbitsapchgmajor', instance.orbitsapchgmajor);
  writeNotNull('Orbitsapchgsub', instance.orbitsapchgsub);
  writeNotNull('Orbitsapchgdetail', instance.orbitsapchgdetail);
  writeNotNull('Orbitsapchgdeal', instance.orbitsapchgdeal);
  writeNotNull('Orbitsapchgset', instance.orbitsapchgset);
  writeNotNull('BillingNotes', instance.billingNotes);
  writeNotNull('RecType', instance.recType);
  writeNotNull('WorksheetId', instance.worksheetId);
  writeNotNull('BillingCycleEvent', instance.billingCycleEvent);
  writeNotNull('BillingCycleEventOrder', instance.billingCycleEventOrder);
  writeNotNull('InGroup', instance.inGroup);
  writeNotNull('GroupNumber', instance.groupNumber);
  writeNotNull('GroupColor', instance.groupColor);
  writeNotNull('DoNotInvoice', instance.doNotInvoice);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('EpisodeNumber', instance.episodeNumber);
  writeNotNull('IsFinalLossAndDamage', instance.isFinalLossAndDamage);
  writeNotNull('BillingTotal', instance.billingTotal);
  writeNotNull('HasRecurring', instance.hasRecurring);
  writeNotNull('ContractId', instance.contractId);
  writeNotNull('ReferenceNumber', instance.referenceNumber);
  writeNotNull('BilledHiatus', instance.billedHiatus);
  writeNotNull('MissingCrewBreakTime', instance.missingCrewBreakTime);
  writeNotNull('MissingCrewWorkTime', instance.missingCrewWorkTime);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('OfficeLocationDefaultCurrencyId',
      instance.officeLocationDefaultCurrencyId);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('ProjectManager', instance.projectManager);
  writeNotNull(
      'OutsideSalesRepresentativeId', instance.outsideSalesRepresentativeId);
  writeNotNull(
      'OutsideSalesRepresentative', instance.outsideSalesRepresentative);
  writeNotNull('OrderNumberColor', instance.orderNumberColor);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('BillingStopDateColor', instance.billingStopDateColor);
  writeNotNull('OrderDateColor', instance.orderDateColor);
  writeNotNull('PurchaseOrderNumberColor', instance.purchaseOrderNumberColor);
  writeNotNull('TotalColor', instance.totalColor);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesBillingBillingCreateEstimateRequest
    _$WebApiModulesBillingBillingCreateEstimateRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingCreateEstimateRequest(
          orderId: json['OrderId'] as String?,
          periodStart: json['PeriodStart'] == null
              ? null
              : DateTime.parse(json['PeriodStart'] as String),
          periodEnd: json['PeriodEnd'] == null
              ? null
              : DateTime.parse(json['PeriodEnd'] as String),
          includeNotYetOut: json['IncludeNotYetOut'] as bool?,
        );

Map<String, dynamic> _$WebApiModulesBillingBillingCreateEstimateRequestToJson(
    WebApiModulesBillingBillingCreateEstimateRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('PeriodStart', instance.periodStart?.toIso8601String());
  writeNotNull('PeriodEnd', instance.periodEnd?.toIso8601String());
  writeNotNull('IncludeNotYetOut', instance.includeNotYetOut);
  return val;
}

WebApiModulesBillingBillingCreateEstimateResponse
    _$WebApiModulesBillingBillingCreateEstimateResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingCreateEstimateResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          invoiceId: json['InvoiceId'] as String?,
        );

Map<String, dynamic> _$WebApiModulesBillingBillingCreateEstimateResponseToJson(
    WebApiModulesBillingBillingCreateEstimateResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('InvoiceId', instance.invoiceId);
  return val;
}

WebApiModulesBillingBillingCreateInvoiceRequest
    _$WebApiModulesBillingBillingCreateInvoiceRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingCreateInvoiceRequest(
          orderId: json['OrderId'] as String?,
          periodStart: json['PeriodStart'] == null
              ? null
              : DateTime.parse(json['PeriodStart'] as String),
          periodEnd: json['PeriodEnd'] == null
              ? null
              : DateTime.parse(json['PeriodEnd'] as String),
        );

Map<String, dynamic> _$WebApiModulesBillingBillingCreateInvoiceRequestToJson(
    WebApiModulesBillingBillingCreateInvoiceRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('PeriodStart', instance.periodStart?.toIso8601String());
  writeNotNull('PeriodEnd', instance.periodEnd?.toIso8601String());
  return val;
}

WebApiModulesBillingBillingCreateInvoiceResponse
    _$WebApiModulesBillingBillingCreateInvoiceResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingCreateInvoiceResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          invoiceId: json['InvoiceId'] as String?,
          invoice: json['Invoice'] == null
              ? null
              : WebApiModulesBillingInvoiceInvoice.fromJson(
                  json['Invoice'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$WebApiModulesBillingBillingCreateInvoiceResponseToJson(
    WebApiModulesBillingBillingCreateInvoiceResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('Invoice', instance.invoice?.toJson());
  return val;
}

WebApiModulesBillingBillingCreateInvoicesRequest
    _$WebApiModulesBillingBillingCreateInvoicesRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingCreateInvoicesRequest(
          sessionId: json['SessionId'] as String?,
          billingIds: (json['BillingIds'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
        );

Map<String, dynamic> _$WebApiModulesBillingBillingCreateInvoicesRequestToJson(
    WebApiModulesBillingBillingCreateInvoicesRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('BillingIds', instance.billingIds);
  return val;
}

WebApiModulesBillingBillingCreateInvoicesResponse
    _$WebApiModulesBillingBillingCreateInvoicesResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingCreateInvoicesResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          invoiceCreationBatchId: json['InvoiceCreationBatchId'] as String?,
        );

Map<String, dynamic> _$WebApiModulesBillingBillingCreateInvoicesResponseToJson(
    WebApiModulesBillingBillingCreateInvoicesResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('InvoiceCreationBatchId', instance.invoiceCreationBatchId);
  return val;
}

WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesRequest
    _$WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesRequest(
          orderId: json['OrderId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesRequestToJson(
        WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  return val;
}

WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesResponse
    _$WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          fromDate: json['FromDate'] == null
              ? null
              : DateTime.parse(json['FromDate'] as String),
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
        );

Map<String, dynamic>
    _$WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesResponseToJson(
        WebApiModulesBillingBillingGetNextBillingWorksheetUsageDatesResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('FromDate', instance.fromDate?.toIso8601String());
  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  return val;
}

WebApiModulesBillingBillingGetOrderBillingDatesResponse
    _$WebApiModulesBillingBillingGetOrderBillingDatesResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingGetOrderBillingDatesResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          periodStart: json['PeriodStart'] == null
              ? null
              : DateTime.parse(json['PeriodStart'] as String),
          periodEnd: json['PeriodEnd'] == null
              ? null
              : DateTime.parse(json['PeriodEnd'] as String),
        );

Map<String, dynamic>
    _$WebApiModulesBillingBillingGetOrderBillingDatesResponseToJson(
        WebApiModulesBillingBillingGetOrderBillingDatesResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('PeriodStart', instance.periodStart?.toIso8601String());
  writeNotNull('PeriodEnd', instance.periodEnd?.toIso8601String());
  return val;
}

WebApiModulesBillingBillingPopulateBillingRequest
    _$WebApiModulesBillingBillingPopulateBillingRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingPopulateBillingRequest(
          billAsOfDate: json['BillAsOfDate'] == null
              ? null
              : DateTime.parse(json['BillAsOfDate'] as String),
          officeLocationId: json['OfficeLocationId'] as String?,
          customerId: json['CustomerId'] as String?,
          dealId: json['DealId'] as String?,
          departmentId: json['DepartmentId'] as String?,
          agentId: json['AgentId'] as String?,
          orderId: json['OrderId'] as String?,
          showOrdersWithPendingPO: json['ShowOrdersWithPendingPO'] as bool?,
          billIfComplete: json['BillIfComplete'] as bool?,
          combinePeriods: json['CombinePeriods'] as bool?,
        );

Map<String, dynamic> _$WebApiModulesBillingBillingPopulateBillingRequestToJson(
    WebApiModulesBillingBillingPopulateBillingRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('BillAsOfDate', instance.billAsOfDate?.toIso8601String());
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('ShowOrdersWithPendingPO', instance.showOrdersWithPendingPO);
  writeNotNull('BillIfComplete', instance.billIfComplete);
  writeNotNull('CombinePeriods', instance.combinePeriods);
  return val;
}

WebApiModulesBillingBillingPopulateBillingResponse
    _$WebApiModulesBillingBillingPopulateBillingResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingPopulateBillingResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          sessionId: json['SessionId'] as String?,
          billingMessages: json['BillingMessages'] as int?,
        );

Map<String, dynamic> _$WebApiModulesBillingBillingPopulateBillingResponseToJson(
    WebApiModulesBillingBillingPopulateBillingResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('BillingMessages', instance.billingMessages);
  return val;
}

WebApiModulesBillingBillingUpdateBillingWorksheetRequest
    _$WebApiModulesBillingBillingUpdateBillingWorksheetRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingUpdateBillingWorksheetRequest(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          invoiceId: json['InvoiceId'] as String?,
          orderId: json['OrderId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesBillingBillingUpdateBillingWorksheetRequestToJson(
        WebApiModulesBillingBillingUpdateBillingWorksheetRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('OrderId', instance.orderId);
  return val;
}

WebApiModulesBillingBillingUpdateBillingWorksheetResponse
    _$WebApiModulesBillingBillingUpdateBillingWorksheetResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingUpdateBillingWorksheetResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesBillingBillingUpdateBillingWorksheetResponseToJson(
        WebApiModulesBillingBillingUpdateBillingWorksheetResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesBillingBillingWorksheetBillingWorksheet
    _$WebApiModulesBillingBillingWorksheetBillingWorksheetFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingBillingWorksheetBillingWorksheet(
          billingWorksheetId: json['BillingWorksheetId'] as String?,
          worksheetNumber: json['WorksheetNumber'] as String?,
          worksheetDate: json['WorksheetDate'] as String?,
          billingStartDate: json['BillingStartDate'] as String?,
          billingEndDate: json['BillingEndDate'] as String?,
          orderInvoiceId: json['OrderInvoiceId'] as String?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          orderDate: json['OrderDate'] as String?,
          worksheetDescription: json['WorksheetDescription'] as String?,
          customerId: json['CustomerId'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          dealNumber: json['DealNumber'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          taxId: json['TaxId'] as String?,
          taxOptionId: json['TaxOptionId'] as String?,
          taxOption: json['TaxOption'] as String?,
          tax1Name: json['Tax1Name'] as String?,
          tax2Name: json['Tax2Name'] as String?,
          rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
          salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
          laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
          rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
          salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
          laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
          purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
          status: json['Status'] as String?,
          statusDate: json['StatusDate'] as String?,
          isNoCharge: json['IsNoCharge'] as bool?,
          isAdjusted: json['IsAdjusted'] as bool?,
          isBilledHiatus: json['IsBilledHiatus'] as bool?,
          hasLockedTotal: json['HasLockedTotal'] as bool?,
          isAlteredDates: json['IsAlteredDates'] as bool?,
          officeLocationId: json['OfficeLocationId'] as String?,
          officeLocation: json['OfficeLocation'] as String?,
          inputByUserId: json['InputByUserId'] as String?,
          flatPoId: json['FlatPoId'] as String?,
          orderType: json['OrderType'] as String?,
          rateType: json['RateType'] as String?,
          rateTypeDisplay: json['RateTypeDisplay'] as String?,
          resultingInvoiceTotal:
              (json['ResultingInvoiceTotal'] as num?)?.toDouble(),
          referenceNumber: json['ReferenceNumber'] as String?,
          agentId: json['AgentId'] as String?,
          agent: json['Agent'] as String?,
          currencyId: json['CurrencyId'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          officeLocationDefaultCurrencyId:
              json['OfficeLocationDefaultCurrencyId'] as String?,
          outsideSalesRepresentativeId:
              json['OutsideSalesRepresentativeId'] as String?,
          usageStartDate: json['UsageStartDate'] as String?,
          usageEndDate: json['UsageEndDate'] as String?,
          resultingInvoiceNumber: json['ResultingInvoiceNumber'] as String?,
          resultingInvoiceId: json['ResultingInvoiceId'] as String?,
          rentalTotal: (json['RentalTotal'] as num?)?.toDouble(),
          salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
          facilitiesTotal: (json['FacilitiesTotal'] as num?)?.toDouble(),
          worksheetGrossTotal:
              (json['WorksheetGrossTotal'] as num?)?.toDouble(),
          worksheetDiscountTotal:
              (json['WorksheetDiscountTotal'] as num?)?.toDouble(),
          worksheetSubTotal: (json['WorksheetSubTotal'] as num?)?.toDouble(),
          worksheetTax1: (json['WorksheetTax1'] as num?)?.toDouble(),
          worksheetTax2: (json['WorksheetTax2'] as num?)?.toDouble(),
          worksheetTax: (json['WorksheetTax'] as num?)?.toDouble(),
          worksheetTotal: (json['WorksheetTotal'] as num?)?.toDouble(),
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesBillingBillingWorksheetBillingWorksheetToJson(
        WebApiModulesBillingBillingWorksheetBillingWorksheet instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('BillingWorksheetId', instance.billingWorksheetId);
  writeNotNull('WorksheetNumber', instance.worksheetNumber);
  writeNotNull('WorksheetDate', instance.worksheetDate);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingEndDate', instance.billingEndDate);
  writeNotNull('OrderInvoiceId', instance.orderInvoiceId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('OrderDate', instance.orderDate);
  writeNotNull('WorksheetDescription', instance.worksheetDescription);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('TaxId', instance.taxId);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('Tax1Name', instance.tax1Name);
  writeNotNull('Tax2Name', instance.tax2Name);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('PurchaseOrderNumber', instance.purchaseOrderNumber);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('IsNoCharge', instance.isNoCharge);
  writeNotNull('IsAdjusted', instance.isAdjusted);
  writeNotNull('IsBilledHiatus', instance.isBilledHiatus);
  writeNotNull('HasLockedTotal', instance.hasLockedTotal);
  writeNotNull('IsAlteredDates', instance.isAlteredDates);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('InputByUserId', instance.inputByUserId);
  writeNotNull('FlatPoId', instance.flatPoId);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('RateTypeDisplay', instance.rateTypeDisplay);
  writeNotNull('ResultingInvoiceTotal', instance.resultingInvoiceTotal);
  writeNotNull('ReferenceNumber', instance.referenceNumber);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('OfficeLocationDefaultCurrencyId',
      instance.officeLocationDefaultCurrencyId);
  writeNotNull(
      'OutsideSalesRepresentativeId', instance.outsideSalesRepresentativeId);
  writeNotNull('UsageStartDate', instance.usageStartDate);
  writeNotNull('UsageEndDate', instance.usageEndDate);
  writeNotNull('ResultingInvoiceNumber', instance.resultingInvoiceNumber);
  writeNotNull('ResultingInvoiceId', instance.resultingInvoiceId);
  writeNotNull('RentalTotal', instance.rentalTotal);
  writeNotNull('SalesTotal', instance.salesTotal);
  writeNotNull('FacilitiesTotal', instance.facilitiesTotal);
  writeNotNull('WorksheetGrossTotal', instance.worksheetGrossTotal);
  writeNotNull('WorksheetDiscountTotal', instance.worksheetDiscountTotal);
  writeNotNull('WorksheetSubTotal', instance.worksheetSubTotal);
  writeNotNull('WorksheetTax1', instance.worksheetTax1);
  writeNotNull('WorksheetTax2', instance.worksheetTax2);
  writeNotNull('WorksheetTax', instance.worksheetTax);
  writeNotNull('WorksheetTotal', instance.worksheetTotal);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesBillingInvoiceCreditInvoiceReponse
    _$WebApiModulesBillingInvoiceCreditInvoiceReponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingInvoiceCreditInvoiceReponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          creditId: json['CreditId'] as String?,
          credit: json['credit'] == null
              ? null
              : WebApiModulesBillingInvoiceInvoice.fromJson(
                  json['credit'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$WebApiModulesBillingInvoiceCreditInvoiceReponseToJson(
    WebApiModulesBillingInvoiceCreditInvoiceReponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('CreditId', instance.creditId);
  writeNotNull('credit', instance.credit?.toJson());
  return val;
}

WebApiModulesBillingInvoiceCreditInvoiceRequest
    _$WebApiModulesBillingInvoiceCreditInvoiceRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingInvoiceCreditInvoiceRequest(
          invoiceId: json['InvoiceId'] as String?,
          percent: (json['Percent'] as num?)?.toDouble(),
          amount: (json['Amount'] as num?)?.toDouble(),
          allocate: json['Allocate'] as bool?,
          usageDays: (json['UsageDays'] as num?)?.toDouble(),
          notes: json['Notes'] as String?,
          taxOnly: json['TaxOnly'] as bool?,
          creditFromDate: json['CreditFromDate'] == null
              ? null
              : DateTime.parse(json['CreditFromDate'] as String),
          creditToDate: json['CreditToDate'] == null
              ? null
              : DateTime.parse(json['CreditToDate'] as String),
          creditMethod: json['CreditMethod'] as String?,
          adjustCost: json['AdjustCost'] as bool?,
        );

Map<String, dynamic> _$WebApiModulesBillingInvoiceCreditInvoiceRequestToJson(
    WebApiModulesBillingInvoiceCreditInvoiceRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('Percent', instance.percent);
  writeNotNull('Amount', instance.amount);
  writeNotNull('Allocate', instance.allocate);
  writeNotNull('UsageDays', instance.usageDays);
  writeNotNull('Notes', instance.notes);
  writeNotNull('TaxOnly', instance.taxOnly);
  writeNotNull('CreditFromDate', instance.creditFromDate?.toIso8601String());
  writeNotNull('CreditToDate', instance.creditToDate?.toIso8601String());
  writeNotNull('CreditMethod', instance.creditMethod);
  writeNotNull('AdjustCost', instance.adjustCost);
  return val;
}

WebApiModulesBillingInvoiceInvoice _$WebApiModulesBillingInvoiceInvoiceFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesBillingInvoiceInvoice(
      invoiceId: json['InvoiceId'] as String?,
      invoiceNumber: json['InvoiceNumber'] as String?,
      invoiceDate: json['InvoiceDate'] as String?,
      invoiceDueDate: json['InvoiceDueDate'] as String?,
      invoiceType: json['InvoiceType'] as String?,
      billingStartDate: json['BillingStartDate'] as String?,
      billingEndDate: json['BillingEndDate'] as String?,
      usageStartDate: json['UsageStartDate'] as String?,
      usageEndDate: json['UsageEndDate'] as String?,
      orderId: json['OrderId'] as String?,
      orderNumber: json['OrderNumber'] as String?,
      orderDescription: json['OrderDescription'] as String?,
      orderDate: json['OrderDate'] as String?,
      orderLocation: json['OrderLocation'] as String?,
      invoiceDescription: json['InvoiceDescription'] as String?,
      creditingInvoiceId: json['CreditingInvoiceId'] as String?,
      creditingInvoiceNumber: json['CreditingInvoiceNumber'] as String?,
      customerId: json['CustomerId'] as String?,
      customer: json['Customer'] as String?,
      customerTypeId: json['CustomerTypeId'] as String?,
      customerType: json['CustomerType'] as String?,
      dealId: json['DealId'] as String?,
      deal: json['Deal'] as String?,
      dealNumber: json['DealNumber'] as String?,
      dealTypeId: json['DealTypeId'] as String?,
      departmentId: json['DepartmentId'] as String?,
      department: json['Department'] as String?,
      purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
      workAuthorizationNumber: json['WorkAuthorizationNumber'] as String?,
      status: json['Status'] as String?,
      statusDate: json['StatusDate'] as String?,
      isNoCharge: json['IsNoCharge'] as bool?,
      isAdjusted: json['IsAdjusted'] as bool?,
      isBilledHiatus: json['IsBilledHiatus'] as bool?,
      episodeNumber: json['EpisodeNumber'] as int?,
      hasLockedTotal: json['HasLockedTotal'] as bool?,
      isAlteredDates: json['IsAlteredDates'] as bool?,
      officeLocationId: json['OfficeLocationId'] as String?,
      officeLocation: json['OfficeLocation'] as String?,
      invoiceCreationBatchId: json['InvoiceCreationBatchId'] as String?,
      invoiceCreationBatchNumber: json['InvoiceCreationBatchNumber'] as int?,
      invoiceGroupNumber: json['InvoiceGroupNumber'] as String?,
      rentalSale: json['RentalSale'] as bool?,
      lossAndDamage: json['LossAndDamage'] as bool?,
      repair: json['Repair'] as bool?,
      inputByUserId: json['InputByUserId'] as String?,
      flatPoId: json['FlatPoId'] as String?,
      orderType: json['OrderType'] as String?,
      rebateCustomerId: json['RebateCustomerId'] as String?,
      orbitsapchgmajor: json['Orbitsapchgmajor'] as String?,
      orbitsapchgsub: json['Orbitsapchgsub'] as String?,
      orbitsapchgdetail: json['Orbitsapchgdetail'] as String?,
      orbitsapchgdeal: json['Orbitsapchgdeal'] as String?,
      orbitsapchgset: json['Orbitsapchgset'] as String?,
      excludeFromFlatPo: json['ExcludeFromFlatPo'] as bool?,
      isSplitRental: json['IsSplitRental'] as bool?,
      isRebateRental: json['IsRebateRental'] as bool?,
      invoiceListTotal: (json['InvoiceListTotal'] as num?)?.toDouble(),
      invoiceGrossTotal: (json['InvoiceGrossTotal'] as num?)?.toDouble(),
      invoiceDiscountTotal: (json['InvoiceDiscountTotal'] as num?)?.toDouble(),
      invoiceDaysPerWeekDiscountTotal:
          (json['InvoiceDaysPerWeekDiscountTotal'] as num?)?.toDouble(),
      referenceNumber: json['ReferenceNumber'] as String?,
      agentId: json['AgentId'] as String?,
      agent: json['Agent'] as String?,
      projectManagerId: json['ProjectManagerId'] as String?,
      projectManager: json['ProjectManager'] as String?,
      billToAddressId: json['BillToAddressId'] as String?,
      billToName: json['BillToName'] as String?,
      billToAttention1: json['BillToAttention1'] as String?,
      billToAttention2: json['BillToAttention2'] as String?,
      billToAddress1: json['BillToAddress1'] as String?,
      billToAddress2: json['BillToAddress2'] as String?,
      billToCity: json['BillToCity'] as String?,
      billToState: json['BillToState'] as String?,
      billToZipCode: json['BillToZipCode'] as String?,
      billToCountryId: json['BillToCountryId'] as String?,
      billToCountry: json['BillToCountry'] as String?,
      invoiceClass: json['InvoiceClass'] as String?,
      printNotes: json['PrintNotes'] as String?,
      paymentTermsId: json['PaymentTermsId'] as String?,
      paymentTerms: json['PaymentTerms'] as String?,
      paymentTypeId: json['PaymentTypeId'] as String?,
      paymentType: json['PaymentType'] as String?,
      taxId: json['TaxId'] as String?,
      taxOptionId: json['TaxOptionId'] as String?,
      taxOption: json['TaxOption'] as String?,
      tax1Name: json['Tax1Name'] as String?,
      tax2Name: json['Tax2Name'] as String?,
      rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
      salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
      laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
      rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
      salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
      laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
      taxItemCode: json['TaxItemCode'] as String?,
      taxVendor: json['TaxVendor'] as String?,
      taxCountry: json['TaxCountry'] as String?,
      chargeBatchId: json['ChargeBatchId'] as String?,
      chargeBatchNumber: json['ChargeBatchNumber'] as String?,
      quikPayDiscount: json['QuikPayDiscount'] as bool?,
      quikPayRentalTotal: (json['QuikPayRentalTotal'] as num?)?.toDouble(),
      quikPayTotal: (json['QuikPayTotal'] as num?)?.toDouble(),
      receivedTotal: (json['ReceivedTotal'] as num?)?.toDouble(),
      rateType: json['RateType'] as String?,
      consignmentRevenue: (json['ConsignmentRevenue'] as num?)?.toDouble(),
      isNonBillable: json['IsNonBillable'] as bool?,
      currencyId: json['CurrencyId'] as String?,
      currencyCode: json['CurrencyCode'] as String?,
      currencySymbol: json['CurrencySymbol'] as String?,
      officeLocationDefaultCurrencyId:
          json['OfficeLocationDefaultCurrencyId'] as String?,
      divisionId: json['DivisionId'] as String?,
      outsideSalesRepresentativeId:
          json['OutsideSalesRepresentativeId'] as String?,
      outsideSalesRepresentative: json['OutsideSalesRepresentative'] as String?,
      exportTaxAsLineItem: json['ExportTaxAsLineItem'] as bool?,
      invoiceNumberColor: json['InvoiceNumberColor'] as String?,
      statusColor: json['StatusColor'] as String?,
      orderNumberColor: json['OrderNumberColor'] as String?,
      purchaseOrderNumberColor: json['PurchaseOrderNumberColor'] as String?,
      dealColor: json['DealColor'] as String?,
      billingStartDateColor: json['BillingStartDateColor'] as String?,
      invoiceTotalColor: json['InvoiceTotalColor'] as String?,
      descriptionColor: json['DescriptionColor'] as String?,
      hasRentalItem: json['HasRentalItem'] as bool?,
      hasMeterItem: json['HasMeterItem'] as bool?,
      hasSalesItem: json['HasSalesItem'] as bool?,
      hasLaborItem: json['HasLaborItem'] as bool?,
      hasMiscellaneousItem: json['HasMiscellaneousItem'] as bool?,
      hasFacilityItem: json['HasFacilityItem'] as bool?,
      hasTransportationItem: json['HasTransportationItem'] as bool?,
      hasRentalSaleItem: json['HasRentalSaleItem'] as bool?,
      hasRepairItem: json['HasRepairItem'] as bool?,
      hasConsignment: json['HasConsignment'] as bool?,
      hasLossAndDamageItem: json['HasLossAndDamageItem'] as bool?,
      rentalTotal: (json['RentalTotal'] as num?)?.toDouble(),
      salesTotal: (json['SalesTotal'] as num?)?.toDouble(),
      facilitiesTotal: (json['FacilitiesTotal'] as num?)?.toDouble(),
      miscellaneousTotal: (json['MiscellaneousTotal'] as num?)?.toDouble(),
      laborTotal: (json['LaborTotal'] as num?)?.toDouble(),
      partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
      assetSaleTotal: (json['AssetSaleTotal'] as num?)?.toDouble(),
      invoiceSubTotal: (json['InvoiceSubTotal'] as num?)?.toDouble(),
      invoiceTax1: (json['InvoiceTax1'] as num?)?.toDouble(),
      invoiceTax2: (json['InvoiceTax2'] as num?)?.toDouble(),
      invoiceTax: (json['InvoiceTax'] as num?)?.toDouble(),
      invoiceTotal: (json['InvoiceTotal'] as num?)?.toDouble(),
      isStandAloneInvoice: json['IsStandAloneInvoice'] as bool?,
      warehouseId: json['WarehouseId'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesBillingInvoiceInvoiceToJson(
    WebApiModulesBillingInvoiceInvoice instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('InvoiceNumber', instance.invoiceNumber);
  writeNotNull('InvoiceDate', instance.invoiceDate);
  writeNotNull('InvoiceDueDate', instance.invoiceDueDate);
  writeNotNull('InvoiceType', instance.invoiceType);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingEndDate', instance.billingEndDate);
  writeNotNull('UsageStartDate', instance.usageStartDate);
  writeNotNull('UsageEndDate', instance.usageEndDate);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('OrderDate', instance.orderDate);
  writeNotNull('OrderLocation', instance.orderLocation);
  writeNotNull('InvoiceDescription', instance.invoiceDescription);
  writeNotNull('CreditingInvoiceId', instance.creditingInvoiceId);
  writeNotNull('CreditingInvoiceNumber', instance.creditingInvoiceNumber);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('CustomerTypeId', instance.customerTypeId);
  writeNotNull('CustomerType', instance.customerType);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('DealTypeId', instance.dealTypeId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('PurchaseOrderNumber', instance.purchaseOrderNumber);
  writeNotNull('WorkAuthorizationNumber', instance.workAuthorizationNumber);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('IsNoCharge', instance.isNoCharge);
  writeNotNull('IsAdjusted', instance.isAdjusted);
  writeNotNull('IsBilledHiatus', instance.isBilledHiatus);
  writeNotNull('EpisodeNumber', instance.episodeNumber);
  writeNotNull('HasLockedTotal', instance.hasLockedTotal);
  writeNotNull('IsAlteredDates', instance.isAlteredDates);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('InvoiceCreationBatchId', instance.invoiceCreationBatchId);
  writeNotNull(
      'InvoiceCreationBatchNumber', instance.invoiceCreationBatchNumber);
  writeNotNull('InvoiceGroupNumber', instance.invoiceGroupNumber);
  writeNotNull('RentalSale', instance.rentalSale);
  writeNotNull('LossAndDamage', instance.lossAndDamage);
  writeNotNull('Repair', instance.repair);
  writeNotNull('InputByUserId', instance.inputByUserId);
  writeNotNull('FlatPoId', instance.flatPoId);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull('RebateCustomerId', instance.rebateCustomerId);
  writeNotNull('Orbitsapchgmajor', instance.orbitsapchgmajor);
  writeNotNull('Orbitsapchgsub', instance.orbitsapchgsub);
  writeNotNull('Orbitsapchgdetail', instance.orbitsapchgdetail);
  writeNotNull('Orbitsapchgdeal', instance.orbitsapchgdeal);
  writeNotNull('Orbitsapchgset', instance.orbitsapchgset);
  writeNotNull('ExcludeFromFlatPo', instance.excludeFromFlatPo);
  writeNotNull('IsSplitRental', instance.isSplitRental);
  writeNotNull('IsRebateRental', instance.isRebateRental);
  writeNotNull('InvoiceListTotal', instance.invoiceListTotal);
  writeNotNull('InvoiceGrossTotal', instance.invoiceGrossTotal);
  writeNotNull('InvoiceDiscountTotal', instance.invoiceDiscountTotal);
  writeNotNull('InvoiceDaysPerWeekDiscountTotal',
      instance.invoiceDaysPerWeekDiscountTotal);
  writeNotNull('ReferenceNumber', instance.referenceNumber);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('ProjectManager', instance.projectManager);
  writeNotNull('BillToAddressId', instance.billToAddressId);
  writeNotNull('BillToName', instance.billToName);
  writeNotNull('BillToAttention1', instance.billToAttention1);
  writeNotNull('BillToAttention2', instance.billToAttention2);
  writeNotNull('BillToAddress1', instance.billToAddress1);
  writeNotNull('BillToAddress2', instance.billToAddress2);
  writeNotNull('BillToCity', instance.billToCity);
  writeNotNull('BillToState', instance.billToState);
  writeNotNull('BillToZipCode', instance.billToZipCode);
  writeNotNull('BillToCountryId', instance.billToCountryId);
  writeNotNull('BillToCountry', instance.billToCountry);
  writeNotNull('InvoiceClass', instance.invoiceClass);
  writeNotNull('PrintNotes', instance.printNotes);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('TaxId', instance.taxId);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('Tax1Name', instance.tax1Name);
  writeNotNull('Tax2Name', instance.tax2Name);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('TaxItemCode', instance.taxItemCode);
  writeNotNull('TaxVendor', instance.taxVendor);
  writeNotNull('TaxCountry', instance.taxCountry);
  writeNotNull('ChargeBatchId', instance.chargeBatchId);
  writeNotNull('ChargeBatchNumber', instance.chargeBatchNumber);
  writeNotNull('QuikPayDiscount', instance.quikPayDiscount);
  writeNotNull('QuikPayRentalTotal', instance.quikPayRentalTotal);
  writeNotNull('QuikPayTotal', instance.quikPayTotal);
  writeNotNull('ReceivedTotal', instance.receivedTotal);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('ConsignmentRevenue', instance.consignmentRevenue);
  writeNotNull('IsNonBillable', instance.isNonBillable);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('OfficeLocationDefaultCurrencyId',
      instance.officeLocationDefaultCurrencyId);
  writeNotNull('DivisionId', instance.divisionId);
  writeNotNull(
      'OutsideSalesRepresentativeId', instance.outsideSalesRepresentativeId);
  writeNotNull(
      'OutsideSalesRepresentative', instance.outsideSalesRepresentative);
  writeNotNull('ExportTaxAsLineItem', instance.exportTaxAsLineItem);
  writeNotNull('InvoiceNumberColor', instance.invoiceNumberColor);
  writeNotNull('StatusColor', instance.statusColor);
  writeNotNull('OrderNumberColor', instance.orderNumberColor);
  writeNotNull('PurchaseOrderNumberColor', instance.purchaseOrderNumberColor);
  writeNotNull('DealColor', instance.dealColor);
  writeNotNull('BillingStartDateColor', instance.billingStartDateColor);
  writeNotNull('InvoiceTotalColor', instance.invoiceTotalColor);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('HasRentalItem', instance.hasRentalItem);
  writeNotNull('HasMeterItem', instance.hasMeterItem);
  writeNotNull('HasSalesItem', instance.hasSalesItem);
  writeNotNull('HasLaborItem', instance.hasLaborItem);
  writeNotNull('HasMiscellaneousItem', instance.hasMiscellaneousItem);
  writeNotNull('HasFacilityItem', instance.hasFacilityItem);
  writeNotNull('HasTransportationItem', instance.hasTransportationItem);
  writeNotNull('HasRentalSaleItem', instance.hasRentalSaleItem);
  writeNotNull('HasRepairItem', instance.hasRepairItem);
  writeNotNull('HasConsignment', instance.hasConsignment);
  writeNotNull('HasLossAndDamageItem', instance.hasLossAndDamageItem);
  writeNotNull('RentalTotal', instance.rentalTotal);
  writeNotNull('SalesTotal', instance.salesTotal);
  writeNotNull('FacilitiesTotal', instance.facilitiesTotal);
  writeNotNull('MiscellaneousTotal', instance.miscellaneousTotal);
  writeNotNull('LaborTotal', instance.laborTotal);
  writeNotNull('PartsTotal', instance.partsTotal);
  writeNotNull('AssetSaleTotal', instance.assetSaleTotal);
  writeNotNull('InvoiceSubTotal', instance.invoiceSubTotal);
  writeNotNull('InvoiceTax1', instance.invoiceTax1);
  writeNotNull('InvoiceTax2', instance.invoiceTax2);
  writeNotNull('InvoiceTax', instance.invoiceTax);
  writeNotNull('InvoiceTotal', instance.invoiceTotal);
  writeNotNull('IsStandAloneInvoice', instance.isStandAloneInvoice);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesBillingInvoiceToggleInvoiceApprovedResponse
    _$WebApiModulesBillingInvoiceToggleInvoiceApprovedResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingInvoiceToggleInvoiceApprovedResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesBillingInvoiceToggleInvoiceApprovedResponseToJson(
        WebApiModulesBillingInvoiceToggleInvoiceApprovedResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesBillingPaymentPayment _$WebApiModulesBillingPaymentPaymentFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesBillingPaymentPayment(
      paymentId: json['PaymentId'] as String?,
      paymentDate: json['PaymentDate'] as String?,
      locationId: json['LocationId'] as String?,
      departmentId: json['DepartmentId'] as String?,
      locationCode: json['LocationCode'] as String?,
      location: json['Location'] as String?,
      vendorId: json['VendorId'] as String?,
      vendor: json['Vendor'] as String?,
      paymentTypeId: json['PaymentTypeId'] as String?,
      paymentType: json['PaymentType'] as String?,
      bankAccountId: json['BankAccountId'] as int?,
      accountName: json['AccountName'] as String?,
      officeLocationDefaultCurrencyId:
          json['OfficeLocationDefaultCurrencyId'] as String?,
      currencyId: json['CurrencyId'] as String?,
      currency: json['Currency'] as String?,
      currencyCode: json['CurrencyCode'] as String?,
      currencySymbol: json['CurrencySymbol'] as String?,
      checkNumber: json['CheckNumber'] as String?,
      paymentDocumentNumber: json['PaymentDocumentNumber'] as String?,
      paymentAmount: (json['PaymentAmount'] as num?)?.toDouble(),
      appliedById: json['AppliedById'] as String?,
      appliedBy: json['AppliedBy'] as String?,
      modifiedById: json['ModifiedById'] as String?,
      modifiedBy: json['ModifiedBy'] as String?,
      paymentMemo: json['PaymentMemo'] as String?,
      recType: json['RecType'] as String?,
      chargeBatchId: json['ChargeBatchId'] as String?,
      chargeBatchNumber: json['ChargeBatchNumber'] as String?,
      vendorInvoiceDataList: (json['VendorInvoiceDataList'] as List<dynamic>?)
              ?.map((e) =>
                  WebApiModulesBillingPaymentPaymentVendorInvoice.fromJson(
                      e as Map<String, dynamic>))
              .toList() ??
          [],
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesBillingPaymentPaymentToJson(
    WebApiModulesBillingPaymentPayment instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PaymentId', instance.paymentId);
  writeNotNull('PaymentDate', instance.paymentDate);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('LocationCode', instance.locationCode);
  writeNotNull('Location', instance.location);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('BankAccountId', instance.bankAccountId);
  writeNotNull('AccountName', instance.accountName);
  writeNotNull('OfficeLocationDefaultCurrencyId',
      instance.officeLocationDefaultCurrencyId);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('CheckNumber', instance.checkNumber);
  writeNotNull('PaymentDocumentNumber', instance.paymentDocumentNumber);
  writeNotNull('PaymentAmount', instance.paymentAmount);
  writeNotNull('AppliedById', instance.appliedById);
  writeNotNull('AppliedBy', instance.appliedBy);
  writeNotNull('ModifiedById', instance.modifiedById);
  writeNotNull('ModifiedBy', instance.modifiedBy);
  writeNotNull('PaymentMemo', instance.paymentMemo);
  writeNotNull('RecType', instance.recType);
  writeNotNull('ChargeBatchId', instance.chargeBatchId);
  writeNotNull('ChargeBatchNumber', instance.chargeBatchNumber);
  writeNotNull('VendorInvoiceDataList',
      instance.vendorInvoiceDataList?.map((e) => e.toJson()).toList());
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesBillingPaymentPaymentVendorInvoice
    _$WebApiModulesBillingPaymentPaymentVendorInvoiceFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingPaymentPaymentVendorInvoice(
          vendorInvoicePaymentId: json['VendorInvoicePaymentId'] as String?,
          vendorInvoiceId: json['VendorInvoiceId'] as String?,
          amount: (json['Amount'] as num?)?.toDouble(),
        );

Map<String, dynamic> _$WebApiModulesBillingPaymentPaymentVendorInvoiceToJson(
    WebApiModulesBillingPaymentPaymentVendorInvoice instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('VendorInvoicePaymentId', instance.vendorInvoicePaymentId);
  writeNotNull('VendorInvoiceId', instance.vendorInvoiceId);
  writeNotNull('Amount', instance.amount);
  return val;
}

WebApiModulesBillingReceiptAddDepletingDepositRequest
    _$WebApiModulesBillingReceiptAddDepletingDepositRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingReceiptAddDepletingDepositRequest(
          orderId: json['OrderId'] as String?,
          dealId: json['DealId'] as String?,
          paymentTypeId: json['PaymentTypeId'] as String?,
          paymentAmount: (json['PaymentAmount'] as num?)?.toDouble(),
          receiptDate: json['ReceiptDate'] == null
              ? null
              : DateTime.parse(json['ReceiptDate'] as String),
          locationId: json['LocationId'] as String?,
          currencyId: json['CurrencyId'] as String?,
          checkNumber: json['CheckNumber'] as String?,
          paymentMemo: json['PaymentMemo'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesBillingReceiptAddDepletingDepositRequestToJson(
        WebApiModulesBillingReceiptAddDepletingDepositRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentAmount', instance.paymentAmount);
  writeNotNull('ReceiptDate', instance.receiptDate?.toIso8601String());
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CheckNumber', instance.checkNumber);
  writeNotNull('PaymentMemo', instance.paymentMemo);
  return val;
}

WebApiModulesBillingReceiptReceipt _$WebApiModulesBillingReceiptReceiptFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesBillingReceiptReceipt(
      receiptId: json['ReceiptId'] as String?,
      receiptDate: json['ReceiptDate'] as String?,
      locationId: json['LocationId'] as String?,
      locationCode: json['LocationCode'] as String?,
      location: json['Location'] as String?,
      customerId: json['CustomerId'] as String?,
      customer: json['Customer'] as String?,
      dealId: json['DealId'] as String?,
      deal: json['Deal'] as String?,
      paymentBy: json['PaymentBy'] as String?,
      customerDeal: json['CustomerDeal'] as String?,
      paymentTypeId: json['PaymentTypeId'] as String?,
      paymentType: json['PaymentType'] as String?,
      paymentTypeType: json['PaymentTypeType'] as String?,
      paymentTypeExportPaymentMethod:
          json['PaymentTypeExportPaymentMethod'] as String?,
      checkNumber: json['CheckNumber'] as String?,
      paymentAmount: (json['PaymentAmount'] as num?)?.toDouble(),
      appliedById: json['AppliedById'] as String?,
      appliedBy: json['AppliedBy'] as String?,
      modifiedById: json['ModifiedById'] as String?,
      modifiedBy: json['ModifiedBy'] as String?,
      paymentMemo: json['PaymentMemo'] as String?,
      recType: json['RecType'] as String?,
      chargeBatchId: json['ChargeBatchId'] as String?,
      chargeBatchNumber: json['ChargeBatchNumber'] as String?,
      currencyId: json['CurrencyId'] as String?,
      currencyCode: json['CurrencyCode'] as String?,
      currencySymbol: json['CurrencySymbol'] as String?,
      officeLocationDefaultCurrencyId:
          json['OfficeLocationDefaultCurrencyId'] as String?,
      overPaymentId: json['OverPaymentId'] as String?,
      invoiceDataList: (json['InvoiceDataList'] as List<dynamic>?)
              ?.map((e) => WebApiModulesBillingReceiptReceiptInvoice.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      creditDataList: (json['CreditDataList'] as List<dynamic>?)
              ?.map((e) => WebApiModulesBillingReceiptReceiptCredit.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      createOverpayment: json['CreateOverpayment'] as bool?,
      createDepletingDeposit: json['CreateDepletingDeposit'] as bool?,
      dealDepositId: json['DealDepositId'] as String?,
      dealDepositCheckNumber: json['DealDepositCheckNumber'] as String?,
      customerDepositId: json['CustomerDepositId'] as String?,
      customerDepositCheckNumber: json['CustomerDepositCheckNumber'] as String?,
      orderId: json['OrderId'] as String?,
      orderDescription: json['OrderDescription'] as String?,
      transactionId: json['TransactionId'] as String?,
      creditCardAccountToken: json['CreditCardAccountToken'] as String?,
      creditCardExpirationDate: json['CreditCardExpirationDate'] as String?,
      dateStamp: json['DateStamp'] == null
          ? null
          : DateTime.parse(json['DateStamp'] as String),
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesBillingReceiptReceiptToJson(
    WebApiModulesBillingReceiptReceipt instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ReceiptId', instance.receiptId);
  writeNotNull('ReceiptDate', instance.receiptDate);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('LocationCode', instance.locationCode);
  writeNotNull('Location', instance.location);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('PaymentBy', instance.paymentBy);
  writeNotNull('CustomerDeal', instance.customerDeal);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('PaymentTypeType', instance.paymentTypeType);
  writeNotNull('PaymentTypeExportPaymentMethod',
      instance.paymentTypeExportPaymentMethod);
  writeNotNull('CheckNumber', instance.checkNumber);
  writeNotNull('PaymentAmount', instance.paymentAmount);
  writeNotNull('AppliedById', instance.appliedById);
  writeNotNull('AppliedBy', instance.appliedBy);
  writeNotNull('ModifiedById', instance.modifiedById);
  writeNotNull('ModifiedBy', instance.modifiedBy);
  writeNotNull('PaymentMemo', instance.paymentMemo);
  writeNotNull('RecType', instance.recType);
  writeNotNull('ChargeBatchId', instance.chargeBatchId);
  writeNotNull('ChargeBatchNumber', instance.chargeBatchNumber);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('OfficeLocationDefaultCurrencyId',
      instance.officeLocationDefaultCurrencyId);
  writeNotNull('OverPaymentId', instance.overPaymentId);
  writeNotNull('InvoiceDataList',
      instance.invoiceDataList?.map((e) => e.toJson()).toList());
  writeNotNull('CreditDataList',
      instance.creditDataList?.map((e) => e.toJson()).toList());
  writeNotNull('CreateOverpayment', instance.createOverpayment);
  writeNotNull('CreateDepletingDeposit', instance.createDepletingDeposit);
  writeNotNull('DealDepositId', instance.dealDepositId);
  writeNotNull('DealDepositCheckNumber', instance.dealDepositCheckNumber);
  writeNotNull('CustomerDepositId', instance.customerDepositId);
  writeNotNull(
      'CustomerDepositCheckNumber', instance.customerDepositCheckNumber);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('TransactionId', instance.transactionId);
  writeNotNull('CreditCardAccountToken', instance.creditCardAccountToken);
  writeNotNull('CreditCardExpirationDate', instance.creditCardExpirationDate);
  writeNotNull('DateStamp', instance.dateStamp?.toIso8601String());
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesBillingReceiptReceiptCredit
    _$WebApiModulesBillingReceiptReceiptCreditFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingReceiptReceiptCredit(
          creditReceiptId: json['CreditReceiptId'] as String?,
          creditId: json['CreditId'] as String?,
          amount: (json['Amount'] as num?)?.toDouble(),
        );

Map<String, dynamic> _$WebApiModulesBillingReceiptReceiptCreditToJson(
    WebApiModulesBillingReceiptReceiptCredit instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CreditReceiptId', instance.creditReceiptId);
  writeNotNull('CreditId', instance.creditId);
  writeNotNull('Amount', instance.amount);
  return val;
}

WebApiModulesBillingReceiptReceiptInvoice
    _$WebApiModulesBillingReceiptReceiptInvoiceFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingReceiptReceiptInvoice(
          invoiceReceiptId: json['InvoiceReceiptId'] as String?,
          invoiceId: json['InvoiceId'] as String?,
          amount: (json['Amount'] as num?)?.toDouble(),
        );

Map<String, dynamic> _$WebApiModulesBillingReceiptReceiptInvoiceToJson(
    WebApiModulesBillingReceiptReceiptInvoice instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InvoiceReceiptId', instance.invoiceReceiptId);
  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('Amount', instance.amount);
  return val;
}

WebApiModulesBillingReceiptRemainingDepositAmountsResponse
    _$WebApiModulesBillingReceiptRemainingDepositAmountsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingReceiptRemainingDepositAmountsResponse(
          depletingDeposits: (json['DepletingDeposits'] as num?)?.toDouble(),
          depletingDepositsFormatted:
              json['DepletingDepositsFormatted'] as String?,
          creditMemos: (json['CreditMemos'] as num?)?.toDouble(),
          creditMemosFormatted: json['CreditMemosFormatted'] as String?,
          overpayments: (json['Overpayments'] as num?)?.toDouble(),
          overpaymentsFormatted: json['OverpaymentsFormatted'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesBillingReceiptRemainingDepositAmountsResponseToJson(
        WebApiModulesBillingReceiptRemainingDepositAmountsResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DepletingDeposits', instance.depletingDeposits);
  writeNotNull(
      'DepletingDepositsFormatted', instance.depletingDepositsFormatted);
  writeNotNull('CreditMemos', instance.creditMemos);
  writeNotNull('CreditMemosFormatted', instance.creditMemosFormatted);
  writeNotNull('Overpayments', instance.overpayments);
  writeNotNull('OverpaymentsFormatted', instance.overpaymentsFormatted);
  return val;
}

WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedRequest
    _$WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedRequest(
          vendorInvoiceId: json['VendorInvoiceId'] as String?,
          pushChangesToPurchaseOrder:
              json['PushChangesToPurchaseOrder'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedRequestToJson(
        WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('VendorInvoiceId', instance.vendorInvoiceId);
  writeNotNull(
      'PushChangesToPurchaseOrder', instance.pushChangesToPurchaseOrder);
  return val;
}

WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedResponse
    _$WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          promptToUpdatePurchaseOrder:
              json['PromptToUpdatePurchaseOrder'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedResponseToJson(
        WebApiModulesBillingVendorInvoiceToggleVendorInvoiceApprovedResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull(
      'PromptToUpdatePurchaseOrder', instance.promptToUpdatePurchaseOrder);
  return val;
}

WebApiModulesBillingVendorInvoiceVendorInvoice
    _$WebApiModulesBillingVendorInvoiceVendorInvoiceFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesBillingVendorInvoiceVendorInvoice(
          vendorInvoiceId: json['VendorInvoiceId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
          purchaseOrderDescription: json['PurchaseOrderDescription'] as String?,
          requistionNumber: json['RequistionNumber'] as String?,
          vendor: json['Vendor'] as String?,
          vendorNumber: json['VendorNumber'] as String?,
          vendorId: json['VendorId'] as String?,
          invoiceBatchId: json['InvoiceBatchId'] as String?,
          inputDate: json['InputDate'] as String?,
          invoiceNumber: json['InvoiceNumber'] as String?,
          invoiceDate: json['InvoiceDate'] as String?,
          invoiceDueDate: json['InvoiceDueDate'] as String?,
          billingStartDate: json['BillingStartDate'] as String?,
          billingEndDate: json['BillingEndDate'] as String?,
          status: json['Status'] as String?,
          statusDate: json['StatusDate'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          purchaseOrderDealId: json['PurchaseOrderDealId'] as String?,
          purchaseOrderDealNumber: json['PurchaseOrderDealNumber'] as String?,
          purchaseOrderDeal: json['PurchaseOrderDeal'] as String?,
          purchaseOrderDealNumberDeal:
              json['PurchaseOrderDealNumberDeal'] as String?,
          purchaseOrderDate: json['PurchaseOrderDate'] as String?,
          purchaseOrderEstimatedStopDate:
              json['PurchaseOrderEstimatedStopDate'] as String?,
          purchaseOrderEstimatedStartDate:
              json['PurchaseOrderEstimatedStartDate'] as String?,
          purchaseOrderBillingCycleId:
              json['PurchaseOrderBillingCycleId'] as String?,
          purchaseOrderBillingCycle:
              json['PurchaseOrderBillingCycle'] as String?,
          purchaseOrderPaymentTermsId:
              json['PurchaseOrderPaymentTermsId'] as String?,
          purchaseOrderPaymentTerms:
              json['PurchaseOrderPaymentTerms'] as String?,
          approvedDate: json['ApprovedDate'] as String?,
          locationId: json['LocationId'] as String?,
          location: json['Location'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          invoiceTotal: (json['InvoiceTotal'] as num?)?.toDouble(),
          billToAddress1: json['BillToAddress1'] as String?,
          billToAddress2: json['BillToAddress2'] as String?,
          billToCity: json['BillToCity'] as String?,
          billToState: json['BillToState'] as String?,
          billToZipCode: json['BillToZipCode'] as String?,
          billToCountry: json['BillToCountry'] as String?,
          vendorPhone: json['VendorPhone'] as String?,
          vendorFax: json['VendorFax'] as String?,
          invoiceClass: json['InvoiceClass'] as bool?,
          printNotes: json['PrintNotes'] as bool?,
          paymentTermsId: json['PaymentTermsId'] as String?,
          paymentTerms: json['PaymentTerms'] as String?,
          taxId: json['TaxId'] as String?,
          rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
          salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
          laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
          rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
          salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
          laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
          taxOptionId: json['TaxOptionId'] as String?,
          taxOption: json['TaxOption'] as String?,
          tax1Name: json['Tax1Name'] as String?,
          tax2Name: json['Tax2Name'] as String?,
          taxItemCode: json['TaxItemCode'] as String?,
          notes: json['Notes'] as String?,
          billedHiatus: json['BilledHiatus'] as bool?,
          invoiceType: json['InvoiceType'] as String?,
          agentId: json['AgentId'] as String?,
          projectManagerId: json['ProjectManagerId'] as String?,
          currencyId: json['CurrencyId'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          officeLocationDefaultCurrencyId:
              json['OfficeLocationDefaultCurrencyId'] as String?,
          dealBilledExtended: (json['DealBilledExtended'] as num?)?.toDouble(),
          credit: (json['Credit'] as num?)?.toDouble(),
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesBillingVendorInvoiceVendorInvoiceToJson(
    WebApiModulesBillingVendorInvoiceVendorInvoice instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('VendorInvoiceId', instance.vendorInvoiceId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderNumber', instance.purchaseOrderNumber);
  writeNotNull('PurchaseOrderDescription', instance.purchaseOrderDescription);
  writeNotNull('RequistionNumber', instance.requistionNumber);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('VendorNumber', instance.vendorNumber);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('InvoiceBatchId', instance.invoiceBatchId);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('InvoiceNumber', instance.invoiceNumber);
  writeNotNull('InvoiceDate', instance.invoiceDate);
  writeNotNull('InvoiceDueDate', instance.invoiceDueDate);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingEndDate', instance.billingEndDate);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('PurchaseOrderDealId', instance.purchaseOrderDealId);
  writeNotNull('PurchaseOrderDealNumber', instance.purchaseOrderDealNumber);
  writeNotNull('PurchaseOrderDeal', instance.purchaseOrderDeal);
  writeNotNull(
      'PurchaseOrderDealNumberDeal', instance.purchaseOrderDealNumberDeal);
  writeNotNull('PurchaseOrderDate', instance.purchaseOrderDate);
  writeNotNull('PurchaseOrderEstimatedStopDate',
      instance.purchaseOrderEstimatedStopDate);
  writeNotNull('PurchaseOrderEstimatedStartDate',
      instance.purchaseOrderEstimatedStartDate);
  writeNotNull(
      'PurchaseOrderBillingCycleId', instance.purchaseOrderBillingCycleId);
  writeNotNull('PurchaseOrderBillingCycle', instance.purchaseOrderBillingCycle);
  writeNotNull(
      'PurchaseOrderPaymentTermsId', instance.purchaseOrderPaymentTermsId);
  writeNotNull('PurchaseOrderPaymentTerms', instance.purchaseOrderPaymentTerms);
  writeNotNull('ApprovedDate', instance.approvedDate);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('Location', instance.location);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('InvoiceTotal', instance.invoiceTotal);
  writeNotNull('BillToAddress1', instance.billToAddress1);
  writeNotNull('BillToAddress2', instance.billToAddress2);
  writeNotNull('BillToCity', instance.billToCity);
  writeNotNull('BillToState', instance.billToState);
  writeNotNull('BillToZipCode', instance.billToZipCode);
  writeNotNull('BillToCountry', instance.billToCountry);
  writeNotNull('VendorPhone', instance.vendorPhone);
  writeNotNull('VendorFax', instance.vendorFax);
  writeNotNull('InvoiceClass', instance.invoiceClass);
  writeNotNull('PrintNotes', instance.printNotes);
  writeNotNull('PaymentTermsId', instance.paymentTermsId);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('TaxId', instance.taxId);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('Tax1Name', instance.tax1Name);
  writeNotNull('Tax2Name', instance.tax2Name);
  writeNotNull('TaxItemCode', instance.taxItemCode);
  writeNotNull('Notes', instance.notes);
  writeNotNull('BilledHiatus', instance.billedHiatus);
  writeNotNull('InvoiceType', instance.invoiceType);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('OfficeLocationDefaultCurrencyId',
      instance.officeLocationDefaultCurrencyId);
  writeNotNull('DealBilledExtended', instance.dealBilledExtended);
  writeNotNull('Credit', instance.credit);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesContainersContainerContainer
    _$WebApiModulesContainersContainerContainerFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesContainersContainerContainer(
          containerId: json['ContainerId'] as String?,
          description: json['Description'] as String?,
          rental: json['Rental'] as bool?,
          iCode: json['ICode'] as String?,
          scannableInventoryId: json['ScannableInventoryId'] as String?,
          scannableICode: json['ScannableICode'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesContainersContainerContainerToJson(
    WebApiModulesContainersContainerContainer instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContainerId', instance.containerId);
  writeNotNull('Description', instance.description);
  writeNotNull('Rental', instance.rental);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ScannableInventoryId', instance.scannableInventoryId);
  writeNotNull('ScannableICode', instance.scannableICode);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsAddressAddress
    _$WebApiModulesHomeControlsAddressAddressFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsAddressAddress(
          addressId: json['AddressId'] as String?,
          name: json['Name'] as String?,
          attention: json['Attention'] as String?,
          attention2: json['Attention2'] as String?,
          address1: json['Address1'] as String?,
          address2: json['Address2'] as String?,
          city: json['City'] as String?,
          state: json['State'] as String?,
          countryId: json['CountryId'] as String?,
          country: json['Country'] as String?,
          zipCode: json['ZipCode'] as String?,
          phone: json['Phone'] as String?,
          fax: json['Fax'] as String?,
          phoneTollFree: json['PhoneTollFree'] as String?,
          phoneOther: json['PhoneOther'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId3: json['UniqueId3'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsAddressAddressToJson(
    WebApiModulesHomeControlsAddressAddress instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('AddressId', instance.addressId);
  writeNotNull('Name', instance.name);
  writeNotNull('Attention', instance.attention);
  writeNotNull('Attention2', instance.attention2);
  writeNotNull('Address1', instance.address1);
  writeNotNull('Address2', instance.address2);
  writeNotNull('City', instance.city);
  writeNotNull('State', instance.state);
  writeNotNull('CountryId', instance.countryId);
  writeNotNull('Country', instance.country);
  writeNotNull('ZipCode', instance.zipCode);
  writeNotNull('Phone', instance.phone);
  writeNotNull('Fax', instance.fax);
  writeNotNull('PhoneTollFree', instance.phoneTollFree);
  writeNotNull('PhoneOther', instance.phoneOther);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId3', instance.uniqueId3);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescription
    _$WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescription(
          alternativeDescriptionId: json['AlternativeDescriptionId'] as int?,
          internalChar: json['InternalChar'] as bool?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          aka: json['AKA'] as String?,
          allowedOnInvoice: json['AllowedOnInvoice'] as bool?,
          isPrimary: json['IsPrimary'] as bool?,
          inactive: json['Inactive'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescriptionToJson(
        WebApiModulesHomeControlsAlternativeDescriptionAlternativeDescription
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('AlternativeDescriptionId', instance.alternativeDescriptionId);
  writeNotNull('InternalChar', instance.internalChar);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('AKA', instance.aka);
  writeNotNull('AllowedOnInvoice', instance.allowedOnInvoice);
  writeNotNull('IsPrimary', instance.isPrimary);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsCompanyCompany
    _$WebApiModulesHomeControlsCompanyCompanyFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsCompanyCompany(
          companyId: json['CompanyId'] as String?,
          companyNumber: json['CompanyNumber'] as String?,
          company: json['Company'] as String?,
          companyType: json['CompanyType'] as String?,
          companyTypeColor: json['CompanyTypeColor'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsCompanyCompanyToJson(
    WebApiModulesHomeControlsCompanyCompany instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CompanyId', instance.companyId);
  writeNotNull('CompanyNumber', instance.companyNumber);
  writeNotNull('Company', instance.company);
  writeNotNull('CompanyType', instance.companyType);
  writeNotNull('CompanyTypeColor', instance.companyTypeColor);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsCompanyContactCompanyContact
    _$WebApiModulesHomeControlsCompanyContactCompanyContactFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsCompanyContactCompanyContact(
          companyContactId: json['CompanyContactId'] as String?,
          companyId: json['CompanyId'] as String?,
          company: json['Company'] as String?,
          companyType: json['CompanyType'] as String?,
          companyTypeColor: json['CompanyTypeColor'] as String?,
          contactId: json['ContactId'] as String?,
          salutation: json['Salutation'] as String?,
          nameFirstMiddleLast: json['NameFirstMiddleLast'] as String?,
          person: json['Person'] as String?,
          lastName: json['LastName'] as String?,
          firstName: json['FirstName'] as String?,
          middleInitial: json['MiddleInitial'] as String?,
          jobTitle: json['JobTitle'] as String?,
          contactTitleId: json['ContactTitleId'] as String?,
          contactTitle: json['ContactTitle'] as String?,
          isPrimary: json['IsPrimary'] as bool?,
          activeDate: json['ActiveDate'] as String?,
          inactiveDate: json['InactiveDate'] as String?,
          authorized: json['Authorized'] as bool?,
          orderNotify: json['OrderNotify'] as bool?,
          officePhone: json['OfficePhone'] as String?,
          officeExtension: json['OfficeExtension'] as String?,
          fax: json['Fax'] as String?,
          faxExtension: json['FaxExtension'] as String?,
          email: json['Email'] as String?,
          directPhone: json['DirectPhone'] as String?,
          directExtension: json['DirectExtension'] as String?,
          pager: json['Pager'] as String?,
          pagerPin: json['PagerPin'] as String?,
          printable: json['Printable'] as bool?,
          mobilePhone: json['MobilePhone'] as String?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsCompanyContactCompanyContactToJson(
        WebApiModulesHomeControlsCompanyContactCompanyContact instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CompanyContactId', instance.companyContactId);
  writeNotNull('CompanyId', instance.companyId);
  writeNotNull('Company', instance.company);
  writeNotNull('CompanyType', instance.companyType);
  writeNotNull('CompanyTypeColor', instance.companyTypeColor);
  writeNotNull('ContactId', instance.contactId);
  writeNotNull('Salutation', instance.salutation);
  writeNotNull('NameFirstMiddleLast', instance.nameFirstMiddleLast);
  writeNotNull('Person', instance.person);
  writeNotNull('LastName', instance.lastName);
  writeNotNull('FirstName', instance.firstName);
  writeNotNull('MiddleInitial', instance.middleInitial);
  writeNotNull('JobTitle', instance.jobTitle);
  writeNotNull('ContactTitleId', instance.contactTitleId);
  writeNotNull('ContactTitle', instance.contactTitle);
  writeNotNull('IsPrimary', instance.isPrimary);
  writeNotNull('ActiveDate', instance.activeDate);
  writeNotNull('InactiveDate', instance.inactiveDate);
  writeNotNull('Authorized', instance.authorized);
  writeNotNull('OrderNotify', instance.orderNotify);
  writeNotNull('OfficePhone', instance.officePhone);
  writeNotNull('OfficeExtension', instance.officeExtension);
  writeNotNull('Fax', instance.fax);
  writeNotNull('FaxExtension', instance.faxExtension);
  writeNotNull('Email', instance.email);
  writeNotNull('DirectPhone', instance.directPhone);
  writeNotNull('DirectExtension', instance.directExtension);
  writeNotNull('Pager', instance.pager);
  writeNotNull('PagerPin', instance.pagerPin);
  writeNotNull('Printable', instance.printable);
  writeNotNull('MobilePhone', instance.mobilePhone);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOption
    _$WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOption(
          id: json['Id'] as int?,
          internalChar: json['InternalChar'] as String?,
          companyId: json['CompanyId'] as String?,
          locationId: json['LocationId'] as String?,
          location: json['Location'] as String?,
          taxOptionId: json['TaxOptionId'] as String?,
          taxOption: json['TaxOption'] as String?,
          taxCountry: json['TaxCountry'] as String?,
          taxRule: json['TaxRule'] as String?,
          rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
          rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
          rentalExempt: json['RentalExempt'] as bool?,
          rentalTaxDisplay: json['RentalTaxDisplay'] as String?,
          salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
          salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
          salesExempt: json['SalesExempt'] as bool?,
          salesTaxDisplay: json['SalesTaxDisplay'] as String?,
          laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
          laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
          laborExempt: json['LaborExempt'] as bool?,
          laborTaxDisplay: json['LaborTaxDisplay'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOptionToJson(
        WebApiModulesHomeControlsCompanyTaxOptionCompanyTaxOption instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Id', instance.id);
  writeNotNull('InternalChar', instance.internalChar);
  writeNotNull('CompanyId', instance.companyId);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('Location', instance.location);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('TaxCountry', instance.taxCountry);
  writeNotNull('TaxRule', instance.taxRule);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('RentalExempt', instance.rentalExempt);
  writeNotNull('RentalTaxDisplay', instance.rentalTaxDisplay);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('SalesExempt', instance.salesExempt);
  writeNotNull('SalesTaxDisplay', instance.salesTaxDisplay);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('LaborExempt', instance.laborExempt);
  writeNotNull('LaborTaxDisplay', instance.laborTaxDisplay);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResale
    _$WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResale(
          companyTaxResaleId: json['CompanyTaxResaleId'] as String?,
          companyId: json['CompanyId'] as String?,
          stateId: json['StateId'] as String?,
          stateCode: json['StateCode'] as String?,
          resaleNumber: json['ResaleNumber'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResaleToJson(
        WebApiModulesHomeControlsCompanyTaxResaleCompanyTaxResale instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CompanyTaxResaleId', instance.companyTaxResaleId);
  writeNotNull('CompanyId', instance.companyId);
  writeNotNull('StateId', instance.stateId);
  writeNotNull('StateCode', instance.stateCode);
  writeNotNull('ResaleNumber', instance.resaleNumber);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsContactNoteContactNote
    _$WebApiModulesHomeControlsContactNoteContactNoteFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContactNoteContactNote(
          contactNoteId: json['ContactNoteId'] as String?,
          contactId: json['ContactId'] as String?,
          companyId: json['CompanyId'] as String?,
          companyContactId: json['CompanyContactId'] as String?,
          noteDate: json['NoteDate'] as String?,
          notesById: json['NotesById'] as String?,
          notesBy: json['NotesBy'] as String?,
          description: json['Description'] as String?,
          notes: json['Notes'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsContactNoteContactNoteToJson(
    WebApiModulesHomeControlsContactNoteContactNote instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContactNoteId', instance.contactNoteId);
  writeNotNull('ContactId', instance.contactId);
  writeNotNull('CompanyId', instance.companyId);
  writeNotNull('CompanyContactId', instance.companyContactId);
  writeNotNull('NoteDate', instance.noteDate);
  writeNotNull('NotesById', instance.notesById);
  writeNotNull('NotesBy', instance.notesBy);
  writeNotNull('Description', instance.description);
  writeNotNull('Notes', instance.notes);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsContainerItemContainerItem
    _$WebApiModulesHomeControlsContainerItemContainerItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContainerItemContainerItem(
          itemId: json['ItemId'] as String?,
          containerItemId: json['ContainerItemId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          itemDescription: json['ItemDescription'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          availableFor: json['AvailableFor'] as String?,
          availableForDisplay: json['AvailableForDisplay'] as String?,
          unitValue: (json['UnitValue'] as num?)?.toDouble(),
          replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
          classification: json['Classification'] as String?,
          isContainer: json['IsContainer'] as bool?,
          containerId: json['ContainerId'] as String?,
          containerInventoryId: json['ContainerInventoryId'] as String?,
          containerICode: json['ContainerICode'] as String?,
          containerDescription: json['ContainerDescription'] as String?,
          containerPackingListBehavior:
              json['ContainerPackingListBehavior'] as String?,
          containerStatus: json['ContainerStatus'] as String?,
          containerStatusColor: json['ContainerStatusColor'] as String?,
          containerStatusDate: json['ContainerStatusDate'] as String?,
          fixedAsset: json['FixedAsset'] as bool?,
          rank: json['Rank'] as String?,
          statusType: json['StatusType'] as String?,
          statusDate: json['StatusDate'] as String?,
          inventoryStatus: json['InventoryStatus'] as String?,
          inventoryStatusId: json['InventoryStatusId'] as String?,
          color: json['Color'] as String?,
          textColor: json['TextColor'] as String?,
          barCode: json['BarCode'] as String?,
          barCodeForScanning: json['BarCodeForScanning'] as String?,
          serialNumber: json['SerialNumber'] as String?,
          rfId: json['RfId'] as String?,
          oldBarCode: json['OldBarCode'] as String?,
          oldSerialNumber: json['OldSerialNumber'] as String?,
          oldRfid: json['OldRfid'] as String?,
          manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
          manufactureDate: json['ManufactureDate'] as String?,
          trackedByCode: json['TrackedByCode'] as String?,
          availOwnershipSort: json['AvailOwnershipSort'] as int?,
          isNegativeInventory: json['IsNegativeInventory'] as bool?,
          inspectionNo: json['InspectionNo'] as String?,
          inspectionVendorId: json['InspectionVendorId'] as String?,
          inspectionVendor: json['InspectionVendor'] as String?,
          manufacturerModelNumber: json['ManufacturerModelNumber'] as String?,
          purchaseId: json['PurchaseId'] as String?,
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          spaceId: json['SpaceId'] as String?,
          buildingRoom: json['BuildingRoom'] as String?,
          itemNotes: json['ItemNotes'] as String?,
          physicalId: json['PhysicalId'] as String?,
          physicalItemId: json['PhysicalItemId'] as int?,
          physicalDate: json['PhysicalDate'] as String?,
          physicalBy: json['PhysicalBy'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          dealId: json['DealId'] as String?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          currentLocation: json['CurrentLocation'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          inventoryTypeOrderBy: json['InventoryTypeOrderBy'] as int?,
          categoryId: json['CategoryId'] as String?,
          category: json['Category'] as String?,
          categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
          subCategoryId: json['SubCategoryId'] as String?,
          subCategory: json['SubCategory'] as String?,
          subCategoryOrderBy: (json['SubCategoryOrderBy'] as num?)?.toDouble(),
          ownership: json['Ownership'] as String?,
          purchaseVendorId: json['PurchaseVendorId'] as String?,
          purchaseVendor: json['PurchaseVendor'] as String?,
          outsidePurchaseOrderNumber:
              json['OutsidePurchaseOrderNumber'] as String?,
          purchasePoId: json['PurchasePoId'] as String?,
          purchaseDate: json['PurchaseDate'] as String?,
          receiveDate: json['ReceiveDate'] as String?,
          receiveContractDate: json['ReceiveContractDate'] as String?,
          purchasePoNumber: json['PurchasePoNumber'] as String?,
          purchaseCost: (json['PurchaseCost'] as num?)?.toDouble(),
          invoiceCost: (json['InvoiceCost'] as num?)?.toDouble(),
          purchaseInvoiceNumber: json['PurchaseInvoiceNumber'] as String?,
          purchaseInvoiceDate: json['PurchaseInvoiceDate'] as String?,
          purchaseCurrencyId: json['PurchaseCurrencyId'] as String?,
          purchaseCurrencyCode: json['PurchaseCurrencyCode'] as String?,
          purchaseCurrency: json['PurchaseCurrency'] as String?,
          purchaseCurrencySymbol: json['PurchaseCurrencySymbol'] as String?,
          warehouseCurrencyId: json['WarehouseCurrencyId'] as String?,
          warehouseCurrencyCode: json['WarehouseCurrencyCode'] as String?,
          warehouseCurrency: json['WarehouseCurrency'] as String?,
          warehouseCurrencySymbol: json['WarehouseCurrencySymbol'] as String?,
          purchaseCurrencyExchangeRate:
              (json['PurchaseCurrencyExchangeRate'] as num?)?.toDouble(),
          unitCost: (json['UnitCost'] as num?)?.toDouble(),
          unitCostWithTax: (json['UnitCostWithTax'] as num?)?.toDouble(),
          unitCostCurrencyConverted:
              (json['UnitCostCurrencyConverted'] as num?)?.toDouble(),
          unitCostWithTaxCurrencyConverted:
              (json['UnitCostWithTaxCurrencyConverted'] as num?)?.toDouble(),
          originalEquipmentCost:
              (json['OriginalEquipmentCost'] as num?)?.toDouble(),
          depreciation: (json['Depreciation'] as num?)?.toDouble(),
          bookValue: (json['BookValue'] as num?)?.toDouble(),
          salvageValue: (json['SalvageValue'] as num?)?.toDouble(),
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
          consignorPercent: json['ConsignorPercent'] as int?,
          manufacturerId: json['ManufacturerId'] as String?,
          manufacturer: json['Manufacturer'] as String?,
          originalShowId: json['OriginalShowId'] as String?,
          originalShow: json['OriginalShow'] as String?,
          conditionId: json['ConditionId'] as String?,
          condition: json['Condition'] as String?,
          surfaceId: json['SurfaceId'] as String?,
          surface: json['Surface'] as String?,
          wallTypeId: json['WallTypeId'] as String?,
          wallType: json['WallType'] as String?,
          openingId: json['OpeningId'] as String?,
          opening: json['Opening'] as String?,
          responsiblePersonId: json['ResponsiblePersonId'] as String?,
          responsiblePerson: json['ResponsiblePerson'] as String?,
          buyerId: json['BuyerId'] as String?,
          buyer: json['Buyer'] as String?,
          receiptNumber: json['ReceiptNumber'] as String?,
          depreciationMonths: json['DepreciationMonths'] as int?,
          monthsDepreciated: json['MonthsDepreciated'] as int?,
          remainingMonthsOfDepreciation:
              json['RemainingMonthsOfDepreciation'] as int?,
          repairId: json['RepairId'] as String?,
          repairNumber: json['RepairNumber'] as String?,
          qcRequired: json['QcRequired'] as bool?,
          widthFt: json['WidthFt'] as int?,
          widthIn: json['WidthIn'] as int?,
          heightFt: json['HeightFt'] as int?,
          heightIn: json['HeightIn'] as int?,
          lengthFt: json['LengthFt'] as int?,
          lengthIn: json['LengthIn'] as int?,
          currentMeter: (json['CurrentMeter'] as num?)?.toDouble(),
          trackAssetUsage: json['TrackAssetUsage'] as bool?,
          trackLampUsage: json['TrackLampUsage'] as bool?,
          trackStrikes: json['TrackStrikes'] as bool?,
          trackCandles: json['TrackCandles'] as bool?,
          assetHours: json['AssetHours'] as int?,
          lampCount: json['LampCount'] as int?,
          lampHours1: json['LampHours1'] as int?,
          lampHours2: json['LampHours2'] as int?,
          lampHours3: json['LampHours3'] as int?,
          lampHours4: json['LampHours4'] as int?,
          strikes: json['Strikes'] as int?,
          footCandles: json['FootCandles'] as int?,
          minimumFootCandles: json['MinimumFootCandles'] as int?,
          softwareVersion: json['SoftwareVersion'] as String?,
          softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
          pattern: json['Pattern'] as String?,
          gender: json['Gender'] as String?,
          label: json['Label'] as String?,
          material: json['Material'] as String?,
          period: json['Period'] as String?,
          cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
          wardrobeSize: json['WardrobeSize'] as String?,
          wardrobePieceCount: json['WardrobePieceCount'] as int?,
          inventoryTypeIsProps: json['InventoryTypeIsProps'] as bool?,
          inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
          orderLocationId: json['OrderLocationId'] as String?,
          containerNumber: json['ContainerNumber'] as String?,
          isWardrobe: json['IsWardrobe'] as bool?,
          isProps: json['IsProps'] as bool?,
          dailyRate: (json['DailyRate'] as num?)?.toDouble(),
          weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
          monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
          location: json['Location'] as String?,
          retiredReason: json['RetiredReason'] as String?,
          warrantyExpiration: json['WarrantyExpiration'] as String?,
          warrantyPeriod: json['WarrantyPeriod'] as int?,
          countryOfOriginId: json['CountryOfOriginId'] as String?,
          countryOfOrigin: json['CountryOfOrigin'] as String?,
          shelfLifeExpirationDate: json['ShelfLifeExpirationDate'] as String?,
          currentDealId: json['CurrentDealId'] as String?,
          currentDeal: json['CurrentDeal'] as String?,
          currentCustomerId: json['CurrentCustomerId'] as String?,
          currentCustomer: json['CurrentCustomer'] as String?,
          currentOrderId: json['CurrentOrderId'] as String?,
          currentOrderNumber: json['CurrentOrderNumber'] as String?,
          currentOrderType: json['CurrentOrderType'] as String?,
          currentOrderDescription: json['CurrentOrderDescription'] as String?,
          currentOrderDate: json['CurrentOrderDate'] as String?,
          currentOrderPickDate: json['CurrentOrderPickDate'] as String?,
          currentOrderFromDate: json['CurrentOrderFromDate'] as String?,
          currentOrderToDate: json['CurrentOrderToDate'] as String?,
          currentOrderAgent: json['CurrentOrderAgent'] as String?,
          lotNumber: json['LotNumber'] as String?,
          lastOrderId: json['LastOrderId'] as String?,
          lastOrderNumber: json['LastOrderNumber'] as String?,
          lastOrderDescription: json['LastOrderDescription'] as String?,
          lastDealId: json['LastDealId'] as String?,
          lastDeal: json['LastDeal'] as String?,
          lastDealNumber: json['LastDealNumber'] as String?,
          lastOutContractId: json['LastOutContractId'] as String?,
          lastOutContractNumber: json['LastOutContractNumber'] as String?,
          lastOutContractDate: json['LastOutContractDate'] as String?,
          lastOutUserId: json['LastOutUserId'] as String?,
          lastOutUserName: json['LastOutUserName'] as String?,
          lastInContractId: json['LastInContractId'] as String?,
          lastInContractNumber: json['LastInContractNumber'] as String?,
          lastInContractDate: json['LastInContractDate'] as String?,
          lastInUserId: json['LastInUserId'] as String?,
          lastInUserName: json['LastInUserName'] as String?,
          depreciationStartDate: json['DepreciationStartDate'] as String?,
          depreciationWarehouseId: json['DepreciationWarehouseId'] as String?,
          depreciationWarehouse: json['DepreciationWarehouse'] as String?,
          depreciationWarehouseCode:
              json['DepreciationWarehouseCode'] as String?,
          inactive: json['Inactive'] as bool?,
          inputDate: json['InputDate'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          outOrderId: json['OutOrderId'] as String?,
          originalWarehouseId: json['OriginalWarehouseId'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemContainerItemToJson(
        WebApiModulesHomeControlsContainerItemContainerItem instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ItemId', instance.itemId);
  writeNotNull('ContainerItemId', instance.containerItemId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('ItemDescription', instance.itemDescription);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('AvailableForDisplay', instance.availableForDisplay);
  writeNotNull('UnitValue', instance.unitValue);
  writeNotNull('ReplacementCost', instance.replacementCost);
  writeNotNull('Classification', instance.classification);
  writeNotNull('IsContainer', instance.isContainer);
  writeNotNull('ContainerId', instance.containerId);
  writeNotNull('ContainerInventoryId', instance.containerInventoryId);
  writeNotNull('ContainerICode', instance.containerICode);
  writeNotNull('ContainerDescription', instance.containerDescription);
  writeNotNull(
      'ContainerPackingListBehavior', instance.containerPackingListBehavior);
  writeNotNull('ContainerStatus', instance.containerStatus);
  writeNotNull('ContainerStatusColor', instance.containerStatusColor);
  writeNotNull('ContainerStatusDate', instance.containerStatusDate);
  writeNotNull('FixedAsset', instance.fixedAsset);
  writeNotNull('Rank', instance.rank);
  writeNotNull('StatusType', instance.statusType);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('InventoryStatus', instance.inventoryStatus);
  writeNotNull('InventoryStatusId', instance.inventoryStatusId);
  writeNotNull('Color', instance.color);
  writeNotNull('TextColor', instance.textColor);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('BarCodeForScanning', instance.barCodeForScanning);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('RfId', instance.rfId);
  writeNotNull('OldBarCode', instance.oldBarCode);
  writeNotNull('OldSerialNumber', instance.oldSerialNumber);
  writeNotNull('OldRfid', instance.oldRfid);
  writeNotNull('ManufacturerPartNumber', instance.manufacturerPartNumber);
  writeNotNull('ManufactureDate', instance.manufactureDate);
  writeNotNull('TrackedByCode', instance.trackedByCode);
  writeNotNull('AvailOwnershipSort', instance.availOwnershipSort);
  writeNotNull('IsNegativeInventory', instance.isNegativeInventory);
  writeNotNull('InspectionNo', instance.inspectionNo);
  writeNotNull('InspectionVendorId', instance.inspectionVendorId);
  writeNotNull('InspectionVendor', instance.inspectionVendor);
  writeNotNull('ManufacturerModelNumber', instance.manufacturerModelNumber);
  writeNotNull('PurchaseId', instance.purchaseId);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('SpaceId', instance.spaceId);
  writeNotNull('BuildingRoom', instance.buildingRoom);
  writeNotNull('ItemNotes', instance.itemNotes);
  writeNotNull('PhysicalId', instance.physicalId);
  writeNotNull('PhysicalItemId', instance.physicalItemId);
  writeNotNull('PhysicalDate', instance.physicalDate);
  writeNotNull('PhysicalBy', instance.physicalBy);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('CurrentLocation', instance.currentLocation);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('InventoryTypeOrderBy', instance.inventoryTypeOrderBy);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('CategoryOrderBy', instance.categoryOrderBy);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('SubCategory', instance.subCategory);
  writeNotNull('SubCategoryOrderBy', instance.subCategoryOrderBy);
  writeNotNull('Ownership', instance.ownership);
  writeNotNull('PurchaseVendorId', instance.purchaseVendorId);
  writeNotNull('PurchaseVendor', instance.purchaseVendor);
  writeNotNull(
      'OutsidePurchaseOrderNumber', instance.outsidePurchaseOrderNumber);
  writeNotNull('PurchasePoId', instance.purchasePoId);
  writeNotNull('PurchaseDate', instance.purchaseDate);
  writeNotNull('ReceiveDate', instance.receiveDate);
  writeNotNull('ReceiveContractDate', instance.receiveContractDate);
  writeNotNull('PurchasePoNumber', instance.purchasePoNumber);
  writeNotNull('PurchaseCost', instance.purchaseCost);
  writeNotNull('InvoiceCost', instance.invoiceCost);
  writeNotNull('PurchaseInvoiceNumber', instance.purchaseInvoiceNumber);
  writeNotNull('PurchaseInvoiceDate', instance.purchaseInvoiceDate);
  writeNotNull('PurchaseCurrencyId', instance.purchaseCurrencyId);
  writeNotNull('PurchaseCurrencyCode', instance.purchaseCurrencyCode);
  writeNotNull('PurchaseCurrency', instance.purchaseCurrency);
  writeNotNull('PurchaseCurrencySymbol', instance.purchaseCurrencySymbol);
  writeNotNull('WarehouseCurrencyId', instance.warehouseCurrencyId);
  writeNotNull('WarehouseCurrencyCode', instance.warehouseCurrencyCode);
  writeNotNull('WarehouseCurrency', instance.warehouseCurrency);
  writeNotNull('WarehouseCurrencySymbol', instance.warehouseCurrencySymbol);
  writeNotNull(
      'PurchaseCurrencyExchangeRate', instance.purchaseCurrencyExchangeRate);
  writeNotNull('UnitCost', instance.unitCost);
  writeNotNull('UnitCostWithTax', instance.unitCostWithTax);
  writeNotNull('UnitCostCurrencyConverted', instance.unitCostCurrencyConverted);
  writeNotNull('UnitCostWithTaxCurrencyConverted',
      instance.unitCostWithTaxCurrencyConverted);
  writeNotNull('OriginalEquipmentCost', instance.originalEquipmentCost);
  writeNotNull('Depreciation', instance.depreciation);
  writeNotNull('BookValue', instance.bookValue);
  writeNotNull('SalvageValue', instance.salvageValue);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('ConsignorAgreementNumber', instance.consignorAgreementNumber);
  writeNotNull('ConsignorPercent', instance.consignorPercent);
  writeNotNull('ManufacturerId', instance.manufacturerId);
  writeNotNull('Manufacturer', instance.manufacturer);
  writeNotNull('OriginalShowId', instance.originalShowId);
  writeNotNull('OriginalShow', instance.originalShow);
  writeNotNull('ConditionId', instance.conditionId);
  writeNotNull('Condition', instance.condition);
  writeNotNull('SurfaceId', instance.surfaceId);
  writeNotNull('Surface', instance.surface);
  writeNotNull('WallTypeId', instance.wallTypeId);
  writeNotNull('WallType', instance.wallType);
  writeNotNull('OpeningId', instance.openingId);
  writeNotNull('Opening', instance.opening);
  writeNotNull('ResponsiblePersonId', instance.responsiblePersonId);
  writeNotNull('ResponsiblePerson', instance.responsiblePerson);
  writeNotNull('BuyerId', instance.buyerId);
  writeNotNull('Buyer', instance.buyer);
  writeNotNull('ReceiptNumber', instance.receiptNumber);
  writeNotNull('DepreciationMonths', instance.depreciationMonths);
  writeNotNull('MonthsDepreciated', instance.monthsDepreciated);
  writeNotNull(
      'RemainingMonthsOfDepreciation', instance.remainingMonthsOfDepreciation);
  writeNotNull('RepairId', instance.repairId);
  writeNotNull('RepairNumber', instance.repairNumber);
  writeNotNull('QcRequired', instance.qcRequired);
  writeNotNull('WidthFt', instance.widthFt);
  writeNotNull('WidthIn', instance.widthIn);
  writeNotNull('HeightFt', instance.heightFt);
  writeNotNull('HeightIn', instance.heightIn);
  writeNotNull('LengthFt', instance.lengthFt);
  writeNotNull('LengthIn', instance.lengthIn);
  writeNotNull('CurrentMeter', instance.currentMeter);
  writeNotNull('TrackAssetUsage', instance.trackAssetUsage);
  writeNotNull('TrackLampUsage', instance.trackLampUsage);
  writeNotNull('TrackStrikes', instance.trackStrikes);
  writeNotNull('TrackCandles', instance.trackCandles);
  writeNotNull('AssetHours', instance.assetHours);
  writeNotNull('LampCount', instance.lampCount);
  writeNotNull('LampHours1', instance.lampHours1);
  writeNotNull('LampHours2', instance.lampHours2);
  writeNotNull('LampHours3', instance.lampHours3);
  writeNotNull('LampHours4', instance.lampHours4);
  writeNotNull('Strikes', instance.strikes);
  writeNotNull('FootCandles', instance.footCandles);
  writeNotNull('MinimumFootCandles', instance.minimumFootCandles);
  writeNotNull('SoftwareVersion', instance.softwareVersion);
  writeNotNull('SoftwareEffectiveDate', instance.softwareEffectiveDate);
  writeNotNull('Pattern', instance.pattern);
  writeNotNull('Gender', instance.gender);
  writeNotNull('Label', instance.label);
  writeNotNull('Material', instance.material);
  writeNotNull('Period', instance.period);
  writeNotNull('CleaningFeeAmount', instance.cleaningFeeAmount);
  writeNotNull('WardrobeSize', instance.wardrobeSize);
  writeNotNull('WardrobePieceCount', instance.wardrobePieceCount);
  writeNotNull('InventoryTypeIsProps', instance.inventoryTypeIsProps);
  writeNotNull('InventoryTypeIsWardrobe', instance.inventoryTypeIsWardrobe);
  writeNotNull('OrderLocationId', instance.orderLocationId);
  writeNotNull('ContainerNumber', instance.containerNumber);
  writeNotNull('IsWardrobe', instance.isWardrobe);
  writeNotNull('IsProps', instance.isProps);
  writeNotNull('DailyRate', instance.dailyRate);
  writeNotNull('WeeklyRate', instance.weeklyRate);
  writeNotNull('MonthlyRate', instance.monthlyRate);
  writeNotNull('Location', instance.location);
  writeNotNull('RetiredReason', instance.retiredReason);
  writeNotNull('WarrantyExpiration', instance.warrantyExpiration);
  writeNotNull('WarrantyPeriod', instance.warrantyPeriod);
  writeNotNull('CountryOfOriginId', instance.countryOfOriginId);
  writeNotNull('CountryOfOrigin', instance.countryOfOrigin);
  writeNotNull('ShelfLifeExpirationDate', instance.shelfLifeExpirationDate);
  writeNotNull('CurrentDealId', instance.currentDealId);
  writeNotNull('CurrentDeal', instance.currentDeal);
  writeNotNull('CurrentCustomerId', instance.currentCustomerId);
  writeNotNull('CurrentCustomer', instance.currentCustomer);
  writeNotNull('CurrentOrderId', instance.currentOrderId);
  writeNotNull('CurrentOrderNumber', instance.currentOrderNumber);
  writeNotNull('CurrentOrderType', instance.currentOrderType);
  writeNotNull('CurrentOrderDescription', instance.currentOrderDescription);
  writeNotNull('CurrentOrderDate', instance.currentOrderDate);
  writeNotNull('CurrentOrderPickDate', instance.currentOrderPickDate);
  writeNotNull('CurrentOrderFromDate', instance.currentOrderFromDate);
  writeNotNull('CurrentOrderToDate', instance.currentOrderToDate);
  writeNotNull('CurrentOrderAgent', instance.currentOrderAgent);
  writeNotNull('LotNumber', instance.lotNumber);
  writeNotNull('LastOrderId', instance.lastOrderId);
  writeNotNull('LastOrderNumber', instance.lastOrderNumber);
  writeNotNull('LastOrderDescription', instance.lastOrderDescription);
  writeNotNull('LastDealId', instance.lastDealId);
  writeNotNull('LastDeal', instance.lastDeal);
  writeNotNull('LastDealNumber', instance.lastDealNumber);
  writeNotNull('LastOutContractId', instance.lastOutContractId);
  writeNotNull('LastOutContractNumber', instance.lastOutContractNumber);
  writeNotNull('LastOutContractDate', instance.lastOutContractDate);
  writeNotNull('LastOutUserId', instance.lastOutUserId);
  writeNotNull('LastOutUserName', instance.lastOutUserName);
  writeNotNull('LastInContractId', instance.lastInContractId);
  writeNotNull('LastInContractNumber', instance.lastInContractNumber);
  writeNotNull('LastInContractDate', instance.lastInContractDate);
  writeNotNull('LastInUserId', instance.lastInUserId);
  writeNotNull('LastInUserName', instance.lastInUserName);
  writeNotNull('DepreciationStartDate', instance.depreciationStartDate);
  writeNotNull('DepreciationWarehouseId', instance.depreciationWarehouseId);
  writeNotNull('DepreciationWarehouse', instance.depreciationWarehouse);
  writeNotNull('DepreciationWarehouseCode', instance.depreciationWarehouseCode);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('OutOrderId', instance.outOrderId);
  writeNotNull('OriginalWarehouseId', instance.originalWarehouseId);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsContainerItemEmptyContainerItemResponse
    _$WebApiModulesHomeControlsContainerItemEmptyContainerItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContainerItemEmptyContainerItemResponse(
          inContractId: json['InContractId'] as String?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemEmptyContainerItemResponseToJson(
        WebApiModulesHomeControlsContainerItemEmptyContainerItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InContractId', instance.inContractId);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsContainerItemEmptyContainerRequest
    _$WebApiModulesHomeControlsContainerItemEmptyContainerRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContainerItemEmptyContainerRequest(
          itemId: json['ItemId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          deleteAll: json['DeleteAll'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemEmptyContainerRequestToJson(
        WebApiModulesHomeControlsContainerItemEmptyContainerRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ItemId', instance.itemId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('DeleteAll', instance.deleteAll);
  return val;
}

WebApiModulesHomeControlsContainerItemInstantiateContainerItemResponse
    _$WebApiModulesHomeControlsContainerItemInstantiateContainerItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContainerItemInstantiateContainerItemResponse(
          containerItemId: json['ContainerItemId'] as String?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemInstantiateContainerItemResponseToJson(
        WebApiModulesHomeControlsContainerItemInstantiateContainerItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContainerItemId', instance.containerItemId);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsContainerItemInstantiateContainerRequest
    _$WebApiModulesHomeControlsContainerItemInstantiateContainerRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContainerItemInstantiateContainerRequest(
          containerId: json['ContainerId'] as String?,
          itemId: json['ItemId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemInstantiateContainerRequestToJson(
        WebApiModulesHomeControlsContainerItemInstantiateContainerRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContainerId', instance.containerId);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesHomeControlsContainerItemRemoveFromContainerRequest
    _$WebApiModulesHomeControlsContainerItemRemoveFromContainerRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContainerItemRemoveFromContainerRequest(
          containerItemId: json['ContainerItemId'] as String?,
          itemId: json['ItemId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemRemoveFromContainerRequestToJson(
        WebApiModulesHomeControlsContainerItemRemoveFromContainerRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContainerItemId', instance.containerItemId);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesHomeControlsContainerItemRemoveFromContainerResponse
    _$WebApiModulesHomeControlsContainerItemRemoveFromContainerResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContainerItemRemoveFromContainerResponse(
          outputContractId: json['OutputContractId'] as String?,
          quantityRemoved: (json['QuantityRemoved'] as num?)?.toDouble(),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerItemRemoveFromContainerResponseToJson(
        WebApiModulesHomeControlsContainerItemRemoveFromContainerResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OutputContractId', instance.outputContractId);
  writeNotNull('QuantityRemoved', instance.quantityRemoved);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsContainerWarehouseContainerWarehouse
    _$WebApiModulesHomeControlsContainerWarehouseContainerWarehouseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContainerWarehouseContainerWarehouse(
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          dailyRate: (json['DailyRate'] as num?)?.toDouble(),
          weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
          monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
          quantity: json['Quantity'] as int?,
          quantityReady: json['QuantityReady'] as int?,
          quantityIncomplete: json['QuantityIncomplete'] as int?,
          warehouseOrderBy: json['WarehouseOrderBy'] as int?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContainerWarehouseContainerWarehouseToJson(
        WebApiModulesHomeControlsContainerWarehouseContainerWarehouse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('DailyRate', instance.dailyRate);
  writeNotNull('WeeklyRate', instance.weeklyRate);
  writeNotNull('MonthlyRate', instance.monthlyRate);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('QuantityReady', instance.quantityReady);
  writeNotNull('QuantityIncomplete', instance.quantityIncomplete);
  writeNotNull('WarehouseOrderBy', instance.warehouseOrderBy);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsContractItemDetailContractItem
    _$WebApiModulesHomeControlsContractItemDetailContractItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContractItemDetailContractItem(
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          vendorId: json['VendorId'] as String?,
          consignorId: json['ConsignorId'] as String?,
          barCode: json['BarCode'] as String?,
          quantity: json['Quantity'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContractItemDetailContractItemToJson(
        WebApiModulesHomeControlsContractItemDetailContractItem instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesHomeControlsContractItemDetailContractItemDetail
    _$WebApiModulesHomeControlsContractItemDetailContractItemDetailFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContractItemDetailContractItemDetail(
          contractId: json['ContractId'] as String?,
          contractNumber: json['ContractNumber'] as String?,
          contractType: json['ContractType'] as String?,
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          iCode: json['ICode'] as String?,
          iCodeDisplay: json['ICodeDisplay'] as String?,
          iCodeColor: json['ICodeColor'] as String?,
          description: json['Description'] as String?,
          descriptionColor: json['DescriptionColor'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          barCode: json['BarCode'] as String?,
          itemId: json['ItemId'] as String?,
          manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          categoryId: json['CategoryId'] as String?,
          vendorId: json['VendorId'] as String?,
          vendor: json['Vendor'] as String?,
          vendorColor: json['VendorColor'] as String?,
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          primaryOrderItemId: json['PrimaryOrderItemId'] as String?,
          itemClass: json['ItemClass'] as String?,
          itemOrder: json['ItemOrder'] as String?,
          orderBy: json['OrderBy'] as String?,
          notes: json['Notes'] as String?,
          orderType: json['OrderType'] as String?,
          recType: json['RecType'] as String?,
          recTypeDisplay: json['RecTypeDisplay'] as String?,
          optionColor: json['OptionColor'] as String?,
          usersId: json['UsersId'] as String?,
          userName: json['UserName'] as String?,
          transactionDateTime: json['TransactionDateTime'] as String?,
          parentId: json['ParentId'] as String?,
          accessoryRatio: (json['AccessoryRatio'] as num?)?.toDouble(),
          nestedOrderItemId: json['NestedOrderItemId'] as String?,
          containerItemId: json['ContainerItemId'] as String?,
          containerBarCode: json['ContainerBarCode'] as String?,
          isConsignment: json['IsConsignment'] as bool?,
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
          isVoid: json['IsVoid'] as bool?,
          nestingLevel: json['NestingLevel'] as int?,
          vendorConsignorId: json['VendorConsignorId'] as String?,
          vendorConsignor: json['VendorConsignor'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContractItemDetailContractItemDetailToJson(
        WebApiModulesHomeControlsContractItemDetailContractItemDetail
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('ContractNumber', instance.contractNumber);
  writeNotNull('ContractType', instance.contractType);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeDisplay', instance.iCodeDisplay);
  writeNotNull('ICodeColor', instance.iCodeColor);
  writeNotNull('Description', instance.description);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('ManufacturerPartNumber', instance.manufacturerPartNumber);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('VendorColor', instance.vendorColor);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('PrimaryOrderItemId', instance.primaryOrderItemId);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('OrderBy', instance.orderBy);
  writeNotNull('Notes', instance.notes);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull('RecType', instance.recType);
  writeNotNull('RecTypeDisplay', instance.recTypeDisplay);
  writeNotNull('OptionColor', instance.optionColor);
  writeNotNull('UsersId', instance.usersId);
  writeNotNull('UserName', instance.userName);
  writeNotNull('TransactionDateTime', instance.transactionDateTime);
  writeNotNull('ParentId', instance.parentId);
  writeNotNull('AccessoryRatio', instance.accessoryRatio);
  writeNotNull('NestedOrderItemId', instance.nestedOrderItemId);
  writeNotNull('ContainerItemId', instance.containerItemId);
  writeNotNull('ContainerBarCode', instance.containerBarCode);
  writeNotNull('IsConsignment', instance.isConsignment);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('ConsignorAgreementNumber', instance.consignorAgreementNumber);
  writeNotNull('IsVoid', instance.isVoid);
  writeNotNull('NestingLevel', instance.nestingLevel);
  writeNotNull('VendorConsignorId', instance.vendorConsignorId);
  writeNotNull('VendorConsignor', instance.vendorConsignor);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsContractItemDetailVoidItemsRequest
    _$WebApiModulesHomeControlsContractItemDetailVoidItemsRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContractItemDetailVoidItemsRequest(
          contractId: json['ContractId'] as String?,
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsContractItemDetailContractItem
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          reason: json['Reason'] as String?,
          returnToInventory: json['ReturnToInventory'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContractItemDetailVoidItemsRequestToJson(
        WebApiModulesHomeControlsContractItemDetailVoidItemsRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('Reason', instance.reason);
  writeNotNull('ReturnToInventory', instance.returnToInventory);
  return val;
}

WebApiModulesHomeControlsContractItemDetailVoidItemsResponse
    _$WebApiModulesHomeControlsContractItemDetailVoidItemsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsContractItemDetailVoidItemsResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsContractItemDetailVoidItemsResponseToJson(
        WebApiModulesHomeControlsContractItemDetailVoidItemsResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsCustomerNoteCustomerNote
    _$WebApiModulesHomeControlsCustomerNoteCustomerNoteFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsCustomerNoteCustomerNote(
          customerNoteId: json['CustomerNoteId'] as String?,
          customerId: json['CustomerId'] as String?,
          noteDate: json['NoteDate'] as String?,
          notesById: json['NotesById'] as String?,
          notesBy: json['NotesBy'] as String?,
          description: json['Description'] as String?,
          notes: json['Notes'] as String?,
          notify: json['Notify'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsCustomerNoteCustomerNoteToJson(
    WebApiModulesHomeControlsCustomerNoteCustomerNote instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('CustomerNoteId', instance.customerNoteId);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('NoteDate', instance.noteDate);
  writeNotNull('NotesById', instance.notesById);
  writeNotNull('NotesBy', instance.notesBy);
  writeNotNull('Description', instance.description);
  writeNotNull('Notes', instance.notes);
  writeNotNull('Notify', instance.notify);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsDealNoteDealNote
    _$WebApiModulesHomeControlsDealNoteDealNoteFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsDealNoteDealNote(
          dealNoteId: json['DealNoteId'] as String?,
          dealId: json['DealId'] as String?,
          noteDate: json['NoteDate'] as String?,
          notesById: json['NotesById'] as String?,
          notesBy: json['NotesBy'] as String?,
          description: json['Description'] as String?,
          notes: json['Notes'] as String?,
          notify: json['Notify'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsDealNoteDealNoteToJson(
    WebApiModulesHomeControlsDealNoteDealNote instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DealNoteId', instance.dealNoteId);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('NoteDate', instance.noteDate);
  writeNotNull('NotesById', instance.notesById);
  writeNotNull('NotesBy', instance.notesBy);
  writeNotNull('Description', instance.description);
  writeNotNull('Notes', instance.notes);
  writeNotNull('Notify', instance.notify);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsDealOrderDealOrderRecordOrderOnHoldResponse
    _$WebApiModulesHomeControlsDealOrderDealOrderRecordOrderOnHoldResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsDealOrderDealOrderRecordOrderOnHoldResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          order: json['order'] == null
              ? null
              : WebApiModulesAgentOrderOrder.fromJson(
                  json['order'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsDealOrderDealOrderRecordOrderOnHoldResponseToJson(
        WebApiModulesHomeControlsDealOrderDealOrderRecordOrderOnHoldResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('order', instance.order?.toJson());
  return val;
}

WebApiModulesHomeControlsDealShipperDealShipper
    _$WebApiModulesHomeControlsDealShipperDealShipperFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsDealShipperDealShipper(
          dealShipperId: json['DealShipperId'] as String?,
          dealId: json['DealId'] as String?,
          vendorId: json['VendorId'] as String?,
          carrierId: json['CarrierId'] as String?,
          carrier: json['Carrier'] as String?,
          shipperAcct: json['ShipperAcct'] as String?,
          isPrimary: json['IsPrimary'] as bool?,
          shipViaId: json['ShipViaId'] as String?,
          shipVia: json['ShipVia'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsDealShipperDealShipperToJson(
    WebApiModulesHomeControlsDealShipperDealShipper instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DealShipperId', instance.dealShipperId);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('CarrierId', instance.carrierId);
  writeNotNull('Carrier', instance.carrier);
  writeNotNull('ShipperAcct', instance.shipperAcct);
  writeNotNull('IsPrimary', instance.isPrimary);
  writeNotNull('ShipViaId', instance.shipViaId);
  writeNotNull('ShipVia', instance.shipVia);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsDeliveryDelivery
    _$WebApiModulesHomeControlsDeliveryDeliveryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsDeliveryDelivery(
          deliveryId: json['DeliveryId'] as String?,
          orderId: json['OrderId'] as String?,
          deliveryType: json['DeliveryType'] as String?,
          requiredDate: json['RequiredDate'] as String?,
          requiredTime: json['RequiredTime'] as String?,
          targetShipDate: json['TargetShipDate'] as String?,
          targetShipTime: json['TargetShipTime'] as String?,
          direction: json['Direction'] as String?,
          addressType: json['AddressType'] as String?,
          fromLocation: json['FromLocation'] as String?,
          fromContact: json['FromContact'] as String?,
          fromContactPhone: json['FromContactPhone'] as String?,
          fromAlternateContact: json['FromAlternateContact'] as String?,
          fromAlternateContactPhone:
              json['FromAlternateContactPhone'] as String?,
          fromAttention: json['FromAttention'] as String?,
          fromAddress1: json['FromAddress1'] as String?,
          fromAdd2ress: json['FromAdd2ress'] as String?,
          fromCity: json['FromCity'] as String?,
          fromState: json['FromState'] as String?,
          fromZipCode: json['FromZipCode'] as String?,
          fromCountry: json['FromCountry'] as String?,
          fromCountryId: json['FromCountryId'] as String?,
          fromCrossStreets: json['FromCrossStreets'] as String?,
          toLocation: json['ToLocation'] as String?,
          toContact: json['ToContact'] as String?,
          toContactPhone: json['ToContactPhone'] as String?,
          toAlternateContact: json['ToAlternateContact'] as String?,
          toAlternateContactPhone: json['ToAlternateContactPhone'] as String?,
          toAttention: json['ToAttention'] as String?,
          toAddress1: json['ToAddress1'] as String?,
          toAddress2: json['ToAddress2'] as String?,
          toCity: json['ToCity'] as String?,
          toState: json['ToState'] as String?,
          toZipCode: json['ToZipCode'] as String?,
          toCountryId: json['ToCountryId'] as String?,
          toCountry: json['ToCountry'] as String?,
          toContactFax: json['ToContactFax'] as String?,
          toCrossStreets: json['ToCrossStreets'] as String?,
          deliveryNotes: json['DeliveryNotes'] as String?,
          carrierId: json['CarrierId'] as String?,
          carrier: json['Carrier'] as String?,
          carrierAccount: json['CarrierAccount'] as String?,
          shipViaId: json['ShipViaId'] as String?,
          shipVia: json['ShipVia'] as String?,
          invoiceId: json['InvoiceId'] as String?,
          vendorInvoiceId: json['VendorInvoiceId'] as String?,
          estimatedFreight: (json['EstimatedFreight'] as num?)?.toDouble(),
          freightInvoiceAmount:
              (json['FreightInvoiceAmount'] as num?)?.toDouble(),
          chargeType: json['ChargeType'] as String?,
          freightTrackingNumber: json['FreightTrackingNumber'] as String?,
          dropShip: json['DropShip'] as bool?,
          packageCode: json['PackageCode'] as String?,
          billPoFreightOnOrder: json['BillPoFreightOnOrder'] as bool?,
          onlineOrderNumber: json['OnlineOrderNumber'] as String?,
          onlineOrderStatus: json['OnlineOrderStatus'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsDeliveryDeliveryToJson(
    WebApiModulesHomeControlsDeliveryDelivery instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DeliveryId', instance.deliveryId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('DeliveryType', instance.deliveryType);
  writeNotNull('RequiredDate', instance.requiredDate);
  writeNotNull('RequiredTime', instance.requiredTime);
  writeNotNull('TargetShipDate', instance.targetShipDate);
  writeNotNull('TargetShipTime', instance.targetShipTime);
  writeNotNull('Direction', instance.direction);
  writeNotNull('AddressType', instance.addressType);
  writeNotNull('FromLocation', instance.fromLocation);
  writeNotNull('FromContact', instance.fromContact);
  writeNotNull('FromContactPhone', instance.fromContactPhone);
  writeNotNull('FromAlternateContact', instance.fromAlternateContact);
  writeNotNull('FromAlternateContactPhone', instance.fromAlternateContactPhone);
  writeNotNull('FromAttention', instance.fromAttention);
  writeNotNull('FromAddress1', instance.fromAddress1);
  writeNotNull('FromAdd2ress', instance.fromAdd2ress);
  writeNotNull('FromCity', instance.fromCity);
  writeNotNull('FromState', instance.fromState);
  writeNotNull('FromZipCode', instance.fromZipCode);
  writeNotNull('FromCountry', instance.fromCountry);
  writeNotNull('FromCountryId', instance.fromCountryId);
  writeNotNull('FromCrossStreets', instance.fromCrossStreets);
  writeNotNull('ToLocation', instance.toLocation);
  writeNotNull('ToContact', instance.toContact);
  writeNotNull('ToContactPhone', instance.toContactPhone);
  writeNotNull('ToAlternateContact', instance.toAlternateContact);
  writeNotNull('ToAlternateContactPhone', instance.toAlternateContactPhone);
  writeNotNull('ToAttention', instance.toAttention);
  writeNotNull('ToAddress1', instance.toAddress1);
  writeNotNull('ToAddress2', instance.toAddress2);
  writeNotNull('ToCity', instance.toCity);
  writeNotNull('ToState', instance.toState);
  writeNotNull('ToZipCode', instance.toZipCode);
  writeNotNull('ToCountryId', instance.toCountryId);
  writeNotNull('ToCountry', instance.toCountry);
  writeNotNull('ToContactFax', instance.toContactFax);
  writeNotNull('ToCrossStreets', instance.toCrossStreets);
  writeNotNull('DeliveryNotes', instance.deliveryNotes);
  writeNotNull('CarrierId', instance.carrierId);
  writeNotNull('Carrier', instance.carrier);
  writeNotNull('CarrierAccount', instance.carrierAccount);
  writeNotNull('ShipViaId', instance.shipViaId);
  writeNotNull('ShipVia', instance.shipVia);
  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('VendorInvoiceId', instance.vendorInvoiceId);
  writeNotNull('EstimatedFreight', instance.estimatedFreight);
  writeNotNull('FreightInvoiceAmount', instance.freightInvoiceAmount);
  writeNotNull('ChargeType', instance.chargeType);
  writeNotNull('FreightTrackingNumber', instance.freightTrackingNumber);
  writeNotNull('DropShip', instance.dropShip);
  writeNotNull('PackageCode', instance.packageCode);
  writeNotNull('BillPoFreightOnOrder', instance.billPoFreightOnOrder);
  writeNotNull('OnlineOrderNumber', instance.onlineOrderNumber);
  writeNotNull('OnlineOrderStatus', instance.onlineOrderStatus);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsDepositPaymentDepositPayment
    _$WebApiModulesHomeControlsDepositPaymentDepositPaymentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsDepositPaymentDepositPayment(
          id: json['Id'] as int?,
          depositId: json['DepositId'] as String?,
          paymentId: json['PaymentId'] as String?,
          applied: (json['Applied'] as num?)?.toDouble(),
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsDepositPaymentDepositPaymentToJson(
        WebApiModulesHomeControlsDepositPaymentDepositPayment instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Id', instance.id);
  writeNotNull('DepositId', instance.depositId);
  writeNotNull('PaymentId', instance.paymentId);
  writeNotNull('Applied', instance.applied);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsDepreciationDepreciation
    _$WebApiModulesHomeControlsDepreciationDepreciationFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsDepreciationDepreciation(
          depreciationId: json['DepreciationId'] as int?,
          depreciationDate: json['DepreciationDate'] as String?,
          purchaseId: json['PurchaseId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          purchaseDate: json['PurchaseDate'] as String?,
          receiveDate: json['ReceiveDate'] as String?,
          purchaseWarehouseId: json['PurchaseWarehouseId'] as String?,
          purchaseWarehouseCode: json['PurchaseWarehouseCode'] as String?,
          purchaseWarehouse: json['PurchaseWarehouse'] as String?,
          debitGlAccountId: json['DebitGlAccountId'] as String?,
          debitGlAccountNo: json['DebitGlAccountNo'] as String?,
          debitGlAccountDescription:
              json['DebitGlAccountDescription'] as String?,
          creditGlAccountId: json['CreditGlAccountId'] as String?,
          creditGlAccountNo: json['CreditGlAccountNo'] as String?,
          creditGlAccountDescription:
              json['CreditGlAccountDescription'] as String?,
          depreciationQuantity: json['DepreciationQuantity'] as int?,
          unitDepreciationAmount:
              (json['UnitDepreciationAmount'] as num?)?.toDouble(),
          depreciationExtended:
              (json['DepreciationExtended'] as num?)?.toDouble(),
          isAdjustment: json['IsAdjustment'] as bool?,
          depreciationExtendedColor:
              json['DepreciationExtendedColor'] as String?,
          currencyId: json['CurrencyId'] as String?,
          currency: json['Currency'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsDepreciationDepreciationToJson(
    WebApiModulesHomeControlsDepreciationDepreciation instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DepreciationId', instance.depreciationId);
  writeNotNull('DepreciationDate', instance.depreciationDate);
  writeNotNull('PurchaseId', instance.purchaseId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('PurchaseDate', instance.purchaseDate);
  writeNotNull('ReceiveDate', instance.receiveDate);
  writeNotNull('PurchaseWarehouseId', instance.purchaseWarehouseId);
  writeNotNull('PurchaseWarehouseCode', instance.purchaseWarehouseCode);
  writeNotNull('PurchaseWarehouse', instance.purchaseWarehouse);
  writeNotNull('DebitGlAccountId', instance.debitGlAccountId);
  writeNotNull('DebitGlAccountNo', instance.debitGlAccountNo);
  writeNotNull('DebitGlAccountDescription', instance.debitGlAccountDescription);
  writeNotNull('CreditGlAccountId', instance.creditGlAccountId);
  writeNotNull('CreditGlAccountNo', instance.creditGlAccountNo);
  writeNotNull(
      'CreditGlAccountDescription', instance.creditGlAccountDescription);
  writeNotNull('DepreciationQuantity', instance.depreciationQuantity);
  writeNotNull('UnitDepreciationAmount', instance.unitDepreciationAmount);
  writeNotNull('DepreciationExtended', instance.depreciationExtended);
  writeNotNull('IsAdjustment', instance.isAdjustment);
  writeNotNull('DepreciationExtendedColor', instance.depreciationExtendedColor);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsGeneralItemSortGeneralItemRequest
    _$WebApiModulesHomeControlsGeneralItemSortGeneralItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsGeneralItemSortGeneralItemRequest(
          startAtIndex: json['StartAtIndex'] as int?,
          itemIds: (json['ItemIds'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsGeneralItemSortGeneralItemRequestToJson(
        WebApiModulesHomeControlsGeneralItemSortGeneralItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StartAtIndex', instance.startAtIndex);
  writeNotNull('ItemIds', instance.itemIds);
  return val;
}

WebApiModulesHomeControlsGlManualGlManual
    _$WebApiModulesHomeControlsGlManualGlManualFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsGlManualGlManual(
          id: json['Id'] as int?,
          internalChar: json['InternalChar'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          officeLocation: json['OfficeLocation'] as String?,
          invoiceId: json['InvoiceId'] as String?,
          receiptId: json['ReceiptId'] as String?,
          vendorInvoiceId: json['VendorInvoiceId'] as String?,
          paymentId: json['PaymentId'] as String?,
          glDate: json['GlDate'] as String?,
          debitGlAccountId: json['DebitGlAccountId'] as String?,
          debitGlAccountNumber: json['DebitGlAccountNumber'] as String?,
          debitGlAccountDescription:
              json['DebitGlAccountDescription'] as String?,
          creditGlAccountId: json['CreditGlAccountId'] as String?,
          creditGlAccountNumber: json['CreditGlAccountNumber'] as String?,
          creditGlAccountDescription:
              json['CreditGlAccountDescription'] as String?,
          amount: (json['Amount'] as num?)?.toDouble(),
          groupHeading: json['GroupHeading'] as String?,
          currencyId: json['CurrencyId'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currency: json['Currency'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsGlManualGlManualToJson(
    WebApiModulesHomeControlsGlManualGlManual instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Id', instance.id);
  writeNotNull('InternalChar', instance.internalChar);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('ReceiptId', instance.receiptId);
  writeNotNull('VendorInvoiceId', instance.vendorInvoiceId);
  writeNotNull('PaymentId', instance.paymentId);
  writeNotNull('GlDate', instance.glDate);
  writeNotNull('DebitGlAccountId', instance.debitGlAccountId);
  writeNotNull('DebitGlAccountNumber', instance.debitGlAccountNumber);
  writeNotNull('DebitGlAccountDescription', instance.debitGlAccountDescription);
  writeNotNull('CreditGlAccountId', instance.creditGlAccountId);
  writeNotNull('CreditGlAccountNumber', instance.creditGlAccountNumber);
  writeNotNull(
      'CreditGlAccountDescription', instance.creditGlAccountDescription);
  writeNotNull('Amount', instance.amount);
  writeNotNull('GroupHeading', instance.groupHeading);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValue
    _$WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValue(
          inventoryAttributeValueId:
              json['InventoryAttributeValueId'] as String?,
          attributeId: json['AttributeId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          attribute: json['Attribute'] as String?,
          attributeValueId: json['AttributeValueId'] as String?,
          attributeValue: json['AttributeValue'] as String?,
          numericValue: (json['NumericValue'] as num?)?.toDouble(),
          numericOnly: json['NumericOnly'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValueToJson(
        WebApiModulesHomeControlsInventoryAttributeValueInventoryAttributeValue
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryAttributeValueId', instance.inventoryAttributeValueId);
  writeNotNull('AttributeId', instance.attributeId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('Attribute', instance.attribute);
  writeNotNull('AttributeValueId', instance.attributeValueId);
  writeNotNull('AttributeValue', instance.attributeValue);
  writeNotNull('NumericValue', instance.numericValue);
  writeNotNull('NumericOnly', instance.numericOnly);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityAvailabilityCalendarAndScheduleRequest
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityCalendarAndScheduleRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityAvailabilityCalendarAndScheduleRequest(
          inventoryId: json['InventoryId'] as String?,
          warehouseId: (json['WarehouseId'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
          regionId: json['RegionId'] as String?,
          fromDate: json['FromDate'] == null
              ? null
              : DateTime.parse(json['FromDate'] as String),
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
          includeHours: json['IncludeHours'] as bool?,
          yearView: json['YearView'] as bool?,
          sortReservationsBy: json['SortReservationsBy'] as String?,
          excludeConsigned: json['ExcludeConsigned'] as bool?,
          consignedOnly: json['ConsignedOnly'] as bool?,
          filterReservationsBy: (json['FilterReservationsBy'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityCalendarAndScheduleRequestToJson(
        WebApiModulesHomeControlsInventoryAvailabilityAvailabilityCalendarAndScheduleRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('RegionId', instance.regionId);
  writeNotNull('FromDate', instance.fromDate?.toIso8601String());
  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  writeNotNull('IncludeHours', instance.includeHours);
  writeNotNull('YearView', instance.yearView);
  writeNotNull('SortReservationsBy', instance.sortReservationsBy);
  writeNotNull('ExcludeConsigned', instance.excludeConsigned);
  writeNotNull('ConsignedOnly', instance.consignedOnly);
  writeNotNull('FilterReservationsBy', instance.filterReservationsBy);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictRequest
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictRequest(
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
          availableFor: json['AvailableFor'] as String?,
          conflictType: json['ConflictType'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          categoryId: json['CategoryId'] as String?,
          subCategoryId: json['SubCategoryId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          description: json['Description'] as String?,
          orderId: json['OrderId'] as String?,
          dealId: json['DealId'] as String?,
          ranks: (json['Ranks'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardModelsSelectedCheckBoxListItem.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
          showRegionAvailability: json['ShowRegionAvailability'] as bool?,
          showOtherWarehouseAvailability:
              json['ShowOtherWarehouseAvailability'] as bool?,
          otherWarehouseIds: json['OtherWarehouseIds'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictRequestToJson(
        WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('ConflictType', instance.conflictType);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('Description', instance.description);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Ranks', instance.ranks?.map((e) => e.toJson()).toList());
  writeNotNull('ShowRegionAvailability', instance.showRegionAvailability);
  writeNotNull('ShowOtherWarehouseAvailability',
      instance.showOtherWarehouseAvailability);
  writeNotNull('OtherWarehouseIds', instance.otherWarehouseIds);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictResponseItem
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictResponseItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictResponseItem(
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          categoryId: json['CategoryId'] as String?,
          category: json['Category'] as String?,
          subCategoryId: json['SubCategoryId'] as String?,
          subCategory: json['SubCategory'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          itemDescription: json['ItemDescription'] as String?,
          orderId: json['OrderId'] as String?,
          orderType: json['OrderType'] as String?,
          orderTypeDescription: json['OrderTypeDescription'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          quantityReserved: (json['QuantityReserved'] as num?)?.toDouble(),
          quantitySub: (json['QuantitySub'] as num?)?.toDouble(),
          quantityAvailable: (json['QuantityAvailable'] as num?)?.toDouble(),
          availabilityState: json['AvailabilityState'] as String?,
          quantityAvailableRegion:
              (json['QuantityAvailableRegion'] as num?)?.toDouble(),
          availabilityStateRegion: json['AvailabilityStateRegion'] as String?,
          otherWarehouses: (json['OtherWarehouses'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouse
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          quantityLate: (json['QuantityLate'] as num?)?.toDouble(),
          quantityIn: (json['QuantityIn'] as num?)?.toDouble(),
          quantityQc: (json['QuantityQc'] as num?)?.toDouble(),
          quantityInRepair: (json['QuantityInRepair'] as num?)?.toDouble(),
          fromDateTime: json['FromDateTime'] == null
              ? null
              : DateTime.parse(json['FromDateTime'] as String),
          toDateTime: json['ToDateTime'] == null
              ? null
              : DateTime.parse(json['ToDateTime'] as String),
          fromDateTimeString: json['FromDateTimeString'] as String?,
          toDateTimeString: json['ToDateTimeString'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictResponseItemToJson(
        WebApiModulesHomeControlsInventoryAvailabilityAvailabilityConflictResponseItem
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('SubCategory', instance.subCategory);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ItemDescription', instance.itemDescription);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull('OrderTypeDescription', instance.orderTypeDescription);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('QuantityReserved', instance.quantityReserved);
  writeNotNull('QuantitySub', instance.quantitySub);
  writeNotNull('QuantityAvailable', instance.quantityAvailable);
  writeNotNull('AvailabilityState', instance.availabilityState);
  writeNotNull('QuantityAvailableRegion', instance.quantityAvailableRegion);
  writeNotNull('AvailabilityStateRegion', instance.availabilityStateRegion);
  writeNotNull('OtherWarehouses',
      instance.otherWarehouses?.map((e) => e.toJson()).toList());
  writeNotNull('QuantityLate', instance.quantityLate);
  writeNotNull('QuantityIn', instance.quantityIn);
  writeNotNull('QuantityQc', instance.quantityQc);
  writeNotNull('QuantityInRepair', instance.quantityInRepair);
  writeNotNull('FromDateTime', instance.fromDateTime?.toIso8601String());
  writeNotNull('ToDateTime', instance.toDateTime?.toIso8601String());
  writeNotNull('FromDateTimeString', instance.fromDateTimeString);
  writeNotNull('ToDateTimeString', instance.toDateTimeString);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityAvailabilityInventoryWarehouseRequest
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityInventoryWarehouseRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityAvailabilityInventoryWarehouseRequest(
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          regionId: json['RegionId'] as String?,
          fromDate: json['FromDate'] == null
              ? null
              : DateTime.parse(json['FromDate'] as String),
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
          refreshIfNeeded: json['RefreshIfNeeded'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityInventoryWarehouseRequestToJson(
        WebApiModulesHomeControlsInventoryAvailabilityAvailabilityInventoryWarehouseRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('RegionId', instance.regionId);
  writeNotNull('FromDate', instance.fromDate?.toIso8601String());
  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  writeNotNull('RefreshIfNeeded', instance.refreshIfNeeded);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouse
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouse(
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          quantityAvailable: (json['QuantityAvailable'] as num?)?.toDouble(),
          availabilityState: json['AvailabilityState'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouseToJson(
        WebApiModulesHomeControlsInventoryAvailabilityAvailabilityOtherWarehouse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('QuantityAvailable', instance.quantityAvailable);
  writeNotNull('AvailabilityState', instance.availabilityState);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityMinAvailabilityResponse
    _$WebApiModulesHomeControlsInventoryAvailabilityMinAvailabilityResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityMinAvailabilityResponse(
          warehouseMinimumAvailable: json['WarehouseMinimumAvailable'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityMinimum
                  .fromJson(json['WarehouseMinimumAvailable']
                      as Map<String, dynamic>),
          regionMinimumAvailable: json['RegionMinimumAvailable'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityMinimum
                  .fromJson(
                      json['RegionMinimumAvailable'] as Map<String, dynamic>),
          allWarehousesMinimumAvailable: json[
                      'AllWarehousesMinimumAvailable'] ==
                  null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityMinimum
                  .fromJson(json['AllWarehousesMinimumAvailable']
                      as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityMinAvailabilityResponseToJson(
        WebApiModulesHomeControlsInventoryAvailabilityMinAvailabilityResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('WarehouseMinimumAvailable',
      instance.warehouseMinimumAvailable?.toJson());
  writeNotNull(
      'RegionMinimumAvailable', instance.regionMinimumAvailable?.toJson());
  writeNotNull('AllWarehousesMinimumAvailable',
      instance.allWarehousesMinimumAvailable?.toJson());
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityPruneCacheResponse
    _$WebApiModulesHomeControlsInventoryAvailabilityPruneCacheResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityPruneCacheResponse(
          entriesBefore: json['EntriesBefore'] as int?,
          entriesAfter: json['EntriesAfter'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityPruneCacheResponseToJson(
        WebApiModulesHomeControlsInventoryAvailabilityPruneCacheResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('EntriesBefore', instance.entriesBefore);
  writeNotNull('EntriesAfter', instance.entriesAfter);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarAndScheduleResponse
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarAndScheduleResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarAndScheduleResponse(
          inventoryData: json['InventoryData'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailability
                  .fromJson(json['InventoryData'] as Map<String, dynamic>),
          dates: (json['Dates'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDate
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          inventoryAvailabilityCalendarEvents: (json[
                      'InventoryAvailabilityCalendarEvents'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEvent
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          inventoryAvailabilityScheduleResources: (json[
                          'InventoryAvailabilityScheduleResources']
                      as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResource
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          inventoryAvailabilityScheduleEvents: (json[
                      'InventoryAvailabilityScheduleEvents'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEvent
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarAndScheduleResponseToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarAndScheduleResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryData', instance.inventoryData?.toJson());
  writeNotNull('Dates', instance.dates?.map((e) => e.toJson()).toList());
  writeNotNull(
      'InventoryAvailabilityCalendarEvents',
      instance.inventoryAvailabilityCalendarEvents
          ?.map((e) => e.toJson())
          .toList());
  writeNotNull(
      'InventoryAvailabilityScheduleResources',
      instance.inventoryAvailabilityScheduleResources
          ?.map((e) => e.toJson())
          .toList());
  writeNotNull(
      'InventoryAvailabilityScheduleEvents',
      instance.inventoryAvailabilityScheduleEvents
          ?.map((e) => e.toJson())
          .toList());
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDate
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDateFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDate(
          available: (json['Available'] as num?)?.toDouble(),
          theDate: json['TheDate'] == null
              ? null
              : DateTime.parse(json['TheDate'] as String),
          reservations: (json['Reservations'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservation
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDateToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarDate
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Available', instance.available);
  writeNotNull('TheDate', instance.theDate?.toIso8601String());
  writeNotNull(
      'Reservations', instance.reservations?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEvent
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEventFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEvent(
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          start: json['start'] as String?,
          end: json['end'] as String?,
          text: json['text'] as String?,
          backColor: json['backColor'] as String?,
          textColor: json['textColor'] as String?,
          id: json['id'] as String?,
          resource: json['resource'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEventToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityCalendarEvent
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('start', instance.start);
  writeNotNull('end', instance.end);
  writeNotNull('text', instance.text);
  writeNotNull('backColor', instance.backColor);
  writeNotNull('textColor', instance.textColor);
  writeNotNull('id', instance.id);
  writeNotNull('resource', instance.resource);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEvent
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEventFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEvent(
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          start: json['start'] as String?,
          end: json['end'] as String?,
          startdisplay: json['startdisplay'] as String?,
          enddisplay: json['enddisplay'] as String?,
          text: json['text'] as String?,
          total: json['total'] as String?,
          backColor: json['backColor'] as String?,
          barColor: json['barColor'] as String?,
          textColor: json['textColor'] as String?,
          id: json['id'] as String?,
          resource: json['resource'] as String?,
          orderId: json['orderId'] as String?,
          orderNumber: json['orderNumber'] as String?,
          orderType: json['orderType'] as String?,
          orderStatus: json['orderStatus'] as String?,
          orderDescription: json['orderDescription'] as String?,
          deal: json['deal'] as String?,
          subPoNumber: json['subPoNumber'] as String?,
          subPoVendor: json['subPoVendor'] as String?,
          contractId: json['contractId'] as String?,
          consignorId: json['consignorId'] as String?,
          consignor: json['consignor'] as String?,
          consignorAgreementId: json['consignorAgreementId'] as String?,
          consignorAgreementNumber: json['consignorAgreementNumber'] as String?,
          isWarehouseTotal: json['isWarehouseTotal'] as bool?,
          isGrandTotal: json['isGrandTotal'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEventToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleEvent
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('start', instance.start);
  writeNotNull('end', instance.end);
  writeNotNull('startdisplay', instance.startdisplay);
  writeNotNull('enddisplay', instance.enddisplay);
  writeNotNull('text', instance.text);
  writeNotNull('total', instance.total);
  writeNotNull('backColor', instance.backColor);
  writeNotNull('barColor', instance.barColor);
  writeNotNull('textColor', instance.textColor);
  writeNotNull('id', instance.id);
  writeNotNull('resource', instance.resource);
  writeNotNull('orderId', instance.orderId);
  writeNotNull('orderNumber', instance.orderNumber);
  writeNotNull('orderType', instance.orderType);
  writeNotNull('orderStatus', instance.orderStatus);
  writeNotNull('orderDescription', instance.orderDescription);
  writeNotNull('deal', instance.deal);
  writeNotNull('subPoNumber', instance.subPoNumber);
  writeNotNull('subPoVendor', instance.subPoVendor);
  writeNotNull('contractId', instance.contractId);
  writeNotNull('consignorId', instance.consignorId);
  writeNotNull('consignor', instance.consignor);
  writeNotNull('consignorAgreementId', instance.consignorAgreementId);
  writeNotNull('consignorAgreementNumber', instance.consignorAgreementNumber);
  writeNotNull('isWarehouseTotal', instance.isWarehouseTotal);
  writeNotNull('isGrandTotal', instance.isGrandTotal);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResource
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResourceFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResource(
          name: json['name'] as String?,
          id: json['id'] as String?,
          backColor: json['backColor'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResourceToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryAvailabilityScheduleResource
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('name', instance.name);
  writeNotNull('id', instance.id);
  writeNotNull('backColor', instance.backColor);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouse
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouse(
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          categoryId: json['CategoryId'] as String?,
          category: json['Category'] as String?,
          subCategoryId: json['SubCategoryId'] as String?,
          subCategory: json['SubCategory'] as String?,
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          regionId: json['RegionId'] as String?,
          availableFor: json['AvailableFor'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          classification: json['Classification'] as String?,
          hourlyAvailability: json['HourlyAvailability'] as bool?,
          noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
          lowAvailabilityPercent: json['LowAvailabilityPercent'] as int?,
          lowAvailabilityQuantity: json['LowAvailabilityQuantity'] as int?,
          dailyRate: json['DailyRate'] as String?,
          weeklyRate: json['WeeklyRate'] as String?,
          week2Rate: json['Week2Rate'] as String?,
          week3Rate: json['Week3Rate'] as String?,
          week4Rate: json['Week4Rate'] as String?,
          monthlyRate: json['MonthlyRate'] as String?,
          accessories: (json['Accessories'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessory
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          combinedKey: json['CombinedKey'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('SubCategory', instance.subCategory);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('RegionId', instance.regionId);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('Classification', instance.classification);
  writeNotNull('HourlyAvailability', instance.hourlyAvailability);
  writeNotNull('NoAvailabilityCheck', instance.noAvailabilityCheck);
  writeNotNull('LowAvailabilityPercent', instance.lowAvailabilityPercent);
  writeNotNull('LowAvailabilityQuantity', instance.lowAvailabilityQuantity);
  writeNotNull('DailyRate', instance.dailyRate);
  writeNotNull('WeeklyRate', instance.weeklyRate);
  writeNotNull('Week2Rate', instance.week2Rate);
  writeNotNull('Week3Rate', instance.week3Rate);
  writeNotNull('Week4Rate', instance.week4Rate);
  writeNotNull('MonthlyRate', instance.monthlyRate);
  writeNotNull(
      'Accessories', instance.accessories?.map((e) => e.toJson()).toList());
  writeNotNull('CombinedKey', instance.combinedKey);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailability
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailability(
          total: json['Total'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['Total'] as Map<String, dynamic>),
          $In: json['In'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['In'] as Map<String, dynamic>),
          staged: json['Staged'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['Staged'] as Map<String, dynamic>),
          out: json['Out'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['Out'] as Map<String, dynamic>),
          inRepair: json['InRepair'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['InRepair'] as Map<String, dynamic>),
          inTransit: json['InTransit'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['InTransit'] as Map<String, dynamic>),
          inContainer: json['InContainer'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['InContainer'] as Map<String, dynamic>),
          onTruck: json['OnTruck'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['OnTruck'] as Map<String, dynamic>),
          qcRequired: json['QcRequired'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['QcRequired'] as Map<String, dynamic>),
          late: json['Late'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['Late'] as Map<String, dynamic>),
          inventoryWarehouse: json['InventoryWarehouse'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouse
                  .fromJson(json['InventoryWarehouse'] as Map<String, dynamic>),
          calculatedDateTime: json['CalculatedDateTime'] == null
              ? null
              : DateTime.parse(json['CalculatedDateTime'] as String),
          availDataFromDateTime: json['AvailDataFromDateTime'] == null
              ? null
              : DateTime.parse(json['AvailDataFromDateTime'] as String),
          availDataToDateTime: json['AvailDataToDateTime'] == null
              ? null
              : DateTime.parse(json['AvailDataToDateTime'] as String),
          enableQcDelay: json['EnableQcDelay'] as bool?,
          qcDelayDays: json['QcDelayDays'] as int?,
          qcToDateTime: json['QcToDateTime'] == null
              ? null
              : DateTime.parse(json['QcToDateTime'] as String),
          excludeConsignedFromAvailable:
              json['ExcludeConsignedFromAvailable'] as bool?,
          reservations: (json['Reservations'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservation
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          availabilityDatesAndTimes: json['AvailabilityDatesAndTimes'],
          hasPositiveConflict: json['HasPositiveConflict'] as bool?,
          hasNegativeConflict: json['HasNegativeConflict'] as bool?,
          isRegion: json['IsRegion'] as bool?,
          isAllWarehouses: json['IsAllWarehouses'] as bool?,
          keepInCache: json['KeepInCache'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailability
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Total', instance.total?.toJson());
  writeNotNull('In', instance.$In?.toJson());
  writeNotNull('Staged', instance.staged?.toJson());
  writeNotNull('Out', instance.out?.toJson());
  writeNotNull('InRepair', instance.inRepair?.toJson());
  writeNotNull('InTransit', instance.inTransit?.toJson());
  writeNotNull('InContainer', instance.inContainer?.toJson());
  writeNotNull('OnTruck', instance.onTruck?.toJson());
  writeNotNull('QcRequired', instance.qcRequired?.toJson());
  writeNotNull('Late', instance.late?.toJson());
  writeNotNull('InventoryWarehouse', instance.inventoryWarehouse?.toJson());
  writeNotNull(
      'CalculatedDateTime', instance.calculatedDateTime?.toIso8601String());
  writeNotNull('AvailDataFromDateTime',
      instance.availDataFromDateTime?.toIso8601String());
  writeNotNull(
      'AvailDataToDateTime', instance.availDataToDateTime?.toIso8601String());
  writeNotNull('EnableQcDelay', instance.enableQcDelay);
  writeNotNull('QcDelayDays', instance.qcDelayDays);
  writeNotNull('QcToDateTime', instance.qcToDateTime?.toIso8601String());
  writeNotNull(
      'ExcludeConsignedFromAvailable', instance.excludeConsignedFromAvailable);
  writeNotNull(
      'Reservations', instance.reservations?.map((e) => e.toJson()).toList());
  writeNotNull('AvailabilityDatesAndTimes', instance.availabilityDatesAndTimes);
  writeNotNull('HasPositiveConflict', instance.hasPositiveConflict);
  writeNotNull('HasNegativeConflict', instance.hasNegativeConflict);
  writeNotNull('IsRegion', instance.isRegion);
  writeNotNull('IsAllWarehouses', instance.isAllWarehouses);
  writeNotNull('KeepInCache', instance.keepInCache);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityDateTime
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityDateTimeFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityDateTime(
          availabilityDateTime: json['AvailabilityDateTime'] == null
              ? null
              : DateTime.parse(json['AvailabilityDateTime'] as String),
          available: json['Available'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['Available'] as Map<String, dynamic>),
          reserved: json['Reserved'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['Reserved'] as Map<String, dynamic>),
          returning: json['Returning'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['Returning'] as Map<String, dynamic>),
          becomingAvailable: json['BecomingAvailable'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['BecomingAvailable'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityDateTimeToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityDateTime
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull(
      'AvailabilityDateTime', instance.availabilityDateTime?.toIso8601String());
  writeNotNull('Available', instance.available?.toJson());
  writeNotNull('Reserved', instance.reserved?.toJson());
  writeNotNull('Returning', instance.returning?.toJson());
  writeNotNull('BecomingAvailable', instance.becomingAvailable?.toJson());
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityMinimum
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityMinimumFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityMinimum(
          minimumAvailable: json['MinimumAvailable'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['MinimumAvailable'] as Map<String, dynamic>),
          firstConflict: json['FirstConflict'] == null
              ? null
              : DateTime.parse(json['FirstConflict'] as String),
          consignFirstConflict: json['ConsignFirstConflict'] == null
              ? null
              : DateTime.parse(json['ConsignFirstConflict'] as String),
          noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
          isStale: json['IsStale'] as bool?,
          availabilityState: json['AvailabilityState'] as String?,
          consignAvailabilityState: json['ConsignAvailabilityState'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityMinimumToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityMinimum
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('MinimumAvailable', instance.minimumAvailable?.toJson());
  writeNotNull('FirstConflict', instance.firstConflict?.toIso8601String());
  writeNotNull(
      'ConsignFirstConflict', instance.consignFirstConflict?.toIso8601String());
  writeNotNull('NoAvailabilityCheck', instance.noAvailabilityCheck);
  writeNotNull('IsStale', instance.isStale);
  writeNotNull('AvailabilityState', instance.availabilityState);
  writeNotNull('ConsignAvailabilityState', instance.consignAvailabilityState);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantityFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity(
          owned: (json['Owned'] as num?)?.toDouble(),
          subbed: (json['Subbed'] as num?)?.toDouble(),
          consigned: (json['Consigned'] as num?)?.toDouble(),
          ownedAndConsigned: (json['OwnedAndConsigned'] as num?)?.toDouble(),
          total: (json['Total'] as num?)?.toDouble(),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantityToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Owned', instance.owned);
  writeNotNull('Subbed', instance.subbed);
  writeNotNull('Consigned', instance.consigned);
  writeNotNull('OwnedAndConsigned', instance.ownedAndConsigned);
  writeNotNull('Total', instance.total);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservation
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservationFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservation(
          quantityReserved: json['QuantityReserved'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['QuantityReserved'] as Map<String, dynamic>),
          quantityStaged: json['QuantityStaged'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['QuantityStaged'] as Map<String, dynamic>),
          quantityOut: json['QuantityOut'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['QuantityOut'] as Map<String, dynamic>),
          quantityIn: json['QuantityIn'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['QuantityIn'] as Map<String, dynamic>),
          quantityInRepair: json['QuantityInRepair'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['QuantityInRepair'] as Map<String, dynamic>),
          quantityLate: json['QuantityLate'] == null
              ? null
              : WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityQuantity
                  .fromJson(json['QuantityLate'] as Map<String, dynamic>),
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          returnToWarehouseId: json['ReturnToWarehouseId'] as String?,
          returnToWarehouseCode: json['ReturnToWarehouseCode'] as String?,
          returnToWarehouse: json['ReturnToWarehouse'] as String?,
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          recType: json['RecType'] as String?,
          orderType: json['OrderType'] as String?,
          orderTypeDescription: json['OrderTypeDescription'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          orderStatus: json['OrderStatus'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          fromDateTime: json['FromDateTime'] == null
              ? null
              : DateTime.parse(json['FromDateTime'] as String),
          fromDateTimeDisplay: json['FromDateTimeDisplay'] as String?,
          toDateTime: json['ToDateTime'] == null
              ? null
              : DateTime.parse(json['ToDateTime'] as String),
          toDateTimeDisplay: json['ToDateTimeDisplay'] as String?,
          roundTripRental: json['RoundTripRental'] as bool?,
          late: json['Late'] as bool?,
          lateButReturning: json['LateButReturning'] as bool?,
          qcRequired: json['QcRequired'] as bool?,
          enableQcDelay: json['EnableQcDelay'] as bool?,
          qcDelayDays: json['QcDelayDays'] as int?,
          qcDelayExcludeWeekend: json['QcDelayExcludeWeekend'] as bool?,
          qcDelayExcludeHoliday: json['QcDelayExcludeHoliday'] as bool?,
          qcDelayIndefinite: json['QcDelayIndefinite'] as bool?,
          qcDelayFromDateTime: json['QcDelayFromDateTime'] == null
              ? null
              : DateTime.parse(json['QcDelayFromDateTime'] as String),
          qcDelayToDateTime: json['QcDelayToDateTime'] == null
              ? null
              : DateTime.parse(json['QcDelayToDateTime'] as String),
          qcQuantity: (json['QcQuantity'] as num?)?.toDouble(),
          containerBarCode: json['ContainerBarCode'] as String?,
          availableWhileInContainer: json['AvailableWhileInContainer'] as bool?,
          contractId: json['ContractId'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
          quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
          quantitySub: (json['QuantitySub'] as num?)?.toDouble(),
          quantityConsigned: (json['QuantityConsigned'] as num?)?.toDouble(),
          isPositiveConflict: json['IsPositiveConflict'] as bool?,
          isNegativeConflict: json['IsNegativeConflict'] as bool?,
          subPurchaseOrderId: json['SubPurchaseOrderId'] as String?,
          subPurchaseOrderNumber: json['SubPurchaseOrderNumber'] as String?,
          subPurchaseOrderDescription:
              json['SubPurchaseOrderDescription'] as String?,
          subPurchaseOrderVendor: json['SubPurchaseOrderVendor'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservationToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTInventoryWarehouseAvailabilityReservation
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuantityReserved', instance.quantityReserved?.toJson());
  writeNotNull('QuantityStaged', instance.quantityStaged?.toJson());
  writeNotNull('QuantityOut', instance.quantityOut?.toJson());
  writeNotNull('QuantityIn', instance.quantityIn?.toJson());
  writeNotNull('QuantityInRepair', instance.quantityInRepair?.toJson());
  writeNotNull('QuantityLate', instance.quantityLate?.toJson());
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('ReturnToWarehouseId', instance.returnToWarehouseId);
  writeNotNull('ReturnToWarehouseCode', instance.returnToWarehouseCode);
  writeNotNull('ReturnToWarehouse', instance.returnToWarehouse);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('RecType', instance.recType);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull('OrderTypeDescription', instance.orderTypeDescription);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('OrderStatus', instance.orderStatus);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('FromDateTime', instance.fromDateTime?.toIso8601String());
  writeNotNull('FromDateTimeDisplay', instance.fromDateTimeDisplay);
  writeNotNull('ToDateTime', instance.toDateTime?.toIso8601String());
  writeNotNull('ToDateTimeDisplay', instance.toDateTimeDisplay);
  writeNotNull('RoundTripRental', instance.roundTripRental);
  writeNotNull('Late', instance.late);
  writeNotNull('LateButReturning', instance.lateButReturning);
  writeNotNull('QcRequired', instance.qcRequired);
  writeNotNull('EnableQcDelay', instance.enableQcDelay);
  writeNotNull('QcDelayDays', instance.qcDelayDays);
  writeNotNull('QcDelayExcludeWeekend', instance.qcDelayExcludeWeekend);
  writeNotNull('QcDelayExcludeHoliday', instance.qcDelayExcludeHoliday);
  writeNotNull('QcDelayIndefinite', instance.qcDelayIndefinite);
  writeNotNull(
      'QcDelayFromDateTime', instance.qcDelayFromDateTime?.toIso8601String());
  writeNotNull(
      'QcDelayToDateTime', instance.qcDelayToDateTime?.toIso8601String());
  writeNotNull('QcQuantity', instance.qcQuantity);
  writeNotNull('ContainerBarCode', instance.containerBarCode);
  writeNotNull('AvailableWhileInContainer', instance.availableWhileInContainer);
  writeNotNull('ContractId', instance.contractId);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('ConsignorAgreementNumber', instance.consignorAgreementNumber);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('QuantitySub', instance.quantitySub);
  writeNotNull('QuantityConsigned', instance.quantityConsigned);
  writeNotNull('IsPositiveConflict', instance.isPositiveConflict);
  writeNotNull('IsNegativeConflict', instance.isNegativeConflict);
  writeNotNull('SubPurchaseOrderId', instance.subPurchaseOrderId);
  writeNotNull('SubPurchaseOrderNumber', instance.subPurchaseOrderNumber);
  writeNotNull(
      'SubPurchaseOrderDescription', instance.subPurchaseOrderDescription);
  writeNotNull('SubPurchaseOrderVendor', instance.subPurchaseOrderVendor);
  return val;
}

WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessory
    _$WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessoryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessory(
          inventoryId: json['InventoryId'] as String?,
          defaultQuantity: (json['DefaultQuantity'] as num?)?.toDouble(),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessoryToJson(
        WebApiModulesHomeControlsInventoryAvailabilityTPackageAccessory
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('DefaultQuantity', instance.defaultQuantity);
  return val;
}

WebApiModulesHomeControlsInventoryColorInventoryColor
    _$WebApiModulesHomeControlsInventoryColorInventoryColorFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryColorInventoryColor(
          inventoryColorId: json['InventoryColorId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          colorId: json['ColorId'] as String?,
          color: json['Color'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryColorInventoryColorToJson(
        WebApiModulesHomeControlsInventoryColorInventoryColor instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryColorId', instance.inventoryColorId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ColorId', instance.colorId);
  writeNotNull('Color', instance.color);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryCompatibleInventoryCompatible
    _$WebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryCompatibleInventoryCompatible(
          inventoryCompatibleId: json['InventoryCompatibleId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          compatibleWithInventoryId:
              json['CompatibleWithInventoryId'] as String?,
          compatibleWithICode: json['CompatibleWithICode'] as String?,
          compatibleWithDescription:
              json['CompatibleWithDescription'] as String?,
          compatibleWithClassification:
              json['CompatibleWithClassification'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryCompatibleInventoryCompatibleToJson(
        WebApiModulesHomeControlsInventoryCompatibleInventoryCompatible
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryCompatibleId', instance.inventoryCompatibleId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('CompatibleWithInventoryId', instance.compatibleWithInventoryId);
  writeNotNull('CompatibleWithICode', instance.compatibleWithICode);
  writeNotNull('CompatibleWithDescription', instance.compatibleWithDescription);
  writeNotNull(
      'CompatibleWithClassification', instance.compatibleWithClassification);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryCompleteKitCreateCompleteResponse
    _$WebApiModulesHomeControlsInventoryCompleteKitCreateCompleteResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryCompleteKitCreateCompleteResponse(
          packageId: json['PackageId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryCompleteKitCreateCompleteResponseToJson(
        WebApiModulesHomeControlsInventoryCompleteKitCreateCompleteResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PackageId', instance.packageId);
  return val;
}

WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKit
    _$WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKit(
          inventoryId: json['InventoryId'] as String?,
          packageId: json['PackageId'] as String?,
          iCode: json['ICode'] as String?,
          iCodeColor: json['ICodeColor'] as String?,
          description: json['Description'] as String?,
          descriptionColor: json['DescriptionColor'] as String?,
          itemClass: json['ItemClass'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          categoryId: json['CategoryId'] as String?,
          category: json['Category'] as String?,
          subCategoryId: json['SubCategoryId'] as String?,
          subCategory: json['SubCategory'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKitToJson(
        WebApiModulesHomeControlsInventoryCompleteKitInventoryCompleteKit
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('PackageId', instance.packageId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeColor', instance.iCodeColor);
  writeNotNull('Description', instance.description);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('SubCategory', instance.subCategory);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryConsignorInventoryConsignor
    _$WebApiModulesHomeControlsInventoryConsignorInventoryConsignorFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryConsignorInventoryConsignor(
          consignorId: json['ConsignorId'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          consignor: json['Consignor'] as String?,
          agreementNumber: json['AgreementNumber'] as String?,
          agreementDescription: json['AgreementDescription'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          treatConsignedQtyAsOwned: json['TreatConsignedQtyAsOwned'] as bool?,
          qtyConsigned: json['QtyConsigned'] as int?,
          consignorPercent: json['ConsignorPercent'] as int?,
          housePercent: json['HousePercent'] as int?,
          flatRate: json['FlatRate'] as bool?,
          flatRateAmount: (json['FlatRateAmount'] as num?)?.toDouble(),
          itemId: json['ItemId'] as String?,
          barCode: json['BarCode'] as String?,
          serialNumber: json['SerialNumber'] as String?,
          inventoryStatusId: json['InventoryStatusId'] as String?,
          inventoryStatus: json['InventoryStatus'] as String?,
          inventoryStatusType: json['InventoryStatusType'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          textColor: json['TextColor'] as String?,
          color: json['Color'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryConsignorInventoryConsignorToJson(
        WebApiModulesHomeControlsInventoryConsignorInventoryConsignor
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('AgreementNumber', instance.agreementNumber);
  writeNotNull('AgreementDescription', instance.agreementDescription);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('TreatConsignedQtyAsOwned', instance.treatConsignedQtyAsOwned);
  writeNotNull('QtyConsigned', instance.qtyConsigned);
  writeNotNull('ConsignorPercent', instance.consignorPercent);
  writeNotNull('HousePercent', instance.housePercent);
  writeNotNull('FlatRate', instance.flatRate);
  writeNotNull('FlatRateAmount', instance.flatRateAmount);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('InventoryStatusId', instance.inventoryStatusId);
  writeNotNull('InventoryStatus', instance.inventoryStatus);
  writeNotNull('InventoryStatusType', instance.inventoryStatusType);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('TextColor', instance.textColor);
  writeNotNull('Color', instance.color);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItem
    _$WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItem(
          containerItemId: json['ContainerItemId'] as String?,
          packageId: json['PackageId'] as String?,
          containerId: json['ContainerId'] as String?,
          rowNumber: json['RowNumber'] as int?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
          price: (json['Price'] as num?)?.toDouble(),
          notes: json['Notes'] as String?,
          inventoryId: json['InventoryId'] as String?,
          recType: json['RecType'] as String?,
          ident: json['Ident'] as int?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItemToJson(
        WebApiModulesHomeControlsInventoryContainerItemInventoryContainerItem
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContainerItemId', instance.containerItemId);
  writeNotNull('PackageId', instance.packageId);
  writeNotNull('ContainerId', instance.containerId);
  writeNotNull('RowNumber', instance.rowNumber);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('Price', instance.price);
  writeNotNull('Notes', instance.notes);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('RecType', instance.recType);
  writeNotNull('Ident', instance.ident);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryContainerItemSortContainerItemsRequest
    _$WebApiModulesHomeControlsInventoryContainerItemSortContainerItemsRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryContainerItemSortContainerItemsRequest(
          startAtIndex: json['StartAtIndex'] as int?,
          containerItemIds: (json['ContainerItemIds'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryContainerItemSortContainerItemsRequestToJson(
        WebApiModulesHomeControlsInventoryContainerItemSortContainerItemsRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StartAtIndex', instance.startAtIndex);
  writeNotNull('ContainerItemIds', instance.containerItemIds);
  return val;
}

WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTax
    _$WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTax(
          inventoryId: json['InventoryId'] as String?,
          id: json['Id'] as int?,
          internalChar: json['InternalChar'] as String?,
          locationId: json['LocationId'] as String?,
          location: json['Location'] as String?,
          taxable: json['Taxable'] as bool?,
          modByUsersId: json['ModByUsersId'] as String?,
          modByUser: json['ModByUser'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTaxToJson(
        WebApiModulesHomeControlsInventoryLocationTaxInventoryLocationTax
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('Id', instance.id);
  writeNotNull('InternalChar', instance.internalChar);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('Location', instance.location);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('ModByUsersId', instance.modByUsersId);
  writeNotNull('ModByUser', instance.modByUser);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryMaterialInventoryMaterial
    _$WebApiModulesHomeControlsInventoryMaterialInventoryMaterialFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryMaterialInventoryMaterial(
          inventoryMaterialId: json['InventoryMaterialId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          materialId: json['MaterialId'] as String?,
          description: json['Description'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryMaterialInventoryMaterialToJson(
        WebApiModulesHomeControlsInventoryMaterialInventoryMaterial instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryMaterialId', instance.inventoryMaterialId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('MaterialId', instance.materialId);
  writeNotNull('Description', instance.description);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventory
    _$WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventory(
          deletingWarehouseSpecific: json['deletingWarehouseSpecific'] as bool?,
          inventoryPackageInventoryId:
              json['InventoryPackageInventoryId'] as String?,
          packageId: json['PackageId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          iCodeColor: json['ICodeColor'] as String?,
          lineColor: json['LineColor'] as String?,
          description: json['Description'] as String?,
          isPrimary: json['IsPrimary'] as bool?,
          defaultQuantity: (json['DefaultQuantity'] as num?)?.toDouble(),
          isOption: json['IsOption'] as bool?,
          charge: json['Charge'] as bool?,
          noChargePrint: json['NoChargePrint'] as bool?,
          isRequired: json['IsRequired'] as bool?,
          optionColor: json['OptionColor'] as String?,
          itemClass: json['ItemClass'] as String?,
          itemTrackedBy: json['ItemTrackedBy'] as String?,
          availFor: json['AvailFor'] as String?,
          availFrom: json['AvailFrom'] as String?,
          categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
          orderBy: json['OrderBy'] as int?,
          itemColor: json['ItemColor'] as int?,
          isNestedComplete: json['IsNestedComplete'] as bool?,
          inactive: json['Inactive'] as bool?,
          warehouseId: json['WarehouseId'] as String?,
          parentId: json['ParentId'] as String?,
          packageItemClass: json['PackageItemClass'] as String?,
          itemNonDiscountable: json['ItemNonDiscountable'] as bool?,
          primaryInventoryId: json['PrimaryInventoryId'] as String?,
          unitId: json['UnitId'] as String?,
          dailyRate: (json['DailyRate'] as num?)?.toDouble(),
          weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
          monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
          price: (json['Price'] as num?)?.toDouble(),
          retail: (json['Retail'] as num?)?.toDouble(),
          currencyId: json['CurrencyId'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventoryToJson(
        WebApiModulesHomeControlsInventoryPackageInventoryInventoryPackageInventory
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('deletingWarehouseSpecific', instance.deletingWarehouseSpecific);
  writeNotNull(
      'InventoryPackageInventoryId', instance.inventoryPackageInventoryId);
  writeNotNull('PackageId', instance.packageId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeColor', instance.iCodeColor);
  writeNotNull('LineColor', instance.lineColor);
  writeNotNull('Description', instance.description);
  writeNotNull('IsPrimary', instance.isPrimary);
  writeNotNull('DefaultQuantity', instance.defaultQuantity);
  writeNotNull('IsOption', instance.isOption);
  writeNotNull('Charge', instance.charge);
  writeNotNull('NoChargePrint', instance.noChargePrint);
  writeNotNull('IsRequired', instance.isRequired);
  writeNotNull('OptionColor', instance.optionColor);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('ItemTrackedBy', instance.itemTrackedBy);
  writeNotNull('AvailFor', instance.availFor);
  writeNotNull('AvailFrom', instance.availFrom);
  writeNotNull('CategoryOrderBy', instance.categoryOrderBy);
  writeNotNull('OrderBy', instance.orderBy);
  writeNotNull('ItemColor', instance.itemColor);
  writeNotNull('IsNestedComplete', instance.isNestedComplete);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('ParentId', instance.parentId);
  writeNotNull('PackageItemClass', instance.packageItemClass);
  writeNotNull('ItemNonDiscountable', instance.itemNonDiscountable);
  writeNotNull('PrimaryInventoryId', instance.primaryInventoryId);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('DailyRate', instance.dailyRate);
  writeNotNull('WeeklyRate', instance.weeklyRate);
  writeNotNull('MonthlyRate', instance.monthlyRate);
  writeNotNull('Price', instance.price);
  writeNotNull('Retail', instance.retail);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryPackageInventorySortInventoryPackageInventorysRequest
    _$WebApiModulesHomeControlsInventoryPackageInventorySortInventoryPackageInventorysRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryPackageInventorySortInventoryPackageInventorysRequest(
          startAtIndex: json['StartAtIndex'] as int?,
          inventoryPackageInventoryIds:
              (json['InventoryPackageInventoryIds'] as List<dynamic>?)
                      ?.map((e) => e as String)
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryPackageInventorySortInventoryPackageInventorysRequestToJson(
        WebApiModulesHomeControlsInventoryPackageInventorySortInventoryPackageInventorysRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StartAtIndex', instance.startAtIndex);
  writeNotNull(
      'InventoryPackageInventoryIds', instance.inventoryPackageInventoryIds);
  return val;
}

WebApiModulesHomeControlsInventoryPrepInventoryPrep
    _$WebApiModulesHomeControlsInventoryPrepInventoryPrepFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryPrepInventoryPrep(
          inventoryPrepId: json['InventoryPrepId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          prepRateId: json['PrepRateId'] as String?,
          prepICode: json['PrepICode'] as String?,
          prepDescription: json['PrepDescription'] as String?,
          prepUnit: json['PrepUnit'] as String?,
          prepUnitType: json['PrepUnitType'] as String?,
          isDefault: json['IsDefault'] as bool?,
          prepRate: (json['PrepRate'] as num?)?.toDouble(),
          prepTime: json['PrepTime'] as String?,
          prepExtended: (json['PrepExtended'] as num?)?.toDouble(),
          qtyOrdered: (json['QtyOrdered'] as num?)?.toDouble(),
          price: (json['Price'] as num?)?.toDouble(),
          orderId: json['OrderId'] as bool?,
          masteritemId: json['MasteritemId'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryPrepInventoryPrepToJson(
        WebApiModulesHomeControlsInventoryPrepInventoryPrep instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryPrepId', instance.inventoryPrepId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('PrepRateId', instance.prepRateId);
  writeNotNull('PrepICode', instance.prepICode);
  writeNotNull('PrepDescription', instance.prepDescription);
  writeNotNull('PrepUnit', instance.prepUnit);
  writeNotNull('PrepUnitType', instance.prepUnitType);
  writeNotNull('IsDefault', instance.isDefault);
  writeNotNull('PrepRate', instance.prepRate);
  writeNotNull('PrepTime', instance.prepTime);
  writeNotNull('PrepExtended', instance.prepExtended);
  writeNotNull('QtyOrdered', instance.qtyOrdered);
  writeNotNull('Price', instance.price);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('MasteritemId', instance.masteritemId);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItem
    _$WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItem(
          inventoryPurchaseItemId: json['InventoryPurchaseItemId'] as int?,
          sessionId: json['SessionId'] as String?,
          barCode: json['BarCode'] as String?,
          manufactureDate: json['ManufactureDate'] as String?,
          printQuantity: json['PrintQuantity'] as int?,
          serialNumber: json['SerialNumber'] as String?,
          rfId: json['RfId'] as String?,
          serialNumberIsMixedCase: json['SerialNumberIsMixedCase'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItemToJson(
        WebApiModulesHomeControlsInventoryPurchaseItemInventoryPurchaseItem
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryPurchaseItemId', instance.inventoryPurchaseItemId);
  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('ManufactureDate', instance.manufactureDate);
  writeNotNull('PrintQuantity', instance.printQuantity);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('RfId', instance.rfId);
  writeNotNull('SerialNumberIsMixedCase', instance.serialNumberIsMixedCase);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventorySearchInventorySearch
    _$WebApiModulesHomeControlsInventorySearchInventorySearchFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventorySearchInventorySearch(
          sessionId: json['SessionId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          id: json['Id'] as int?,
          lineage: json['Lineage'] as String?,
          packageItemId: json['PackageItemId'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          fromDate: json['FromDate'] == null
              ? null
              : DateTime.parse(json['FromDate'] as String),
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
          quantityAvailable: (json['QuantityAvailable'] as num?)?.toDouble(),
          conflictDate: json['ConflictDate'] == null
              ? null
              : DateTime.parse(json['ConflictDate'] as String),
          availabilityState: json['AvailabilityState'] as String?,
          quantityAvailableRegion:
              (json['QuantityAvailableRegion'] as num?)?.toDouble(),
          conflictDateRegion: json['ConflictDateRegion'] == null
              ? null
              : DateTime.parse(json['ConflictDateRegion'] as String),
          availabilityStateRegion: json['AvailabilityStateRegion'] as String?,
          quantityAvailableAllWarehouses:
              (json['QuantityAvailableAllWarehouses'] as num?)?.toDouble(),
          conflictDateAllWarehouses: json['ConflictDateAllWarehouses'] == null
              ? null
              : DateTime.parse(json['ConflictDateAllWarehouses'] as String),
          availabilityStateAllWarehouses:
              json['AvailabilityStateAllWarehouses'] as String?,
          totalQuantityInSession:
              (json['TotalQuantityInSession'] as num?)?.toDouble(),
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchToJson(
        WebApiModulesHomeControlsInventorySearchInventorySearch instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Id', instance.id);
  writeNotNull('Lineage', instance.lineage);
  writeNotNull('PackageItemId', instance.packageItemId);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('FromDate', instance.fromDate?.toIso8601String());
  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  writeNotNull('QuantityAvailable', instance.quantityAvailable);
  writeNotNull('ConflictDate', instance.conflictDate?.toIso8601String());
  writeNotNull('AvailabilityState', instance.availabilityState);
  writeNotNull('QuantityAvailableRegion', instance.quantityAvailableRegion);
  writeNotNull(
      'ConflictDateRegion', instance.conflictDateRegion?.toIso8601String());
  writeNotNull('AvailabilityStateRegion', instance.availabilityStateRegion);
  writeNotNull('QuantityAvailableAllWarehouses',
      instance.quantityAvailableAllWarehouses);
  writeNotNull('ConflictDateAllWarehouses',
      instance.conflictDateAllWarehouses?.toIso8601String());
  writeNotNull('AvailabilityStateAllWarehouses',
      instance.availabilityStateAllWarehouses);
  writeNotNull('TotalQuantityInSession', instance.totalQuantityInSession);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventorySearchInventorySearchAccessoriesRequest
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAccessoriesRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventorySearchInventorySearchAccessoriesRequest(
          sessionId: json['SessionId'] as String?,
          orderId: json['OrderId'] as String?,
          lineage: json['Lineage'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          showAvailability: json['ShowAvailability'] as bool?,
          fromDate: json['FromDate'] == null
              ? null
              : DateTime.parse(json['FromDate'] as String),
          fromTime: json['FromTime'] as String?,
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
          toTime: json['ToTime'] as String?,
          showImages: json['ShowImages'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAccessoriesRequestToJson(
        WebApiModulesHomeControlsInventorySearchInventorySearchAccessoriesRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('Lineage', instance.lineage);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('ShowAvailability', instance.showAvailability);
  writeNotNull('FromDate', instance.fromDate?.toIso8601String());
  writeNotNull('FromTime', instance.fromTime);
  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  writeNotNull('ToTime', instance.toTime);
  writeNotNull('ShowImages', instance.showImages);
  return val;
}

WebApiModulesHomeControlsInventorySearchInventorySearchAddToCompleteKitContainerRequest
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAddToCompleteKitContainerRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventorySearchInventorySearchAddToCompleteKitContainerRequest(
          inventoryId: json['InventoryId'] as String?,
          sessionId: json['SessionId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAddToCompleteKitContainerRequestToJson(
        WebApiModulesHomeControlsInventorySearchInventorySearchAddToCompleteKitContainerRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('SessionId', instance.sessionId);
  return val;
}

WebApiModulesHomeControlsInventorySearchInventorySearchAddToOrderRequest
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAddToOrderRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventorySearchInventorySearchAddToOrderRequest(
          orderId: json['OrderId'] as String?,
          insertAtIndex: json['InsertAtIndex'] as int?,
          sessionId: json['SessionId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchAddToOrderRequestToJson(
        WebApiModulesHomeControlsInventorySearchInventorySearchAddToOrderRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('InsertAtIndex', instance.insertAtIndex);
  writeNotNull('SessionId', instance.sessionId);
  return val;
}

WebApiModulesHomeControlsInventorySearchInventorySearchGetTotalResponse
    _$WebApiModulesHomeControlsInventorySearchInventorySearchGetTotalResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventorySearchInventorySearchGetTotalResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          totalQuantityInSession:
              (json['TotalQuantityInSession'] as num?)?.toDouble(),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchGetTotalResponseToJson(
        WebApiModulesHomeControlsInventorySearchInventorySearchGetTotalResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('TotalQuantityInSession', instance.totalQuantityInSession);
  return val;
}

WebApiModulesHomeControlsInventorySearchInventorySearchRequest
    _$WebApiModulesHomeControlsInventorySearchInventorySearchRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventorySearchInventorySearchRequest(
          sessionId: json['SessionId'] as String?,
          orderId: json['OrderId'] as String?,
          availableFor: json['AvailableFor'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          currencyId: json['CurrencyId'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          categoryId: json['CategoryId'] as String?,
          subCategoryId: json['SubCategoryId'] as String?,
          classification: json['Classification'] as String?,
          searchText: json['SearchText'] as String?,
          attributeId: json['AttributeId'] as String?,
          attributeValueId: json['AttributeValueId'] as String?,
          attributeValueRange: json['AttributeValueRange'] as String?,
          showAvailability: json['ShowAvailability'] as bool?,
          fromDate: json['FromDate'] == null
              ? null
              : DateTime.parse(json['FromDate'] as String),
          fromTime: json['FromTime'] as String?,
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
          toTime: json['ToTime'] as String?,
          showImages: json['ShowImages'] as bool?,
          hideInventoryWithZeroQuantity:
              json['HideInventoryWithZeroQuantity'] as bool?,
          sortBy: json['SortBy'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchRequestToJson(
        WebApiModulesHomeControlsInventorySearchInventorySearchRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('Classification', instance.classification);
  writeNotNull('SearchText', instance.searchText);
  writeNotNull('AttributeId', instance.attributeId);
  writeNotNull('AttributeValueId', instance.attributeValueId);
  writeNotNull('AttributeValueRange', instance.attributeValueRange);
  writeNotNull('ShowAvailability', instance.showAvailability);
  writeNotNull('FromDate', instance.fromDate?.toIso8601String());
  writeNotNull('FromTime', instance.fromTime);
  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  writeNotNull('ToTime', instance.toTime);
  writeNotNull('ShowImages', instance.showImages);
  writeNotNull(
      'HideInventoryWithZeroQuantity', instance.hideInventoryWithZeroQuantity);
  writeNotNull('SortBy', instance.sortBy);
  return val;
}

WebApiModulesHomeControlsInventorySearchInventorySearchSaveNoteRequest
    _$WebApiModulesHomeControlsInventorySearchInventorySearchSaveNoteRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventorySearchInventorySearchSaveNoteRequest(
          sessionId: json['SessionId'] as String?,
          quikSearchId: json['QuikSearchId'] as int?,
          note: json['Note'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchInventorySearchSaveNoteRequestToJson(
        WebApiModulesHomeControlsInventorySearchInventorySearchSaveNoteRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('QuikSearchId', instance.quikSearchId);
  writeNotNull('Note', instance.note);
  return val;
}

WebApiModulesHomeControlsInventorySearchPreviewInventorySearchPreview
    _$WebApiModulesHomeControlsInventorySearchPreviewInventorySearchPreviewFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventorySearchPreviewInventorySearchPreview(
          id: json['Id'] as String?,
          sessionId: json['SessionId'] as String?,
          parentId: json['ParentId'] as String?,
          grandParentId: json['GrandParentId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          note: json['Note'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySearchPreviewInventorySearchPreviewToJson(
        WebApiModulesHomeControlsInventorySearchPreviewInventorySearchPreview
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Id', instance.id);
  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('ParentId', instance.parentId);
  writeNotNull('GrandParentId', instance.grandParentId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('Note', instance.note);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventorySubstituteInventorySubstitute
    _$WebApiModulesHomeControlsInventorySubstituteInventorySubstituteFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventorySubstituteInventorySubstitute(
          inventorySubstituteId: json['InventorySubstituteId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          substituteInventoryId: json['SubstituteInventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          manufacturerId: json['ManufacturerId'] as String?,
          manufacturer: json['Manufacturer'] as String?,
          rate: (json['Rate'] as num?)?.toDouble(),
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventorySubstituteInventorySubstituteToJson(
        WebApiModulesHomeControlsInventorySubstituteInventorySubstitute
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventorySubstituteId', instance.inventorySubstituteId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('SubstituteInventoryId', instance.substituteInventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('ManufacturerId', instance.manufacturerId);
  writeNotNull('Manufacturer', instance.manufacturer);
  writeNotNull('Rate', instance.rate);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryVendorInventoryVendor
    _$WebApiModulesHomeControlsInventoryVendorInventoryVendorFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryVendorInventoryVendor(
          inventoryVendorId: json['InventoryVendorId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          vendorId: json['VendorId'] as String?,
          vendor: json['Vendor'] as String?,
          contactName: json['ContactName'] as String?,
          contactOfficePhone: json['ContactOfficePhone'] as String?,
          contactEmail: json['ContactEmail'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryVendorInventoryVendorToJson(
        WebApiModulesHomeControlsInventoryVendorInventoryVendor instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryVendorId', instance.inventoryVendorId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('ContactName', instance.contactName);
  writeNotNull('ContactOfficePhone', instance.contactOfficePhone);
  writeNotNull('ContactEmail', instance.contactEmail);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse
    _$WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse(
          inventoryId: json['InventoryId'] as String?,
          hourlyRate: (json['HourlyRate'] as num?)?.toDouble(),
          hourlyCost: (json['HourlyCost'] as num?)?.toDouble(),
          dailyRate: (json['DailyRate'] as num?)?.toDouble(),
          dailyCost: (json['DailyCost'] as num?)?.toDouble(),
          weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
          weeklyCost: (json['WeeklyCost'] as num?)?.toDouble(),
          week2Rate: (json['Week2Rate'] as num?)?.toDouble(),
          week3Rate: (json['Week3Rate'] as num?)?.toDouble(),
          week4Rate: (json['Week4Rate'] as num?)?.toDouble(),
          monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
          monthlyCost: (json['MonthlyCost'] as num?)?.toDouble(),
          retail: (json['Retail'] as num?)?.toDouble(),
          price: (json['Price'] as num?)?.toDouble(),
          defaultCost: (json['DefaultCost'] as num?)?.toDouble(),
          averageCost: (json['AverageCost'] as num?)?.toDouble(),
          markupPercent: (json['MarkupPercent'] as num?)?.toDouble(),
          reorderPoint: json['ReorderPoint'] as int?,
          reorderQuantity: json['ReorderQuantity'] as int?,
          maximumDiscount: (json['MaximumDiscount'] as num?)?.toDouble(),
          minimumDaysPerWeek: (json['MinimumDaysPerWeek'] as num?)?.toDouble(),
          hasTieredCost: json['HasTieredCost'] as bool?,
          restockingFee: (json['RestockingFee'] as num?)?.toDouble(),
          restockingPercent: (json['RestockingPercent'] as num?)?.toDouble(),
          dateOfLastPhysicalInventory:
              json['DateOfLastPhysicalInventory'] as String?,
          qty: (json['Qty'] as num?)?.toDouble(),
          qtyConsigned: (json['QtyConsigned'] as num?)?.toDouble(),
          qtyIn: (json['QtyIn'] as num?)?.toDouble(),
          qtyInContainer: (json['QtyInContainer'] as num?)?.toDouble(),
          qtyQcRequired: json['QtyQcRequired'] as int?,
          qtyStaged: (json['QtyStaged'] as num?)?.toDouble(),
          qtyOut: (json['QtyOut'] as num?)?.toDouble(),
          qtyInRepair: (json['QtyInRepair'] as num?)?.toDouble(),
          qtyOnPo: (json['QtyOnPo'] as num?)?.toDouble(),
          qtyAllocated: (json['QtyAllocated'] as num?)?.toDouble(),
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          availabilityByHour: json['AvailabilityByHour'] as bool?,
          availabilityByDeal: json['AvailabilityByDeal'] as bool?,
          availabilityByAsset: json['AvailabilityByAsset'] as bool?,
          qcRequired: json['QcRequired'] as bool?,
          availabilityQcDelay: json['AvailabilityQcDelay'] as int?,
          allowAllUsersAddToOrder: json['AllowAllUsersAddToOrder'] as bool?,
          unitValue: (json['UnitValue'] as num?)?.toDouble(),
          replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
          markupReplacementCost: json['MarkupReplacementCost'] as bool?,
          replacementCostMarkupPercent:
              (json['ReplacementCostMarkupPercent'] as num?)?.toDouble(),
          isWarehouseSpecific: json['IsWarehouseSpecific'] as bool?,
          itemDescription: json['ItemDescription'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseOrderBy: json['WarehouseOrderBy'] as int?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouseToJson(
        WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('HourlyRate', instance.hourlyRate);
  writeNotNull('HourlyCost', instance.hourlyCost);
  writeNotNull('DailyRate', instance.dailyRate);
  writeNotNull('DailyCost', instance.dailyCost);
  writeNotNull('WeeklyRate', instance.weeklyRate);
  writeNotNull('WeeklyCost', instance.weeklyCost);
  writeNotNull('Week2Rate', instance.week2Rate);
  writeNotNull('Week3Rate', instance.week3Rate);
  writeNotNull('Week4Rate', instance.week4Rate);
  writeNotNull('MonthlyRate', instance.monthlyRate);
  writeNotNull('MonthlyCost', instance.monthlyCost);
  writeNotNull('Retail', instance.retail);
  writeNotNull('Price', instance.price);
  writeNotNull('DefaultCost', instance.defaultCost);
  writeNotNull('AverageCost', instance.averageCost);
  writeNotNull('MarkupPercent', instance.markupPercent);
  writeNotNull('ReorderPoint', instance.reorderPoint);
  writeNotNull('ReorderQuantity', instance.reorderQuantity);
  writeNotNull('MaximumDiscount', instance.maximumDiscount);
  writeNotNull('MinimumDaysPerWeek', instance.minimumDaysPerWeek);
  writeNotNull('HasTieredCost', instance.hasTieredCost);
  writeNotNull('RestockingFee', instance.restockingFee);
  writeNotNull('RestockingPercent', instance.restockingPercent);
  writeNotNull(
      'DateOfLastPhysicalInventory', instance.dateOfLastPhysicalInventory);
  writeNotNull('Qty', instance.qty);
  writeNotNull('QtyConsigned', instance.qtyConsigned);
  writeNotNull('QtyIn', instance.qtyIn);
  writeNotNull('QtyInContainer', instance.qtyInContainer);
  writeNotNull('QtyQcRequired', instance.qtyQcRequired);
  writeNotNull('QtyStaged', instance.qtyStaged);
  writeNotNull('QtyOut', instance.qtyOut);
  writeNotNull('QtyInRepair', instance.qtyInRepair);
  writeNotNull('QtyOnPo', instance.qtyOnPo);
  writeNotNull('QtyAllocated', instance.qtyAllocated);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('AvailabilityByHour', instance.availabilityByHour);
  writeNotNull('AvailabilityByDeal', instance.availabilityByDeal);
  writeNotNull('AvailabilityByAsset', instance.availabilityByAsset);
  writeNotNull('QcRequired', instance.qcRequired);
  writeNotNull('AvailabilityQcDelay', instance.availabilityQcDelay);
  writeNotNull('AllowAllUsersAddToOrder', instance.allowAllUsersAddToOrder);
  writeNotNull('UnitValue', instance.unitValue);
  writeNotNull('ReplacementCost', instance.replacementCost);
  writeNotNull('MarkupReplacementCost', instance.markupReplacementCost);
  writeNotNull(
      'ReplacementCostMarkupPercent', instance.replacementCostMarkupPercent);
  writeNotNull('IsWarehouseSpecific', instance.isWarehouseSpecific);
  writeNotNull('ItemDescription', instance.itemDescription);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseOrderBy', instance.warehouseOrderBy);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecific
    _$WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecific(
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecificToJson(
        WebApiModulesHomeControlsInventoryWarehouseSpecificInventoryWarehouseSpecific
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatch
    _$WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatch(
          invoiceCreationBatchId: json['InvoiceCreationBatchId'] as String?,
          batchNumber: json['BatchNumber'] as int?,
          batchNumberAsString: json['BatchNumberAsString'] as String?,
          batchDate: json['BatchDate'] as String?,
          batchType: json['BatchType'] as String?,
          invoiceCount: json['InvoiceCount'] as int?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatchToJson(
        WebApiModulesHomeControlsInvoiceCreationBatchInvoiceCreationBatch
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InvoiceCreationBatchId', instance.invoiceCreationBatchId);
  writeNotNull('BatchNumber', instance.batchNumber);
  writeNotNull('BatchNumberAsString', instance.batchNumberAsString);
  writeNotNull('BatchDate', instance.batchDate);
  writeNotNull('BatchType', instance.batchType);
  writeNotNull('InvoiceCount', instance.invoiceCount);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInvoiceItemInvoiceItem
    _$WebApiModulesHomeControlsInvoiceItemInvoiceItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInvoiceItemInvoiceItem(
          invoiceItemId: json['InvoiceItemId'] as String?,
          invoiceId: json['InvoiceId'] as String?,
          itemId: json['ItemId'] as String?,
          itemClass: json['ItemClass'] as String?,
          itemOrder: json['ItemOrder'] as String?,
          inventoryId: json['InventoryId'] as String?,
          orderId: json['OrderId'] as String?,
          parentId: json['ParentId'] as String?,
          repairId: json['RepairId'] as String?,
          repairNumber: json['RepairNumber'] as String?,
          recType: json['RecType'] as String?,
          availableFor: json['AvailableFor'] as String?,
          bold: json['Bold'] as bool?,
          optionColor: json['OptionColor'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          nestedOrderItemId: json['NestedOrderItemId'] as String?,
          isAdjusted: json['IsAdjusted'] as bool?,
          isRecurring: json['IsRecurring'] as bool?,
          isManualBill: json['IsManualBill'] as bool?,
          voidInvoiceItemId: json['VoidInvoiceItemId'] as String?,
          isProfitCenter: json['IsProfitCenter'] as bool?,
          profitCenterChargeCode1: json['ProfitCenterChargeCode1'] as String?,
          profitCenterChargeCode2: json['ProfitCenterChargeCode2'] as String?,
          profitCenterChargeCode: json['ProfitCenterChargeCode'] as String?,
          activity: json['Activity'] as String?,
          activityExportCode: json['ActivityExportCode'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          poNumber: json['PoNumber'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          barCode: json['BarCode'] as String?,
          serialNumber: json['SerialNumber'] as String?,
          fromDate: json['FromDate'] as String?,
          fromTime: json['FromTime'] as String?,
          toDate: json['ToDate'] as String?,
          toTime: json['ToTime'] as String?,
          days: (json['Days'] as num?)?.toDouble(),
          billableDays: (json['BillableDays'] as num?)?.toDouble(),
          quantity: (json['Quantity'] as num?)?.toDouble(),
          cost: (json['Cost'] as num?)?.toDouble(),
          rate: (json['Rate'] as num?)?.toDouble(),
          unit: json['Unit'] as String?,
          daysPerWeek: (json['DaysPerWeek'] as num?)?.toDouble(),
          discountPercent: (json['DiscountPercent'] as num?)?.toDouble(),
          discountAmount: (json['DiscountAmount'] as num?)?.toDouble(),
          split: json['Split'] as int?,
          hours: (json['Hours'] as num?)?.toDouble(),
          hoursOvertime: (json['HoursOvertime'] as num?)?.toDouble(),
          hoursDoubletime: (json['HoursDoubletime'] as num?)?.toDouble(),
          crewActualHours: json['CrewActualHours'] as bool?,
          meterOut: (json['MeterOut'] as num?)?.toDouble(),
          meterIn: (json['MeterIn'] as num?)?.toDouble(),
          lineTotalBeforeDiscount:
              (json['LineTotalBeforeDiscount'] as num?)?.toDouble(),
          extended: (json['Extended'] as num?)?.toDouble(),
          lineTotal: (json['LineTotal'] as num?)?.toDouble(),
          taxable: json['Taxable'] as bool?,
          tax: (json['Tax'] as num?)?.toDouble(),
          tax2: (json['Tax2'] as num?)?.toDouble(),
          lineTotalWithTax: (json['LineTotalWithTax'] as num?)?.toDouble(),
          adjustment: (json['Adjustment'] as num?)?.toDouble(),
          rebateAmount: (json['RebateAmount'] as num?)?.toDouble(),
          adjustedRevenue: (json['AdjustedRevenue'] as num?)?.toDouble(),
          quikPayExtended: (json['QuikPayExtended'] as num?)?.toDouble(),
          currencyId: json['CurrencyId'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          nestingLevel: json['NestingLevel'] as int?,
          invoiceNumber: json['InvoiceNumber'] as String?,
          invoiceStatus: json['InvoiceStatus'] as String?,
          invoiceDate: json['InvoiceDate'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsInvoiceItemInvoiceItemToJson(
    WebApiModulesHomeControlsInvoiceItemInvoiceItem instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InvoiceItemId', instance.invoiceItemId);
  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('ParentId', instance.parentId);
  writeNotNull('RepairId', instance.repairId);
  writeNotNull('RepairNumber', instance.repairNumber);
  writeNotNull('RecType', instance.recType);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('Bold', instance.bold);
  writeNotNull('OptionColor', instance.optionColor);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('NestedOrderItemId', instance.nestedOrderItemId);
  writeNotNull('IsAdjusted', instance.isAdjusted);
  writeNotNull('IsRecurring', instance.isRecurring);
  writeNotNull('IsManualBill', instance.isManualBill);
  writeNotNull('VoidInvoiceItemId', instance.voidInvoiceItemId);
  writeNotNull('IsProfitCenter', instance.isProfitCenter);
  writeNotNull('ProfitCenterChargeCode1', instance.profitCenterChargeCode1);
  writeNotNull('ProfitCenterChargeCode2', instance.profitCenterChargeCode2);
  writeNotNull('ProfitCenterChargeCode', instance.profitCenterChargeCode);
  writeNotNull('Activity', instance.activity);
  writeNotNull('ActivityExportCode', instance.activityExportCode);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('PoNumber', instance.poNumber);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('FromDate', instance.fromDate);
  writeNotNull('FromTime', instance.fromTime);
  writeNotNull('ToDate', instance.toDate);
  writeNotNull('ToTime', instance.toTime);
  writeNotNull('Days', instance.days);
  writeNotNull('BillableDays', instance.billableDays);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('Cost', instance.cost);
  writeNotNull('Rate', instance.rate);
  writeNotNull('Unit', instance.unit);
  writeNotNull('DaysPerWeek', instance.daysPerWeek);
  writeNotNull('DiscountPercent', instance.discountPercent);
  writeNotNull('DiscountAmount', instance.discountAmount);
  writeNotNull('Split', instance.split);
  writeNotNull('Hours', instance.hours);
  writeNotNull('HoursOvertime', instance.hoursOvertime);
  writeNotNull('HoursDoubletime', instance.hoursDoubletime);
  writeNotNull('CrewActualHours', instance.crewActualHours);
  writeNotNull('MeterOut', instance.meterOut);
  writeNotNull('MeterIn', instance.meterIn);
  writeNotNull('LineTotalBeforeDiscount', instance.lineTotalBeforeDiscount);
  writeNotNull('Extended', instance.extended);
  writeNotNull('LineTotal', instance.lineTotal);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('Tax', instance.tax);
  writeNotNull('Tax2', instance.tax2);
  writeNotNull('LineTotalWithTax', instance.lineTotalWithTax);
  writeNotNull('Adjustment', instance.adjustment);
  writeNotNull('RebateAmount', instance.rebateAmount);
  writeNotNull('AdjustedRevenue', instance.adjustedRevenue);
  writeNotNull('QuikPayExtended', instance.quikPayExtended);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('NestingLevel', instance.nestingLevel);
  writeNotNull('InvoiceNumber', instance.invoiceNumber);
  writeNotNull('InvoiceStatus', instance.invoiceStatus);
  writeNotNull('InvoiceDate', instance.invoiceDate);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInvoiceNoteInvoiceNote
    _$WebApiModulesHomeControlsInvoiceNoteInvoiceNoteFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInvoiceNoteInvoiceNote(
          invoiceNoteId: json['InvoiceNoteId'] as String?,
          invoiceId: json['InvoiceId'] as String?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          noteDate: json['NoteDate'] as String?,
          description: json['Description'] as String?,
          notesById: json['NotesById'] as String?,
          notesBy: json['NotesBy'] as String?,
          notes: json['Notes'] as String?,
          printOnInvoice: json['PrintOnInvoice'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsInvoiceNoteInvoiceNoteToJson(
    WebApiModulesHomeControlsInvoiceNoteInvoiceNote instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InvoiceNoteId', instance.invoiceNoteId);
  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('NoteDate', instance.noteDate);
  writeNotNull('Description', instance.description);
  writeNotNull('NotesById', instance.notesById);
  writeNotNull('NotesBy', instance.notesBy);
  writeNotNull('Notes', instance.notes);
  writeNotNull('PrintOnInvoice', instance.printOnInvoice);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInvoiceOrderInvoiceOrder
    _$WebApiModulesHomeControlsInvoiceOrderInvoiceOrderFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInvoiceOrderInvoiceOrder(
          orderInvoiceId: json['OrderInvoiceId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          orderNumberAndDescription:
              json['OrderNumberAndDescription'] as String?,
          referenceNumber: json['ReferenceNumber'] as String?,
          location: json['Location'] as String?,
          orderLocation: json['OrderLocation'] as String?,
          officeLocation: json['OfficeLocation'] as String?,
          department: json['Department'] as String?,
          agentId: json['AgentId'] as String?,
          agent: json['Agent'] as String?,
          agentEmail: json['AgentEmail'] as String?,
          agentPhoneAndExtension: json['AgentPhoneAndExtension'] as String?,
          agentPhone: json['AgentPhone'] as String?,
          agentExtension: json['AgentExtension'] as String?,
          agentFax: json['AgentFax'] as String?,
          projectManagerId: json['ProjectManagerId'] as String?,
          projectManager: json['ProjectManager'] as String?,
          projectManagerEmail: json['ProjectManagerEmail'] as String?,
          projectManagerPhoneAndExtension:
              json['ProjectManagerPhoneAndExtension'] as String?,
          projectManagerPhone: json['ProjectManagerPhone'] as String?,
          projectManagerExtension: json['ProjectManagerExtension'] as String?,
          projectManagerFax: json['ProjectManagerFax'] as String?,
          estimatedStartDate: json['EstimatedStartDate'] as String?,
          estimatedStopDate: json['EstimatedStopDate'] as String?,
          estimatedStartTime: json['EstimatedStartTime'] as String?,
          estimatedStopTime: json['EstimatedStopTime'] as String?,
          billingStartDate: json['BillingStartDate'] as String?,
          billingEndDate: json['BillingEndDate'] as String?,
          billingStopDate: json['BillingStopDate'] as String?,
          usageStartDate: json['UsageStartDate'] as String?,
          usageStopDate: json['UsageStopDate'] as String?,
          poNumber: json['PoNumber'] as String?,
          purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
          orderId: json['OrderId'] as String?,
          flatPoId: json['FlatPoId'] as String?,
          excludeFromFlatPO: json['ExcludeFromFlatPO'] as bool?,
          billableFlat: json['BillableFlat'] as bool?,
          invoiceId: json['InvoiceId'] as String?,
          summaryInvoiceOrderBy:
              (json['SummaryInvoiceOrderBy'] as num?)?.toDouble(),
          rentalSubTotal: (json['RentalSubTotal'] as num?)?.toDouble(),
          laborSubTotal: (json['LaborSubTotal'] as num?)?.toDouble(),
          nonRentalSubTotal: (json['NonRentalSubTotal'] as num?)?.toDouble(),
          orderInvoiceSubTotal:
              (json['OrderInvoiceSubTotal'] as num?)?.toDouble(),
          orderInvoiceTax: (json['OrderInvoiceTax'] as num?)?.toDouble(),
          orderInvoiceTotal: (json['OrderInvoiceTotal'] as num?)?.toDouble(),
          currencyId: json['CurrencyId'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          currency: json['Currency'] as String?,
          orderBy: json['OrderBy'] as String?,
          customerId: json['CustomerId'] as String?,
          customer: json['Customer'] as String?,
          customerNumber: json['CustomerNumber'] as String?,
          customerEmail: json['CustomerEmail'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          dealNumber: json['DealNumber'] as String?,
          dealAndDealNumber: json['DealAndDealNumber'] as String?,
          dealEmail: json['DealEmail'] as String?,
          paymentTerms: json['PaymentTerms'] as String?,
          hasRecurring: json['HasRecurring'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsInvoiceOrderInvoiceOrderToJson(
    WebApiModulesHomeControlsInvoiceOrderInvoiceOrder instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderInvoiceId', instance.orderInvoiceId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('OrderNumberAndDescription', instance.orderNumberAndDescription);
  writeNotNull('ReferenceNumber', instance.referenceNumber);
  writeNotNull('Location', instance.location);
  writeNotNull('OrderLocation', instance.orderLocation);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('Department', instance.department);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('AgentEmail', instance.agentEmail);
  writeNotNull('AgentPhoneAndExtension', instance.agentPhoneAndExtension);
  writeNotNull('AgentPhone', instance.agentPhone);
  writeNotNull('AgentExtension', instance.agentExtension);
  writeNotNull('AgentFax', instance.agentFax);
  writeNotNull('ProjectManagerId', instance.projectManagerId);
  writeNotNull('ProjectManager', instance.projectManager);
  writeNotNull('ProjectManagerEmail', instance.projectManagerEmail);
  writeNotNull('ProjectManagerPhoneAndExtension',
      instance.projectManagerPhoneAndExtension);
  writeNotNull('ProjectManagerPhone', instance.projectManagerPhone);
  writeNotNull('ProjectManagerExtension', instance.projectManagerExtension);
  writeNotNull('ProjectManagerFax', instance.projectManagerFax);
  writeNotNull('EstimatedStartDate', instance.estimatedStartDate);
  writeNotNull('EstimatedStopDate', instance.estimatedStopDate);
  writeNotNull('EstimatedStartTime', instance.estimatedStartTime);
  writeNotNull('EstimatedStopTime', instance.estimatedStopTime);
  writeNotNull('BillingStartDate', instance.billingStartDate);
  writeNotNull('BillingEndDate', instance.billingEndDate);
  writeNotNull('BillingStopDate', instance.billingStopDate);
  writeNotNull('UsageStartDate', instance.usageStartDate);
  writeNotNull('UsageStopDate', instance.usageStopDate);
  writeNotNull('PoNumber', instance.poNumber);
  writeNotNull('PurchaseOrderNumber', instance.purchaseOrderNumber);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('FlatPoId', instance.flatPoId);
  writeNotNull('ExcludeFromFlatPO', instance.excludeFromFlatPO);
  writeNotNull('BillableFlat', instance.billableFlat);
  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('SummaryInvoiceOrderBy', instance.summaryInvoiceOrderBy);
  writeNotNull('RentalSubTotal', instance.rentalSubTotal);
  writeNotNull('LaborSubTotal', instance.laborSubTotal);
  writeNotNull('NonRentalSubTotal', instance.nonRentalSubTotal);
  writeNotNull('OrderInvoiceSubTotal', instance.orderInvoiceSubTotal);
  writeNotNull('OrderInvoiceTax', instance.orderInvoiceTax);
  writeNotNull('OrderInvoiceTotal', instance.orderInvoiceTotal);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('Currency', instance.currency);
  writeNotNull('OrderBy', instance.orderBy);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('CustomerNumber', instance.customerNumber);
  writeNotNull('CustomerEmail', instance.customerEmail);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('DealAndDealNumber', instance.dealAndDealNumber);
  writeNotNull('DealEmail', instance.dealEmail);
  writeNotNull('PaymentTerms', instance.paymentTerms);
  writeNotNull('HasRecurring', instance.hasRecurring);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsInvoiceReceiptInvoiceReceipt
    _$WebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsInvoiceReceiptInvoiceReceipt(
          invoiceReceiptId: json['InvoiceReceiptId'] as int?,
          invoiceId: json['InvoiceId'] as String?,
          receiptId: json['ReceiptId'] as String?,
          receiptDate: json['ReceiptDate'] as String?,
          paymentTypeId: json['PaymentTypeId'] as String?,
          paymentType: json['PaymentType'] as String?,
          checkNumber: json['CheckNumber'] as String?,
          recType: json['RecType'] as bool?,
          paymentBy: json['PaymentBy'] as String?,
          receiptCustomerId: json['ReceiptCustomerId'] as String?,
          receiptCustomer: json['ReceiptCustomer'] as String?,
          receiptDealId: json['ReceiptDealId'] as String?,
          receiptDeal: json['ReceiptDeal'] as String?,
          invoiceNumber: json['InvoiceNumber'] as String?,
          invoiceDate: json['InvoiceDate'] as String?,
          invoiceDescription: json['InvoiceDescription'] as String?,
          invoiceDealId: json['InvoiceDealId'] as String?,
          invoiceDeal: json['InvoiceDeal'] as String?,
          amount: (json['Amount'] as num?)?.toDouble(),
          appliedById: json['AppliedById'] as String?,
          appliedBy: json['AppliedBy'] as String?,
          paymentMemo: json['PaymentMemo'] as String?,
          currencyId: json['CurrencyId'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsInvoiceReceiptInvoiceReceiptToJson(
        WebApiModulesHomeControlsInvoiceReceiptInvoiceReceipt instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InvoiceReceiptId', instance.invoiceReceiptId);
  writeNotNull('InvoiceId', instance.invoiceId);
  writeNotNull('ReceiptId', instance.receiptId);
  writeNotNull('ReceiptDate', instance.receiptDate);
  writeNotNull('PaymentTypeId', instance.paymentTypeId);
  writeNotNull('PaymentType', instance.paymentType);
  writeNotNull('CheckNumber', instance.checkNumber);
  writeNotNull('RecType', instance.recType);
  writeNotNull('PaymentBy', instance.paymentBy);
  writeNotNull('ReceiptCustomerId', instance.receiptCustomerId);
  writeNotNull('ReceiptCustomer', instance.receiptCustomer);
  writeNotNull('ReceiptDealId', instance.receiptDealId);
  writeNotNull('ReceiptDeal', instance.receiptDeal);
  writeNotNull('InvoiceNumber', instance.invoiceNumber);
  writeNotNull('InvoiceDate', instance.invoiceDate);
  writeNotNull('InvoiceDescription', instance.invoiceDescription);
  writeNotNull('InvoiceDealId', instance.invoiceDealId);
  writeNotNull('InvoiceDeal', instance.invoiceDeal);
  writeNotNull('Amount', instance.amount);
  writeNotNull('AppliedById', instance.appliedById);
  writeNotNull('AppliedBy', instance.appliedBy);
  writeNotNull('PaymentMemo', instance.paymentMemo);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsItemAttributeValueItemAttributeValue
    _$WebApiModulesHomeControlsItemAttributeValueItemAttributeValueFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsItemAttributeValueItemAttributeValue(
          itemAttributeValueId: json['ItemAttributeValueId'] as String?,
          attributeId: json['AttributeId'] as String?,
          itemId: json['ItemId'] as String?,
          attribute: json['Attribute'] as String?,
          attributeValueId: json['AttributeValueId'] as String?,
          attributeValue: json['AttributeValue'] as String?,
          numericValue: (json['NumericValue'] as num?)?.toDouble(),
          numericOnly: json['NumericOnly'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsItemAttributeValueItemAttributeValueToJson(
        WebApiModulesHomeControlsItemAttributeValueItemAttributeValue
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ItemAttributeValueId', instance.itemAttributeValueId);
  writeNotNull('AttributeId', instance.attributeId);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('Attribute', instance.attribute);
  writeNotNull('AttributeValueId', instance.attributeValueId);
  writeNotNull('AttributeValue', instance.attributeValue);
  writeNotNull('NumericValue', instance.numericValue);
  writeNotNull('NumericOnly', instance.numericOnly);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsItemQcItemQc
    _$WebApiModulesHomeControlsItemQcItemQcFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsItemQcItemQc(
          itemQcId: json['ItemQcId'] as String?,
          itemId: json['ItemId'] as String?,
          qcRequiredAsOf: json['QcRequiredAsOf'] as String?,
          qcByUsersId: json['QcByUsersId'] as String?,
          qcByUser: json['QcByUser'] as String?,
          qcDateTime: json['QcDateTime'] as String?,
          lastOrderId: json['LastOrderId'] as String?,
          lastOrderNumber: json['LastOrderNumber'] as String?,
          lastOrderDescription: json['LastOrderDescription'] as String?,
          lastDealId: json['LastDealId'] as String?,
          lastDealNumber: json['LastDealNumber'] as String?,
          lastDeal: json['LastDeal'] as String?,
          conditionId: json['ConditionId'] as String?,
          inContractId: json['InContractId'] as String?,
          condition: json['Condition'] as String?,
          note: json['Note'] as String?,
          hasImage: json['HasImage'] as bool?,
          qcAppImageId: json['QcAppImageId'] as String?,
          datstamp: json['Datstamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsItemQcItemQcToJson(
    WebApiModulesHomeControlsItemQcItemQc instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ItemQcId', instance.itemQcId);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('QcRequiredAsOf', instance.qcRequiredAsOf);
  writeNotNull('QcByUsersId', instance.qcByUsersId);
  writeNotNull('QcByUser', instance.qcByUser);
  writeNotNull('QcDateTime', instance.qcDateTime);
  writeNotNull('LastOrderId', instance.lastOrderId);
  writeNotNull('LastOrderNumber', instance.lastOrderNumber);
  writeNotNull('LastOrderDescription', instance.lastOrderDescription);
  writeNotNull('LastDealId', instance.lastDealId);
  writeNotNull('LastDealNumber', instance.lastDealNumber);
  writeNotNull('LastDeal', instance.lastDeal);
  writeNotNull('ConditionId', instance.conditionId);
  writeNotNull('InContractId', instance.inContractId);
  writeNotNull('Condition', instance.condition);
  writeNotNull('Note', instance.note);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('QcAppImageId', instance.qcAppImageId);
  writeNotNull('Datstamp', instance.datstamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionRequest
    _$WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionRequest(
          sourceOrderId: json['SourceOrderId'] as String?,
          sessionId: json['SessionId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionRequestToJson(
        WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SourceOrderId', instance.sourceOrderId);
  writeNotNull('SessionId', instance.sessionId);
  return val;
}

WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionResponse
    _$WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionResponseToJson(
        WebApiModulesHomeControlsLossAndDamageCompleteLossAndDamageSessionResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsLossAndDamageCreateLossAndDamageOrderFromRepairResponse
    _$WebApiModulesHomeControlsLossAndDamageCreateLossAndDamageOrderFromRepairResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageCreateLossAndDamageOrderFromRepairResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          order: json['Order'] == null
              ? null
              : WebApiModulesAgentOrderOrder.fromJson(
                  json['Order'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageCreateLossAndDamageOrderFromRepairResponseToJson(
        WebApiModulesHomeControlsLossAndDamageCreateLossAndDamageOrderFromRepairResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('Order', instance.order?.toJson());
  return val;
}

WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemRequest
    _$WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemRequest(
          orderId: json['OrderId'] as String?,
          locationId: json['LocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemRequestToJson(
        WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemResponse
    _$WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemResponseToJson(
        WebApiModulesHomeControlsLossAndDamageRetireLossAndDamageItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemRequest
    _$WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemRequest(
          sessionId: json['SessionId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemRequestToJson(
        WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  return val;
}

WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemResponse
    _$WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemResponseToJson(
        WebApiModulesHomeControlsLossAndDamageSelectAllNoneLossAndDamageItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionRequest
    _$WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionRequest(
          dealId: json['DealId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          orderIds: json['OrderIds'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionRequestToJson(
        WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DealId', instance.dealId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('OrderIds', instance.orderIds);
  return val;
}

WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionResponse
    _$WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionResponse(
          sessionId: json['SessionId'] as String?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionResponseToJson(
        WebApiModulesHomeControlsLossAndDamageStartLossAndDamageSessionResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemRequest
    _$WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemRequest(
          sessionId: json['SessionId'] as String?,
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          barCode: json['BarCode'] as String?,
          quantity: json['Quantity'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemRequestToJson(
        WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemResponse
    _$WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemResponse(
          newQuantity: json['NewQuantity'] as int?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemResponseToJson(
        WebApiModulesHomeControlsLossAndDamageUpdateLossAndDamageItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('NewQuantity', instance.newQuantity);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsManifestManifest
    _$WebApiModulesHomeControlsManifestManifestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsManifestManifest(
          manifestId: json['ManifestId'] as String?,
          manifestNumber: json['ManifestNumber'] as String?,
          manifestDate: json['ManifestDate'] as String?,
          contractType: json['ContractType'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          locationId: json['LocationId'] as String?,
          location: json['Location'] as String?,
          locationCode: json['LocationCode'] as String?,
          nameFirstMiddleLast: json['NameFirstMiddleLast'] as String?,
          transferId: json['TransferId'] as String?,
          transferNumber: json['TransferNumber'] as String?,
          transferDescription: json['TransferDescription'] as String?,
          hasVoid: json['HasVoid'] as bool?,
          rental: json['Rental'] as bool?,
          sales: json['Sales'] as bool?,
          exchange: json['Exchange'] as bool?,
          manifestTime: json['ManifestTime'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsManifestManifestToJson(
    WebApiModulesHomeControlsManifestManifest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ManifestId', instance.manifestId);
  writeNotNull('ManifestNumber', instance.manifestNumber);
  writeNotNull('ManifestDate', instance.manifestDate);
  writeNotNull('ContractType', instance.contractType);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('Location', instance.location);
  writeNotNull('LocationCode', instance.locationCode);
  writeNotNull('NameFirstMiddleLast', instance.nameFirstMiddleLast);
  writeNotNull('TransferId', instance.transferId);
  writeNotNull('TransferNumber', instance.transferNumber);
  writeNotNull('TransferDescription', instance.transferDescription);
  writeNotNull('HasVoid', instance.hasVoid);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('Exchange', instance.exchange);
  writeNotNull('ManifestTime', instance.manifestTime);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsOrderContactOrderContact
    _$WebApiModulesHomeControlsOrderContactOrderContactFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderContactOrderContact(
          orderContactId: json['OrderContactId'] as int?,
          orderId: json['OrderId'] as String?,
          contactId: json['ContactId'] as String?,
          nameFml: json['NameFml'] as String?,
          nameLfm: json['NameLfm'] as String?,
          person: json['Person'] as String?,
          personColor: json['PersonColor'] as String?,
          firstName: json['FirstName'] as String?,
          middleInitial: json['MiddleInitial'] as String?,
          lastName: json['LastName'] as String?,
          contactTitle: json['ContactTitle'] as String?,
          officePhone: json['OfficePhone'] as String?,
          officeExtension: json['OfficeExtension'] as String?,
          mobilePhone: json['MobilePhone'] as String?,
          email: json['Email'] as String?,
          pager: json['Pager'] as String?,
          pagerPin: json['PagerPin'] as String?,
          jobTitle: json['JobTitle'] as String?,
          contactTitleId: json['ContactTitleId'] as String?,
          companyContactId: json['CompanyContactId'] as String?,
          companyId: json['CompanyId'] as String?,
          isPrimary: json['IsPrimary'] as bool?,
          countryId: json['CountryId'] as String?,
          isOrderedBy: json['IsOrderedBy'] as bool?,
          isProductionContact: json['IsProductionContact'] as bool?,
          isPrintable: json['IsPrintable'] as bool?,
          contactOnOrder: json['ContactOnOrder'] as bool?,
          inactive: json['Inactive'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsOrderContactOrderContactToJson(
    WebApiModulesHomeControlsOrderContactOrderContact instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderContactId', instance.orderContactId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('ContactId', instance.contactId);
  writeNotNull('NameFml', instance.nameFml);
  writeNotNull('NameLfm', instance.nameLfm);
  writeNotNull('Person', instance.person);
  writeNotNull('PersonColor', instance.personColor);
  writeNotNull('FirstName', instance.firstName);
  writeNotNull('MiddleInitial', instance.middleInitial);
  writeNotNull('LastName', instance.lastName);
  writeNotNull('ContactTitle', instance.contactTitle);
  writeNotNull('OfficePhone', instance.officePhone);
  writeNotNull('OfficeExtension', instance.officeExtension);
  writeNotNull('MobilePhone', instance.mobilePhone);
  writeNotNull('Email', instance.email);
  writeNotNull('Pager', instance.pager);
  writeNotNull('PagerPin', instance.pagerPin);
  writeNotNull('JobTitle', instance.jobTitle);
  writeNotNull('ContactTitleId', instance.contactTitleId);
  writeNotNull('CompanyContactId', instance.companyContactId);
  writeNotNull('CompanyId', instance.companyId);
  writeNotNull('IsPrimary', instance.isPrimary);
  writeNotNull('CountryId', instance.countryId);
  writeNotNull('IsOrderedBy', instance.isOrderedBy);
  writeNotNull('IsProductionContact', instance.isProductionContact);
  writeNotNull('IsPrintable', instance.isPrintable);
  writeNotNull('ContactOnOrder', instance.contactOnOrder);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsOrderDatesOrderDates
    _$WebApiModulesHomeControlsOrderDatesOrderDatesFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderDatesOrderDates(
          orderId: json['OrderId'] as String?,
          orderTypeId: json['OrderTypeId'] as String?,
          orderTypeDateTypeId: json['OrderTypeDateTypeId'] as String?,
          isSystemType: json['IsSystemType'] as bool?,
          activityTypeId: json['ActivityTypeId'] as String?,
          activityType: json['ActivityType'] as String?,
          activity: json['Activity'] as String?,
          activityDisplay: json['ActivityDisplay'] as String?,
          description: json['Description'] as String?,
          descriptionDisplay: json['DescriptionDisplay'] as String?,
          descriptionDisplayTitleCase:
              json['DescriptionDisplayTitleCase'] as String?,
          isEnabled: json['IsEnabled'] as bool?,
          date: json['Date'] as String?,
          time: json['Time'] as String?,
          dateAndTime: json['DateAndTime'] as String?,
          dayOfWeek: json['DayOfWeek'] as String?,
          actualDate: json['ActualDate'] as String?,
          actualTime: json['ActualTime'] as String?,
          actualDayOfWeek: json['ActualDayOfWeek'] as String?,
          isRequired: json['IsRequired'] as bool?,
          isProductionActivity: json['IsProductionActivity'] as bool?,
          isMilestone: json['IsMilestone'] as bool?,
          orderBy: (json['OrderBy'] as num?)?.toDouble(),
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsOrderDatesOrderDatesToJson(
    WebApiModulesHomeControlsOrderDatesOrderDates instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderTypeId', instance.orderTypeId);
  writeNotNull('OrderTypeDateTypeId', instance.orderTypeDateTypeId);
  writeNotNull('IsSystemType', instance.isSystemType);
  writeNotNull('ActivityTypeId', instance.activityTypeId);
  writeNotNull('ActivityType', instance.activityType);
  writeNotNull('Activity', instance.activity);
  writeNotNull('ActivityDisplay', instance.activityDisplay);
  writeNotNull('Description', instance.description);
  writeNotNull('DescriptionDisplay', instance.descriptionDisplay);
  writeNotNull(
      'DescriptionDisplayTitleCase', instance.descriptionDisplayTitleCase);
  writeNotNull('IsEnabled', instance.isEnabled);
  writeNotNull('Date', instance.date);
  writeNotNull('Time', instance.time);
  writeNotNull('DateAndTime', instance.dateAndTime);
  writeNotNull('DayOfWeek', instance.dayOfWeek);
  writeNotNull('ActualDate', instance.actualDate);
  writeNotNull('ActualTime', instance.actualTime);
  writeNotNull('ActualDayOfWeek', instance.actualDayOfWeek);
  writeNotNull('IsRequired', instance.isRequired);
  writeNotNull('IsProductionActivity', instance.isProductionActivity);
  writeNotNull('IsMilestone', instance.isMilestone);
  writeNotNull('OrderBy', instance.orderBy);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsOrderItemCompleteKitOption
    _$WebApiModulesHomeControlsOrderItemCompleteKitOptionFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderItemCompleteKitOption(
          inventoryId: json['InventoryId'] as String?,
          inventoryPackageInventoryId:
              json['InventoryPackageInventoryId'] as String?,
          quantity: json['Quantity'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemCompleteKitOptionToJson(
        WebApiModulesHomeControlsOrderItemCompleteKitOption instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull(
      'InventoryPackageInventoryId', instance.inventoryPackageInventoryId);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesHomeControlsOrderItemInsertLineItemRequest
    _$WebApiModulesHomeControlsOrderItemInsertLineItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderItemInsertLineItemRequest(
          orderId: json['OrderId'] as String?,
          belowOrderItemId: json['BelowOrderItemId'] as String?,
          primaryItemId: json['PrimaryItemId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemInsertLineItemRequestToJson(
        WebApiModulesHomeControlsOrderItemInsertLineItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('BelowOrderItemId', instance.belowOrderItemId);
  writeNotNull('PrimaryItemId', instance.primaryItemId);
  return val;
}

WebApiModulesHomeControlsOrderItemInsertOptionRequest
    _$WebApiModulesHomeControlsOrderItemInsertOptionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderItemInsertOptionRequest(
          orderId: json['OrderId'] as String?,
          parentOrderItemId: json['ParentOrderItemId'] as String?,
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsOrderItemCompleteKitOption
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemInsertOptionRequestToJson(
        WebApiModulesHomeControlsOrderItemInsertOptionRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('ParentOrderItemId', instance.parentOrderItemId);
  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsOrderItemOrderItem
    _$WebApiModulesHomeControlsOrderItemOrderItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderItemOrderItem(
          orderItemId: json['OrderItemId'] as String?,
          orderId: json['OrderId'] as String?,
          rowsRolledUp: json['RowsRolledUp'] as bool?,
          rolledUpIds: json['RolledUpIds'] as String?,
          orderType: json['OrderType'] as String?,
          recType: json['RecType'] as String?,
          recTypeDisplay: json['RecTypeDisplay'] as String?,
          rowNumber: json['RowNumber'] as int?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          iCodeColor: json['ICodeColor'] as String?,
          description: json['Description'] as String?,
          descriptionColor: json['DescriptionColor'] as String?,
          pickDate: json['PickDate'] as String?,
          pickTime: json['PickTime'] as String?,
          fromDate: json['FromDate'] as String?,
          fromTime: json['FromTime'] as String?,
          toDate: json['ToDate'] as String?,
          toTime: json['ToTime'] as String?,
          billablePeriods: (json['BillablePeriods'] as num?)?.toDouble(),
          quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
          quantityColor: json['QuantityColor'] as String?,
          subQuantity: (json['SubQuantity'] as num?)?.toDouble(),
          subQuantityColor: json['SubQuantityColor'] as String?,
          consignQuantity: json['ConsignQuantity'] as int?,
          consignQuantityColor: json['ConsignQuantityColor'] as String?,
          reservedItemQuantity: json['ReservedItemQuantity'] as int?,
          availableQuantity: (json['AvailableQuantity'] as num?)?.toDouble(),
          availabilityState: json['AvailabilityState'] as String?,
          availableAllWarehousesQuantity:
              (json['AvailableAllWarehousesQuantity'] as num?)?.toDouble(),
          conflictDate: json['ConflictDate'] as String?,
          conflictDateAllWarehouses:
              json['ConflictDateAllWarehouses'] as String?,
          availabilityStateConsignment:
              json['AvailabilityStateConsignment'] as String?,
          availableQuantityConsignment:
              (json['AvailableQuantityConsignment'] as num?)?.toDouble(),
          conflictDateConsignment: json['ConflictDateConsignment'] as String?,
          unitId: json['UnitId'] as String?,
          unit: json['Unit'] as String?,
          unitType: json['UnitType'] as String?,
          unitCost: (json['UnitCost'] as num?)?.toDouble(),
          marginPercent: (json['MarginPercent'] as num?)?.toDouble(),
          markupPercent: (json['MarkupPercent'] as num?)?.toDouble(),
          premiumPercent: (json['PremiumPercent'] as num?)?.toDouble(),
          crewContactId: json['CrewContactId'] as String?,
          crewName: json['CrewName'] as String?,
          hours: (json['Hours'] as num?)?.toDouble(),
          hoursOvertime: (json['HoursOvertime'] as num?)?.toDouble(),
          hoursDoubletime: (json['HoursDoubletime'] as num?)?.toDouble(),
          price: (json['Price'] as num?)?.toDouble(),
          price2: (json['Price2'] as num?)?.toDouble(),
          price3: (json['Price3'] as num?)?.toDouble(),
          price4: (json['Price4'] as num?)?.toDouble(),
          price5: (json['Price5'] as num?)?.toDouble(),
          daysPerWeek: (json['DaysPerWeek'] as num?)?.toDouble(),
          discountPercent: (json['DiscountPercent'] as num?)?.toDouble(),
          discountPercentDisplay:
              (json['DiscountPercentDisplay'] as num?)?.toDouble(),
          unitExtendedNoDiscount:
              (json['UnitExtendedNoDiscount'] as num?)?.toDouble(),
          unitDiscountAmount: (json['UnitDiscountAmount'] as num?)?.toDouble(),
          unitExtended: (json['UnitExtended'] as num?)?.toDouble(),
          weeklyExtendedNoDiscount:
              (json['WeeklyExtendedNoDiscount'] as num?)?.toDouble(),
          weeklyDiscountAmount:
              (json['WeeklyDiscountAmount'] as num?)?.toDouble(),
          weeklyExtended: (json['WeeklyExtended'] as num?)?.toDouble(),
          weeklyCostExtended: (json['WeeklyCostExtended'] as num?)?.toDouble(),
          weeklyTax: (json['WeeklyTax'] as num?)?.toDouble(),
          weeklyTax1: (json['WeeklyTax1'] as num?)?.toDouble(),
          weeklyTax2: (json['WeeklyTax2'] as num?)?.toDouble(),
          weeklyTotal: (json['WeeklyTotal'] as num?)?.toDouble(),
          week2Extended: (json['Week2Extended'] as num?)?.toDouble(),
          week3Extended: (json['Week3Extended'] as num?)?.toDouble(),
          weeks1Through3Extended:
              (json['Weeks1Through3Extended'] as num?)?.toDouble(),
          weeks4PlusExtended: (json['Weeks4PlusExtended'] as num?)?.toDouble(),
          week4Extended: (json['Week4Extended'] as num?)?.toDouble(),
          averageWeekly: (json['AverageWeekly'] as num?)?.toDouble(),
          averageWeeklyExtended:
              (json['AverageWeeklyExtended'] as num?)?.toDouble(),
          averageWeeklyExtendedNoDiscount:
              (json['AverageWeeklyExtendedNoDiscount'] as num?)?.toDouble(),
          averageWeeklyDiscountAmount:
              (json['AverageWeeklyDiscountAmount'] as num?)?.toDouble(),
          averageWeeklyTax: (json['AverageWeeklyTax'] as num?)?.toDouble(),
          averageWeeklyTax1: (json['AverageWeeklyTax1'] as num?)?.toDouble(),
          averageWeeklyTax2: (json['AverageWeeklyTax2'] as num?)?.toDouble(),
          averageWeeklyTotal: (json['AverageWeeklyTotal'] as num?)?.toDouble(),
          episodes: json['Episodes'] as int?,
          monthlyExtendedNoDiscount:
              (json['MonthlyExtendedNoDiscount'] as num?)?.toDouble(),
          monthlyDiscountAmount:
              (json['MonthlyDiscountAmount'] as num?)?.toDouble(),
          monthlyExtended: (json['MonthlyExtended'] as num?)?.toDouble(),
          monthlyCostExtended:
              (json['MonthlyCostExtended'] as num?)?.toDouble(),
          monthlyTax: (json['MonthlyTax'] as num?)?.toDouble(),
          monthlyTax1: (json['MonthlyTax1'] as num?)?.toDouble(),
          monthlyTax2: (json['MonthlyTax2'] as num?)?.toDouble(),
          monthlyTotal: (json['MonthlyTotal'] as num?)?.toDouble(),
          periodExtendedNoDiscount:
              (json['PeriodExtendedNoDiscount'] as num?)?.toDouble(),
          periodCostExtended: (json['PeriodCostExtended'] as num?)?.toDouble(),
          periodDiscountAmount:
              (json['PeriodDiscountAmount'] as num?)?.toDouble(),
          periodExtended: (json['PeriodExtended'] as num?)?.toDouble(),
          periodTax: (json['PeriodTax'] as num?)?.toDouble(),
          periodTax1: (json['PeriodTax1'] as num?)?.toDouble(),
          periodTax2: (json['PeriodTax2'] as num?)?.toDouble(),
          periodTotal: (json['PeriodTotal'] as num?)?.toDouble(),
          periodVarianceExtended:
              (json['PeriodVarianceExtended'] as num?)?.toDouble(),
          variancePercent: (json['VariancePercent'] as num?)?.toDouble(),
          minimumDaysPerWeek: (json['MinimumDaysPerWeek'] as num?)?.toDouble(),
          bold: json['Bold'] as bool?,
          locked: json['Locked'] as bool?,
          taxable: json['Taxable'] as bool?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          returnToWarehouseId: json['ReturnToWarehouseId'] as String?,
          returnToWarehouseCode: json['ReturnToWarehouseCode'] as String?,
          notes: json['Notes'] as String?,
          itemOrder: json['ItemOrder'] as String?,
          parentId: json['ParentId'] as String?,
          nestedOrderItemId: json['NestedOrderItemId'] as String?,
          itemClass: json['ItemClass'] as String?,
          inventoryClass: json['InventoryClass'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          retiredReasonId: json['RetiredReasonId'] as String?,
          retiredReason: json['RetiredReason'] as String?,
          itemId: json['ItemId'] as String?,
          barCode: json['BarCode'] as String?,
          serialNumber: json['SerialNumber'] as String?,
          manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
          poSubOrderId: json['PoSubOrderId'] as String?,
          poSubOrderItemId: json['PoSubOrderItemId'] as String?,
          poSubOrderNumber: json['PoSubOrderNumber'] as String?,
          lossAndDamageOrderId: json['LossAndDamageOrderId'] as String?,
          lossAndDamageOrderItemId: json['LossAndDamageOrderItemId'] as String?,
          lossAndDamageOrderNumber: json['LossAndDamageOrderNumber'] as String?,
          modifiedAtStaging: json['ModifiedAtStaging'] as bool?,
          mute: json['Mute'] as bool?,
          availabilityByHour: json['AvailabilityByHour'] as bool?,
          printNoteOnQuote: json['PrintNoteOnQuote'] as bool?,
          printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
          printNoteOnPickList: json['PrintNoteOnPickList'] as bool?,
          printNoteOnOutContract: json['PrintNoteOnOutContract'] as bool?,
          printNoteOnInContract: json['PrintNoteOnInContract'] as bool?,
          printNoteOnReturnList: json['PrintNoteOnReturnList'] as bool?,
          printNoteOnInvoice: json['PrintNoteOnInvoice'] as bool?,
          printNoteOnPurchaseOrder: json['PrintNoteOnPurchaseOrder'] as bool?,
          printNoteOnReceiveContract:
              json['PrintNoteOnReceiveContract'] as bool?,
          printNoteOnReturnContract: json['PrintNoteOnReturnContract'] as bool?,
          printNoteOnVendorReceiveList:
              json['PrintNoteOnVendorReceiveList'] as bool?,
          printNoteOnVendorReturnList:
              json['PrintNoteOnVendorReturnList'] as bool?,
          defaultHourlyRate: (json['DefaultHourlyRate'] as num?)?.toDouble(),
          defaultDailyRate: (json['DefaultDailyRate'] as num?)?.toDouble(),
          defaultWeeklyRate: (json['DefaultWeeklyRate'] as num?)?.toDouble(),
          defaultMonthlyRate: (json['DefaultMonthlyRate'] as num?)?.toDouble(),
          nestingLevel: json['NestingLevel'] as int?,
          repairId: json['RepairId'] as String?,
          repairNumber: json['RepairNumber'] as String?,
          subVendorId: json['SubVendorId'] as String?,
          subVendor: json['SubVendor'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
          vendorConsignorId: json['VendorConsignorId'] as String?,
          vendorConsignor: json['VendorConsignor'] as String?,
          availabilityExcludeConsigned:
              json['AvailabilityExcludeConsigned'] as bool?,
          primaryOrderItemId: json['PrimaryOrderItemId'] as String?,
          accessoryRatio: (json['AccessoryRatio'] as num?)?.toDouble(),
          isOption: json['IsOption'] as bool?,
          optionColor: json['OptionColor'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          transferAvailabilityDays: json['TransferAvailabilityDays'] as int?,
          costOrderId: json['CostOrderId'] as String?,
          costOrderNumber: json['CostOrderNumber'] as String?,
          dateStamp: json['DateStamp'] as String?,
          inactive: json['Inactive'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsOrderItemOrderItemToJson(
    WebApiModulesHomeControlsOrderItemOrderItem instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('RowsRolledUp', instance.rowsRolledUp);
  writeNotNull('RolledUpIds', instance.rolledUpIds);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull('RecType', instance.recType);
  writeNotNull('RecTypeDisplay', instance.recTypeDisplay);
  writeNotNull('RowNumber', instance.rowNumber);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeColor', instance.iCodeColor);
  writeNotNull('Description', instance.description);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('PickDate', instance.pickDate);
  writeNotNull('PickTime', instance.pickTime);
  writeNotNull('FromDate', instance.fromDate);
  writeNotNull('FromTime', instance.fromTime);
  writeNotNull('ToDate', instance.toDate);
  writeNotNull('ToTime', instance.toTime);
  writeNotNull('BillablePeriods', instance.billablePeriods);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('QuantityColor', instance.quantityColor);
  writeNotNull('SubQuantity', instance.subQuantity);
  writeNotNull('SubQuantityColor', instance.subQuantityColor);
  writeNotNull('ConsignQuantity', instance.consignQuantity);
  writeNotNull('ConsignQuantityColor', instance.consignQuantityColor);
  writeNotNull('ReservedItemQuantity', instance.reservedItemQuantity);
  writeNotNull('AvailableQuantity', instance.availableQuantity);
  writeNotNull('AvailabilityState', instance.availabilityState);
  writeNotNull('AvailableAllWarehousesQuantity',
      instance.availableAllWarehousesQuantity);
  writeNotNull('ConflictDate', instance.conflictDate);
  writeNotNull('ConflictDateAllWarehouses', instance.conflictDateAllWarehouses);
  writeNotNull(
      'AvailabilityStateConsignment', instance.availabilityStateConsignment);
  writeNotNull(
      'AvailableQuantityConsignment', instance.availableQuantityConsignment);
  writeNotNull('ConflictDateConsignment', instance.conflictDateConsignment);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('Unit', instance.unit);
  writeNotNull('UnitType', instance.unitType);
  writeNotNull('UnitCost', instance.unitCost);
  writeNotNull('MarginPercent', instance.marginPercent);
  writeNotNull('MarkupPercent', instance.markupPercent);
  writeNotNull('PremiumPercent', instance.premiumPercent);
  writeNotNull('CrewContactId', instance.crewContactId);
  writeNotNull('CrewName', instance.crewName);
  writeNotNull('Hours', instance.hours);
  writeNotNull('HoursOvertime', instance.hoursOvertime);
  writeNotNull('HoursDoubletime', instance.hoursDoubletime);
  writeNotNull('Price', instance.price);
  writeNotNull('Price2', instance.price2);
  writeNotNull('Price3', instance.price3);
  writeNotNull('Price4', instance.price4);
  writeNotNull('Price5', instance.price5);
  writeNotNull('DaysPerWeek', instance.daysPerWeek);
  writeNotNull('DiscountPercent', instance.discountPercent);
  writeNotNull('DiscountPercentDisplay', instance.discountPercentDisplay);
  writeNotNull('UnitExtendedNoDiscount', instance.unitExtendedNoDiscount);
  writeNotNull('UnitDiscountAmount', instance.unitDiscountAmount);
  writeNotNull('UnitExtended', instance.unitExtended);
  writeNotNull('WeeklyExtendedNoDiscount', instance.weeklyExtendedNoDiscount);
  writeNotNull('WeeklyDiscountAmount', instance.weeklyDiscountAmount);
  writeNotNull('WeeklyExtended', instance.weeklyExtended);
  writeNotNull('WeeklyCostExtended', instance.weeklyCostExtended);
  writeNotNull('WeeklyTax', instance.weeklyTax);
  writeNotNull('WeeklyTax1', instance.weeklyTax1);
  writeNotNull('WeeklyTax2', instance.weeklyTax2);
  writeNotNull('WeeklyTotal', instance.weeklyTotal);
  writeNotNull('Week2Extended', instance.week2Extended);
  writeNotNull('Week3Extended', instance.week3Extended);
  writeNotNull('Weeks1Through3Extended', instance.weeks1Through3Extended);
  writeNotNull('Weeks4PlusExtended', instance.weeks4PlusExtended);
  writeNotNull('Week4Extended', instance.week4Extended);
  writeNotNull('AverageWeekly', instance.averageWeekly);
  writeNotNull('AverageWeeklyExtended', instance.averageWeeklyExtended);
  writeNotNull('AverageWeeklyExtendedNoDiscount',
      instance.averageWeeklyExtendedNoDiscount);
  writeNotNull(
      'AverageWeeklyDiscountAmount', instance.averageWeeklyDiscountAmount);
  writeNotNull('AverageWeeklyTax', instance.averageWeeklyTax);
  writeNotNull('AverageWeeklyTax1', instance.averageWeeklyTax1);
  writeNotNull('AverageWeeklyTax2', instance.averageWeeklyTax2);
  writeNotNull('AverageWeeklyTotal', instance.averageWeeklyTotal);
  writeNotNull('Episodes', instance.episodes);
  writeNotNull('MonthlyExtendedNoDiscount', instance.monthlyExtendedNoDiscount);
  writeNotNull('MonthlyDiscountAmount', instance.monthlyDiscountAmount);
  writeNotNull('MonthlyExtended', instance.monthlyExtended);
  writeNotNull('MonthlyCostExtended', instance.monthlyCostExtended);
  writeNotNull('MonthlyTax', instance.monthlyTax);
  writeNotNull('MonthlyTax1', instance.monthlyTax1);
  writeNotNull('MonthlyTax2', instance.monthlyTax2);
  writeNotNull('MonthlyTotal', instance.monthlyTotal);
  writeNotNull('PeriodExtendedNoDiscount', instance.periodExtendedNoDiscount);
  writeNotNull('PeriodCostExtended', instance.periodCostExtended);
  writeNotNull('PeriodDiscountAmount', instance.periodDiscountAmount);
  writeNotNull('PeriodExtended', instance.periodExtended);
  writeNotNull('PeriodTax', instance.periodTax);
  writeNotNull('PeriodTax1', instance.periodTax1);
  writeNotNull('PeriodTax2', instance.periodTax2);
  writeNotNull('PeriodTotal', instance.periodTotal);
  writeNotNull('PeriodVarianceExtended', instance.periodVarianceExtended);
  writeNotNull('VariancePercent', instance.variancePercent);
  writeNotNull('MinimumDaysPerWeek', instance.minimumDaysPerWeek);
  writeNotNull('Bold', instance.bold);
  writeNotNull('Locked', instance.locked);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('ReturnToWarehouseId', instance.returnToWarehouseId);
  writeNotNull('ReturnToWarehouseCode', instance.returnToWarehouseCode);
  writeNotNull('Notes', instance.notes);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('ParentId', instance.parentId);
  writeNotNull('NestedOrderItemId', instance.nestedOrderItemId);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('InventoryClass', instance.inventoryClass);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('RetiredReasonId', instance.retiredReasonId);
  writeNotNull('RetiredReason', instance.retiredReason);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('ManufacturerPartNumber', instance.manufacturerPartNumber);
  writeNotNull('PoSubOrderId', instance.poSubOrderId);
  writeNotNull('PoSubOrderItemId', instance.poSubOrderItemId);
  writeNotNull('PoSubOrderNumber', instance.poSubOrderNumber);
  writeNotNull('LossAndDamageOrderId', instance.lossAndDamageOrderId);
  writeNotNull('LossAndDamageOrderItemId', instance.lossAndDamageOrderItemId);
  writeNotNull('LossAndDamageOrderNumber', instance.lossAndDamageOrderNumber);
  writeNotNull('ModifiedAtStaging', instance.modifiedAtStaging);
  writeNotNull('Mute', instance.mute);
  writeNotNull('AvailabilityByHour', instance.availabilityByHour);
  writeNotNull('PrintNoteOnQuote', instance.printNoteOnQuote);
  writeNotNull('PrintNoteOnOrder', instance.printNoteOnOrder);
  writeNotNull('PrintNoteOnPickList', instance.printNoteOnPickList);
  writeNotNull('PrintNoteOnOutContract', instance.printNoteOnOutContract);
  writeNotNull('PrintNoteOnInContract', instance.printNoteOnInContract);
  writeNotNull('PrintNoteOnReturnList', instance.printNoteOnReturnList);
  writeNotNull('PrintNoteOnInvoice', instance.printNoteOnInvoice);
  writeNotNull('PrintNoteOnPurchaseOrder', instance.printNoteOnPurchaseOrder);
  writeNotNull(
      'PrintNoteOnReceiveContract', instance.printNoteOnReceiveContract);
  writeNotNull('PrintNoteOnReturnContract', instance.printNoteOnReturnContract);
  writeNotNull(
      'PrintNoteOnVendorReceiveList', instance.printNoteOnVendorReceiveList);
  writeNotNull(
      'PrintNoteOnVendorReturnList', instance.printNoteOnVendorReturnList);
  writeNotNull('DefaultHourlyRate', instance.defaultHourlyRate);
  writeNotNull('DefaultDailyRate', instance.defaultDailyRate);
  writeNotNull('DefaultWeeklyRate', instance.defaultWeeklyRate);
  writeNotNull('DefaultMonthlyRate', instance.defaultMonthlyRate);
  writeNotNull('NestingLevel', instance.nestingLevel);
  writeNotNull('RepairId', instance.repairId);
  writeNotNull('RepairNumber', instance.repairNumber);
  writeNotNull('SubVendorId', instance.subVendorId);
  writeNotNull('SubVendor', instance.subVendor);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('ConsignorAgreementNumber', instance.consignorAgreementNumber);
  writeNotNull('VendorConsignorId', instance.vendorConsignorId);
  writeNotNull('VendorConsignor', instance.vendorConsignor);
  writeNotNull(
      'AvailabilityExcludeConsigned', instance.availabilityExcludeConsigned);
  writeNotNull('PrimaryOrderItemId', instance.primaryOrderItemId);
  writeNotNull('AccessoryRatio', instance.accessoryRatio);
  writeNotNull('IsOption', instance.isOption);
  writeNotNull('OptionColor', instance.optionColor);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('TransferAvailabilityDays', instance.transferAvailabilityDays);
  writeNotNull('CostOrderId', instance.costOrderId);
  writeNotNull('CostOrderNumber', instance.costOrderNumber);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsOrderItemSortOrderItemsRequest
    _$WebApiModulesHomeControlsOrderItemSortOrderItemsRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderItemSortOrderItemsRequest(
          startAtIndex: json['StartAtIndex'] as int?,
          orderItemIds: (json['OrderItemIds'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemSortOrderItemsRequestToJson(
        WebApiModulesHomeControlsOrderItemSortOrderItemsRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StartAtIndex', instance.startAtIndex);
  writeNotNull('OrderItemIds', instance.orderItemIds);
  return val;
}

WebApiModulesHomeControlsOrderItemSplitOrderItemRequest
    _$WebApiModulesHomeControlsOrderItemSplitOrderItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderItemSplitOrderItemRequest(
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          splitQuantity: (json['SplitQuantity'] as num?)?.toDouble(),
          splitConsignQuantity:
              (json['SplitConsignQuantity'] as num?)?.toDouble(),
          splitEntirePackage: json['SplitEntirePackage'] as bool?,
          stagedOutOnly: json['StagedOutOnly'] as bool?,
          outOnly: json['OutOnly'] as bool?,
          inOnly: json['InOnly'] as bool?,
          consignorId: json['ConsignorId'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          reSortItemsAfterSplit: json['ReSortItemsAfterSplit'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemSplitOrderItemRequestToJson(
        WebApiModulesHomeControlsOrderItemSplitOrderItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('SplitQuantity', instance.splitQuantity);
  writeNotNull('SplitConsignQuantity', instance.splitConsignQuantity);
  writeNotNull('SplitEntirePackage', instance.splitEntirePackage);
  writeNotNull('StagedOutOnly', instance.stagedOutOnly);
  writeNotNull('OutOnly', instance.outOnly);
  writeNotNull('InOnly', instance.inOnly);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('ReSortItemsAfterSplit', instance.reSortItemsAfterSplit);
  return val;
}

WebApiModulesHomeControlsOrderItemSplitOrderItemResponse
    _$WebApiModulesHomeControlsOrderItemSplitOrderItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderItemSplitOrderItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          orderItemId: json['OrderItemId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderItemSplitOrderItemResponseToJson(
        WebApiModulesHomeControlsOrderItemSplitOrderItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('OrderItemId', instance.orderItemId);
  return val;
}

WebApiModulesHomeControlsOrderNoteOrderNote
    _$WebApiModulesHomeControlsOrderNoteOrderNoteFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderNoteOrderNote(
          orderNoteId: json['OrderNoteId'] as String?,
          orderId: json['OrderId'] as String?,
          noteDate: json['NoteDate'] as String?,
          userId: json['UserId'] as String?,
          notesDescription: json['NotesDescription'] as String?,
          billing: json['Billing'] as bool?,
          printOnOrder: json['PrintOnOrder'] as bool?,
          copyToInvoice: json['CopyToInvoice'] as bool?,
          scheduleNote: json['ScheduleNote'] as bool?,
          scheduleNoteDate: json['ScheduleNoteDate'] as String?,
          pickList: json['PickList'] as bool?,
          userName: json['UserName'] as String?,
          notes: json['Notes'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsOrderNoteOrderNoteToJson(
    WebApiModulesHomeControlsOrderNoteOrderNote instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderNoteId', instance.orderNoteId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('NoteDate', instance.noteDate);
  writeNotNull('UserId', instance.userId);
  writeNotNull('NotesDescription', instance.notesDescription);
  writeNotNull('Billing', instance.billing);
  writeNotNull('PrintOnOrder', instance.printOnOrder);
  writeNotNull('CopyToInvoice', instance.copyToInvoice);
  writeNotNull('ScheduleNote', instance.scheduleNote);
  writeNotNull('ScheduleNoteDate', instance.scheduleNoteDate);
  writeNotNull('PickList', instance.pickList);
  writeNotNull('UserName', instance.userName);
  writeNotNull('Notes', instance.notes);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistory
    _$WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistory(
          id: json['Id'] as int?,
          internalchar: json['Internalchar'] as String?,
          orderId: json['OrderId'] as String?,
          statusDateTime: json['StatusDateTime'] as String?,
          status: json['Status'] as String?,
          userId: json['UserId'] as String?,
          userFullName: json['UserFullName'] as String?,
          functionName: json['FunctionName'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistoryToJson(
        WebApiModulesHomeControlsOrderStatusHistoryOrderStatusHistory
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Id', instance.id);
  writeNotNull('Internalchar', instance.internalchar);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('StatusDateTime', instance.statusDateTime);
  writeNotNull('Status', instance.status);
  writeNotNull('UserId', instance.userId);
  writeNotNull('UserFullName', instance.userFullName);
  writeNotNull('FunctionName', instance.functionName);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsOrderStatusSummaryOrderStatusSummary
    _$WebApiModulesHomeControlsOrderStatusSummaryOrderStatusSummaryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderStatusSummaryOrderStatusSummary(
          orderId: json['OrderId'] as String?,
          iCode: json['ICode'] as String?,
          iCodeDisplay: json['ICodeDisplay'] as String?,
          iCodeColor: json['ICodeColor'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          categoryId: json['CategoryId'] as String?,
          subCategoryId: json['SubCategoryId'] as String?,
          description: json['Description'] as String?,
          descriptionColor: json['DescriptionColor'] as String?,
          inventoryId: json['InventoryId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          nestedOrderItemId: json['NestedOrderItemId'] as String?,
          parentId: json['ParentId'] as String?,
          outWarehouseId: json['OutWarehouseId'] as String?,
          outWarehouseCode: json['OutWarehouseCode'] as String?,
          outWarehouse: json['OutWarehouse'] as String?,
          inWarehouseId: json['InWarehouseId'] as String?,
          inWarehouseCode: json['InWarehouseCode'] as String?,
          inWarehouse: json['InWarehouse'] as String?,
          quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
          quantityOrderedColor: json['QuantityOrderedColor'] as String?,
          subQuantity: (json['SubQuantity'] as num?)?.toDouble(),
          stagedQuantity: (json['StagedQuantity'] as num?)?.toDouble(),
          stagedQuantityFilter:
              (json['StagedQuantityFilter'] as num?)?.toDouble(),
          stagedQuantityColor: json['StagedQuantityColor'] as String?,
          outQuantity: (json['OutQuantity'] as num?)?.toDouble(),
          outQuantityfilter: (json['OutQuantityfilter'] as num?)?.toDouble(),
          outQuantityColor: json['OutQuantityColor'] as String?,
          isSuspendOut: json['IsSuspendOut'] as bool?,
          inQuantity: (json['InQuantity'] as num?)?.toDouble(),
          inQuantityFilter: (json['InQuantityFilter'] as num?)?.toDouble(),
          inQuantityColor: json['InQuantityColor'] as String?,
          isSuspendIn: json['IsSuspendIn'] as bool?,
          returnedQuantity: (json['ReturnedQuantity'] as num?)?.toDouble(),
          activityQuantity: (json['ActivityQuantity'] as num?)?.toDouble(),
          subActivityQuantity:
              (json['SubActivityQuantity'] as num?)?.toDouble(),
          quantityReceived: (json['QuantityReceived'] as num?)?.toDouble(),
          quantityReturned: (json['QuantityReturned'] as num?)?.toDouble(),
          notYetStagedQuantity:
              (json['NotYetStagedQuantity'] as num?)?.toDouble(),
          tooManyStagedOut: json['TooManyStagedOut'] as bool?,
          notYetStagedQuantityFilter:
              (json['NotYetStagedQuantityFilter'] as num?)?.toDouble(),
          stillOutQuantity: (json['StillOutQuantity'] as num?)?.toDouble(),
          stillOutQuantityColor: json['StillOutQuantityColor'] as String?,
          itemOrder: json['ItemOrder'] as String?,
          itemClass: json['ItemClass'] as String?,
          recType: json['RecType'] as String?,
          isReturn: json['IsReturn'] as String?,
          poOrderId: json['PoOrderId'] as String?,
          poMasteritemId: json['PoMasteritemId'] as String?,
          recTypeDisplay: json['RecTypeDisplay'] as String?,
          recTypeColor: json['RecTypeColor'] as String?,
          optionColor: json['OptionColor'] as String?,
          bold: json['Bold'] as bool?,
          hasPoItem: json['HasPoItem'] as bool?,
          vendorId: json['VendorId'] as String?,
          vendor: json['Vendor'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
          vendorConsignorId: json['VendorConsignorId'] as String?,
          vendorConsignor: json['VendorConsignor'] as String?,
          notes: json['Notes'] as String?,
          manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
          orderBy: json['OrderBy'] as String?,
          isWardrobe: json['IsWardrobe'] as bool?,
          isProps: json['IsProps'] as bool?,
          unitCost: (json['UnitCost'] as num?)?.toDouble(),
          stagedOutExtendedCost:
              (json['StagedOutExtendedCost'] as num?)?.toDouble(),
          unitPrice: (json['UnitPrice'] as num?)?.toDouble(),
          stagedOutExtendedPrice:
              (json['StagedOutExtendedPrice'] as num?)?.toDouble(),
          nestingLevel: json['NestingLevel'] as int?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderStatusSummaryOrderStatusSummaryToJson(
        WebApiModulesHomeControlsOrderStatusSummaryOrderStatusSummary
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeDisplay', instance.iCodeDisplay);
  writeNotNull('ICodeColor', instance.iCodeColor);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('Description', instance.description);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('NestedOrderItemId', instance.nestedOrderItemId);
  writeNotNull('ParentId', instance.parentId);
  writeNotNull('OutWarehouseId', instance.outWarehouseId);
  writeNotNull('OutWarehouseCode', instance.outWarehouseCode);
  writeNotNull('OutWarehouse', instance.outWarehouse);
  writeNotNull('InWarehouseId', instance.inWarehouseId);
  writeNotNull('InWarehouseCode', instance.inWarehouseCode);
  writeNotNull('InWarehouse', instance.inWarehouse);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('QuantityOrderedColor', instance.quantityOrderedColor);
  writeNotNull('SubQuantity', instance.subQuantity);
  writeNotNull('StagedQuantity', instance.stagedQuantity);
  writeNotNull('StagedQuantityFilter', instance.stagedQuantityFilter);
  writeNotNull('StagedQuantityColor', instance.stagedQuantityColor);
  writeNotNull('OutQuantity', instance.outQuantity);
  writeNotNull('OutQuantityfilter', instance.outQuantityfilter);
  writeNotNull('OutQuantityColor', instance.outQuantityColor);
  writeNotNull('IsSuspendOut', instance.isSuspendOut);
  writeNotNull('InQuantity', instance.inQuantity);
  writeNotNull('InQuantityFilter', instance.inQuantityFilter);
  writeNotNull('InQuantityColor', instance.inQuantityColor);
  writeNotNull('IsSuspendIn', instance.isSuspendIn);
  writeNotNull('ReturnedQuantity', instance.returnedQuantity);
  writeNotNull('ActivityQuantity', instance.activityQuantity);
  writeNotNull('SubActivityQuantity', instance.subActivityQuantity);
  writeNotNull('QuantityReceived', instance.quantityReceived);
  writeNotNull('QuantityReturned', instance.quantityReturned);
  writeNotNull('NotYetStagedQuantity', instance.notYetStagedQuantity);
  writeNotNull('TooManyStagedOut', instance.tooManyStagedOut);
  writeNotNull(
      'NotYetStagedQuantityFilter', instance.notYetStagedQuantityFilter);
  writeNotNull('StillOutQuantity', instance.stillOutQuantity);
  writeNotNull('StillOutQuantityColor', instance.stillOutQuantityColor);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('RecType', instance.recType);
  writeNotNull('IsReturn', instance.isReturn);
  writeNotNull('PoOrderId', instance.poOrderId);
  writeNotNull('PoMasteritemId', instance.poMasteritemId);
  writeNotNull('RecTypeDisplay', instance.recTypeDisplay);
  writeNotNull('RecTypeColor', instance.recTypeColor);
  writeNotNull('OptionColor', instance.optionColor);
  writeNotNull('Bold', instance.bold);
  writeNotNull('HasPoItem', instance.hasPoItem);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('VendorConsignorId', instance.vendorConsignorId);
  writeNotNull('VendorConsignor', instance.vendorConsignor);
  writeNotNull('Notes', instance.notes);
  writeNotNull('ManufacturerPartNumber', instance.manufacturerPartNumber);
  writeNotNull('OrderBy', instance.orderBy);
  writeNotNull('IsWardrobe', instance.isWardrobe);
  writeNotNull('IsProps', instance.isProps);
  writeNotNull('UnitCost', instance.unitCost);
  writeNotNull('StagedOutExtendedCost', instance.stagedOutExtendedCost);
  writeNotNull('UnitPrice', instance.unitPrice);
  writeNotNull('StagedOutExtendedPrice', instance.stagedOutExtendedPrice);
  writeNotNull('NestingLevel', instance.nestingLevel);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsOrderSummaryOrderSummaryResponse
    _$WebApiModulesHomeControlsOrderSummaryOrderSummaryResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderSummaryOrderSummaryResponse(
          rental: json['Rental'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['Rental'] as Map<String, dynamic>),
          sales: json['Sales'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['Sales'] as Map<String, dynamic>),
          parts: json['Parts'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['Parts'] as Map<String, dynamic>),
          space: json['Space'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['Space'] as Map<String, dynamic>),
          vehicle: json['Vehicle'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['Vehicle'] as Map<String, dynamic>),
          labor: json['Labor'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['Labor'] as Map<String, dynamic>),
          misc: json['Misc'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['Misc'] as Map<String, dynamic>),
          rentalSale: json['RentalSale'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['RentalSale'] as Map<String, dynamic>),
          subRent: json['SubRent'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['SubRent'] as Map<String, dynamic>),
          subSale: json['SubSale'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['SubSale'] as Map<String, dynamic>),
          subLabor: json['SubLabor'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['SubLabor'] as Map<String, dynamic>),
          subMisc: json['SubMisc'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['SubMisc'] as Map<String, dynamic>),
          total: json['Total'] == null
              ? null
              : WebApiModulesHomeControlsOrderSummaryRecTypeSummary.fromJson(
                  json['Total'] as Map<String, dynamic>),
          totalTax1: (json['TotalTax1'] as num?)?.toDouble(),
          totalTax2: (json['TotalTax2'] as num?)?.toDouble(),
          taxCost: (json['TaxCost'] as num?)?.toDouble(),
          replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
          replacementCostOwned:
              (json['ReplacementCostOwned'] as num?)?.toDouble(),
          replacementCostSub: (json['ReplacementCostSub'] as num?)?.toDouble(),
          value: (json['Value'] as num?)?.toDouble(),
          valueOwned: (json['ValueOwned'] as num?)?.toDouble(),
          valueSub: (json['ValueSub'] as num?)?.toDouble(),
          measurement: json['Measurement'] as String?,
          weightPounds: (json['WeightPounds'] as num?)?.toDouble(),
          weightOunces: (json['WeightOunces'] as num?)?.toDouble(),
          weightKilograms: (json['WeightKilograms'] as num?)?.toDouble(),
          weightGrams: (json['WeightGrams'] as num?)?.toDouble(),
          weightInCasePounds: (json['WeightInCasePounds'] as num?)?.toDouble(),
          weightInCaseOunces: (json['WeightInCaseOunces'] as num?)?.toDouble(),
          weightInCaseKilograms:
              (json['WeightInCaseKilograms'] as num?)?.toDouble(),
          weightInCaseGrams: (json['WeightInCaseGrams'] as num?)?.toDouble(),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderSummaryOrderSummaryResponseToJson(
        WebApiModulesHomeControlsOrderSummaryOrderSummaryResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Rental', instance.rental?.toJson());
  writeNotNull('Sales', instance.sales?.toJson());
  writeNotNull('Parts', instance.parts?.toJson());
  writeNotNull('Space', instance.space?.toJson());
  writeNotNull('Vehicle', instance.vehicle?.toJson());
  writeNotNull('Labor', instance.labor?.toJson());
  writeNotNull('Misc', instance.misc?.toJson());
  writeNotNull('RentalSale', instance.rentalSale?.toJson());
  writeNotNull('SubRent', instance.subRent?.toJson());
  writeNotNull('SubSale', instance.subSale?.toJson());
  writeNotNull('SubLabor', instance.subLabor?.toJson());
  writeNotNull('SubMisc', instance.subMisc?.toJson());
  writeNotNull('Total', instance.total?.toJson());
  writeNotNull('TotalTax1', instance.totalTax1);
  writeNotNull('TotalTax2', instance.totalTax2);
  writeNotNull('TaxCost', instance.taxCost);
  writeNotNull('ReplacementCost', instance.replacementCost);
  writeNotNull('ReplacementCostOwned', instance.replacementCostOwned);
  writeNotNull('ReplacementCostSub', instance.replacementCostSub);
  writeNotNull('Value', instance.value);
  writeNotNull('ValueOwned', instance.valueOwned);
  writeNotNull('ValueSub', instance.valueSub);
  writeNotNull('Measurement', instance.measurement);
  writeNotNull('WeightPounds', instance.weightPounds);
  writeNotNull('WeightOunces', instance.weightOunces);
  writeNotNull('WeightKilograms', instance.weightKilograms);
  writeNotNull('WeightGrams', instance.weightGrams);
  writeNotNull('WeightInCasePounds', instance.weightInCasePounds);
  writeNotNull('WeightInCaseOunces', instance.weightInCaseOunces);
  writeNotNull('WeightInCaseKilograms', instance.weightInCaseKilograms);
  writeNotNull('WeightInCaseGrams', instance.weightInCaseGrams);
  return val;
}

WebApiModulesHomeControlsOrderSummaryRecTypeSummary
    _$WebApiModulesHomeControlsOrderSummaryRecTypeSummaryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsOrderSummaryRecTypeSummary(
          price: (json['Price'] as num?)?.toDouble(),
          discount: (json['Discount'] as num?)?.toDouble(),
          cost: (json['Cost'] as num?)?.toDouble(),
          profit: (json['Profit'] as num?)?.toDouble(),
          markup: (json['Markup'] as num?)?.toDouble(),
          margin: (json['Margin'] as num?)?.toDouble(),
          subTotal: (json['SubTotal'] as num?)?.toDouble(),
          tax: (json['Tax'] as num?)?.toDouble(),
          total: (json['Total'] as num?)?.toDouble(),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsOrderSummaryRecTypeSummaryToJson(
        WebApiModulesHomeControlsOrderSummaryRecTypeSummary instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Price', instance.price);
  writeNotNull('Discount', instance.discount);
  writeNotNull('Cost', instance.cost);
  writeNotNull('Profit', instance.profit);
  writeNotNull('Markup', instance.markup);
  writeNotNull('Margin', instance.margin);
  writeNotNull('SubTotal', instance.subTotal);
  writeNotNull('Tax', instance.tax);
  writeNotNull('Total', instance.total);
  return val;
}

WebApiModulesHomeControlsPersonalEventPersonalEvent
    _$WebApiModulesHomeControlsPersonalEventPersonalEventFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPersonalEventPersonalEvent(
          personalEventId: json['PersonalEventId'] as String?,
          contactId: json['ContactId'] as String?,
          person: json['Person'] as String?,
          contactEventId: json['ContactEventId'] as String?,
          contactEvent: json['ContactEvent'] as String?,
          eventDate: json['EventDate'] as String?,
          color: json['Color'] as String?,
          recurring: json['Recurring'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPersonalEventPersonalEventToJson(
        WebApiModulesHomeControlsPersonalEventPersonalEvent instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PersonalEventId', instance.personalEventId);
  writeNotNull('ContactId', instance.contactId);
  writeNotNull('Person', instance.person);
  writeNotNull('ContactEventId', instance.contactEventId);
  writeNotNull('ContactEvent', instance.contactEvent);
  writeNotNull('EventDate', instance.eventDate);
  writeNotNull('Color', instance.color);
  writeNotNull('Recurring', instance.recurring);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventory
    _$WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventory(
          id: json['Id'] as int?,
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          consignorId: json['ConsignorId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          availableFor: json['AvailableFor'] as String?,
          availableForDisplay: json['AvailableForDisplay'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          rank: json['Rank'] as String?,
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventoryToJson(
        WebApiModulesHomeControlsPhysicalInventoryCycleInventoryPhysicalInventoryCycleInventory
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Id', instance.id);
  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('AvailableForDisplay', instance.availableForDisplay);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('Rank', instance.rank);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventory
    _$WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventory(
          id: json['Id'] as int?,
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          availableFor: json['AvailableFor'] as String?,
          availableForDisplay: json['AvailableForDisplay'] as String?,
          quantityOwned: (json['QuantityOwned'] as num?)?.toDouble(),
          trackedBy: json['TrackedBy'] as String?,
          unitCost: (json['UnitCost'] as num?)?.toDouble(),
          isRecount: json['IsRecount'] as bool?,
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          isNegativeInventory: json['IsNegativeInventory'] as int?,
          quantityAdded: (json['QuantityAdded'] as num?)?.toDouble(),
          quantityRetired: (json['QuantityRetired'] as num?)?.toDouble(),
          lastPurchaseUnitCost:
              (json['LastPurchaseUnitCost'] as num?)?.toDouble(),
          newUnitCost: (json['NewUnitCost'] as num?)?.toDouble(),
          currentSpaceId: json['CurrentSpaceId'] as String?,
          consignorId: json['ConsignorId'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventoryToJson(
        WebApiModulesHomeControlsPhysicalInventoryInventoryPhysicalInventoryInventory
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Id', instance.id);
  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('AvailableForDisplay', instance.availableForDisplay);
  writeNotNull('QuantityOwned', instance.quantityOwned);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('UnitCost', instance.unitCost);
  writeNotNull('IsRecount', instance.isRecount);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('IsNegativeInventory', instance.isNegativeInventory);
  writeNotNull('QuantityAdded', instance.quantityAdded);
  writeNotNull('QuantityRetired', instance.quantityRetired);
  writeNotNull('LastPurchaseUnitCost', instance.lastPurchaseUnitCost);
  writeNotNull('NewUnitCost', instance.newUnitCost);
  writeNotNull('CurrentSpaceId', instance.currentSpaceId);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsPickListItemPickListItem
    _$WebApiModulesHomeControlsPickListItemPickListItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPickListItemPickListItem(
          pickListItemId: json['PickListItemId'] as String?,
          pickListId: json['PickListId'] as String?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          masterItemId: json['MasterItemId'] as String?,
          usersId: json['UsersId'] as String?,
          pickQuantity: json['PickQuantity'] as int?,
          quantityOrdered: json['QuantityOrdered'] as int?,
          consignQuantity: json['ConsignQuantity'] as int?,
          stagedQuantity: json['StagedQuantity'] as int?,
          outQuantity: json['OutQuantity'] as int?,
          inLocationQuantity: json['InLocationQuantity'] as int?,
          masterId: json['MasterId'] as String?,
          iCode: json['ICode'] as String?,
          iCodeColor: json['ICodeColor'] as String?,
          description: json['Description'] as String?,
          descriptionColor: json['DescriptionColor'] as String?,
          optionColor: json['OptionColor'] as String?,
          itemClass: json['ItemClass'] as String?,
          itemOrder: json['ItemOrder'] as String?,
          pickDate: json['PickDate'] as String?,
          pickTime: json['PickTime'] as String?,
          recType: json['RecType'] as String?,
          vendorId: json['VendorId'] as String?,
          consignorId: json['ConsignorId'] as String?,
          vendorConsignorColor: json['VendorConsignorColor'] as String?,
          vendorConsignor: json['VendorConsignor'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          categoryId: json['CategoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          conflict: json['Conflict'] as bool?,
          bold: json['Bold'] as bool?,
          itemOrderPickList: json['ItemOrderPickList'] as String?,
          notes: json['Notes'] as String?,
          barCode: json['BarCode'] as String?,
          serialNumber: json['SerialNumber'] as String?,
          rfId: json['RfId'] as String?,
          nestingLevel: json['NestingLevel'] as int?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsPickListItemPickListItemToJson(
    WebApiModulesHomeControlsPickListItemPickListItem instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PickListItemId', instance.pickListItemId);
  writeNotNull('PickListId', instance.pickListId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('MasterItemId', instance.masterItemId);
  writeNotNull('UsersId', instance.usersId);
  writeNotNull('PickQuantity', instance.pickQuantity);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('ConsignQuantity', instance.consignQuantity);
  writeNotNull('StagedQuantity', instance.stagedQuantity);
  writeNotNull('OutQuantity', instance.outQuantity);
  writeNotNull('InLocationQuantity', instance.inLocationQuantity);
  writeNotNull('MasterId', instance.masterId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeColor', instance.iCodeColor);
  writeNotNull('Description', instance.description);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('OptionColor', instance.optionColor);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('PickDate', instance.pickDate);
  writeNotNull('PickTime', instance.pickTime);
  writeNotNull('RecType', instance.recType);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('VendorConsignorColor', instance.vendorConsignorColor);
  writeNotNull('VendorConsignor', instance.vendorConsignor);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Conflict', instance.conflict);
  writeNotNull('Bold', instance.bold);
  writeNotNull('ItemOrderPickList', instance.itemOrderPickList);
  writeNotNull('Notes', instance.notes);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('RfId', instance.rfId);
  writeNotNull('NestingLevel', instance.nestingLevel);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsPickListUtilityItemApplyPickListSessionItemsRequest
    _$WebApiModulesHomeControlsPickListUtilityItemApplyPickListSessionItemsRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPickListUtilityItemApplyPickListSessionItemsRequest(
          sessionId: json['SessionId'] as String?,
          itemsNotYetStaged: json['ItemsNotYetStaged'] as bool?,
          itemsStaged: json['ItemsStaged'] as bool?,
          itemsOut: json['ItemsOut'] as bool?,
          pickDateFrom: json['PickDateFrom'] == null
              ? null
              : DateTime.parse(json['PickDateFrom'] as String),
          pickDateTo: json['PickDateTo'] == null
              ? null
              : DateTime.parse(json['PickDateTo'] as String),
          rentalItems: json['RentalItems'] as bool?,
          salesItems: json['SalesItems'] as bool?,
          vendorItems: json['VendorItems'] as bool?,
          laborItems: json['LaborItems'] as bool?,
          warehouseId: json['WarehouseId'] as String?,
          completeKitMains: json['CompleteKitMains'] as bool?,
          completeKitAccessories: json['CompleteKitAccessories'] as bool?,
          completeKitOptions: json['CompleteKitOptions'] as bool?,
          standAloneItems: json['StandAloneItems'] as bool?,
          itemsOnOtherPickLists: json['ItemsOnOtherPickLists'] as bool?,
          reduceQuantityAlreadyPicked:
              json['ReduceQuantityAlreadyPicked'] as bool?,
          summarizeByICode: json['SummarizeByICode'] as bool?,
          summarizeCompleteKitItems: json['SummarizeCompleteKitItems'] as bool?,
          honorCompleteKitItemTypes: json['HonorCompleteKitItemTypes'] as bool?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          selectAll: json['SelectAll'] as bool?,
          selectNone: json['SelectNone'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemApplyPickListSessionItemsRequestToJson(
        WebApiModulesHomeControlsPickListUtilityItemApplyPickListSessionItemsRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('ItemsNotYetStaged', instance.itemsNotYetStaged);
  writeNotNull('ItemsStaged', instance.itemsStaged);
  writeNotNull('ItemsOut', instance.itemsOut);
  writeNotNull('PickDateFrom', instance.pickDateFrom?.toIso8601String());
  writeNotNull('PickDateTo', instance.pickDateTo?.toIso8601String());
  writeNotNull('RentalItems', instance.rentalItems);
  writeNotNull('SalesItems', instance.salesItems);
  writeNotNull('VendorItems', instance.vendorItems);
  writeNotNull('LaborItems', instance.laborItems);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('CompleteKitMains', instance.completeKitMains);
  writeNotNull('CompleteKitAccessories', instance.completeKitAccessories);
  writeNotNull('CompleteKitOptions', instance.completeKitOptions);
  writeNotNull('StandAloneItems', instance.standAloneItems);
  writeNotNull('ItemsOnOtherPickLists', instance.itemsOnOtherPickLists);
  writeNotNull(
      'ReduceQuantityAlreadyPicked', instance.reduceQuantityAlreadyPicked);
  writeNotNull('SummarizeByICode', instance.summarizeByICode);
  writeNotNull('SummarizeCompleteKitItems', instance.summarizeCompleteKitItems);
  writeNotNull('HonorCompleteKitItemTypes', instance.honorCompleteKitItemTypes);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('SelectAll', instance.selectAll);
  writeNotNull('SelectNone', instance.selectNone);
  return val;
}

WebApiModulesHomeControlsPickListUtilityItemCompleteSessionRequest
    _$WebApiModulesHomeControlsPickListUtilityItemCompleteSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPickListUtilityItemCompleteSessionRequest(
          sessionId: json['SessionId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemCompleteSessionRequestToJson(
        WebApiModulesHomeControlsPickListUtilityItemCompleteSessionRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  return val;
}

WebApiModulesHomeControlsPickListUtilityItemCompleteSessionResponse
    _$WebApiModulesHomeControlsPickListUtilityItemCompleteSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPickListUtilityItemCompleteSessionResponse(
          pickListId: json['PickListId'] as String?,
          pickListNumber: json['PickListNumber'] as String?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemCompleteSessionResponseToJson(
        WebApiModulesHomeControlsPickListUtilityItemCompleteSessionResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PickListId', instance.pickListId);
  writeNotNull('PickListNumber', instance.pickListNumber);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsPickListUtilityItemPickListUtilityItem
    _$WebApiModulesHomeControlsPickListUtilityItemPickListUtilityItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPickListUtilityItemPickListUtilityItem(
          sessionId: json['SessionId'] as String?,
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          parentId: json['ParentId'] as String?,
          parentParentId: json['ParentParentId'] as String?,
          accessoryRatio: (json['AccessoryRatio'] as num?)?.toDouble(),
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          inventoryTypeIdNoParent: json['InventoryTypeIdNoParent'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          locationId: json['LocationId'] as String?,
          departmentId: json['DepartmentId'] as String?,
          dealId: json['DealId'] as String?,
          orderType: json['OrderType'] as String?,
          orderStatus: json['OrderStatus'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
          subQuantity: (json['SubQuantity'] as num?)?.toDouble(),
          consignQuantity: (json['ConsignQuantity'] as num?)?.toDouble(),
          quantityInLocation: (json['QuantityInLocation'] as num?)?.toDouble(),
          pickDate: json['PickDate'] as String?,
          pickQuantity: (json['PickQuantity'] as num?)?.toDouble(),
          stagedQuantity: (json['StagedQuantity'] as num?)?.toDouble(),
          outQuantity: (json['OutQuantity'] as num?)?.toDouble(),
          remainingQuantity: (json['RemainingQuantity'] as num?)?.toDouble(),
          pickedQuantity: (json['PickedQuantity'] as num?)?.toDouble(),
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          recType: json['RecType'] as String?,
          recTypeDisplay: json['RecTypeDisplay'] as String?,
          itemClass: json['ItemClass'] as String?,
          itemOrder: json['ItemOrder'] as String?,
          optionColor: json['OptionColor'] as bool?,
          itemId: json['ItemId'] as String?,
          barCode: json['BarCode'] as String?,
          serialNumber: json['SerialNumber'] as String?,
          subVendorId: json['SubVendorId'] as String?,
          consignorId: json['ConsignorId'] as String?,
          vendor: json['Vendor'] as String?,
          nestedOrderItemId: json['NestedOrderItemId'] as String?,
          nestingLevel: json['NestingLevel'] as int?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemPickListUtilityItemToJson(
        WebApiModulesHomeControlsPickListUtilityItemPickListUtilityItem
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('ParentId', instance.parentId);
  writeNotNull('ParentParentId', instance.parentParentId);
  writeNotNull('AccessoryRatio', instance.accessoryRatio);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('InventoryTypeIdNoParent', instance.inventoryTypeIdNoParent);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull('OrderStatus', instance.orderStatus);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('SubQuantity', instance.subQuantity);
  writeNotNull('ConsignQuantity', instance.consignQuantity);
  writeNotNull('QuantityInLocation', instance.quantityInLocation);
  writeNotNull('PickDate', instance.pickDate);
  writeNotNull('PickQuantity', instance.pickQuantity);
  writeNotNull('StagedQuantity', instance.stagedQuantity);
  writeNotNull('OutQuantity', instance.outQuantity);
  writeNotNull('RemainingQuantity', instance.remainingQuantity);
  writeNotNull('PickedQuantity', instance.pickedQuantity);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('RecType', instance.recType);
  writeNotNull('RecTypeDisplay', instance.recTypeDisplay);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('OptionColor', instance.optionColor);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('SubVendorId', instance.subVendorId);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('NestedOrderItemId', instance.nestedOrderItemId);
  writeNotNull('NestingLevel', instance.nestingLevel);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsPickListUtilityItemStartSessionRequest
    _$WebApiModulesHomeControlsPickListUtilityItemStartSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPickListUtilityItemStartSessionRequest(
          orderId: json['OrderId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemStartSessionRequestToJson(
        WebApiModulesHomeControlsPickListUtilityItemStartSessionRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  return val;
}

WebApiModulesHomeControlsPickListUtilityItemStartSessionResponse
    _$WebApiModulesHomeControlsPickListUtilityItemStartSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPickListUtilityItemStartSessionResponse(
          sessionId: json['SessionId'] as String?,
          inventoryTypes: json['InventoryTypes'] as String?,
          inventoryTypeIds: json['InventoryTypeIds'] as String?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPickListUtilityItemStartSessionResponseToJson(
        WebApiModulesHomeControlsPickListUtilityItemStartSessionResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('InventoryTypes', instance.inventoryTypes);
  writeNotNull('InventoryTypeIds', instance.inventoryTypeIds);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsPricingPricing
    _$WebApiModulesHomeControlsPricingPricingFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPricingPricing(
          inventoryId: json['InventoryId'] as String?,
          rateId: json['RateId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouseDefaultCurrencyId:
              json['WarehouseDefaultCurrencyId'] as String?,
          currencyId: json['CurrencyId'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          isCurrencyDefined: json['IsCurrencyDefined'] as bool?,
          defaultPurchaseCurrencyId:
              json['DefaultPurchaseCurrencyId'] as String?,
          convertFromCurrencyId: json['ConvertFromCurrencyId'] as String?,
          hourlyRate: (json['HourlyRate'] as num?)?.toDouble(),
          dailyRate: (json['DailyRate'] as num?)?.toDouble(),
          weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
          week2Rate: (json['Week2Rate'] as num?)?.toDouble(),
          week3Rate: (json['Week3Rate'] as num?)?.toDouble(),
          week4Rate: (json['Week4Rate'] as num?)?.toDouble(),
          week5Rate: (json['Week5Rate'] as num?)?.toDouble(),
          monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
          seriesRate: (json['SeriesRate'] as num?)?.toDouble(),
          year2LeaseRate: (json['Year2LeaseRate'] as num?)?.toDouble(),
          year3LeaseRate: (json['Year3LeaseRate'] as num?)?.toDouble(),
          year4LeaseRate: (json['Year4LeaseRate'] as num?)?.toDouble(),
          hourlyMarkup: (json['HourlyMarkup'] as num?)?.toDouble(),
          dailyMarkup: (json['DailyMarkup'] as num?)?.toDouble(),
          weeklyMarkup: (json['WeeklyMarkup'] as num?)?.toDouble(),
          monthlyMarkup: (json['MonthlyMarkup'] as num?)?.toDouble(),
          retail: (json['Retail'] as num?)?.toDouble(),
          price: (json['Price'] as num?)?.toDouble(),
          cost: (json['Cost'] as num?)?.toDouble(),
          hourlyCost: (json['HourlyCost'] as num?)?.toDouble(),
          dailyCost: (json['DailyCost'] as num?)?.toDouble(),
          weeklyCost: (json['WeeklyCost'] as num?)?.toDouble(),
          monthlyCost: (json['MonthlyCost'] as num?)?.toDouble(),
          defaultCost: (json['DefaultCost'] as num?)?.toDouble(),
          defaultCostConverted:
              (json['DefaultCostConverted'] as num?)?.toDouble(),
          markup: (json['Markup'] as num?)?.toDouble(),
          markupCostBasis: (json['MarkupCostBasis'] as num?)?.toDouble(),
          classification: json['Classification'] as String?,
          maximumDiscount: (json['MaximumDiscount'] as num?)?.toDouble(),
          maxDaysPerWeek: (json['MaxDaysPerWeek'] as num?)?.toDouble(),
          minimumDaysPerWeek: (json['MinimumDaysPerWeek'] as num?)?.toDouble(),
          availableFor: json['AvailableFor'] as String?,
          defaultRentalRates: json['DefaultRentalRates'] as bool?,
          defaultDailyRate: (json['DefaultDailyRate'] as num?)?.toDouble(),
          defaultWeeklyRate: (json['DefaultWeeklyRate'] as num?)?.toDouble(),
          hours: json['Hours'] as String?,
          hasTieredCost: json['HasTieredCost'] as bool?,
          replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
          unitValue: (json['UnitValue'] as num?)?.toDouble(),
          replacementCostConverted:
              (json['ReplacementCostConverted'] as num?)?.toDouble(),
          unitCostConverted: (json['UnitCostConverted'] as num?)?.toDouble(),
          markupReplacementCost: json['MarkupReplacementCost'] as bool?,
          replacementCostMarkupPercent:
              (json['ReplacementCostMarkupPercent'] as num?)?.toDouble(),
          restockingFee: (json['RestockingFee'] as num?)?.toDouble(),
          restockingPercent: (json['RestockingPercent'] as num?)?.toDouble(),
          calculateMonthlyRate: json['CalculateMonthlyRate'] as bool?,
          calculateSeriesWeeklyRate: json['CalculateSeriesWeeklyRate'] as bool?,
          calculate2YearLeaseWeeklyRate:
              json['Calculate2YearLeaseWeeklyRate'] as bool?,
          calculate3YearLeaseWeeklyRate:
              json['Calculate3YearLeaseWeeklyRate'] as bool?,
          warehouseOrderBy: json['WarehouseOrderBy'] as int?,
          noChargePrint: json['NoChargePrint'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsPricingPricingToJson(
    WebApiModulesHomeControlsPricingPricing instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('RateId', instance.rateId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull(
      'WarehouseDefaultCurrencyId', instance.warehouseDefaultCurrencyId);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('IsCurrencyDefined', instance.isCurrencyDefined);
  writeNotNull('DefaultPurchaseCurrencyId', instance.defaultPurchaseCurrencyId);
  writeNotNull('ConvertFromCurrencyId', instance.convertFromCurrencyId);
  writeNotNull('HourlyRate', instance.hourlyRate);
  writeNotNull('DailyRate', instance.dailyRate);
  writeNotNull('WeeklyRate', instance.weeklyRate);
  writeNotNull('Week2Rate', instance.week2Rate);
  writeNotNull('Week3Rate', instance.week3Rate);
  writeNotNull('Week4Rate', instance.week4Rate);
  writeNotNull('Week5Rate', instance.week5Rate);
  writeNotNull('MonthlyRate', instance.monthlyRate);
  writeNotNull('SeriesRate', instance.seriesRate);
  writeNotNull('Year2LeaseRate', instance.year2LeaseRate);
  writeNotNull('Year3LeaseRate', instance.year3LeaseRate);
  writeNotNull('Year4LeaseRate', instance.year4LeaseRate);
  writeNotNull('HourlyMarkup', instance.hourlyMarkup);
  writeNotNull('DailyMarkup', instance.dailyMarkup);
  writeNotNull('WeeklyMarkup', instance.weeklyMarkup);
  writeNotNull('MonthlyMarkup', instance.monthlyMarkup);
  writeNotNull('Retail', instance.retail);
  writeNotNull('Price', instance.price);
  writeNotNull('Cost', instance.cost);
  writeNotNull('HourlyCost', instance.hourlyCost);
  writeNotNull('DailyCost', instance.dailyCost);
  writeNotNull('WeeklyCost', instance.weeklyCost);
  writeNotNull('MonthlyCost', instance.monthlyCost);
  writeNotNull('DefaultCost', instance.defaultCost);
  writeNotNull('DefaultCostConverted', instance.defaultCostConverted);
  writeNotNull('Markup', instance.markup);
  writeNotNull('MarkupCostBasis', instance.markupCostBasis);
  writeNotNull('Classification', instance.classification);
  writeNotNull('MaximumDiscount', instance.maximumDiscount);
  writeNotNull('MaxDaysPerWeek', instance.maxDaysPerWeek);
  writeNotNull('MinimumDaysPerWeek', instance.minimumDaysPerWeek);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('DefaultRentalRates', instance.defaultRentalRates);
  writeNotNull('DefaultDailyRate', instance.defaultDailyRate);
  writeNotNull('DefaultWeeklyRate', instance.defaultWeeklyRate);
  writeNotNull('Hours', instance.hours);
  writeNotNull('HasTieredCost', instance.hasTieredCost);
  writeNotNull('ReplacementCost', instance.replacementCost);
  writeNotNull('UnitValue', instance.unitValue);
  writeNotNull('ReplacementCostConverted', instance.replacementCostConverted);
  writeNotNull('UnitCostConverted', instance.unitCostConverted);
  writeNotNull('MarkupReplacementCost', instance.markupReplacementCost);
  writeNotNull(
      'ReplacementCostMarkupPercent', instance.replacementCostMarkupPercent);
  writeNotNull('RestockingFee', instance.restockingFee);
  writeNotNull('RestockingPercent', instance.restockingPercent);
  writeNotNull('CalculateMonthlyRate', instance.calculateMonthlyRate);
  writeNotNull('CalculateSeriesWeeklyRate', instance.calculateSeriesWeeklyRate);
  writeNotNull(
      'Calculate2YearLeaseWeeklyRate', instance.calculate2YearLeaseWeeklyRate);
  writeNotNull(
      'Calculate3YearLeaseWeeklyRate', instance.calculate3YearLeaseWeeklyRate);
  writeNotNull('WarehouseOrderBy', instance.warehouseOrderBy);
  writeNotNull('NoChargePrint', instance.noChargePrint);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsProjectContactProjectContact
    _$WebApiModulesHomeControlsProjectContactProjectContactFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsProjectContactProjectContact(
          projectContactId: json['ProjectContactId'] as int?,
          projectId: json['ProjectId'] as String?,
          contactId: json['ContactId'] as String?,
          nameFml: json['NameFml'] as String?,
          nameLfm: json['NameLfm'] as String?,
          person: json['Person'] as String?,
          personColor: json['PersonColor'] as String?,
          firstName: json['FirstName'] as String?,
          middleInitial: json['MiddleInitial'] as String?,
          lastName: json['LastName'] as String?,
          contactTitle: json['ContactTitle'] as String?,
          officePhone: json['OfficePhone'] as String?,
          officeExtension: json['OfficeExtension'] as String?,
          mobilePhone: json['MobilePhone'] as String?,
          email: json['Email'] as String?,
          pager: json['Pager'] as String?,
          pagerPin: json['PagerPin'] as String?,
          jobTitle: json['JobTitle'] as String?,
          contactTitleId: json['ContactTitleId'] as String?,
          companyContactId: json['CompanyContactId'] as String?,
          companyId: json['CompanyId'] as String?,
          isPrimary: json['IsPrimary'] as bool?,
          countryId: json['CountryId'] as String?,
          isProjectFor: json['IsProjectFor'] as bool?,
          isProductionContact: json['IsProductionContact'] as bool?,
          isPrintable: json['IsPrintable'] as bool?,
          contactOnProject: json['ContactOnProject'] as bool?,
          inactive: json['Inactive'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsProjectContactProjectContactToJson(
        WebApiModulesHomeControlsProjectContactProjectContact instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ProjectContactId', instance.projectContactId);
  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('ContactId', instance.contactId);
  writeNotNull('NameFml', instance.nameFml);
  writeNotNull('NameLfm', instance.nameLfm);
  writeNotNull('Person', instance.person);
  writeNotNull('PersonColor', instance.personColor);
  writeNotNull('FirstName', instance.firstName);
  writeNotNull('MiddleInitial', instance.middleInitial);
  writeNotNull('LastName', instance.lastName);
  writeNotNull('ContactTitle', instance.contactTitle);
  writeNotNull('OfficePhone', instance.officePhone);
  writeNotNull('OfficeExtension', instance.officeExtension);
  writeNotNull('MobilePhone', instance.mobilePhone);
  writeNotNull('Email', instance.email);
  writeNotNull('Pager', instance.pager);
  writeNotNull('PagerPin', instance.pagerPin);
  writeNotNull('JobTitle', instance.jobTitle);
  writeNotNull('ContactTitleId', instance.contactTitleId);
  writeNotNull('CompanyContactId', instance.companyContactId);
  writeNotNull('CompanyId', instance.companyId);
  writeNotNull('IsPrimary', instance.isPrimary);
  writeNotNull('CountryId', instance.countryId);
  writeNotNull('IsProjectFor', instance.isProjectFor);
  writeNotNull('IsProductionContact', instance.isProductionContact);
  writeNotNull('IsPrintable', instance.isPrintable);
  writeNotNull('ContactOnProject', instance.contactOnProject);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsProjectNoteProjectNote
    _$WebApiModulesHomeControlsProjectNoteProjectNoteFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsProjectNoteProjectNote(
          projectNoteId: json['ProjectNoteId'] as String?,
          projectId: json['ProjectId'] as String?,
          noteDate: json['NoteDate'] as String?,
          userId: json['UserId'] as String?,
          notesDescription: json['NotesDescription'] as String?,
          printOnProject: json['PrintOnProject'] as bool?,
          userName: json['UserName'] as String?,
          notes: json['Notes'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsProjectNoteProjectNoteToJson(
    WebApiModulesHomeControlsProjectNoteProjectNote instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ProjectNoteId', instance.projectNoteId);
  writeNotNull('ProjectId', instance.projectId);
  writeNotNull('NoteDate', instance.noteDate);
  writeNotNull('UserId', instance.userId);
  writeNotNull('NotesDescription', instance.notesDescription);
  writeNotNull('PrintOnProject', instance.printOnProject);
  writeNotNull('UserName', instance.userName);
  writeNotNull('Notes', instance.notes);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCode
    _$WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCode(
          purchaseOrderReceiveBarCodeId:
              json['PurchaseOrderReceiveBarCodeId'] as int?,
          barCode: json['BarCode'] as String?,
          inspectionNumber: json['InspectionNumber'] as String?,
          inspectionVendorId: json['InspectionVendorId'] as String?,
          inspectionVendor: json['InspectionVendor'] as String?,
          manufactureDate: json['ManufactureDate'] as String?,
          printQuantity: json['PrintQuantity'] as int?,
          serialNumber: json['SerialNumber'] as String?,
          rfId: json['RfId'] as String?,
          purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          orderTranId: json['OrderTranId'] as int?,
          internalChar: json['InternalChar'] as String?,
          receiveContractId: json['ReceiveContractId'] as String?,
          receiveContractNumber: json['ReceiveContractNumber'] as String?,
          returnContractId: json['ReturnContractId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          scannableBarCode: json['ScannableBarCode'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          iCodeDescription: json['ICodeDescription'] as String?,
          packingSlipNumber: json['PackingSlipNumber'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          itemId: json['ItemId'] as String?,
          purchaseId: json['PurchaseId'] as String?,
          availableFor: json['AvailableFor'] as String?,
          availableForDisplay: json['AvailableForDisplay'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          serialNumberIsMixedCase: json['SerialNumberIsMixedCase'] as bool?,
          itemOrder: json['ItemOrder'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCodeToJson(
        WebApiModulesHomeControlsPurchaseOrderReceiveBarCodePurchaseOrderReceiveBarCode
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull(
      'PurchaseOrderReceiveBarCodeId', instance.purchaseOrderReceiveBarCodeId);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('InspectionNumber', instance.inspectionNumber);
  writeNotNull('InspectionVendorId', instance.inspectionVendorId);
  writeNotNull('InspectionVendor', instance.inspectionVendor);
  writeNotNull('ManufactureDate', instance.manufactureDate);
  writeNotNull('PrintQuantity', instance.printQuantity);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('RfId', instance.rfId);
  writeNotNull('PurchaseOrderItemId', instance.purchaseOrderItemId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('OrderTranId', instance.orderTranId);
  writeNotNull('InternalChar', instance.internalChar);
  writeNotNull('ReceiveContractId', instance.receiveContractId);
  writeNotNull('ReceiveContractNumber', instance.receiveContractNumber);
  writeNotNull('ReturnContractId', instance.returnContractId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ScannableBarCode', instance.scannableBarCode);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('ICodeDescription', instance.iCodeDescription);
  writeNotNull('PackingSlipNumber', instance.packingSlipNumber);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('PurchaseId', instance.purchaseId);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('AvailableForDisplay', instance.availableForDisplay);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('SerialNumberIsMixedCase', instance.serialNumberIsMixedCase);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCode
    _$WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCode(
          purchaseOrderReturnBarCodeId:
              json['PurchaseOrderReturnBarCodeId'] as int?,
          barCode: json['BarCode'] as String?,
          inspectionNumber: json['InspectionNumber'] as String?,
          inspectionVendorId: json['InspectionVendorId'] as String?,
          inspectionVendor: json['InspectionVendor'] as String?,
          manufactureDate: json['ManufactureDate'] as String?,
          printQuantity: json['PrintQuantity'] as int?,
          serialNumber: json['SerialNumber'] as String?,
          rfId: json['RfId'] as String?,
          purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          orderTranId: json['OrderTranId'] as int?,
          internalChar: json['InternalChar'] as String?,
          returnContractId: json['ReturnContractId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          scannableBarCode: json['ScannableBarCode'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          iCodeDescription: json['ICodeDescription'] as String?,
          packingSlipNumber: json['PackingSlipNumber'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          itemId: json['ItemId'] as String?,
          purchaseId: json['PurchaseId'] as String?,
          availableFor: json['AvailableFor'] as String?,
          availableForDisplay: json['AvailableForDisplay'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          serialNumberIsMixedCase: json['SerialNumberIsMixedCase'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCodeToJson(
        WebApiModulesHomeControlsPurchaseOrderReturnBarCodePurchaseOrderReturnBarCode
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull(
      'PurchaseOrderReturnBarCodeId', instance.purchaseOrderReturnBarCodeId);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('InspectionNumber', instance.inspectionNumber);
  writeNotNull('InspectionVendorId', instance.inspectionVendorId);
  writeNotNull('InspectionVendor', instance.inspectionVendor);
  writeNotNull('ManufactureDate', instance.manufactureDate);
  writeNotNull('PrintQuantity', instance.printQuantity);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('RfId', instance.rfId);
  writeNotNull('PurchaseOrderItemId', instance.purchaseOrderItemId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('OrderTranId', instance.orderTranId);
  writeNotNull('InternalChar', instance.internalChar);
  writeNotNull('ReturnContractId', instance.returnContractId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ScannableBarCode', instance.scannableBarCode);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('ICodeDescription', instance.iCodeDescription);
  writeNotNull('PackingSlipNumber', instance.packingSlipNumber);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('PurchaseId', instance.purchaseId);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('AvailableForDisplay', instance.availableForDisplay);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('SerialNumberIsMixedCase', instance.serialNumberIsMixedCase);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItem
    _$WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItem(
          purchaseId: json['PurchaseId'] as String?,
          vendorInvoiceId: json['VendorInvoiceId'] as String?,
          vendorInvoiceItemId: json['VendorInvoiceItemId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderItemId: json['PurchaseOrderItemId'] as String?,
          invoiceNumber: json['InvoiceNumber'] as String?,
          invoiceDate: json['InvoiceDate'] as String?,
          quantity: json['Quantity'] as int?,
          unitCost: (json['UnitCost'] as num?)?.toDouble(),
          extended: (json['Extended'] as num?)?.toDouble(),
          currencyId: json['CurrencyId'] as String?,
          currency: json['Currency'] as String?,
          currencyCode: json['CurrencyCode'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItemToJson(
        WebApiModulesHomeControlsPurchaseVendorInvoiceItemPurchaseVendorInvoiceItem
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PurchaseId', instance.purchaseId);
  writeNotNull('VendorInvoiceId', instance.vendorInvoiceId);
  writeNotNull('VendorInvoiceItemId', instance.vendorInvoiceItemId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderItemId', instance.purchaseOrderItemId);
  writeNotNull('InvoiceNumber', instance.invoiceNumber);
  writeNotNull('InvoiceDate', instance.invoiceDate);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('UnitCost', instance.unitCost);
  writeNotNull('Extended', instance.extended);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('Currency', instance.currency);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsRepairCostRepairCost
    _$WebApiModulesHomeControlsRepairCostRepairCostFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsRepairCostRepairCost(
          repairCostId: json['RepairCostId'] as String?,
          repairId: json['RepairId'] as String?,
          rateId: json['RateId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          unit: json['Unit'] as String?,
          rate: (json['Rate'] as num?)?.toDouble(),
          grossTotal: (json['GrossTotal'] as num?)?.toDouble(),
          discountAmount: (json['DiscountAmount'] as num?)?.toDouble(),
          extended: (json['Extended'] as num?)?.toDouble(),
          taxable: json['Taxable'] as bool?,
          tax: (json['Tax'] as num?)?.toDouble(),
          total: (json['Total'] as num?)?.toDouble(),
          billable: json['Billable'] as bool?,
          note: json['Note'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsRepairCostRepairCostToJson(
    WebApiModulesHomeControlsRepairCostRepairCost instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('RepairCostId', instance.repairCostId);
  writeNotNull('RepairId', instance.repairId);
  writeNotNull('RateId', instance.rateId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('Unit', instance.unit);
  writeNotNull('Rate', instance.rate);
  writeNotNull('GrossTotal', instance.grossTotal);
  writeNotNull('DiscountAmount', instance.discountAmount);
  writeNotNull('Extended', instance.extended);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('Tax', instance.tax);
  writeNotNull('Total', instance.total);
  writeNotNull('Billable', instance.billable);
  writeNotNull('Note', instance.note);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsRepairPartRepairPart
    _$WebApiModulesHomeControlsRepairPartRepairPartFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsRepairPartRepairPart(
          repairPartId: json['RepairPartId'] as String?,
          repairId: json['RepairId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          iCode: json['ICode'] as String?,
          iCodeColor: json['ICodeColor'] as String?,
          description: json['Description'] as String?,
          descriptionColor: json['DescriptionColor'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          unit: json['Unit'] as String?,
          price: (json['Price'] as num?)?.toDouble(),
          grossTotal: (json['GrossTotal'] as num?)?.toDouble(),
          discountAmount: (json['DiscountAmount'] as num?)?.toDouble(),
          extended: (json['Extended'] as num?)?.toDouble(),
          taxable: json['Taxable'] as bool?,
          tax: (json['Tax'] as num?)?.toDouble(),
          total: (json['Total'] as num?)?.toDouble(),
          billable: json['Billable'] as bool?,
          itemClass: json['ItemClass'] as String?,
          itemOrder: json['ItemOrder'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsRepairPartRepairPartToJson(
    WebApiModulesHomeControlsRepairPartRepairPart instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('RepairPartId', instance.repairPartId);
  writeNotNull('RepairId', instance.repairId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeColor', instance.iCodeColor);
  writeNotNull('Description', instance.description);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('Unit', instance.unit);
  writeNotNull('Price', instance.price);
  writeNotNull('GrossTotal', instance.grossTotal);
  writeNotNull('DiscountAmount', instance.discountAmount);
  writeNotNull('Extended', instance.extended);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('Tax', instance.tax);
  writeNotNull('Total', instance.total);
  writeNotNull('Billable', instance.billable);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsRepairReleaseRepairRelease
    _$WebApiModulesHomeControlsRepairReleaseRepairReleaseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsRepairReleaseRepairRelease(
          repairReleaseId: json['RepairReleaseId'] as String?,
          repairId: json['RepairId'] as String?,
          releaseDate: json['ReleaseDate'] as String?,
          usersId: json['UsersId'] as String?,
          releasedBy: json['ReleasedBy'] as String?,
          releaseQuantity: (json['ReleaseQuantity'] as num?)?.toDouble(),
          staging: json['Staging'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsRepairReleaseRepairReleaseToJson(
        WebApiModulesHomeControlsRepairReleaseRepairRelease instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('RepairReleaseId', instance.repairReleaseId);
  writeNotNull('RepairId', instance.repairId);
  writeNotNull('ReleaseDate', instance.releaseDate);
  writeNotNull('UsersId', instance.usersId);
  writeNotNull('ReleasedBy', instance.releasedBy);
  writeNotNull('ReleaseQuantity', instance.releaseQuantity);
  writeNotNull('Staging', instance.staging);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionRequest
    _$WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionRequest(
          sourceOrderId: json['SourceOrderId'] as String?,
          sessionId: json['SessionId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionRequestToJson(
        WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SourceOrderId', instance.sourceOrderId);
  writeNotNull('SessionId', instance.sessionId);
  return val;
}

WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionResponse
    _$WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionResponseToJson(
        WebApiModulesHomeControlsServiceOrderItemCompleteServiceOrderSessionResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsServiceOrderItemCreateServiceOrderFromRepairResponse
    _$WebApiModulesHomeControlsServiceOrderItemCreateServiceOrderFromRepairResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsServiceOrderItemCreateServiceOrderFromRepairResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          order: json['order'] == null
              ? null
              : WebApiModulesAgentOrderOrder.fromJson(
                  json['order'] as Map<String, dynamic>),
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemCreateServiceOrderFromRepairResponseToJson(
        WebApiModulesHomeControlsServiceOrderItemCreateServiceOrderFromRepairResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('order', instance.order?.toJson());
  return val;
}

WebApiModulesHomeControlsServiceOrderItemServiceOrderItem
    _$WebApiModulesHomeControlsServiceOrderItemServiceOrderItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsServiceOrderItemServiceOrderItem(
          serviceOrderItemId: json['ServiceOrderItemId'] as String?,
          repairId: json['RepairId'] as String?,
          repairNumber: json['RepairNumber'] as String?,
          barCode: json['BarCode'] as String?,
          serialNumber: json['SerialNumber'] as String?,
          repairICode: json['RepairICode'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          repairDescription: json['RepairDescription'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          repairInventoryId: json['RepairInventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          repairCostId: json['RepairCostId'] as String?,
          repairPartId: json['RepairPartId'] as String?,
          itemOrder: json['ItemOrder'] as String?,
          notes: json['Notes'] as String?,
          recType: json['RecType'] as String?,
          recTypeDisplay: json['RecTypeDisplay'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemServiceOrderItemToJson(
        WebApiModulesHomeControlsServiceOrderItemServiceOrderItem instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ServiceOrderItemId', instance.serviceOrderItemId);
  writeNotNull('RepairId', instance.repairId);
  writeNotNull('RepairNumber', instance.repairNumber);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('RepairICode', instance.repairICode);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('RepairDescription', instance.repairDescription);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('RepairInventoryId', instance.repairInventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('RepairCostId', instance.repairCostId);
  writeNotNull('RepairPartId', instance.repairPartId);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('Notes', instance.notes);
  writeNotNull('RecType', instance.recType);
  writeNotNull('RecTypeDisplay', instance.recTypeDisplay);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionRequest
    _$WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionRequest(
          repairIds: json['RepairIds'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionRequestToJson(
        WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('RepairIds', instance.repairIds);
  return val;
}

WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionResponse
    _$WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          sessionId: json['SessionId'] as String?,
          items: json['Items'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionResponseToJson(
        WebApiModulesHomeControlsServiceOrderItemStartServiceOrderSessionResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('Items', instance.items);
  return val;
}

WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemRequest
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemRequest(
          sessionId: json['SessionId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemRequestToJson(
        WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  return val;
}

WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemResponse
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemResponseToJson(
        WebApiModulesHomeControlsSubPurchaseOrderItemSelectAllNonePoWorksheetItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItem
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItem(
          sessionId: json['SessionId'] as String?,
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          primaryOrderItemId: json['PrimaryOrderItemId'] as String?,
          parentId: json['ParentId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          iCodeColor: json['ICodeColor'] as String?,
          description: json['Description'] as String?,
          descriptionColor: json['DescriptionColor'] as String?,
          nonDiscountable: json['NonDiscountable'] as bool?,
          isRecurring: json['IsRecurring'] as bool?,
          prorateWeeks: json['ProrateWeeks'] as bool?,
          prorateMonths: json['ProrateMonths'] as bool?,
          prorate: json['Prorate'] as bool?,
          prorateMonthsBy: json['ProrateMonthsBy'] as String?,
          recurringRateType: json['RecurringRateType'] as bool?,
          isCrewPositionHourly: json['IsCrewPositionHourly'] as bool?,
          fromDate: json['FromDate'] as String?,
          toDate: json['ToDate'] as String?,
          hours: (json['Hours'] as num?)?.toDouble(),
          overTimeHours: (json['OverTimeHours'] as num?)?.toDouble(),
          doubleTimeHours: (json['DoubleTimeHours'] as num?)?.toDouble(),
          subQuantity: (json['SubQuantity'] as num?)?.toDouble(),
          quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
          vendorRate: (json['VendorRate'] as num?)?.toDouble(),
          vendorDaysPerWeek: (json['VendorDaysPerWeek'] as num?)?.toDouble(),
          vendorDiscountPercent:
              (json['VendorDiscountPercent'] as num?)?.toDouble(),
          vendorDiscountPercentDisplay:
              (json['VendorDiscountPercentDisplay'] as num?)?.toDouble(),
          vendorBillablePeriods:
              (json['VendorBillablePeriods'] as num?)?.toDouble(),
          vendorWeeklySubTotal:
              (json['VendorWeeklySubTotal'] as num?)?.toDouble(),
          vendorWeeklyDiscount:
              (json['VendorWeeklyDiscount'] as num?)?.toDouble(),
          vendorWeeklyExtended:
              (json['VendorWeeklyExtended'] as num?)?.toDouble(),
          vendorWeeklyTax: (json['VendorWeeklyTax'] as num?)?.toDouble(),
          vendorWeeklyTotal: (json['VendorWeeklyTotal'] as num?)?.toDouble(),
          vendorMonthlySubTotal:
              (json['VendorMonthlySubTotal'] as num?)?.toDouble(),
          vendorMonthlyDiscount:
              (json['VendorMonthlyDiscount'] as num?)?.toDouble(),
          vendorMonthlyExtended:
              (json['VendorMonthlyExtended'] as num?)?.toDouble(),
          vendorMonthlyTax: (json['VendorMonthlyTax'] as num?)?.toDouble(),
          vendorMonthlyTotal: (json['VendorMonthlyTotal'] as num?)?.toDouble(),
          vendorPeriodSubTotal:
              (json['VendorPeriodSubTotal'] as num?)?.toDouble(),
          vendorPeriodDiscount:
              (json['VendorPeriodDiscount'] as num?)?.toDouble(),
          vendorPeriodExtended:
              (json['VendorPeriodExtended'] as num?)?.toDouble(),
          vendorPeriodTax: (json['VendorPeriodTax'] as num?)?.toDouble(),
          vendorPeriodTotal: (json['VendorPeriodTotal'] as num?)?.toDouble(),
          dealRate: (json['DealRate'] as num?)?.toDouble(),
          dealDaysPerWeek: (json['DealDaysPerWeek'] as num?)?.toDouble(),
          dealDiscountPercent:
              (json['DealDiscountPercent'] as num?)?.toDouble(),
          dealDiscountPercentDisplay:
              (json['DealDiscountPercentDisplay'] as num?)?.toDouble(),
          dealBillablePeriods:
              (json['DealBillablePeriods'] as num?)?.toDouble(),
          dealWeeklySubTotal: (json['DealWeeklySubTotal'] as num?)?.toDouble(),
          dealWeeklyDiscount: (json['DealWeeklyDiscount'] as num?)?.toDouble(),
          dealWeeklyExtended: (json['DealWeeklyExtended'] as num?)?.toDouble(),
          dealMonthlySubTotal:
              (json['DealMonthlySubTotal'] as num?)?.toDouble(),
          dealMonthlyDiscount:
              (json['DealMonthlyDiscount'] as num?)?.toDouble(),
          dealMonthlyExtended:
              (json['DealMonthlyExtended'] as num?)?.toDouble(),
          dealPeriodSubTotal: (json['DealPeriodSubTotal'] as num?)?.toDouble(),
          dealPeriodDiscount: (json['DealPeriodDiscount'] as num?)?.toDouble(),
          dealPeriodExtended: (json['DealPeriodExtended'] as num?)?.toDouble(),
          variance: (json['Variance'] as num?)?.toDouble(),
          varianceColor: json['VarianceColor'] as String?,
          markupPercent: (json['MarkupPercent'] as num?)?.toDouble(),
          marginPercent: (json['MarginPercent'] as num?)?.toDouble(),
          itemClass: json['ItemClass'] as String?,
          itemOrder: json['ItemOrder'] as String?,
          optionColor: json['OptionColor'] as bool?,
          recType: json['RecType'] as String?,
          taxable: json['Taxable'] as bool?,
          unitId: json['UnitId'] as String?,
          nestedOrderItemId: json['NestedOrderItemId'] as String?,
          accessoryRatio: (json['AccessoryRatio'] as num?)?.toDouble(),
          vendorCurrencyId: json['VendorCurrencyId'] as String?,
          vendorCurrencyCode: json['VendorCurrencyCode'] as String?,
          vendorCurrencySymbol: json['VendorCurrencySymbol'] as String?,
          dealCurrencyId: json['DealCurrencyId'] as String?,
          dealCurrencyCode: json['DealCurrencyCode'] as String?,
          dealCurrencySymbol: json['DealCurrencySymbol'] as String?,
          currencyExchangeRate:
              (json['CurrencyExchangeRate'] as num?)?.toDouble(),
          currencyConvertedRate:
              (json['CurrencyConvertedRate'] as num?)?.toDouble(),
          currencyConvertedWeeklyExtended:
              (json['CurrencyConvertedWeeklyExtended'] as num?)?.toDouble(),
          currencyConvertedMonthlyExtended:
              (json['CurrencyConvertedMonthlyExtended'] as num?)?.toDouble(),
          currencyConvertedPeriodExtended:
              (json['CurrencyConvertedPeriodExtended'] as num?)?.toDouble(),
          nestingLevel: json['NestingLevel'] as int?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItemToJson(
        WebApiModulesHomeControlsSubPurchaseOrderItemSubPurchaseOrderItem
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('PrimaryOrderItemId', instance.primaryOrderItemId);
  writeNotNull('ParentId', instance.parentId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeColor', instance.iCodeColor);
  writeNotNull('Description', instance.description);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('NonDiscountable', instance.nonDiscountable);
  writeNotNull('IsRecurring', instance.isRecurring);
  writeNotNull('ProrateWeeks', instance.prorateWeeks);
  writeNotNull('ProrateMonths', instance.prorateMonths);
  writeNotNull('Prorate', instance.prorate);
  writeNotNull('ProrateMonthsBy', instance.prorateMonthsBy);
  writeNotNull('RecurringRateType', instance.recurringRateType);
  writeNotNull('IsCrewPositionHourly', instance.isCrewPositionHourly);
  writeNotNull('FromDate', instance.fromDate);
  writeNotNull('ToDate', instance.toDate);
  writeNotNull('Hours', instance.hours);
  writeNotNull('OverTimeHours', instance.overTimeHours);
  writeNotNull('DoubleTimeHours', instance.doubleTimeHours);
  writeNotNull('SubQuantity', instance.subQuantity);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('VendorRate', instance.vendorRate);
  writeNotNull('VendorDaysPerWeek', instance.vendorDaysPerWeek);
  writeNotNull('VendorDiscountPercent', instance.vendorDiscountPercent);
  writeNotNull(
      'VendorDiscountPercentDisplay', instance.vendorDiscountPercentDisplay);
  writeNotNull('VendorBillablePeriods', instance.vendorBillablePeriods);
  writeNotNull('VendorWeeklySubTotal', instance.vendorWeeklySubTotal);
  writeNotNull('VendorWeeklyDiscount', instance.vendorWeeklyDiscount);
  writeNotNull('VendorWeeklyExtended', instance.vendorWeeklyExtended);
  writeNotNull('VendorWeeklyTax', instance.vendorWeeklyTax);
  writeNotNull('VendorWeeklyTotal', instance.vendorWeeklyTotal);
  writeNotNull('VendorMonthlySubTotal', instance.vendorMonthlySubTotal);
  writeNotNull('VendorMonthlyDiscount', instance.vendorMonthlyDiscount);
  writeNotNull('VendorMonthlyExtended', instance.vendorMonthlyExtended);
  writeNotNull('VendorMonthlyTax', instance.vendorMonthlyTax);
  writeNotNull('VendorMonthlyTotal', instance.vendorMonthlyTotal);
  writeNotNull('VendorPeriodSubTotal', instance.vendorPeriodSubTotal);
  writeNotNull('VendorPeriodDiscount', instance.vendorPeriodDiscount);
  writeNotNull('VendorPeriodExtended', instance.vendorPeriodExtended);
  writeNotNull('VendorPeriodTax', instance.vendorPeriodTax);
  writeNotNull('VendorPeriodTotal', instance.vendorPeriodTotal);
  writeNotNull('DealRate', instance.dealRate);
  writeNotNull('DealDaysPerWeek', instance.dealDaysPerWeek);
  writeNotNull('DealDiscountPercent', instance.dealDiscountPercent);
  writeNotNull(
      'DealDiscountPercentDisplay', instance.dealDiscountPercentDisplay);
  writeNotNull('DealBillablePeriods', instance.dealBillablePeriods);
  writeNotNull('DealWeeklySubTotal', instance.dealWeeklySubTotal);
  writeNotNull('DealWeeklyDiscount', instance.dealWeeklyDiscount);
  writeNotNull('DealWeeklyExtended', instance.dealWeeklyExtended);
  writeNotNull('DealMonthlySubTotal', instance.dealMonthlySubTotal);
  writeNotNull('DealMonthlyDiscount', instance.dealMonthlyDiscount);
  writeNotNull('DealMonthlyExtended', instance.dealMonthlyExtended);
  writeNotNull('DealPeriodSubTotal', instance.dealPeriodSubTotal);
  writeNotNull('DealPeriodDiscount', instance.dealPeriodDiscount);
  writeNotNull('DealPeriodExtended', instance.dealPeriodExtended);
  writeNotNull('Variance', instance.variance);
  writeNotNull('VarianceColor', instance.varianceColor);
  writeNotNull('MarkupPercent', instance.markupPercent);
  writeNotNull('MarginPercent', instance.marginPercent);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('OptionColor', instance.optionColor);
  writeNotNull('RecType', instance.recType);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('NestedOrderItemId', instance.nestedOrderItemId);
  writeNotNull('AccessoryRatio', instance.accessoryRatio);
  writeNotNull('VendorCurrencyId', instance.vendorCurrencyId);
  writeNotNull('VendorCurrencyCode', instance.vendorCurrencyCode);
  writeNotNull('VendorCurrencySymbol', instance.vendorCurrencySymbol);
  writeNotNull('DealCurrencyId', instance.dealCurrencyId);
  writeNotNull('DealCurrencyCode', instance.dealCurrencyCode);
  writeNotNull('DealCurrencySymbol', instance.dealCurrencySymbol);
  writeNotNull('CurrencyExchangeRate', instance.currencyExchangeRate);
  writeNotNull('CurrencyConvertedRate', instance.currencyConvertedRate);
  writeNotNull('CurrencyConvertedWeeklyExtended',
      instance.currencyConvertedWeeklyExtended);
  writeNotNull('CurrencyConvertedMonthlyExtended',
      instance.currencyConvertedMonthlyExtended);
  writeNotNull('CurrencyConvertedPeriodExtended',
      instance.currencyConvertedPeriodExtended);
  writeNotNull('NestingLevel', instance.nestingLevel);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsSuspendedSessionSuspendedSession
    _$WebApiModulesHomeControlsSuspendedSessionSuspendedSessionFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsSuspendedSessionSuspendedSession(
          contractId: json['ContractId'] as String?,
          sessionNumber: json['SessionNumber'] as int?,
          deal: json['Deal'] as String?,
          dealNumber: json['DealNumber'] as String?,
          dealOrVendor: json['DealOrVendor'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          orderId: json['OrderId'] as String?,
          userName: json['UserName'] as String?,
          userNameFirstMiddleLast: json['UserNameFirstMiddleLast'] as String?,
          status: json['Status'] as String?,
          statusDate: json['StatusDate'] as String?,
          usersId: json['UsersId'] as String?,
          contractDate: json['ContractDate'] as String?,
          contractTime: json['ContractTime'] as String?,
          dealId: json['DealId'] as String?,
          departmentId: json['DepartmentId'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          exchangeContractId: json['ExchangeContractId'] as String?,
          contractType: json['ContractType'] as String?,
          isForcedSuspend: json['IsForcedSuspend'] as bool?,
          containerItemId: json['ContainerItemId'] as String?,
          containerScannableItemId: json['ContainerScannableItemId'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsSuspendedSessionSuspendedSessionToJson(
        WebApiModulesHomeControlsSuspendedSessionSuspendedSession instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('SessionNumber', instance.sessionNumber);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DealNumber', instance.dealNumber);
  writeNotNull('DealOrVendor', instance.dealOrVendor);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('UserName', instance.userName);
  writeNotNull('UserNameFirstMiddleLast', instance.userNameFirstMiddleLast);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('UsersId', instance.usersId);
  writeNotNull('ContractDate', instance.contractDate);
  writeNotNull('ContractTime', instance.contractTime);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('ExchangeContractId', instance.exchangeContractId);
  writeNotNull('ContractType', instance.contractType);
  writeNotNull('IsForcedSuspend', instance.isForcedSuspend);
  writeNotNull('ContainerItemId', instance.containerItemId);
  writeNotNull('ContainerScannableItemId', instance.containerScannableItemId);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsTaxableTaxable
    _$WebApiModulesHomeControlsTaxableTaxableFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsTaxableTaxable(
          masterId: json['MasterId'] as String?,
          locationId: json['LocationId'] as String?,
          location: json['Location'] as String?,
          taxable: json['Taxable'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsTaxableTaxableToJson(
    WebApiModulesHomeControlsTaxableTaxable instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('MasterId', instance.masterId);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('Location', instance.location);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItem
    _$WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItem(
          vendorInvoiceItemId: json['VendorInvoiceItemId'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          nestedOrderItemId: json['NestedOrderItemId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          iCodeDisplay: json['ICodeDisplay'] as String?,
          iCodeColor: json['ICodeColor'] as String?,
          categoryId: json['CategoryId'] as String?,
          description: json['Description'] as String?,
          descriptionColor: json['DescriptionColor'] as String?,
          fromDate: json['FromDate'] as String?,
          toDate: json['ToDate'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          quantityApproved: (json['QuantityApproved'] as num?)?.toDouble(),
          amountApproved: (json['AmountApproved'] as num?)?.toDouble(),
          unitId: json['UnitId'] as String?,
          unit: json['Unit'] as String?,
          cost: (json['Cost'] as num?)?.toDouble(),
          extended: (json['Extended'] as num?)?.toDouble(),
          adjustment: (json['Adjustment'] as num?)?.toDouble(),
          lineTotal: (json['LineTotal'] as num?)?.toDouble(),
          lineTotalPerQuantity:
              (json['LineTotalPerQuantity'] as num?)?.toDouble(),
          taxableExtended: (json['TaxableExtended'] as num?)?.toDouble(),
          taxable: json['Taxable'] as bool?,
          tax: (json['Tax'] as num?)?.toDouble(),
          tax1: (json['Tax1'] as num?)?.toDouble(),
          tax2: (json['Tax2'] as num?)?.toDouble(),
          lineTotalWithTax: (json['LineTotalWithTax'] as num?)?.toDouble(),
          note: json['Note'] as String?,
          itemClass: json['ItemClass'] as String?,
          recType: json['RecType'] as String?,
          recTypeDisplay: json['RecTypeDisplay'] as String?,
          invoiceNumber: json['InvoiceNumber'] as String?,
          invoiceType: json['InvoiceType'] as String?,
          invoiceDate: json['InvoiceDate'] as String?,
          statusDate: json['StatusDate'] as String?,
          vendorInvoiceNumber: json['VendorInvoiceNumber'] as int?,
          inputDate: json['InputDate'] as String?,
          glAccountId: json['GlAccountId'] as String?,
          glAccountNo: json['GlAccountNo'] as String?,
          incomeAccountId: json['IncomeAccountId'] as String?,
          dealBilledQuantity: (json['DealBilledQuantity'] as num?)?.toDouble(),
          dealBilledExtended: (json['DealBilledExtended'] as num?)?.toDouble(),
          orderId: json['OrderId'] as String?,
          orderOrderItemId: json['OrderOrderItemId'] as String?,
          purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          dealTypeId: json['DealTypeId'] as String?,
          orderTypeId: json['OrderTypeId'] as String?,
          quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
          quantityReceived: (json['QuantityReceived'] as num?)?.toDouble(),
          quantityCanceled: (json['QuantityCanceled'] as num?)?.toDouble(),
          quantityReturned: (json['QuantityReturned'] as num?)?.toDouble(),
          purchaseOrderRate: (json['PurchaseOrderRate'] as num?)?.toDouble(),
          purchaseOrderDiscountPercent:
              (json['PurchaseOrderDiscountPercent'] as num?)?.toDouble(),
          purchaseOrderDaysPerWeek:
              (json['PurchaseOrderDaysPerWeek'] as num?)?.toDouble(),
          purchaseOrderPeriodExtended:
              (json['PurchaseOrderPeriodExtended'] as num?)?.toDouble(),
          itemOrder: json['ItemOrder'] as String?,
          lineType: json['LineType'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          chargeType: json['ChargeType'] as String?,
          poItemBillingStartDate: json['PoItemBillingStartDate'] as String?,
          poItemBillingEndDate: json['PoItemBillingEndDate'] as String?,
          vendorInvoiceId: json['VendorInvoiceId'] as String?,
          currencySymbol: json['CurrencySymbol'] as String?,
          nestingLevel: json['NestingLevel'] as int?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItemToJson(
        WebApiModulesHomeControlsVendorInvoiceItemVendorInvoiceItem instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('VendorInvoiceItemId', instance.vendorInvoiceItemId);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('NestedOrderItemId', instance.nestedOrderItemId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeDisplay', instance.iCodeDisplay);
  writeNotNull('ICodeColor', instance.iCodeColor);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Description', instance.description);
  writeNotNull('DescriptionColor', instance.descriptionColor);
  writeNotNull('FromDate', instance.fromDate);
  writeNotNull('ToDate', instance.toDate);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('QuantityApproved', instance.quantityApproved);
  writeNotNull('AmountApproved', instance.amountApproved);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('Unit', instance.unit);
  writeNotNull('Cost', instance.cost);
  writeNotNull('Extended', instance.extended);
  writeNotNull('Adjustment', instance.adjustment);
  writeNotNull('LineTotal', instance.lineTotal);
  writeNotNull('LineTotalPerQuantity', instance.lineTotalPerQuantity);
  writeNotNull('TaxableExtended', instance.taxableExtended);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('Tax', instance.tax);
  writeNotNull('Tax1', instance.tax1);
  writeNotNull('Tax2', instance.tax2);
  writeNotNull('LineTotalWithTax', instance.lineTotalWithTax);
  writeNotNull('Note', instance.note);
  writeNotNull('ItemClass', instance.itemClass);
  writeNotNull('RecType', instance.recType);
  writeNotNull('RecTypeDisplay', instance.recTypeDisplay);
  writeNotNull('InvoiceNumber', instance.invoiceNumber);
  writeNotNull('InvoiceType', instance.invoiceType);
  writeNotNull('InvoiceDate', instance.invoiceDate);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('VendorInvoiceNumber', instance.vendorInvoiceNumber);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('GlAccountId', instance.glAccountId);
  writeNotNull('GlAccountNo', instance.glAccountNo);
  writeNotNull('IncomeAccountId', instance.incomeAccountId);
  writeNotNull('DealBilledQuantity', instance.dealBilledQuantity);
  writeNotNull('DealBilledExtended', instance.dealBilledExtended);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderOrderItemId', instance.orderOrderItemId);
  writeNotNull('PurchaseOrderNumber', instance.purchaseOrderNumber);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DealTypeId', instance.dealTypeId);
  writeNotNull('OrderTypeId', instance.orderTypeId);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('QuantityReceived', instance.quantityReceived);
  writeNotNull('QuantityCanceled', instance.quantityCanceled);
  writeNotNull('QuantityReturned', instance.quantityReturned);
  writeNotNull('PurchaseOrderRate', instance.purchaseOrderRate);
  writeNotNull(
      'PurchaseOrderDiscountPercent', instance.purchaseOrderDiscountPercent);
  writeNotNull('PurchaseOrderDaysPerWeek', instance.purchaseOrderDaysPerWeek);
  writeNotNull(
      'PurchaseOrderPeriodExtended', instance.purchaseOrderPeriodExtended);
  writeNotNull('ItemOrder', instance.itemOrder);
  writeNotNull('LineType', instance.lineType);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('ChargeType', instance.chargeType);
  writeNotNull('PoItemBillingStartDate', instance.poItemBillingStartDate);
  writeNotNull('PoItemBillingEndDate', instance.poItemBillingEndDate);
  writeNotNull('VendorInvoiceId', instance.vendorInvoiceId);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('NestingLevel', instance.nestingLevel);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNote
    _$WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNote(
          vendorInvoiceNoteId: json['VendorInvoiceNoteId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          notes: json['Notes'] as String?,
          noteDate: json['NoteDate'] as String?,
          usersId: json['UsersId'] as String?,
          name: json['Name'] as String?,
          noteDescription: json['NoteDescription'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNoteToJson(
        WebApiModulesHomeControlsVendorInvoiceNoteVendorInvoiceNote instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('VendorInvoiceNoteId', instance.vendorInvoiceNoteId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('Notes', instance.notes);
  writeNotNull('NoteDate', instance.noteDate);
  writeNotNull('UsersId', instance.usersId);
  writeNotNull('Name', instance.name);
  writeNotNull('NoteDescription', instance.noteDescription);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesHomeControlsVendorNoteVendorNote
    _$WebApiModulesHomeControlsVendorNoteVendorNoteFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesHomeControlsVendorNoteVendorNote(
          vendorNoteId: json['VendorNoteId'] as String?,
          vendorId: json['VendorId'] as String?,
          noteDate: json['NoteDate'] as String?,
          description: json['Description'] as String?,
          notes: json['Notes'] as String?,
          notify: json['Notify'] as bool?,
          notesById: json['NotesById'] as String?,
          notesBy: json['NotesBy'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesHomeControlsVendorNoteVendorNoteToJson(
    WebApiModulesHomeControlsVendorNoteVendorNote instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('VendorNoteId', instance.vendorNoteId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('NoteDate', instance.noteDate);
  writeNotNull('Description', instance.description);
  writeNotNull('Notes', instance.notes);
  writeNotNull('Notify', instance.notify);
  writeNotNull('NotesById', instance.notesById);
  writeNotNull('NotesBy', instance.notesBy);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryAssetAssetDocument
    _$WebApiModulesInventoryAssetAssetDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryAssetAssetDocument(
          itemId: json['ItemId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesInventoryAssetAssetDocumentToJson(
    WebApiModulesInventoryAssetAssetDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ItemId', instance.itemId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryAssetAssetDocumentPostRequest
    _$WebApiModulesInventoryAssetAssetDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryAssetAssetDocumentPostRequest(
          itemId: json['ItemId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryAssetAssetDocumentPostRequestToJson(
        WebApiModulesInventoryAssetAssetDocumentPostRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ItemId', instance.itemId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesInventoryAssetAssetDocumentPutRequest
    _$WebApiModulesInventoryAssetAssetDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryAssetAssetDocumentPutRequest(
          itemId: json['ItemId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic> _$WebApiModulesInventoryAssetAssetDocumentPutRequestToJson(
    WebApiModulesInventoryAssetAssetDocumentPutRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ItemId', instance.itemId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesInventoryAssetItem _$WebApiModulesInventoryAssetItemFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesInventoryAssetItem(
      itemId: json['ItemId'] as String?,
      inventoryId: json['InventoryId'] as String?,
      warehouseId: json['WarehouseId'] as String?,
      iCode: json['ICode'] as String?,
      description: json['Description'] as String?,
      itemDescription: json['ItemDescription'] as String?,
      trackedBy: json['TrackedBy'] as String?,
      availableFor: json['AvailableFor'] as String?,
      availableForDisplay: json['AvailableForDisplay'] as String?,
      unitValue: (json['UnitValue'] as num?)?.toDouble(),
      replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
      classification: json['Classification'] as String?,
      isContainer: json['IsContainer'] as bool?,
      containerId: json['ContainerId'] as String?,
      containerInventoryId: json['ContainerInventoryId'] as String?,
      containerICode: json['ContainerICode'] as String?,
      containerDescription: json['ContainerDescription'] as String?,
      containerPackingListBehavior:
          json['ContainerPackingListBehavior'] as String?,
      containerStatus: json['ContainerStatus'] as String?,
      containerStatusColor: json['ContainerStatusColor'] as String?,
      containerItemId: json['ContainerItemId'] as String?,
      containerStatusDate: json['ContainerStatusDate'] as String?,
      fixedAsset: json['FixedAsset'] as bool?,
      rank: json['Rank'] as String?,
      statusType: json['StatusType'] as String?,
      statusDate: json['StatusDate'] as String?,
      inventoryStatus: json['InventoryStatus'] as String?,
      inventoryStatusId: json['InventoryStatusId'] as String?,
      color: json['Color'] as String?,
      textColor: json['TextColor'] as String?,
      barCode: json['BarCode'] as String?,
      barCodeForScanning: json['BarCodeForScanning'] as String?,
      serialNumber: json['SerialNumber'] as String?,
      rfId: json['RfId'] as String?,
      oldBarCode: json['OldBarCode'] as String?,
      oldSerialNumber: json['OldSerialNumber'] as String?,
      oldRfid: json['OldRfid'] as String?,
      manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
      manufactureDate: json['ManufactureDate'] as String?,
      trackedByCode: json['TrackedByCode'] as String?,
      availOwnershipSort: json['AvailOwnershipSort'] as int?,
      isNegativeInventory: json['IsNegativeInventory'] as bool?,
      inspectionNo: json['InspectionNo'] as String?,
      inspectionVendorId: json['InspectionVendorId'] as String?,
      inspectionVendor: json['InspectionVendor'] as String?,
      manufacturerModelNumber: json['ManufacturerModelNumber'] as String?,
      purchaseId: json['PurchaseId'] as String?,
      aisleLocation: json['AisleLocation'] as String?,
      shelfLocation: json['ShelfLocation'] as String?,
      spaceId: json['SpaceId'] as String?,
      buildingRoom: json['BuildingRoom'] as String?,
      itemNotes: json['ItemNotes'] as String?,
      physicalId: json['PhysicalId'] as String?,
      physicalItemId: json['PhysicalItemId'] as int?,
      physicalDate: json['PhysicalDate'] as String?,
      physicalBy: json['PhysicalBy'] as String?,
      warehouse: json['Warehouse'] as String?,
      warehouseCode: json['WarehouseCode'] as String?,
      dealId: json['DealId'] as String?,
      orderId: json['OrderId'] as String?,
      orderNumber: json['OrderNumber'] as String?,
      orderDescription: json['OrderDescription'] as String?,
      currentLocation: json['CurrentLocation'] as String?,
      inventoryTypeId: json['InventoryTypeId'] as String?,
      inventoryType: json['InventoryType'] as String?,
      inventoryTypeOrderBy: json['InventoryTypeOrderBy'] as int?,
      categoryId: json['CategoryId'] as String?,
      category: json['Category'] as String?,
      categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
      subCategoryId: json['SubCategoryId'] as String?,
      subCategory: json['SubCategory'] as String?,
      subCategoryOrderBy: (json['SubCategoryOrderBy'] as num?)?.toDouble(),
      ownership: json['Ownership'] as String?,
      purchaseVendorId: json['PurchaseVendorId'] as String?,
      purchaseVendor: json['PurchaseVendor'] as String?,
      outsidePurchaseOrderNumber: json['OutsidePurchaseOrderNumber'] as String?,
      purchasePoId: json['PurchasePoId'] as String?,
      purchaseDate: json['PurchaseDate'] as String?,
      receiveDate: json['ReceiveDate'] as String?,
      receiveContractDate: json['ReceiveContractDate'] as String?,
      purchasePoNumber: json['PurchasePoNumber'] as String?,
      purchaseCost: (json['PurchaseCost'] as num?)?.toDouble(),
      invoiceCost: (json['InvoiceCost'] as num?)?.toDouble(),
      purchaseInvoiceNumber: json['PurchaseInvoiceNumber'] as String?,
      purchaseInvoiceDate: json['PurchaseInvoiceDate'] as String?,
      purchaseCurrencyId: json['PurchaseCurrencyId'] as String?,
      purchaseCurrencyCode: json['PurchaseCurrencyCode'] as String?,
      purchaseCurrency: json['PurchaseCurrency'] as String?,
      purchaseCurrencySymbol: json['PurchaseCurrencySymbol'] as String?,
      warehouseCurrencyId: json['WarehouseCurrencyId'] as String?,
      warehouseCurrencyCode: json['WarehouseCurrencyCode'] as String?,
      warehouseCurrency: json['WarehouseCurrency'] as String?,
      warehouseCurrencySymbol: json['WarehouseCurrencySymbol'] as String?,
      purchaseCurrencyExchangeRate:
          (json['PurchaseCurrencyExchangeRate'] as num?)?.toDouble(),
      unitCost: (json['UnitCost'] as num?)?.toDouble(),
      unitCostWithTax: (json['UnitCostWithTax'] as num?)?.toDouble(),
      unitCostCurrencyConverted:
          (json['UnitCostCurrencyConverted'] as num?)?.toDouble(),
      unitCostWithTaxCurrencyConverted:
          (json['UnitCostWithTaxCurrencyConverted'] as num?)?.toDouble(),
      originalEquipmentCost:
          (json['OriginalEquipmentCost'] as num?)?.toDouble(),
      depreciation: (json['Depreciation'] as num?)?.toDouble(),
      bookValue: (json['BookValue'] as num?)?.toDouble(),
      salvageValue: (json['SalvageValue'] as num?)?.toDouble(),
      consignorId: json['ConsignorId'] as String?,
      consignor: json['Consignor'] as String?,
      consignorAgreementId: json['ConsignorAgreementId'] as String?,
      consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
      consignorPercent: json['ConsignorPercent'] as int?,
      manufacturerId: json['ManufacturerId'] as String?,
      manufacturer: json['Manufacturer'] as String?,
      originalShowId: json['OriginalShowId'] as String?,
      originalShow: json['OriginalShow'] as String?,
      conditionId: json['ConditionId'] as String?,
      condition: json['Condition'] as String?,
      surfaceId: json['SurfaceId'] as String?,
      surface: json['Surface'] as String?,
      wallTypeId: json['WallTypeId'] as String?,
      wallType: json['WallType'] as String?,
      openingId: json['OpeningId'] as String?,
      opening: json['Opening'] as String?,
      responsiblePersonId: json['ResponsiblePersonId'] as String?,
      responsiblePerson: json['ResponsiblePerson'] as String?,
      buyerId: json['BuyerId'] as String?,
      buyer: json['Buyer'] as String?,
      receiptNumber: json['ReceiptNumber'] as String?,
      depreciationMonths: json['DepreciationMonths'] as int?,
      monthsDepreciated: json['MonthsDepreciated'] as int?,
      remainingMonthsOfDepreciation:
          json['RemainingMonthsOfDepreciation'] as int?,
      repairId: json['RepairId'] as String?,
      repairNumber: json['RepairNumber'] as String?,
      qcRequired: json['QcRequired'] as bool?,
      widthFt: json['WidthFt'] as int?,
      widthIn: json['WidthIn'] as int?,
      heightFt: json['HeightFt'] as int?,
      heightIn: json['HeightIn'] as int?,
      lengthFt: json['LengthFt'] as int?,
      lengthIn: json['LengthIn'] as int?,
      currentMeter: (json['CurrentMeter'] as num?)?.toDouble(),
      trackAssetUsage: json['TrackAssetUsage'] as bool?,
      trackLampUsage: json['TrackLampUsage'] as bool?,
      trackStrikes: json['TrackStrikes'] as bool?,
      trackCandles: json['TrackCandles'] as bool?,
      assetHours: json['AssetHours'] as int?,
      lampCount: json['LampCount'] as int?,
      lampHours1: json['LampHours1'] as int?,
      lampHours2: json['LampHours2'] as int?,
      lampHours3: json['LampHours3'] as int?,
      lampHours4: json['LampHours4'] as int?,
      strikes: json['Strikes'] as int?,
      footCandles: json['FootCandles'] as int?,
      minimumFootCandles: json['MinimumFootCandles'] as int?,
      softwareVersion: json['SoftwareVersion'] as String?,
      softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
      pattern: json['Pattern'] as String?,
      gender: json['Gender'] as String?,
      label: json['Label'] as String?,
      material: json['Material'] as String?,
      period: json['Period'] as String?,
      cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
      wardrobeSize: json['WardrobeSize'] as String?,
      wardrobePieceCount: json['WardrobePieceCount'] as int?,
      inventoryTypeIsProps: json['InventoryTypeIsProps'] as bool?,
      inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
      orderLocationId: json['OrderLocationId'] as String?,
      containerNumber: json['ContainerNumber'] as String?,
      isWardrobe: json['IsWardrobe'] as bool?,
      isProps: json['IsProps'] as bool?,
      dailyRate: (json['DailyRate'] as num?)?.toDouble(),
      weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
      monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
      location: json['Location'] as String?,
      retiredReason: json['RetiredReason'] as String?,
      warrantyExpiration: json['WarrantyExpiration'] as String?,
      warrantyPeriod: json['WarrantyPeriod'] as int?,
      countryOfOriginId: json['CountryOfOriginId'] as String?,
      countryOfOrigin: json['CountryOfOrigin'] as String?,
      shelfLifeExpirationDate: json['ShelfLifeExpirationDate'] as String?,
      currentDealId: json['CurrentDealId'] as String?,
      currentDeal: json['CurrentDeal'] as String?,
      currentCustomerId: json['CurrentCustomerId'] as String?,
      currentCustomer: json['CurrentCustomer'] as String?,
      currentOrderId: json['CurrentOrderId'] as String?,
      currentOrderNumber: json['CurrentOrderNumber'] as String?,
      currentOrderType: json['CurrentOrderType'] as String?,
      currentOrderDescription: json['CurrentOrderDescription'] as String?,
      currentOrderDate: json['CurrentOrderDate'] as String?,
      currentOrderPickDate: json['CurrentOrderPickDate'] as String?,
      currentOrderFromDate: json['CurrentOrderFromDate'] as String?,
      currentOrderToDate: json['CurrentOrderToDate'] as String?,
      currentOrderAgent: json['CurrentOrderAgent'] as String?,
      lotNumber: json['LotNumber'] as String?,
      lastOrderId: json['LastOrderId'] as String?,
      lastOrderNumber: json['LastOrderNumber'] as String?,
      lastOrderDescription: json['LastOrderDescription'] as String?,
      lastDealId: json['LastDealId'] as String?,
      lastDeal: json['LastDeal'] as String?,
      lastDealNumber: json['LastDealNumber'] as String?,
      lastOutContractId: json['LastOutContractId'] as String?,
      lastOutContractNumber: json['LastOutContractNumber'] as String?,
      lastOutContractDate: json['LastOutContractDate'] as String?,
      lastOutUserId: json['LastOutUserId'] as String?,
      lastOutUserName: json['LastOutUserName'] as String?,
      lastInContractId: json['LastInContractId'] as String?,
      lastInContractNumber: json['LastInContractNumber'] as String?,
      lastInContractDate: json['LastInContractDate'] as String?,
      lastInUserId: json['LastInUserId'] as String?,
      lastInUserName: json['LastInUserName'] as String?,
      depreciationStartDate: json['DepreciationStartDate'] as String?,
      depreciationWarehouseId: json['DepreciationWarehouseId'] as String?,
      depreciationWarehouse: json['DepreciationWarehouse'] as String?,
      depreciationWarehouseCode: json['DepreciationWarehouseCode'] as String?,
      inactive: json['Inactive'] as bool?,
      inputDate: json['InputDate'] as String?,
      inputByUsersId: json['InputByUsersId'] as String?,
      outOrderId: json['OutOrderId'] as String?,
      originalWarehouseId: json['OriginalWarehouseId'] as String?,
      dateStamp: json['DateStamp'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesInventoryAssetItemToJson(
    WebApiModulesInventoryAssetItem instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ItemId', instance.itemId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('ItemDescription', instance.itemDescription);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('AvailableForDisplay', instance.availableForDisplay);
  writeNotNull('UnitValue', instance.unitValue);
  writeNotNull('ReplacementCost', instance.replacementCost);
  writeNotNull('Classification', instance.classification);
  writeNotNull('IsContainer', instance.isContainer);
  writeNotNull('ContainerId', instance.containerId);
  writeNotNull('ContainerInventoryId', instance.containerInventoryId);
  writeNotNull('ContainerICode', instance.containerICode);
  writeNotNull('ContainerDescription', instance.containerDescription);
  writeNotNull(
      'ContainerPackingListBehavior', instance.containerPackingListBehavior);
  writeNotNull('ContainerStatus', instance.containerStatus);
  writeNotNull('ContainerStatusColor', instance.containerStatusColor);
  writeNotNull('ContainerItemId', instance.containerItemId);
  writeNotNull('ContainerStatusDate', instance.containerStatusDate);
  writeNotNull('FixedAsset', instance.fixedAsset);
  writeNotNull('Rank', instance.rank);
  writeNotNull('StatusType', instance.statusType);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('InventoryStatus', instance.inventoryStatus);
  writeNotNull('InventoryStatusId', instance.inventoryStatusId);
  writeNotNull('Color', instance.color);
  writeNotNull('TextColor', instance.textColor);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('BarCodeForScanning', instance.barCodeForScanning);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('RfId', instance.rfId);
  writeNotNull('OldBarCode', instance.oldBarCode);
  writeNotNull('OldSerialNumber', instance.oldSerialNumber);
  writeNotNull('OldRfid', instance.oldRfid);
  writeNotNull('ManufacturerPartNumber', instance.manufacturerPartNumber);
  writeNotNull('ManufactureDate', instance.manufactureDate);
  writeNotNull('TrackedByCode', instance.trackedByCode);
  writeNotNull('AvailOwnershipSort', instance.availOwnershipSort);
  writeNotNull('IsNegativeInventory', instance.isNegativeInventory);
  writeNotNull('InspectionNo', instance.inspectionNo);
  writeNotNull('InspectionVendorId', instance.inspectionVendorId);
  writeNotNull('InspectionVendor', instance.inspectionVendor);
  writeNotNull('ManufacturerModelNumber', instance.manufacturerModelNumber);
  writeNotNull('PurchaseId', instance.purchaseId);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('SpaceId', instance.spaceId);
  writeNotNull('BuildingRoom', instance.buildingRoom);
  writeNotNull('ItemNotes', instance.itemNotes);
  writeNotNull('PhysicalId', instance.physicalId);
  writeNotNull('PhysicalItemId', instance.physicalItemId);
  writeNotNull('PhysicalDate', instance.physicalDate);
  writeNotNull('PhysicalBy', instance.physicalBy);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('CurrentLocation', instance.currentLocation);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('InventoryTypeOrderBy', instance.inventoryTypeOrderBy);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('CategoryOrderBy', instance.categoryOrderBy);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('SubCategory', instance.subCategory);
  writeNotNull('SubCategoryOrderBy', instance.subCategoryOrderBy);
  writeNotNull('Ownership', instance.ownership);
  writeNotNull('PurchaseVendorId', instance.purchaseVendorId);
  writeNotNull('PurchaseVendor', instance.purchaseVendor);
  writeNotNull(
      'OutsidePurchaseOrderNumber', instance.outsidePurchaseOrderNumber);
  writeNotNull('PurchasePoId', instance.purchasePoId);
  writeNotNull('PurchaseDate', instance.purchaseDate);
  writeNotNull('ReceiveDate', instance.receiveDate);
  writeNotNull('ReceiveContractDate', instance.receiveContractDate);
  writeNotNull('PurchasePoNumber', instance.purchasePoNumber);
  writeNotNull('PurchaseCost', instance.purchaseCost);
  writeNotNull('InvoiceCost', instance.invoiceCost);
  writeNotNull('PurchaseInvoiceNumber', instance.purchaseInvoiceNumber);
  writeNotNull('PurchaseInvoiceDate', instance.purchaseInvoiceDate);
  writeNotNull('PurchaseCurrencyId', instance.purchaseCurrencyId);
  writeNotNull('PurchaseCurrencyCode', instance.purchaseCurrencyCode);
  writeNotNull('PurchaseCurrency', instance.purchaseCurrency);
  writeNotNull('PurchaseCurrencySymbol', instance.purchaseCurrencySymbol);
  writeNotNull('WarehouseCurrencyId', instance.warehouseCurrencyId);
  writeNotNull('WarehouseCurrencyCode', instance.warehouseCurrencyCode);
  writeNotNull('WarehouseCurrency', instance.warehouseCurrency);
  writeNotNull('WarehouseCurrencySymbol', instance.warehouseCurrencySymbol);
  writeNotNull(
      'PurchaseCurrencyExchangeRate', instance.purchaseCurrencyExchangeRate);
  writeNotNull('UnitCost', instance.unitCost);
  writeNotNull('UnitCostWithTax', instance.unitCostWithTax);
  writeNotNull('UnitCostCurrencyConverted', instance.unitCostCurrencyConverted);
  writeNotNull('UnitCostWithTaxCurrencyConverted',
      instance.unitCostWithTaxCurrencyConverted);
  writeNotNull('OriginalEquipmentCost', instance.originalEquipmentCost);
  writeNotNull('Depreciation', instance.depreciation);
  writeNotNull('BookValue', instance.bookValue);
  writeNotNull('SalvageValue', instance.salvageValue);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('ConsignorAgreementNumber', instance.consignorAgreementNumber);
  writeNotNull('ConsignorPercent', instance.consignorPercent);
  writeNotNull('ManufacturerId', instance.manufacturerId);
  writeNotNull('Manufacturer', instance.manufacturer);
  writeNotNull('OriginalShowId', instance.originalShowId);
  writeNotNull('OriginalShow', instance.originalShow);
  writeNotNull('ConditionId', instance.conditionId);
  writeNotNull('Condition', instance.condition);
  writeNotNull('SurfaceId', instance.surfaceId);
  writeNotNull('Surface', instance.surface);
  writeNotNull('WallTypeId', instance.wallTypeId);
  writeNotNull('WallType', instance.wallType);
  writeNotNull('OpeningId', instance.openingId);
  writeNotNull('Opening', instance.opening);
  writeNotNull('ResponsiblePersonId', instance.responsiblePersonId);
  writeNotNull('ResponsiblePerson', instance.responsiblePerson);
  writeNotNull('BuyerId', instance.buyerId);
  writeNotNull('Buyer', instance.buyer);
  writeNotNull('ReceiptNumber', instance.receiptNumber);
  writeNotNull('DepreciationMonths', instance.depreciationMonths);
  writeNotNull('MonthsDepreciated', instance.monthsDepreciated);
  writeNotNull(
      'RemainingMonthsOfDepreciation', instance.remainingMonthsOfDepreciation);
  writeNotNull('RepairId', instance.repairId);
  writeNotNull('RepairNumber', instance.repairNumber);
  writeNotNull('QcRequired', instance.qcRequired);
  writeNotNull('WidthFt', instance.widthFt);
  writeNotNull('WidthIn', instance.widthIn);
  writeNotNull('HeightFt', instance.heightFt);
  writeNotNull('HeightIn', instance.heightIn);
  writeNotNull('LengthFt', instance.lengthFt);
  writeNotNull('LengthIn', instance.lengthIn);
  writeNotNull('CurrentMeter', instance.currentMeter);
  writeNotNull('TrackAssetUsage', instance.trackAssetUsage);
  writeNotNull('TrackLampUsage', instance.trackLampUsage);
  writeNotNull('TrackStrikes', instance.trackStrikes);
  writeNotNull('TrackCandles', instance.trackCandles);
  writeNotNull('AssetHours', instance.assetHours);
  writeNotNull('LampCount', instance.lampCount);
  writeNotNull('LampHours1', instance.lampHours1);
  writeNotNull('LampHours2', instance.lampHours2);
  writeNotNull('LampHours3', instance.lampHours3);
  writeNotNull('LampHours4', instance.lampHours4);
  writeNotNull('Strikes', instance.strikes);
  writeNotNull('FootCandles', instance.footCandles);
  writeNotNull('MinimumFootCandles', instance.minimumFootCandles);
  writeNotNull('SoftwareVersion', instance.softwareVersion);
  writeNotNull('SoftwareEffectiveDate', instance.softwareEffectiveDate);
  writeNotNull('Pattern', instance.pattern);
  writeNotNull('Gender', instance.gender);
  writeNotNull('Label', instance.label);
  writeNotNull('Material', instance.material);
  writeNotNull('Period', instance.period);
  writeNotNull('CleaningFeeAmount', instance.cleaningFeeAmount);
  writeNotNull('WardrobeSize', instance.wardrobeSize);
  writeNotNull('WardrobePieceCount', instance.wardrobePieceCount);
  writeNotNull('InventoryTypeIsProps', instance.inventoryTypeIsProps);
  writeNotNull('InventoryTypeIsWardrobe', instance.inventoryTypeIsWardrobe);
  writeNotNull('OrderLocationId', instance.orderLocationId);
  writeNotNull('ContainerNumber', instance.containerNumber);
  writeNotNull('IsWardrobe', instance.isWardrobe);
  writeNotNull('IsProps', instance.isProps);
  writeNotNull('DailyRate', instance.dailyRate);
  writeNotNull('WeeklyRate', instance.weeklyRate);
  writeNotNull('MonthlyRate', instance.monthlyRate);
  writeNotNull('Location', instance.location);
  writeNotNull('RetiredReason', instance.retiredReason);
  writeNotNull('WarrantyExpiration', instance.warrantyExpiration);
  writeNotNull('WarrantyPeriod', instance.warrantyPeriod);
  writeNotNull('CountryOfOriginId', instance.countryOfOriginId);
  writeNotNull('CountryOfOrigin', instance.countryOfOrigin);
  writeNotNull('ShelfLifeExpirationDate', instance.shelfLifeExpirationDate);
  writeNotNull('CurrentDealId', instance.currentDealId);
  writeNotNull('CurrentDeal', instance.currentDeal);
  writeNotNull('CurrentCustomerId', instance.currentCustomerId);
  writeNotNull('CurrentCustomer', instance.currentCustomer);
  writeNotNull('CurrentOrderId', instance.currentOrderId);
  writeNotNull('CurrentOrderNumber', instance.currentOrderNumber);
  writeNotNull('CurrentOrderType', instance.currentOrderType);
  writeNotNull('CurrentOrderDescription', instance.currentOrderDescription);
  writeNotNull('CurrentOrderDate', instance.currentOrderDate);
  writeNotNull('CurrentOrderPickDate', instance.currentOrderPickDate);
  writeNotNull('CurrentOrderFromDate', instance.currentOrderFromDate);
  writeNotNull('CurrentOrderToDate', instance.currentOrderToDate);
  writeNotNull('CurrentOrderAgent', instance.currentOrderAgent);
  writeNotNull('LotNumber', instance.lotNumber);
  writeNotNull('LastOrderId', instance.lastOrderId);
  writeNotNull('LastOrderNumber', instance.lastOrderNumber);
  writeNotNull('LastOrderDescription', instance.lastOrderDescription);
  writeNotNull('LastDealId', instance.lastDealId);
  writeNotNull('LastDeal', instance.lastDeal);
  writeNotNull('LastDealNumber', instance.lastDealNumber);
  writeNotNull('LastOutContractId', instance.lastOutContractId);
  writeNotNull('LastOutContractNumber', instance.lastOutContractNumber);
  writeNotNull('LastOutContractDate', instance.lastOutContractDate);
  writeNotNull('LastOutUserId', instance.lastOutUserId);
  writeNotNull('LastOutUserName', instance.lastOutUserName);
  writeNotNull('LastInContractId', instance.lastInContractId);
  writeNotNull('LastInContractNumber', instance.lastInContractNumber);
  writeNotNull('LastInContractDate', instance.lastInContractDate);
  writeNotNull('LastInUserId', instance.lastInUserId);
  writeNotNull('LastInUserName', instance.lastInUserName);
  writeNotNull('DepreciationStartDate', instance.depreciationStartDate);
  writeNotNull('DepreciationWarehouseId', instance.depreciationWarehouseId);
  writeNotNull('DepreciationWarehouse', instance.depreciationWarehouse);
  writeNotNull('DepreciationWarehouseCode', instance.depreciationWarehouseCode);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('OutOrderId', instance.outOrderId);
  writeNotNull('OriginalWarehouseId', instance.originalWarehouseId);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryAssetItemByBarCodeResponse
    _$WebApiModulesInventoryAssetItemByBarCodeResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryAssetItemByBarCodeResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          item: json['Item'] == null
              ? null
              : WebApiModulesInventoryAssetItem.fromJson(
                  json['Item'] as Map<String, dynamic>),
        );

Map<String, dynamic> _$WebApiModulesInventoryAssetItemByBarCodeResponseToJson(
    WebApiModulesInventoryAssetItemByBarCodeResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('Item', instance.item?.toJson());
  return val;
}

WebApiModulesInventoryCompleteQcCompleteQcItemRequest
    _$WebApiModulesInventoryCompleteQcCompleteQcItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryCompleteQcCompleteQcItemRequest(
          code: json['Code'] as String?,
          qcAnyway: json['QcAnyway'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryCompleteQcCompleteQcItemRequestToJson(
        WebApiModulesInventoryCompleteQcCompleteQcItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Code', instance.code);
  writeNotNull('QcAnyway', instance.qcAnyway);
  return val;
}

WebApiModulesInventoryCompleteQcCompleteQcItemResponse
    _$WebApiModulesInventoryCompleteQcCompleteQcItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryCompleteQcCompleteQcItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          conditionId: json['ConditionId'] as String?,
          condition: json['Condition'] as String?,
          itemId: json['ItemId'] as String?,
          itemQcId: json['ItemQcId'] as String?,
          cannotQcItemBecauseOfStatus:
              json['CannotQcItemBecauseOfStatus'] as bool?,
          itemDoesNotNeedQc: json['ItemDoesNotNeedQc'] as bool?,
          showFootCandles: json['ShowFootCandles'] as bool?,
          requiredFootCandles: json['RequiredFootCandles'] as int?,
          showSoftwareVersion: json['ShowSoftwareVersion'] as bool?,
          requiredSoftwareVersion: json['RequiredSoftwareVersion'] as String?,
          showAssetUsage: json['ShowAssetUsage'] as bool?,
          showLampUsage: json['ShowLampUsage'] as bool?,
          showStrikes: json['ShowStrikes'] as bool?,
          lampCount: json['LampCount'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryCompleteQcCompleteQcItemResponseToJson(
        WebApiModulesInventoryCompleteQcCompleteQcItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('ConditionId', instance.conditionId);
  writeNotNull('Condition', instance.condition);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('ItemQcId', instance.itemQcId);
  writeNotNull(
      'CannotQcItemBecauseOfStatus', instance.cannotQcItemBecauseOfStatus);
  writeNotNull('ItemDoesNotNeedQc', instance.itemDoesNotNeedQc);
  writeNotNull('ShowFootCandles', instance.showFootCandles);
  writeNotNull('RequiredFootCandles', instance.requiredFootCandles);
  writeNotNull('ShowSoftwareVersion', instance.showSoftwareVersion);
  writeNotNull('RequiredSoftwareVersion', instance.requiredSoftwareVersion);
  writeNotNull('ShowAssetUsage', instance.showAssetUsage);
  writeNotNull('ShowLampUsage', instance.showLampUsage);
  writeNotNull('ShowStrikes', instance.showStrikes);
  writeNotNull('LampCount', instance.lampCount);
  return val;
}

WebApiModulesInventoryCompleteQcUpdateQcItemRequest
    _$WebApiModulesInventoryCompleteQcUpdateQcItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryCompleteQcUpdateQcItemRequest(
          itemId: json['ItemId'] as String?,
          itemQcId: json['ItemQcId'] as String?,
          conditionId: json['ConditionId'] as String?,
          currentFootCandles: json['CurrentFootCandles'] as String?,
          currentSoftwareVersion: json['CurrentSoftwareVersion'] as String?,
          softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
          note: json['Note'] as String?,
          assetHours: json['AssetHours'] as int?,
          strikes: json['Strikes'] as int?,
          lampHours1: json['LampHours1'] as int?,
          lampHours2: json['LampHours2'] as int?,
          lampHours3: json['LampHours3'] as int?,
          lampHours4: json['LampHours4'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryCompleteQcUpdateQcItemRequestToJson(
        WebApiModulesInventoryCompleteQcUpdateQcItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ItemId', instance.itemId);
  writeNotNull('ItemQcId', instance.itemQcId);
  writeNotNull('ConditionId', instance.conditionId);
  writeNotNull('CurrentFootCandles', instance.currentFootCandles);
  writeNotNull('CurrentSoftwareVersion', instance.currentSoftwareVersion);
  writeNotNull('SoftwareEffectiveDate', instance.softwareEffectiveDate);
  writeNotNull('Note', instance.note);
  writeNotNull('AssetHours', instance.assetHours);
  writeNotNull('Strikes', instance.strikes);
  writeNotNull('LampHours1', instance.lampHours1);
  writeNotNull('LampHours2', instance.lampHours2);
  writeNotNull('LampHours3', instance.lampHours3);
  writeNotNull('LampHours4', instance.lampHours4);
  return val;
}

WebApiModulesInventoryCompleteQcUpdateQcItemResponse
    _$WebApiModulesInventoryCompleteQcUpdateQcItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryCompleteQcUpdateQcItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryCompleteQcUpdateQcItemResponseToJson(
        WebApiModulesInventoryCompleteQcUpdateQcItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryInventoryCopyInventoryRequest
    _$WebApiModulesInventoryInventoryCopyInventoryRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryInventoryCopyInventoryRequest(
          inventoryId: json['InventoryId'] as String?,
          newICode: json['NewICode'] as String?,
          newDescription: json['NewDescription'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryInventoryCopyInventoryRequestToJson(
        WebApiModulesInventoryInventoryCopyInventoryRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('NewICode', instance.newICode);
  writeNotNull('NewDescription', instance.newDescription);
  return val;
}

WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageRequest
    _$WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageRequest(
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          isWarehouseSpecific: json['IsWarehouseSpecific'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageRequestToJson(
        WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('IsWarehouseSpecific', instance.isWarehouseSpecific);
  return val;
}

WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageResponse
    _$WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageResponseToJson(
        WebApiModulesInventoryInventoryInventoryWarehouseSpecificPackageResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesRequest
    _$WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesRequest(
          inventoryId: json['InventoryId'] as String?,
          qcRequired: json['QcRequired'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesRequestToJson(
        WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('QcRequired', instance.qcRequired);
  return val;
}

WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesResponse
    _$WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesResponseToJson(
        WebApiModulesInventoryInventoryRentalInventoryQcRequiredAllWarehousesResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryPartsInventoryPartsInventory
    _$WebApiModulesInventoryPartsInventoryPartsInventoryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPartsInventoryPartsInventory(
          price: (json['Price'] as num?)?.toDouble(),
          defaultCost: (json['DefaultCost'] as num?)?.toDouble(),
          averageCost: (json['AverageCost'] as num?)?.toDouble(),
          inventoryId: json['InventoryId'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          availableFrom: json['AvailableFrom'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          confirmTrackedBy: json['ConfirmTrackedBy'] as String?,
          rank: json['Rank'] as String?,
          manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
          manufacturerId: json['ManufacturerId'] as String?,
          manufacturer: json['Manufacturer'] as String?,
          manufacturerUrl: json['ManufacturerUrl'] as String?,
          excludeImageFromQuoteOrderPrint:
              json['ExcludeImageFromQuoteOrderPrint'] as bool?,
          noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
          availabilityManuallyResolveConflicts:
              json['AvailabilityManuallyResolveConflicts'] as bool?,
          sendAvailabilityAlert: json['SendAvailabilityAlert'] as bool?,
          primaryDimensionUniqueId: json['PrimaryDimensionUniqueId'] as String?,
          defaultImperialMetric: json['DefaultImperialMetric'] as String?,
          primaryDimensionDescription:
              json['PrimaryDimensionDescription'] as String?,
          primaryDimensionShipWeightLbs:
              json['PrimaryDimensionShipWeightLbs'] as int?,
          primaryDimensionShipWeightOz:
              json['PrimaryDimensionShipWeightOz'] as int?,
          primaryDimensionWeightInCaseLbs:
              json['PrimaryDimensionWeightInCaseLbs'] as int?,
          primaryDimensionWeightInCaseOz:
              json['PrimaryDimensionWeightInCaseOz'] as int?,
          primaryDimensionWidthFt: json['PrimaryDimensionWidthFt'] as int?,
          primaryDimensionWidthIn: json['PrimaryDimensionWidthIn'] as int?,
          primaryDimensionHeightFt: json['PrimaryDimensionHeightFt'] as int?,
          primaryDimensionHeightIn: json['PrimaryDimensionHeightIn'] as int?,
          primaryDimensionLengthFt: json['PrimaryDimensionLengthFt'] as int?,
          primaryDimensionLengthIn: json['PrimaryDimensionLengthIn'] as int?,
          primaryDimensionShipWeightKg:
              json['PrimaryDimensionShipWeightKg'] as int?,
          primaryDimensionShipWeightG:
              json['PrimaryDimensionShipWeightG'] as int?,
          primaryDimensionWeightInCaseKg:
              json['PrimaryDimensionWeightInCaseKg'] as int?,
          primaryDimensionWeightInCaseG:
              json['PrimaryDimensionWeightInCaseG'] as int?,
          primaryDimensionWidthM: json['PrimaryDimensionWidthM'] as int?,
          primaryDimensionWidthCm: json['PrimaryDimensionWidthCm'] as int?,
          primaryDimensionHeightM: json['PrimaryDimensionHeightM'] as int?,
          primaryDimensionHeightCm: json['PrimaryDimensionHeightCm'] as int?,
          primaryDimensionLengthM: json['PrimaryDimensionLengthM'] as int?,
          primaryDimensionLengthCm: json['PrimaryDimensionLengthCm'] as int?,
          hasSecondaryDimensions: json['HasSecondaryDimensions'] as bool?,
          secondaryDimensionUniqueId:
              json['SecondaryDimensionUniqueId'] as String?,
          secondaryDimensionDescription:
              json['SecondaryDimensionDescription'] as String?,
          secondaryDimensionShipWeightLbs:
              json['SecondaryDimensionShipWeightLbs'] as int?,
          secondaryDimensionShipWeightOz:
              json['SecondaryDimensionShipWeightOz'] as int?,
          secondaryDimensionWeightInCaseLbs:
              json['SecondaryDimensionWeightInCaseLbs'] as int?,
          secondaryDimensionWeightInCaseOz:
              json['SecondaryDimensionWeightInCaseOz'] as int?,
          secondaryDimensionWidthFt: json['SecondaryDimensionWidthFt'] as int?,
          secondaryDimensionWidthIn: json['SecondaryDimensionWidthIn'] as int?,
          secondaryDimensionHeightFt:
              json['SecondaryDimensionHeightFt'] as int?,
          secondaryDimensionHeightIn:
              json['SecondaryDimensionHeightIn'] as int?,
          secondaryDimensionLengthFt:
              json['SecondaryDimensionLengthFt'] as int?,
          secondaryDimensionLengthIn:
              json['SecondaryDimensionLengthIn'] as int?,
          secondaryDimensionShipWeightKg:
              json['SecondaryDimensionShipWeightKg'] as int?,
          secondaryDimensionShipWeightG:
              json['SecondaryDimensionShipWeightG'] as int?,
          secondaryDimensionWeightInCaseKg:
              json['SecondaryDimensionWeightInCaseKg'] as int?,
          secondaryDimensionWeightInCaseG:
              json['SecondaryDimensionWeightInCaseG'] as int?,
          secondaryDimensionWidthM: json['SecondaryDimensionWidthM'] as int?,
          secondaryDimensionWidthCm: json['SecondaryDimensionWidthCm'] as int?,
          secondaryDimensionHeightM: json['SecondaryDimensionHeightM'] as int?,
          secondaryDimensionHeightCm:
              json['SecondaryDimensionHeightCm'] as int?,
          secondaryDimensionLengthM: json['SecondaryDimensionLengthM'] as int?,
          secondaryDimensionLengthCm:
              json['SecondaryDimensionLengthCm'] as int?,
          countryOfOriginId: json['CountryOfOriginId'] as String?,
          countryOfOrigin: json['CountryOfOrigin'] as String?,
          displayInSummaryModeWhenRateIsZero:
              json['DisplayInSummaryModeWhenRateIsZero'] as bool?,
          qcRequired: json['QcRequired'] as bool?,
          qcTime: json['QcTime'] as String?,
          copyAttributesAsNote: json['CopyAttributesAsNote'] as bool?,
          trackAssetUsage: json['TrackAssetUsage'] as bool?,
          trackLampUsage: json['TrackLampUsage'] as bool?,
          trackStrikes: json['TrackStrikes'] as bool?,
          trackCandles: json['TrackCandles'] as bool?,
          lampCount: json['LampCount'] as int?,
          minimumFootCandles: json['MinimumFootCandles'] as int?,
          trackSoftware: json['TrackSoftware'] as bool?,
          softwareVersion: json['SoftwareVersion'] as String?,
          softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
          warehouseSpecificPackage: json['WarehouseSpecificPackage'] as bool?,
          completePackagePrice: json['CompletePackagePrice'] as String?,
          kitPackagePrice: json['KitPackagePrice'] as String?,
          separatePackageOnQuoteOrder:
              json['SeparatePackageOnQuoteOrder'] as bool?,
          containerId: json['ContainerId'] as String?,
          containerScannableInventoryId:
              json['ContainerScannableInventoryId'] as String?,
          containerScannableICode: json['ContainerScannableICode'] as String?,
          containerScannableDescription:
              json['ContainerScannableDescription'] as String?,
          automaticallyRebuildContainerAtCheckIn:
              json['AutomaticallyRebuildContainerAtCheckIn'] as bool?,
          automaticallyRebuildContainerAtTransferIn:
              json['AutomaticallyRebuildContainerAtTransferIn'] as bool?,
          containerStagingRule: json['ContainerStagingRule'] as String?,
          excludeContainedItemsFromAvailability:
              json['ExcludeContainedItemsFromAvailability'] as bool?,
          useContainerNumber: json['UseContainerNumber'] as bool?,
          containerPackingListBehavior:
              json['ContainerPackingListBehavior'] as String?,
          inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
          inventoryTypeIsSets: json['InventoryTypeIsSets'] as bool?,
          patternId: json['PatternId'] as String?,
          pattern: json['Pattern'] as String?,
          periodId: json['PeriodId'] as String?,
          period: json['Period'] as String?,
          materialId: json['MaterialId'] as String?,
          material: json['Material'] as String?,
          genderId: json['GenderId'] as String?,
          gender: json['Gender'] as String?,
          labelId: json['LabelId'] as String?,
          label: json['Label'] as String?,
          wardrobeSize: json['WardrobeSize'] as String?,
          wardrobePieceCount: json['WardrobePieceCount'] as int?,
          dyed: json['Dyed'] as bool?,
          wardrobeSourceId: json['WardrobeSourceId'] as String?,
          wardrobeSource: json['WardrobeSource'] as String?,
          wardrobeCareId: json['WardrobeCareId'] as String?,
          wardrobeCare: json['WardrobeCare'] as String?,
          cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
          wardrobeDetailedDescription:
              json['WardrobeDetailedDescription'] as String?,
          webDetailedDescription: json['WebDetailedDescription'] as String?,
          overrideSystemDefaultRevenueAllocationBehavior:
              json['OverrideSystemDefaultRevenueAllocationBehavior'] as bool?,
          allocateRevenueForAccessories:
              json['AllocateRevenueForAccessories'] as bool?,
          packageRevenueCalculationFormula:
              json['PackageRevenueCalculationFormula'] as String?,
          isHazardousMaterial: json['IsHazardousMaterial'] as bool?,
          descriptionWithAkas: json['DescriptionWithAkas'] as String?,
          costCalculation: json['CostCalculation'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          quantityIn: (json['QuantityIn'] as num?)?.toDouble(),
          quantityStaged: (json['QuantityStaged'] as num?)?.toDouble(),
          quantityOut: (json['QuantityOut'] as num?)?.toDouble(),
          quantityInContainer:
              (json['QuantityInContainer'] as num?)?.toDouble(),
          quantityInRepair: (json['QuantityInRepair'] as num?)?.toDouble(),
          quantityInTransit: (json['QuantityInTransit'] as num?)?.toDouble(),
          quantityOnTruck: (json['QuantityOnTruck'] as num?)?.toDouble(),
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          taxable: json['Taxable'] as bool?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          availFor: json['AvailFor'] as String?,
          categoryId: json['CategoryId'] as String?,
          category: json['Category'] as String?,
          subCategoryCount: json['SubCategoryCount'] as int?,
          subCategoryId: json['SubCategoryId'] as String?,
          subCategory: json['SubCategory'] as String?,
          classification: json['Classification'] as String?,
          classificationDescription:
              json['ClassificationDescription'] as String?,
          classificationColor: json['ClassificationColor'] as String?,
          unitId: json['UnitId'] as String?,
          unit: json['Unit'] as String?,
          unitType: json['UnitType'] as String?,
          nonDiscountable: json['NonDiscountable'] as bool?,
          overrideProfitAndLossCategory:
              json['OverrideProfitAndLossCategory'] as bool?,
          profitAndLossCategoryId: json['ProfitAndLossCategoryId'] as String?,
          profitAndLossCategory: json['ProfitAndLossCategory'] as String?,
          autoCopyNotesToQuoteOrder: json['AutoCopyNotesToQuoteOrder'] as bool?,
          note: json['Note'] as String?,
          printNoteOnInContract: json['PrintNoteOnInContract'] as bool?,
          printNoteOnOutContract: json['PrintNoteOnOutContract'] as bool?,
          printNoteOnReceiveContract:
              json['PrintNoteOnReceiveContract'] as bool?,
          printNoteOnReturnContract: json['PrintNoteOnReturnContract'] as bool?,
          printNoteOnInvoice: json['PrintNoteOnInvoice'] as bool?,
          printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
          printNoteOnPickList: json['PrintNoteOnPickList'] as bool?,
          printNoteOnPO: json['PrintNoteOnPO'] as bool?,
          printNoteOnQuote: json['PrintNoteOnQuote'] as bool?,
          printNoteOnReturnList: json['PrintNoteOnReturnList'] as bool?,
          printNoteOnPoReceiveList: json['PrintNoteOnPoReceiveList'] as bool?,
          printNoteOnPoReturnList: json['PrintNoteOnPoReturnList'] as bool?,
          assetAccountId: json['AssetAccountId'] as String?,
          assetAccountNo: json['AssetAccountNo'] as String?,
          assetAccountDescription: json['AssetAccountDescription'] as String?,
          incomeAccountId: json['IncomeAccountId'] as String?,
          incomeAccountNo: json['IncomeAccountNo'] as String?,
          incomeAccountDescription: json['IncomeAccountDescription'] as String?,
          subIncomeAccountId: json['SubIncomeAccountId'] as String?,
          subIncomeAccountNo: json['SubIncomeAccountNo'] as String?,
          subIncomeAccountDescription:
              json['SubIncomeAccountDescription'] as String?,
          consignmentIncomeAccountId:
              json['ConsignmentIncomeAccountId'] as String?,
          consignmentIncomeAccountNo:
              json['ConsignmentIncomeAccountNo'] as String?,
          consignmentIncomeAccountDescription:
              json['ConsignmentIncomeAccountDescription'] as String?,
          ldIncomeAccountId: json['LdIncomeAccountId'] as String?,
          ldIncomeAccountNo: json['LdIncomeAccountNo'] as String?,
          ldIncomeAccountDescription:
              json['LdIncomeAccountDescription'] as String?,
          equipmentSaleIncomeAccountId:
              json['EquipmentSaleIncomeAccountId'] as String?,
          equipmentSaleIncomeAccountNo:
              json['EquipmentSaleIncomeAccountNo'] as String?,
          equipmentSaleIncomeAccountDescription:
              json['EquipmentSaleIncomeAccountDescription'] as String?,
          expenseAccountId: json['ExpenseAccountId'] as String?,
          expenseAccountNo: json['ExpenseAccountNo'] as String?,
          expenseAccountDescription:
              json['ExpenseAccountDescription'] as String?,
          costOfGoodsSoldExpenseAccountId:
              json['CostOfGoodsSoldExpenseAccountId'] as String?,
          costOfGoodsSoldExpenseAccountNo:
              json['CostOfGoodsSoldExpenseAccountNo'] as String?,
          costOfGoodsSoldExpenseAccountDescription:
              json['CostOfGoodsSoldExpenseAccountDescription'] as String?,
          costOfGoodsRentedExpenseAccountId:
              json['CostOfGoodsRentedExpenseAccountId'] as String?,
          costOfGoodsRentedExpenseAccountNo:
              json['CostOfGoodsRentedExpenseAccountNo'] as String?,
          costOfGoodsRentedExpenseAccountDescription:
              json['CostOfGoodsRentedExpenseAccountDescription'] as String?,
          depreciationExpenseAccountId:
              json['DepreciationExpenseAccountId'] as String?,
          depreciationExpenseAccountNo:
              json['DepreciationExpenseAccountNo'] as String?,
          depreciationExpenseAccountDescription:
              json['DepreciationExpenseAccountDescription'] as String?,
          accumulatedDepreciationExpenseAccountId:
              json['AccumulatedDepreciationExpenseAccountId'] as String?,
          accumulatedDepreciationExpenseAccountNo:
              json['AccumulatedDepreciationExpenseAccountNo'] as String?,
          accumulatedDepreciationExpenseAccountDescription:
              json['AccumulatedDepreciationExpenseAccountDescription']
                  as String?,
          originalShowId: json['OriginalShowId'] as String?,
          inputDate: json['InputDate'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          manifestShippingContainer: json['ManifestShippingContainer'] as bool?,
          manifestStandAloneItem: json['ManifestStandAloneItem'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesInventoryPartsInventoryPartsInventoryToJson(
    WebApiModulesInventoryPartsInventoryPartsInventory instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Price', instance.price);
  writeNotNull('DefaultCost', instance.defaultCost);
  writeNotNull('AverageCost', instance.averageCost);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('AvailableFrom', instance.availableFrom);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('ConfirmTrackedBy', instance.confirmTrackedBy);
  writeNotNull('Rank', instance.rank);
  writeNotNull('ManufacturerPartNumber', instance.manufacturerPartNumber);
  writeNotNull('ManufacturerId', instance.manufacturerId);
  writeNotNull('Manufacturer', instance.manufacturer);
  writeNotNull('ManufacturerUrl', instance.manufacturerUrl);
  writeNotNull('ExcludeImageFromQuoteOrderPrint',
      instance.excludeImageFromQuoteOrderPrint);
  writeNotNull('NoAvailabilityCheck', instance.noAvailabilityCheck);
  writeNotNull('AvailabilityManuallyResolveConflicts',
      instance.availabilityManuallyResolveConflicts);
  writeNotNull('SendAvailabilityAlert', instance.sendAvailabilityAlert);
  writeNotNull('PrimaryDimensionUniqueId', instance.primaryDimensionUniqueId);
  writeNotNull('DefaultImperialMetric', instance.defaultImperialMetric);
  writeNotNull(
      'PrimaryDimensionDescription', instance.primaryDimensionDescription);
  writeNotNull(
      'PrimaryDimensionShipWeightLbs', instance.primaryDimensionShipWeightLbs);
  writeNotNull(
      'PrimaryDimensionShipWeightOz', instance.primaryDimensionShipWeightOz);
  writeNotNull('PrimaryDimensionWeightInCaseLbs',
      instance.primaryDimensionWeightInCaseLbs);
  writeNotNull('PrimaryDimensionWeightInCaseOz',
      instance.primaryDimensionWeightInCaseOz);
  writeNotNull('PrimaryDimensionWidthFt', instance.primaryDimensionWidthFt);
  writeNotNull('PrimaryDimensionWidthIn', instance.primaryDimensionWidthIn);
  writeNotNull('PrimaryDimensionHeightFt', instance.primaryDimensionHeightFt);
  writeNotNull('PrimaryDimensionHeightIn', instance.primaryDimensionHeightIn);
  writeNotNull('PrimaryDimensionLengthFt', instance.primaryDimensionLengthFt);
  writeNotNull('PrimaryDimensionLengthIn', instance.primaryDimensionLengthIn);
  writeNotNull(
      'PrimaryDimensionShipWeightKg', instance.primaryDimensionShipWeightKg);
  writeNotNull(
      'PrimaryDimensionShipWeightG', instance.primaryDimensionShipWeightG);
  writeNotNull('PrimaryDimensionWeightInCaseKg',
      instance.primaryDimensionWeightInCaseKg);
  writeNotNull(
      'PrimaryDimensionWeightInCaseG', instance.primaryDimensionWeightInCaseG);
  writeNotNull('PrimaryDimensionWidthM', instance.primaryDimensionWidthM);
  writeNotNull('PrimaryDimensionWidthCm', instance.primaryDimensionWidthCm);
  writeNotNull('PrimaryDimensionHeightM', instance.primaryDimensionHeightM);
  writeNotNull('PrimaryDimensionHeightCm', instance.primaryDimensionHeightCm);
  writeNotNull('PrimaryDimensionLengthM', instance.primaryDimensionLengthM);
  writeNotNull('PrimaryDimensionLengthCm', instance.primaryDimensionLengthCm);
  writeNotNull('HasSecondaryDimensions', instance.hasSecondaryDimensions);
  writeNotNull(
      'SecondaryDimensionUniqueId', instance.secondaryDimensionUniqueId);
  writeNotNull(
      'SecondaryDimensionDescription', instance.secondaryDimensionDescription);
  writeNotNull('SecondaryDimensionShipWeightLbs',
      instance.secondaryDimensionShipWeightLbs);
  writeNotNull('SecondaryDimensionShipWeightOz',
      instance.secondaryDimensionShipWeightOz);
  writeNotNull('SecondaryDimensionWeightInCaseLbs',
      instance.secondaryDimensionWeightInCaseLbs);
  writeNotNull('SecondaryDimensionWeightInCaseOz',
      instance.secondaryDimensionWeightInCaseOz);
  writeNotNull('SecondaryDimensionWidthFt', instance.secondaryDimensionWidthFt);
  writeNotNull('SecondaryDimensionWidthIn', instance.secondaryDimensionWidthIn);
  writeNotNull(
      'SecondaryDimensionHeightFt', instance.secondaryDimensionHeightFt);
  writeNotNull(
      'SecondaryDimensionHeightIn', instance.secondaryDimensionHeightIn);
  writeNotNull(
      'SecondaryDimensionLengthFt', instance.secondaryDimensionLengthFt);
  writeNotNull(
      'SecondaryDimensionLengthIn', instance.secondaryDimensionLengthIn);
  writeNotNull('SecondaryDimensionShipWeightKg',
      instance.secondaryDimensionShipWeightKg);
  writeNotNull(
      'SecondaryDimensionShipWeightG', instance.secondaryDimensionShipWeightG);
  writeNotNull('SecondaryDimensionWeightInCaseKg',
      instance.secondaryDimensionWeightInCaseKg);
  writeNotNull('SecondaryDimensionWeightInCaseG',
      instance.secondaryDimensionWeightInCaseG);
  writeNotNull('SecondaryDimensionWidthM', instance.secondaryDimensionWidthM);
  writeNotNull('SecondaryDimensionWidthCm', instance.secondaryDimensionWidthCm);
  writeNotNull('SecondaryDimensionHeightM', instance.secondaryDimensionHeightM);
  writeNotNull(
      'SecondaryDimensionHeightCm', instance.secondaryDimensionHeightCm);
  writeNotNull('SecondaryDimensionLengthM', instance.secondaryDimensionLengthM);
  writeNotNull(
      'SecondaryDimensionLengthCm', instance.secondaryDimensionLengthCm);
  writeNotNull('CountryOfOriginId', instance.countryOfOriginId);
  writeNotNull('CountryOfOrigin', instance.countryOfOrigin);
  writeNotNull('DisplayInSummaryModeWhenRateIsZero',
      instance.displayInSummaryModeWhenRateIsZero);
  writeNotNull('QcRequired', instance.qcRequired);
  writeNotNull('QcTime', instance.qcTime);
  writeNotNull('CopyAttributesAsNote', instance.copyAttributesAsNote);
  writeNotNull('TrackAssetUsage', instance.trackAssetUsage);
  writeNotNull('TrackLampUsage', instance.trackLampUsage);
  writeNotNull('TrackStrikes', instance.trackStrikes);
  writeNotNull('TrackCandles', instance.trackCandles);
  writeNotNull('LampCount', instance.lampCount);
  writeNotNull('MinimumFootCandles', instance.minimumFootCandles);
  writeNotNull('TrackSoftware', instance.trackSoftware);
  writeNotNull('SoftwareVersion', instance.softwareVersion);
  writeNotNull('SoftwareEffectiveDate', instance.softwareEffectiveDate);
  writeNotNull('WarehouseSpecificPackage', instance.warehouseSpecificPackage);
  writeNotNull('CompletePackagePrice', instance.completePackagePrice);
  writeNotNull('KitPackagePrice', instance.kitPackagePrice);
  writeNotNull(
      'SeparatePackageOnQuoteOrder', instance.separatePackageOnQuoteOrder);
  writeNotNull('ContainerId', instance.containerId);
  writeNotNull(
      'ContainerScannableInventoryId', instance.containerScannableInventoryId);
  writeNotNull('ContainerScannableICode', instance.containerScannableICode);
  writeNotNull(
      'ContainerScannableDescription', instance.containerScannableDescription);
  writeNotNull('AutomaticallyRebuildContainerAtCheckIn',
      instance.automaticallyRebuildContainerAtCheckIn);
  writeNotNull('AutomaticallyRebuildContainerAtTransferIn',
      instance.automaticallyRebuildContainerAtTransferIn);
  writeNotNull('ContainerStagingRule', instance.containerStagingRule);
  writeNotNull('ExcludeContainedItemsFromAvailability',
      instance.excludeContainedItemsFromAvailability);
  writeNotNull('UseContainerNumber', instance.useContainerNumber);
  writeNotNull(
      'ContainerPackingListBehavior', instance.containerPackingListBehavior);
  writeNotNull('InventoryTypeIsWardrobe', instance.inventoryTypeIsWardrobe);
  writeNotNull('InventoryTypeIsSets', instance.inventoryTypeIsSets);
  writeNotNull('PatternId', instance.patternId);
  writeNotNull('Pattern', instance.pattern);
  writeNotNull('PeriodId', instance.periodId);
  writeNotNull('Period', instance.period);
  writeNotNull('MaterialId', instance.materialId);
  writeNotNull('Material', instance.material);
  writeNotNull('GenderId', instance.genderId);
  writeNotNull('Gender', instance.gender);
  writeNotNull('LabelId', instance.labelId);
  writeNotNull('Label', instance.label);
  writeNotNull('WardrobeSize', instance.wardrobeSize);
  writeNotNull('WardrobePieceCount', instance.wardrobePieceCount);
  writeNotNull('Dyed', instance.dyed);
  writeNotNull('WardrobeSourceId', instance.wardrobeSourceId);
  writeNotNull('WardrobeSource', instance.wardrobeSource);
  writeNotNull('WardrobeCareId', instance.wardrobeCareId);
  writeNotNull('WardrobeCare', instance.wardrobeCare);
  writeNotNull('CleaningFeeAmount', instance.cleaningFeeAmount);
  writeNotNull(
      'WardrobeDetailedDescription', instance.wardrobeDetailedDescription);
  writeNotNull('WebDetailedDescription', instance.webDetailedDescription);
  writeNotNull('OverrideSystemDefaultRevenueAllocationBehavior',
      instance.overrideSystemDefaultRevenueAllocationBehavior);
  writeNotNull(
      'AllocateRevenueForAccessories', instance.allocateRevenueForAccessories);
  writeNotNull('PackageRevenueCalculationFormula',
      instance.packageRevenueCalculationFormula);
  writeNotNull('IsHazardousMaterial', instance.isHazardousMaterial);
  writeNotNull('DescriptionWithAkas', instance.descriptionWithAkas);
  writeNotNull('CostCalculation', instance.costCalculation);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('QuantityIn', instance.quantityIn);
  writeNotNull('QuantityStaged', instance.quantityStaged);
  writeNotNull('QuantityOut', instance.quantityOut);
  writeNotNull('QuantityInContainer', instance.quantityInContainer);
  writeNotNull('QuantityInRepair', instance.quantityInRepair);
  writeNotNull('QuantityInTransit', instance.quantityInTransit);
  writeNotNull('QuantityOnTruck', instance.quantityOnTruck);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('AvailFor', instance.availFor);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('SubCategoryCount', instance.subCategoryCount);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('SubCategory', instance.subCategory);
  writeNotNull('Classification', instance.classification);
  writeNotNull('ClassificationDescription', instance.classificationDescription);
  writeNotNull('ClassificationColor', instance.classificationColor);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('Unit', instance.unit);
  writeNotNull('UnitType', instance.unitType);
  writeNotNull('NonDiscountable', instance.nonDiscountable);
  writeNotNull(
      'OverrideProfitAndLossCategory', instance.overrideProfitAndLossCategory);
  writeNotNull('ProfitAndLossCategoryId', instance.profitAndLossCategoryId);
  writeNotNull('ProfitAndLossCategory', instance.profitAndLossCategory);
  writeNotNull('AutoCopyNotesToQuoteOrder', instance.autoCopyNotesToQuoteOrder);
  writeNotNull('Note', instance.note);
  writeNotNull('PrintNoteOnInContract', instance.printNoteOnInContract);
  writeNotNull('PrintNoteOnOutContract', instance.printNoteOnOutContract);
  writeNotNull(
      'PrintNoteOnReceiveContract', instance.printNoteOnReceiveContract);
  writeNotNull('PrintNoteOnReturnContract', instance.printNoteOnReturnContract);
  writeNotNull('PrintNoteOnInvoice', instance.printNoteOnInvoice);
  writeNotNull('PrintNoteOnOrder', instance.printNoteOnOrder);
  writeNotNull('PrintNoteOnPickList', instance.printNoteOnPickList);
  writeNotNull('PrintNoteOnPO', instance.printNoteOnPO);
  writeNotNull('PrintNoteOnQuote', instance.printNoteOnQuote);
  writeNotNull('PrintNoteOnReturnList', instance.printNoteOnReturnList);
  writeNotNull('PrintNoteOnPoReceiveList', instance.printNoteOnPoReceiveList);
  writeNotNull('PrintNoteOnPoReturnList', instance.printNoteOnPoReturnList);
  writeNotNull('AssetAccountId', instance.assetAccountId);
  writeNotNull('AssetAccountNo', instance.assetAccountNo);
  writeNotNull('AssetAccountDescription', instance.assetAccountDescription);
  writeNotNull('IncomeAccountId', instance.incomeAccountId);
  writeNotNull('IncomeAccountNo', instance.incomeAccountNo);
  writeNotNull('IncomeAccountDescription', instance.incomeAccountDescription);
  writeNotNull('SubIncomeAccountId', instance.subIncomeAccountId);
  writeNotNull('SubIncomeAccountNo', instance.subIncomeAccountNo);
  writeNotNull(
      'SubIncomeAccountDescription', instance.subIncomeAccountDescription);
  writeNotNull(
      'ConsignmentIncomeAccountId', instance.consignmentIncomeAccountId);
  writeNotNull(
      'ConsignmentIncomeAccountNo', instance.consignmentIncomeAccountNo);
  writeNotNull('ConsignmentIncomeAccountDescription',
      instance.consignmentIncomeAccountDescription);
  writeNotNull('LdIncomeAccountId', instance.ldIncomeAccountId);
  writeNotNull('LdIncomeAccountNo', instance.ldIncomeAccountNo);
  writeNotNull(
      'LdIncomeAccountDescription', instance.ldIncomeAccountDescription);
  writeNotNull(
      'EquipmentSaleIncomeAccountId', instance.equipmentSaleIncomeAccountId);
  writeNotNull(
      'EquipmentSaleIncomeAccountNo', instance.equipmentSaleIncomeAccountNo);
  writeNotNull('EquipmentSaleIncomeAccountDescription',
      instance.equipmentSaleIncomeAccountDescription);
  writeNotNull('ExpenseAccountId', instance.expenseAccountId);
  writeNotNull('ExpenseAccountNo', instance.expenseAccountNo);
  writeNotNull('ExpenseAccountDescription', instance.expenseAccountDescription);
  writeNotNull('CostOfGoodsSoldExpenseAccountId',
      instance.costOfGoodsSoldExpenseAccountId);
  writeNotNull('CostOfGoodsSoldExpenseAccountNo',
      instance.costOfGoodsSoldExpenseAccountNo);
  writeNotNull('CostOfGoodsSoldExpenseAccountDescription',
      instance.costOfGoodsSoldExpenseAccountDescription);
  writeNotNull('CostOfGoodsRentedExpenseAccountId',
      instance.costOfGoodsRentedExpenseAccountId);
  writeNotNull('CostOfGoodsRentedExpenseAccountNo',
      instance.costOfGoodsRentedExpenseAccountNo);
  writeNotNull('CostOfGoodsRentedExpenseAccountDescription',
      instance.costOfGoodsRentedExpenseAccountDescription);
  writeNotNull(
      'DepreciationExpenseAccountId', instance.depreciationExpenseAccountId);
  writeNotNull(
      'DepreciationExpenseAccountNo', instance.depreciationExpenseAccountNo);
  writeNotNull('DepreciationExpenseAccountDescription',
      instance.depreciationExpenseAccountDescription);
  writeNotNull('AccumulatedDepreciationExpenseAccountId',
      instance.accumulatedDepreciationExpenseAccountId);
  writeNotNull('AccumulatedDepreciationExpenseAccountNo',
      instance.accumulatedDepreciationExpenseAccountNo);
  writeNotNull('AccumulatedDepreciationExpenseAccountDescription',
      instance.accumulatedDepreciationExpenseAccountDescription);
  writeNotNull('OriginalShowId', instance.originalShowId);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('ManifestShippingContainer', instance.manifestShippingContainer);
  writeNotNull('ManifestStandAloneItem', instance.manifestStandAloneItem);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryPartsInventoryPartsInventoryDocument
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPartsInventoryPartsInventoryDocument(
          inventoryId: json['InventoryId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentToJson(
        WebApiModulesInventoryPartsInventoryPartsInventoryDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPostRequest
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPostRequest(
          inventoryId: json['InventoryId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPostRequestToJson(
        WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPostRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPutRequest
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPutRequest(
          inventoryId: json['InventoryId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPutRequestToJson(
        WebApiModulesInventoryPartsInventoryPartsInventoryDocumentPutRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventory
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventory(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          officeLocation: json['OfficeLocation'] as String?,
          officeLocationCode: json['OfficeLocationCode'] as String?,
          dealId: json['DealId'] as String?,
          scheduleDate: json['ScheduleDate'] as String?,
          preScanDateTime: json['PreScanDateTime'] as String?,
          initiateDateTime: json['InitiateDateTime'] as String?,
          physicalInventoryNumber: json['PhysicalInventoryNumber'] as String?,
          description: json['Description'] as String?,
          countType: json['CountType'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          categoryId: json['CategoryId'] as String?,
          category: json['Category'] as String?,
          subCategoryId: json['SubCategoryId'] as String?,
          subCategory: json['SubCategory'] as String?,
          recType: json['RecType'] as String?,
          recTypeDisplay: json['RecTypeDisplay'] as String?,
          rank: json['Rank'] as String?,
          cycleRankA: json['CycleRankA'] as bool?,
          cycleRankB: json['CycleRankB'] as bool?,
          cycleRankC: json['CycleRankC'] as bool?,
          cycleRankD: json['CycleRankD'] as bool?,
          cycleRankE: json['CycleRankE'] as bool?,
          cycleRankF: json['CycleRankF'] as bool?,
          cycleRankG: json['CycleRankG'] as bool?,
          aFromValue: (json['AFromValue'] as num?)?.toDouble(),
          aToValue: (json['AToValue'] as num?)?.toDouble(),
          bFromValue: (json['BFromValue'] as num?)?.toDouble(),
          bToValue: (json['BToValue'] as num?)?.toDouble(),
          cFromValue: (json['CFromValue'] as num?)?.toDouble(),
          cToValue: (json['CToValue'] as num?)?.toDouble(),
          dFromValue: (json['DFromValue'] as num?)?.toDouble(),
          dToValue: (json['DToValue'] as num?)?.toDouble(),
          eFromValue: (json['EFromValue'] as num?)?.toDouble(),
          eToValue: (json['EToValue'] as num?)?.toDouble(),
          fFromValue: (json['FFromValue'] as num?)?.toDouble(),
          fToValue: (json['FToValue'] as num?)?.toDouble(),
          gFromValue: (json['GFromValue'] as num?)?.toDouble(),
          gToValue: (json['GToValue'] as num?)?.toDouble(),
          stepPreScan: json['StepPreScan'] as int?,
          allowStepPreScan: json['AllowStepPreScan'] as bool?,
          stepInitiate: json['StepInitiate'] as int?,
          allowStepInitiate: json['AllowStepInitiate'] as bool?,
          stepPrintCountSheets: json['StepPrintCountSheets'] as int?,
          allowStepPrintCountSheets: json['AllowStepPrintCountSheets'] as bool?,
          allowStepPrintPrescanProgress:
              json['AllowStepPrintPrescanProgress'] as bool?,
          stepCount: json['StepCount'] as int?,
          allowStepCount: json['AllowStepCount'] as bool?,
          stepPrintExceptionReport: json['StepPrintExceptionReport'] as int?,
          allowStepPrintExceptionReport:
              json['AllowStepPrintExceptionReport'] as bool?,
          stepPrintDiscrepancyReport:
              json['StepPrintDiscrepancyReport'] as int?,
          allowStepPrintDiscrepancyReport:
              json['AllowStepPrintDiscrepancyReport'] as bool?,
          stepRecount: json['StepRecount'] as int?,
          allowStepRecount: json['AllowStepRecount'] as bool?,
          stepPrintRecountAnalysisReport:
              json['StepPrintRecountAnalysisReport'] as int?,
          allowStepPrintRecountAnalysisReport:
              json['AllowStepPrintRecountAnalysisReport'] as bool?,
          stepPrintReconciliationReport:
              json['StepPrintReconciliationReport'] as int?,
          allowStepPrintReconciliationReport:
              json['AllowStepPrintReconciliationReport'] as bool?,
          stepItemsAdded: json['StepItemsAdded'] as int?,
          allowStepItemsAdded: json['AllowStepItemsAdded'] as bool?,
          stepApproveCounts: json['StepApproveCounts'] as int?,
          allowStepApproveCounts: json['AllowStepApproveCounts'] as bool?,
          stepClose: json['StepClose'] as int?,
          allowStepClose: json['AllowStepClose'] as bool?,
          stepCloseWithoutAdjustments:
              json['StepCloseWithoutAdjustments'] as int?,
          allowStepCloseWithoutAdjustments:
              json['AllowStepCloseWithoutAdjustments'] as bool?,
          closedWithAdjustments: json['ClosedWithAdjustments'] as bool?,
          closedWithOutAdjustments: json['ClosedWithOutAdjustments'] as bool?,
          allowStepPrintResults: json['AllowStepPrintResults'] as bool?,
          status: json['Status'] as String?,
          cycleLastCounted: json['CycleLastCounted'] as String?,
          cycleTrackedBy: json['CycleTrackedBy'] as String?,
          cycleAisle: json['CycleAisle'] as String?,
          cycleShelf: json['CycleShelf'] as String?,
          cycleOnlyIncludeInventoryWithNonZeroQuantity:
              json['CycleOnlyIncludeInventoryWithNonZeroQuantity'] as bool?,
          approvedPurchaseCost: json['ApprovedPurchaseCost'] as bool?,
          countInventoryThatIsOut: json['CountInventoryThatIsOut'] as bool?,
          facilitiesInventory: json['FacilitiesInventory'] as bool?,
          presInitializeAutomaticallyCountInventoryThatIsOut:
              json['PresInitializeAutomaticallyCountInventoryThatIsOut']
                  as bool?,
          cycleIncludeOwned: json['CycleIncludeOwned'] as bool?,
          cycleIncludeConsigned: json['CycleIncludeConsigned'] as bool?,
          hideConsigned: json['HideConsigned'] as bool?,
          selectitemsbyNotUsed: json['Selectitemsby_not_used'] as bool?,
          excludeInventoryWithNoAvailabilityCheck:
              json['ExcludeInventoryWithNoAvailabilityCheck'] as bool?,
          approvedByUserId: json['ApprovedByUserId'] as String?,
          approvedByUser: json['ApprovedByUser'] as String?,
          approveDate: json['ApproveDate'] as String?,
          approveTime: json['ApproveTime'] as String?,
          inputByUserId: json['InputByUserId'] as String?,
          inputDate: json['InputDate'] as String?,
          inputTime: json['InputTime'] as String?,
          inactive: json['Inactive'] as bool?,
          replaceCounts: json['ReplaceCounts'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventory instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('OfficeLocationCode', instance.officeLocationCode);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('ScheduleDate', instance.scheduleDate);
  writeNotNull('PreScanDateTime', instance.preScanDateTime);
  writeNotNull('InitiateDateTime', instance.initiateDateTime);
  writeNotNull('PhysicalInventoryNumber', instance.physicalInventoryNumber);
  writeNotNull('Description', instance.description);
  writeNotNull('CountType', instance.countType);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('SubCategory', instance.subCategory);
  writeNotNull('RecType', instance.recType);
  writeNotNull('RecTypeDisplay', instance.recTypeDisplay);
  writeNotNull('Rank', instance.rank);
  writeNotNull('CycleRankA', instance.cycleRankA);
  writeNotNull('CycleRankB', instance.cycleRankB);
  writeNotNull('CycleRankC', instance.cycleRankC);
  writeNotNull('CycleRankD', instance.cycleRankD);
  writeNotNull('CycleRankE', instance.cycleRankE);
  writeNotNull('CycleRankF', instance.cycleRankF);
  writeNotNull('CycleRankG', instance.cycleRankG);
  writeNotNull('AFromValue', instance.aFromValue);
  writeNotNull('AToValue', instance.aToValue);
  writeNotNull('BFromValue', instance.bFromValue);
  writeNotNull('BToValue', instance.bToValue);
  writeNotNull('CFromValue', instance.cFromValue);
  writeNotNull('CToValue', instance.cToValue);
  writeNotNull('DFromValue', instance.dFromValue);
  writeNotNull('DToValue', instance.dToValue);
  writeNotNull('EFromValue', instance.eFromValue);
  writeNotNull('EToValue', instance.eToValue);
  writeNotNull('FFromValue', instance.fFromValue);
  writeNotNull('FToValue', instance.fToValue);
  writeNotNull('GFromValue', instance.gFromValue);
  writeNotNull('GToValue', instance.gToValue);
  writeNotNull('StepPreScan', instance.stepPreScan);
  writeNotNull('AllowStepPreScan', instance.allowStepPreScan);
  writeNotNull('StepInitiate', instance.stepInitiate);
  writeNotNull('AllowStepInitiate', instance.allowStepInitiate);
  writeNotNull('StepPrintCountSheets', instance.stepPrintCountSheets);
  writeNotNull('AllowStepPrintCountSheets', instance.allowStepPrintCountSheets);
  writeNotNull(
      'AllowStepPrintPrescanProgress', instance.allowStepPrintPrescanProgress);
  writeNotNull('StepCount', instance.stepCount);
  writeNotNull('AllowStepCount', instance.allowStepCount);
  writeNotNull('StepPrintExceptionReport', instance.stepPrintExceptionReport);
  writeNotNull(
      'AllowStepPrintExceptionReport', instance.allowStepPrintExceptionReport);
  writeNotNull(
      'StepPrintDiscrepancyReport', instance.stepPrintDiscrepancyReport);
  writeNotNull('AllowStepPrintDiscrepancyReport',
      instance.allowStepPrintDiscrepancyReport);
  writeNotNull('StepRecount', instance.stepRecount);
  writeNotNull('AllowStepRecount', instance.allowStepRecount);
  writeNotNull('StepPrintRecountAnalysisReport',
      instance.stepPrintRecountAnalysisReport);
  writeNotNull('AllowStepPrintRecountAnalysisReport',
      instance.allowStepPrintRecountAnalysisReport);
  writeNotNull(
      'StepPrintReconciliationReport', instance.stepPrintReconciliationReport);
  writeNotNull('AllowStepPrintReconciliationReport',
      instance.allowStepPrintReconciliationReport);
  writeNotNull('StepItemsAdded', instance.stepItemsAdded);
  writeNotNull('AllowStepItemsAdded', instance.allowStepItemsAdded);
  writeNotNull('StepApproveCounts', instance.stepApproveCounts);
  writeNotNull('AllowStepApproveCounts', instance.allowStepApproveCounts);
  writeNotNull('StepClose', instance.stepClose);
  writeNotNull('AllowStepClose', instance.allowStepClose);
  writeNotNull(
      'StepCloseWithoutAdjustments', instance.stepCloseWithoutAdjustments);
  writeNotNull('AllowStepCloseWithoutAdjustments',
      instance.allowStepCloseWithoutAdjustments);
  writeNotNull('ClosedWithAdjustments', instance.closedWithAdjustments);
  writeNotNull('ClosedWithOutAdjustments', instance.closedWithOutAdjustments);
  writeNotNull('AllowStepPrintResults', instance.allowStepPrintResults);
  writeNotNull('Status', instance.status);
  writeNotNull('CycleLastCounted', instance.cycleLastCounted);
  writeNotNull('CycleTrackedBy', instance.cycleTrackedBy);
  writeNotNull('CycleAisle', instance.cycleAisle);
  writeNotNull('CycleShelf', instance.cycleShelf);
  writeNotNull('CycleOnlyIncludeInventoryWithNonZeroQuantity',
      instance.cycleOnlyIncludeInventoryWithNonZeroQuantity);
  writeNotNull('ApprovedPurchaseCost', instance.approvedPurchaseCost);
  writeNotNull('CountInventoryThatIsOut', instance.countInventoryThatIsOut);
  writeNotNull('FacilitiesInventory', instance.facilitiesInventory);
  writeNotNull('PresInitializeAutomaticallyCountInventoryThatIsOut',
      instance.presInitializeAutomaticallyCountInventoryThatIsOut);
  writeNotNull('CycleIncludeOwned', instance.cycleIncludeOwned);
  writeNotNull('CycleIncludeConsigned', instance.cycleIncludeConsigned);
  writeNotNull('HideConsigned', instance.hideConsigned);
  writeNotNull('Selectitemsby_not_used', instance.selectitemsbyNotUsed);
  writeNotNull('ExcludeInventoryWithNoAvailabilityCheck',
      instance.excludeInventoryWithNoAvailabilityCheck);
  writeNotNull('ApprovedByUserId', instance.approvedByUserId);
  writeNotNull('ApprovedByUser', instance.approvedByUser);
  writeNotNull('ApproveDate', instance.approveDate);
  writeNotNull('ApproveTime', instance.approveTime);
  writeNotNull('InputByUserId', instance.inputByUserId);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('InputTime', instance.inputTime);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('ReplaceCounts', instance.replaceCounts);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostRequest(
          isGetValueOnly: json['IsGetValueOnly'] as bool?,
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          approvedPurchaseCost: json['ApprovedPurchaseCost'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('IsGetValueOnly', instance.isGetValueOnly);
  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('ApprovedPurchaseCost', instance.approvedPurchaseCost);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostResponse(
          approvedPurchaseCost: json['ApprovedPurchaseCost'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApprovePurchaseCostResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ApprovedPurchaseCost', instance.approvedPurchaseCost);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveRequest(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          approved: json['Approved'] as bool?,
          message: json['Message'] as String?,
          $status: json['Status'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryApproveResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('Approved', instance.approved);
  writeNotNull('Message', instance.message);
  writeNotNull('Status', instance.$status);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseRequest(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          addAndRetireInventory: json['AddAndRetireInventory'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('AddAndRetireInventory', instance.addAndRetireInventory);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          closed: json['Closed'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCloseResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('Closed', instance.closed);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemRequest(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          code: json['Code'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          replace: json['Replace'] as bool?,
          consignorId: json['ConsignorId'] as String?,
          countedSpaceId: json['CountedSpaceId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('Code', instance.code);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('Replace', instance.replace);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('CountedSpaceId', instance.countedSpaceId);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          description: json['Description'] as String?,
          itemId: json['ItemId'] as String?,
          consignor: json['Consignor'] as String?,
          showAddReplace: json['ShowAddReplace'] as bool?,
          countedQuantity: (json['CountedQuantity'] as num?)?.toDouble(),
          genericMessage: json['GenericMessage'] as String?,
          physicalItemId: json['PhysicalItemId'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('Description', instance.description);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('ShowAddReplace', instance.showAddReplace);
  writeNotNull('CountedQuantity', instance.countedQuantity);
  writeNotNull('GenericMessage', instance.genericMessage);
  writeNotNull('PhysicalItemId', instance.physicalItemId);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantity
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantity(
          physicalInventoryItemId: json['PhysicalInventoryItemId'] as int?,
          inventoryId: json['InventoryId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          category: json['Category'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          categoryId: json['CategoryId'] as String?,
          categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
          inventoryTypeOrderBy: json['InventoryTypeOrderBy'] as int?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          unitId: json['UnitId'] as String?,
          weightUnitId: json['WeightUnitId'] as String?,
          lengthUnitId: json['LengthUnitId'] as String?,
          sessionQuantity: json['SessionQuantity'] as int?,
          quantity: json['Quantity'] as int?,
          currentQuantity: json['CurrentQuantity'] as int?,
          weight: json['Weight'] as int?,
          length: json['Length'] as int?,
          unit: json['Unit'] as String?,
          weightUnit: json['WeightUnit'] as String?,
          lengthUnit: json['LengthUnit'] as String?,
          currentSpaceId: json['CurrentSpaceId'] as String?,
          currentSpace: json['CurrentSpace'] as String?,
          isRecount: json['IsRecount'] as bool?,
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantityToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountQuantity
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryItemId', instance.physicalInventoryItemId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('Category', instance.category);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('CategoryOrderBy', instance.categoryOrderBy);
  writeNotNull('InventoryTypeOrderBy', instance.inventoryTypeOrderBy);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('WeightUnitId', instance.weightUnitId);
  writeNotNull('LengthUnitId', instance.lengthUnitId);
  writeNotNull('SessionQuantity', instance.sessionQuantity);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('CurrentQuantity', instance.currentQuantity);
  writeNotNull('Weight', instance.weight);
  writeNotNull('Length', instance.length);
  writeNotNull('Unit', instance.unit);
  writeNotNull('WeightUnit', instance.weightUnit);
  writeNotNull('LengthUnit', instance.lengthUnit);
  writeNotNull('CurrentSpaceId', instance.currentSpaceId);
  writeNotNull('CurrentSpace', instance.currentSpace);
  writeNotNull('IsRecount', instance.isRecount);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerial
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerial(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          category: json['Category'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          categoryId: json['CategoryId'] as String?,
          categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
          inventoryTypeOrderBy: json['InventoryTypeOrderBy'] as int?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          unitId: json['UnitId'] as String?,
          unit: json['Unit'] as String?,
          currentSpaceId: json['CurrentSpaceId'] as String?,
          currentSpace: json['CurrentSpace'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerialToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryCountSerial
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('Category', instance.category);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('CategoryOrderBy', instance.categoryOrderBy);
  writeNotNull('InventoryTypeOrderBy', instance.inventoryTypeOrderBy);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('Unit', instance.unit);
  writeNotNull('CurrentSpaceId', instance.currentSpaceId);
  writeNotNull('CurrentSpace', instance.currentSpace);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptions
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptions(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          scannedCode: json['ScannedCode'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          exception: json['Exception'] as String?,
          inventoryId: json['InventoryId'] as String?,
          userName: json['UserName'] as String?,
          date: json['Date'] as String?,
          time: json['Time'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptionsToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryExceptions
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('ScannedCode', instance.scannedCode);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('Exception', instance.exception);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('UserName', instance.userName);
  writeNotNull('Date', instance.date);
  writeNotNull('Time', instance.time);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateRequest(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryInitiateResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAdded
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAdded(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          orderBy: json['OrderBy'] as int?,
          owned: json['Owned'] as int?,
          counted: json['Counted'] as int?,
          qty: json['Qty'] as int?,
          extended: (json['Extended'] as num?)?.toDouble(),
          newPurchaseCost: (json['NewPurchaseCost'] as num?)?.toDouble(),
          lastPurchaseCost: (json['LastPurchaseCost'] as num?)?.toDouble(),
          purchaseCurrencyCode: json['PurchaseCurrencyCode'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAddedToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryItemsAdded
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('OrderBy', instance.orderBy);
  writeNotNull('Owned', instance.owned);
  writeNotNull('Counted', instance.counted);
  writeNotNull('Qty', instance.qty);
  writeNotNull('Extended', instance.extended);
  writeNotNull('NewPurchaseCost', instance.newPurchaseCost);
  writeNotNull('LastPurchaseCost', instance.lastPurchaseCost);
  writeNotNull('PurchaseCurrencyCode', instance.purchaseCurrencyCode);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostRequest(
          cost: json['Cost'] as String?,
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          masterId: json['MasterId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Cost', instance.cost);
  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('MasterId', instance.masterId);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryNewPurchaseCostResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanRequest(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryPrescanResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecount
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecount(
          physicalMasterId: json['PhysicalMasterId'] as int?,
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          categoryId: json['CategoryId'] as String?,
          category: json['Category'] as String?,
          categoryOrderBy: (json['CategoryOrderBy'] as num?)?.toDouble(),
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          inventoryTypeOrderBy: json['InventoryTypeOrderBy'] as int?,
          currentSpaceId: json['CurrentSpaceId'] as String?,
          unitId: json['UnitId'] as String?,
          unit: json['Unit'] as String?,
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          isRecount: json['IsRecount'] as bool?,
          owned: json['Owned'] as int?,
          onOrder: json['OnOrder'] as int?,
          inRepair: json['InRepair'] as int?,
          counted: json['Counted'] as int?,
          variance: json['Variance'] as int?,
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecount
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalMasterId', instance.physicalMasterId);
  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('CategoryOrderBy', instance.categoryOrderBy);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('InventoryTypeOrderBy', instance.inventoryTypeOrderBy);
  writeNotNull('CurrentSpaceId', instance.currentSpaceId);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('Unit', instance.unit);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('IsRecount', instance.isRecount);
  writeNotNull('Owned', instance.owned);
  writeNotNull('OnOrder', instance.onOrder);
  writeNotNull('InRepair', instance.inRepair);
  writeNotNull('Counted', instance.counted);
  writeNotNull('Variance', instance.variance);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequest(
          physicalInventoryRecountUpdate: (json[
                      'PhysicalInventoryRecountUpdate'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModel
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryRecountUpdate',
      instance.physicalInventoryRecountUpdate?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModel
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModelFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModel(
          physicalMasterId: json['PhysicalMasterId'] as String?,
          isRecount: json['IsRecount'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModelToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryRecountUpdateRequestModel
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalMasterId', instance.physicalMasterId);
  writeNotNull('IsRecount', instance.isRecount);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsRequest(
          isGetValue: json['isGetValue'] as bool?,
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          replaceCounts: json['ReplaceCounts'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('isGetValue', instance.isGetValue);
  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('ReplaceCounts', instance.replaceCounts);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          replaceCounts: json['ReplaceCounts'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryReplaceCountsResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('ReplaceCounts', instance.replaceCounts);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusRequest(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusResponse(
          barcodeToCount: (json['BarcodeToCount'] as num?)?.toDouble(),
          barcodeCounted: (json['BarcodeCounted'] as num?)?.toDouble(),
          barcodePercent: (json['BarcodePercent'] as num?)?.toDouble(),
          quantityToCount: (json['QuantityToCount'] as num?)?.toDouble(),
          quantityCounted: (json['QuantityCounted'] as num?)?.toDouble(),
          quantityPercent: (json['QuantityPercent'] as num?)?.toDouble(),
          totalToCount: (json['TotalToCount'] as num?)?.toDouble(),
          totalCounted: (json['TotalCounted'] as num?)?.toDouble(),
          totalPercent: (json['TotalPercent'] as num?)?.toDouble(),
          openedOn: json['OpenedOn'] as String?,
          openedBy: json['OpenedBy'] as String?,
          approvedOn: json['ApprovedOn'] as String?,
          approvedBy: json['ApprovedBy'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryStatusResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('BarcodeToCount', instance.barcodeToCount);
  writeNotNull('BarcodeCounted', instance.barcodeCounted);
  writeNotNull('BarcodePercent', instance.barcodePercent);
  writeNotNull('QuantityToCount', instance.quantityToCount);
  writeNotNull('QuantityCounted', instance.quantityCounted);
  writeNotNull('QuantityPercent', instance.quantityPercent);
  writeNotNull('TotalToCount', instance.totalToCount);
  writeNotNull('TotalCounted', instance.totalCounted);
  writeNotNull('TotalPercent', instance.totalPercent);
  writeNotNull('OpenedOn', instance.openedOn);
  writeNotNull('OpenedBy', instance.openedBy);
  writeNotNull('ApprovedOn', instance.approvedOn);
  writeNotNull('ApprovedBy', instance.approvedBy);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemRequest(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
          physicalInventoryItemId: json['PhysicalInventoryItemId'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  writeNotNull('PhysicalInventoryItemId', instance.physicalInventoryItemId);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemResponse(
          success: json['Success'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUncountSerialItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Success', instance.success);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesRequest(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryUpdateICodesResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidRequest
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidRequest(
          physicalInventoryId: json['PhysicalInventoryId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidRequestToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PhysicalInventoryId', instance.physicalInventoryId);
  return val;
}

WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidResponse
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidResponseToJson(
        WebApiModulesInventoryPhysicalInventoryPhysicalInventoryVoidResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryRentalInventoryRentalInventory
    _$WebApiModulesInventoryRentalInventoryRentalInventoryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRentalInventoryRentalInventory(
          excludeFromReturnOnAsset: json['ExcludeFromReturnOnAsset'] as bool?,
          isFixedAsset: json['IsFixedAsset'] as bool?,
          multiAssignRFIDs: json['MultiAssignRFIDs'] as bool?,
          minimumDaysPerWeek: (json['MinimumDaysPerWeek'] as num?)?.toDouble(),
          setOpeningId: json['SetOpeningId'] as String?,
          setOpening: json['SetOpening'] as String?,
          wallTypeId: json['WallTypeId'] as String?,
          wallType: json['WallType'] as String?,
          setSurfaceId: json['SetSurfaceId'] as String?,
          setSurface: json['SetSurface'] as String?,
          wallWidthFt: json['WallWidthFt'] as int?,
          wallWidthIn: json['WallWidthIn'] as int?,
          wallHeightFt: json['WallHeightFt'] as int?,
          wallHeightIn: json['WallHeightIn'] as int?,
          wallLengthFt: json['WallLengthFt'] as int?,
          wallLengthIn: json['WallLengthIn'] as int?,
          treatConsignedQtyAsOwned: json['TreatConsignedQtyAsOwned'] as bool?,
          dailyRate: (json['DailyRate'] as num?)?.toDouble(),
          weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
          week2Rate: (json['Week2Rate'] as num?)?.toDouble(),
          week3Rate: (json['Week3Rate'] as num?)?.toDouble(),
          week4Rate: (json['Week4Rate'] as num?)?.toDouble(),
          monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
          unitValue: (json['UnitValue'] as num?)?.toDouble(),
          replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
          inventoryId: json['InventoryId'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          availableFrom: json['AvailableFrom'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          confirmTrackedBy: json['ConfirmTrackedBy'] as String?,
          rank: json['Rank'] as String?,
          manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
          manufacturerId: json['ManufacturerId'] as String?,
          manufacturer: json['Manufacturer'] as String?,
          manufacturerUrl: json['ManufacturerUrl'] as String?,
          excludeImageFromQuoteOrderPrint:
              json['ExcludeImageFromQuoteOrderPrint'] as bool?,
          noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
          availabilityManuallyResolveConflicts:
              json['AvailabilityManuallyResolveConflicts'] as bool?,
          sendAvailabilityAlert: json['SendAvailabilityAlert'] as bool?,
          primaryDimensionUniqueId: json['PrimaryDimensionUniqueId'] as String?,
          defaultImperialMetric: json['DefaultImperialMetric'] as String?,
          primaryDimensionDescription:
              json['PrimaryDimensionDescription'] as String?,
          primaryDimensionShipWeightLbs:
              json['PrimaryDimensionShipWeightLbs'] as int?,
          primaryDimensionShipWeightOz:
              json['PrimaryDimensionShipWeightOz'] as int?,
          primaryDimensionWeightInCaseLbs:
              json['PrimaryDimensionWeightInCaseLbs'] as int?,
          primaryDimensionWeightInCaseOz:
              json['PrimaryDimensionWeightInCaseOz'] as int?,
          primaryDimensionWidthFt: json['PrimaryDimensionWidthFt'] as int?,
          primaryDimensionWidthIn: json['PrimaryDimensionWidthIn'] as int?,
          primaryDimensionHeightFt: json['PrimaryDimensionHeightFt'] as int?,
          primaryDimensionHeightIn: json['PrimaryDimensionHeightIn'] as int?,
          primaryDimensionLengthFt: json['PrimaryDimensionLengthFt'] as int?,
          primaryDimensionLengthIn: json['PrimaryDimensionLengthIn'] as int?,
          primaryDimensionShipWeightKg:
              json['PrimaryDimensionShipWeightKg'] as int?,
          primaryDimensionShipWeightG:
              json['PrimaryDimensionShipWeightG'] as int?,
          primaryDimensionWeightInCaseKg:
              json['PrimaryDimensionWeightInCaseKg'] as int?,
          primaryDimensionWeightInCaseG:
              json['PrimaryDimensionWeightInCaseG'] as int?,
          primaryDimensionWidthM: json['PrimaryDimensionWidthM'] as int?,
          primaryDimensionWidthCm: json['PrimaryDimensionWidthCm'] as int?,
          primaryDimensionHeightM: json['PrimaryDimensionHeightM'] as int?,
          primaryDimensionHeightCm: json['PrimaryDimensionHeightCm'] as int?,
          primaryDimensionLengthM: json['PrimaryDimensionLengthM'] as int?,
          primaryDimensionLengthCm: json['PrimaryDimensionLengthCm'] as int?,
          hasSecondaryDimensions: json['HasSecondaryDimensions'] as bool?,
          secondaryDimensionUniqueId:
              json['SecondaryDimensionUniqueId'] as String?,
          secondaryDimensionDescription:
              json['SecondaryDimensionDescription'] as String?,
          secondaryDimensionShipWeightLbs:
              json['SecondaryDimensionShipWeightLbs'] as int?,
          secondaryDimensionShipWeightOz:
              json['SecondaryDimensionShipWeightOz'] as int?,
          secondaryDimensionWeightInCaseLbs:
              json['SecondaryDimensionWeightInCaseLbs'] as int?,
          secondaryDimensionWeightInCaseOz:
              json['SecondaryDimensionWeightInCaseOz'] as int?,
          secondaryDimensionWidthFt: json['SecondaryDimensionWidthFt'] as int?,
          secondaryDimensionWidthIn: json['SecondaryDimensionWidthIn'] as int?,
          secondaryDimensionHeightFt:
              json['SecondaryDimensionHeightFt'] as int?,
          secondaryDimensionHeightIn:
              json['SecondaryDimensionHeightIn'] as int?,
          secondaryDimensionLengthFt:
              json['SecondaryDimensionLengthFt'] as int?,
          secondaryDimensionLengthIn:
              json['SecondaryDimensionLengthIn'] as int?,
          secondaryDimensionShipWeightKg:
              json['SecondaryDimensionShipWeightKg'] as int?,
          secondaryDimensionShipWeightG:
              json['SecondaryDimensionShipWeightG'] as int?,
          secondaryDimensionWeightInCaseKg:
              json['SecondaryDimensionWeightInCaseKg'] as int?,
          secondaryDimensionWeightInCaseG:
              json['SecondaryDimensionWeightInCaseG'] as int?,
          secondaryDimensionWidthM: json['SecondaryDimensionWidthM'] as int?,
          secondaryDimensionWidthCm: json['SecondaryDimensionWidthCm'] as int?,
          secondaryDimensionHeightM: json['SecondaryDimensionHeightM'] as int?,
          secondaryDimensionHeightCm:
              json['SecondaryDimensionHeightCm'] as int?,
          secondaryDimensionLengthM: json['SecondaryDimensionLengthM'] as int?,
          secondaryDimensionLengthCm:
              json['SecondaryDimensionLengthCm'] as int?,
          countryOfOriginId: json['CountryOfOriginId'] as String?,
          countryOfOrigin: json['CountryOfOrigin'] as String?,
          displayInSummaryModeWhenRateIsZero:
              json['DisplayInSummaryModeWhenRateIsZero'] as bool?,
          qcRequired: json['QcRequired'] as bool?,
          qcTime: json['QcTime'] as String?,
          copyAttributesAsNote: json['CopyAttributesAsNote'] as bool?,
          trackAssetUsage: json['TrackAssetUsage'] as bool?,
          trackLampUsage: json['TrackLampUsage'] as bool?,
          trackStrikes: json['TrackStrikes'] as bool?,
          trackCandles: json['TrackCandles'] as bool?,
          lampCount: json['LampCount'] as int?,
          minimumFootCandles: json['MinimumFootCandles'] as int?,
          trackSoftware: json['TrackSoftware'] as bool?,
          softwareVersion: json['SoftwareVersion'] as String?,
          softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
          warehouseSpecificPackage: json['WarehouseSpecificPackage'] as bool?,
          completePackagePrice: json['CompletePackagePrice'] as String?,
          kitPackagePrice: json['KitPackagePrice'] as String?,
          separatePackageOnQuoteOrder:
              json['SeparatePackageOnQuoteOrder'] as bool?,
          containerId: json['ContainerId'] as String?,
          containerScannableInventoryId:
              json['ContainerScannableInventoryId'] as String?,
          containerScannableICode: json['ContainerScannableICode'] as String?,
          containerScannableDescription:
              json['ContainerScannableDescription'] as String?,
          automaticallyRebuildContainerAtCheckIn:
              json['AutomaticallyRebuildContainerAtCheckIn'] as bool?,
          automaticallyRebuildContainerAtTransferIn:
              json['AutomaticallyRebuildContainerAtTransferIn'] as bool?,
          containerStagingRule: json['ContainerStagingRule'] as String?,
          excludeContainedItemsFromAvailability:
              json['ExcludeContainedItemsFromAvailability'] as bool?,
          useContainerNumber: json['UseContainerNumber'] as bool?,
          containerPackingListBehavior:
              json['ContainerPackingListBehavior'] as String?,
          inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
          inventoryTypeIsSets: json['InventoryTypeIsSets'] as bool?,
          patternId: json['PatternId'] as String?,
          pattern: json['Pattern'] as String?,
          periodId: json['PeriodId'] as String?,
          period: json['Period'] as String?,
          materialId: json['MaterialId'] as String?,
          material: json['Material'] as String?,
          genderId: json['GenderId'] as String?,
          gender: json['Gender'] as String?,
          labelId: json['LabelId'] as String?,
          label: json['Label'] as String?,
          wardrobeSize: json['WardrobeSize'] as String?,
          wardrobePieceCount: json['WardrobePieceCount'] as int?,
          dyed: json['Dyed'] as bool?,
          wardrobeSourceId: json['WardrobeSourceId'] as String?,
          wardrobeSource: json['WardrobeSource'] as String?,
          wardrobeCareId: json['WardrobeCareId'] as String?,
          wardrobeCare: json['WardrobeCare'] as String?,
          cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
          wardrobeDetailedDescription:
              json['WardrobeDetailedDescription'] as String?,
          webDetailedDescription: json['WebDetailedDescription'] as String?,
          overrideSystemDefaultRevenueAllocationBehavior:
              json['OverrideSystemDefaultRevenueAllocationBehavior'] as bool?,
          allocateRevenueForAccessories:
              json['AllocateRevenueForAccessories'] as bool?,
          packageRevenueCalculationFormula:
              json['PackageRevenueCalculationFormula'] as String?,
          isHazardousMaterial: json['IsHazardousMaterial'] as bool?,
          descriptionWithAkas: json['DescriptionWithAkas'] as String?,
          costCalculation: json['CostCalculation'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          quantityIn: (json['QuantityIn'] as num?)?.toDouble(),
          quantityStaged: (json['QuantityStaged'] as num?)?.toDouble(),
          quantityOut: (json['QuantityOut'] as num?)?.toDouble(),
          quantityInContainer:
              (json['QuantityInContainer'] as num?)?.toDouble(),
          quantityInRepair: (json['QuantityInRepair'] as num?)?.toDouble(),
          quantityInTransit: (json['QuantityInTransit'] as num?)?.toDouble(),
          quantityOnTruck: (json['QuantityOnTruck'] as num?)?.toDouble(),
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          taxable: json['Taxable'] as bool?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          availFor: json['AvailFor'] as String?,
          categoryId: json['CategoryId'] as String?,
          category: json['Category'] as String?,
          subCategoryCount: json['SubCategoryCount'] as int?,
          subCategoryId: json['SubCategoryId'] as String?,
          subCategory: json['SubCategory'] as String?,
          classification: json['Classification'] as String?,
          classificationDescription:
              json['ClassificationDescription'] as String?,
          classificationColor: json['ClassificationColor'] as String?,
          unitId: json['UnitId'] as String?,
          unit: json['Unit'] as String?,
          unitType: json['UnitType'] as String?,
          nonDiscountable: json['NonDiscountable'] as bool?,
          overrideProfitAndLossCategory:
              json['OverrideProfitAndLossCategory'] as bool?,
          profitAndLossCategoryId: json['ProfitAndLossCategoryId'] as String?,
          profitAndLossCategory: json['ProfitAndLossCategory'] as String?,
          autoCopyNotesToQuoteOrder: json['AutoCopyNotesToQuoteOrder'] as bool?,
          note: json['Note'] as String?,
          printNoteOnInContract: json['PrintNoteOnInContract'] as bool?,
          printNoteOnOutContract: json['PrintNoteOnOutContract'] as bool?,
          printNoteOnReceiveContract:
              json['PrintNoteOnReceiveContract'] as bool?,
          printNoteOnReturnContract: json['PrintNoteOnReturnContract'] as bool?,
          printNoteOnInvoice: json['PrintNoteOnInvoice'] as bool?,
          printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
          printNoteOnPickList: json['PrintNoteOnPickList'] as bool?,
          printNoteOnPO: json['PrintNoteOnPO'] as bool?,
          printNoteOnQuote: json['PrintNoteOnQuote'] as bool?,
          printNoteOnReturnList: json['PrintNoteOnReturnList'] as bool?,
          printNoteOnPoReceiveList: json['PrintNoteOnPoReceiveList'] as bool?,
          printNoteOnPoReturnList: json['PrintNoteOnPoReturnList'] as bool?,
          assetAccountId: json['AssetAccountId'] as String?,
          assetAccountNo: json['AssetAccountNo'] as String?,
          assetAccountDescription: json['AssetAccountDescription'] as String?,
          incomeAccountId: json['IncomeAccountId'] as String?,
          incomeAccountNo: json['IncomeAccountNo'] as String?,
          incomeAccountDescription: json['IncomeAccountDescription'] as String?,
          subIncomeAccountId: json['SubIncomeAccountId'] as String?,
          subIncomeAccountNo: json['SubIncomeAccountNo'] as String?,
          subIncomeAccountDescription:
              json['SubIncomeAccountDescription'] as String?,
          consignmentIncomeAccountId:
              json['ConsignmentIncomeAccountId'] as String?,
          consignmentIncomeAccountNo:
              json['ConsignmentIncomeAccountNo'] as String?,
          consignmentIncomeAccountDescription:
              json['ConsignmentIncomeAccountDescription'] as String?,
          ldIncomeAccountId: json['LdIncomeAccountId'] as String?,
          ldIncomeAccountNo: json['LdIncomeAccountNo'] as String?,
          ldIncomeAccountDescription:
              json['LdIncomeAccountDescription'] as String?,
          equipmentSaleIncomeAccountId:
              json['EquipmentSaleIncomeAccountId'] as String?,
          equipmentSaleIncomeAccountNo:
              json['EquipmentSaleIncomeAccountNo'] as String?,
          equipmentSaleIncomeAccountDescription:
              json['EquipmentSaleIncomeAccountDescription'] as String?,
          expenseAccountId: json['ExpenseAccountId'] as String?,
          expenseAccountNo: json['ExpenseAccountNo'] as String?,
          expenseAccountDescription:
              json['ExpenseAccountDescription'] as String?,
          costOfGoodsSoldExpenseAccountId:
              json['CostOfGoodsSoldExpenseAccountId'] as String?,
          costOfGoodsSoldExpenseAccountNo:
              json['CostOfGoodsSoldExpenseAccountNo'] as String?,
          costOfGoodsSoldExpenseAccountDescription:
              json['CostOfGoodsSoldExpenseAccountDescription'] as String?,
          costOfGoodsRentedExpenseAccountId:
              json['CostOfGoodsRentedExpenseAccountId'] as String?,
          costOfGoodsRentedExpenseAccountNo:
              json['CostOfGoodsRentedExpenseAccountNo'] as String?,
          costOfGoodsRentedExpenseAccountDescription:
              json['CostOfGoodsRentedExpenseAccountDescription'] as String?,
          depreciationExpenseAccountId:
              json['DepreciationExpenseAccountId'] as String?,
          depreciationExpenseAccountNo:
              json['DepreciationExpenseAccountNo'] as String?,
          depreciationExpenseAccountDescription:
              json['DepreciationExpenseAccountDescription'] as String?,
          accumulatedDepreciationExpenseAccountId:
              json['AccumulatedDepreciationExpenseAccountId'] as String?,
          accumulatedDepreciationExpenseAccountNo:
              json['AccumulatedDepreciationExpenseAccountNo'] as String?,
          accumulatedDepreciationExpenseAccountDescription:
              json['AccumulatedDepreciationExpenseAccountDescription']
                  as String?,
          originalShowId: json['OriginalShowId'] as String?,
          inputDate: json['InputDate'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          manifestShippingContainer: json['ManifestShippingContainer'] as bool?,
          manifestStandAloneItem: json['ManifestStandAloneItem'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryRentalInventoryRentalInventoryToJson(
        WebApiModulesInventoryRentalInventoryRentalInventory instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ExcludeFromReturnOnAsset', instance.excludeFromReturnOnAsset);
  writeNotNull('IsFixedAsset', instance.isFixedAsset);
  writeNotNull('MultiAssignRFIDs', instance.multiAssignRFIDs);
  writeNotNull('MinimumDaysPerWeek', instance.minimumDaysPerWeek);
  writeNotNull('SetOpeningId', instance.setOpeningId);
  writeNotNull('SetOpening', instance.setOpening);
  writeNotNull('WallTypeId', instance.wallTypeId);
  writeNotNull('WallType', instance.wallType);
  writeNotNull('SetSurfaceId', instance.setSurfaceId);
  writeNotNull('SetSurface', instance.setSurface);
  writeNotNull('WallWidthFt', instance.wallWidthFt);
  writeNotNull('WallWidthIn', instance.wallWidthIn);
  writeNotNull('WallHeightFt', instance.wallHeightFt);
  writeNotNull('WallHeightIn', instance.wallHeightIn);
  writeNotNull('WallLengthFt', instance.wallLengthFt);
  writeNotNull('WallLengthIn', instance.wallLengthIn);
  writeNotNull('TreatConsignedQtyAsOwned', instance.treatConsignedQtyAsOwned);
  writeNotNull('DailyRate', instance.dailyRate);
  writeNotNull('WeeklyRate', instance.weeklyRate);
  writeNotNull('Week2Rate', instance.week2Rate);
  writeNotNull('Week3Rate', instance.week3Rate);
  writeNotNull('Week4Rate', instance.week4Rate);
  writeNotNull('MonthlyRate', instance.monthlyRate);
  writeNotNull('UnitValue', instance.unitValue);
  writeNotNull('ReplacementCost', instance.replacementCost);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('AvailableFrom', instance.availableFrom);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('ConfirmTrackedBy', instance.confirmTrackedBy);
  writeNotNull('Rank', instance.rank);
  writeNotNull('ManufacturerPartNumber', instance.manufacturerPartNumber);
  writeNotNull('ManufacturerId', instance.manufacturerId);
  writeNotNull('Manufacturer', instance.manufacturer);
  writeNotNull('ManufacturerUrl', instance.manufacturerUrl);
  writeNotNull('ExcludeImageFromQuoteOrderPrint',
      instance.excludeImageFromQuoteOrderPrint);
  writeNotNull('NoAvailabilityCheck', instance.noAvailabilityCheck);
  writeNotNull('AvailabilityManuallyResolveConflicts',
      instance.availabilityManuallyResolveConflicts);
  writeNotNull('SendAvailabilityAlert', instance.sendAvailabilityAlert);
  writeNotNull('PrimaryDimensionUniqueId', instance.primaryDimensionUniqueId);
  writeNotNull('DefaultImperialMetric', instance.defaultImperialMetric);
  writeNotNull(
      'PrimaryDimensionDescription', instance.primaryDimensionDescription);
  writeNotNull(
      'PrimaryDimensionShipWeightLbs', instance.primaryDimensionShipWeightLbs);
  writeNotNull(
      'PrimaryDimensionShipWeightOz', instance.primaryDimensionShipWeightOz);
  writeNotNull('PrimaryDimensionWeightInCaseLbs',
      instance.primaryDimensionWeightInCaseLbs);
  writeNotNull('PrimaryDimensionWeightInCaseOz',
      instance.primaryDimensionWeightInCaseOz);
  writeNotNull('PrimaryDimensionWidthFt', instance.primaryDimensionWidthFt);
  writeNotNull('PrimaryDimensionWidthIn', instance.primaryDimensionWidthIn);
  writeNotNull('PrimaryDimensionHeightFt', instance.primaryDimensionHeightFt);
  writeNotNull('PrimaryDimensionHeightIn', instance.primaryDimensionHeightIn);
  writeNotNull('PrimaryDimensionLengthFt', instance.primaryDimensionLengthFt);
  writeNotNull('PrimaryDimensionLengthIn', instance.primaryDimensionLengthIn);
  writeNotNull(
      'PrimaryDimensionShipWeightKg', instance.primaryDimensionShipWeightKg);
  writeNotNull(
      'PrimaryDimensionShipWeightG', instance.primaryDimensionShipWeightG);
  writeNotNull('PrimaryDimensionWeightInCaseKg',
      instance.primaryDimensionWeightInCaseKg);
  writeNotNull(
      'PrimaryDimensionWeightInCaseG', instance.primaryDimensionWeightInCaseG);
  writeNotNull('PrimaryDimensionWidthM', instance.primaryDimensionWidthM);
  writeNotNull('PrimaryDimensionWidthCm', instance.primaryDimensionWidthCm);
  writeNotNull('PrimaryDimensionHeightM', instance.primaryDimensionHeightM);
  writeNotNull('PrimaryDimensionHeightCm', instance.primaryDimensionHeightCm);
  writeNotNull('PrimaryDimensionLengthM', instance.primaryDimensionLengthM);
  writeNotNull('PrimaryDimensionLengthCm', instance.primaryDimensionLengthCm);
  writeNotNull('HasSecondaryDimensions', instance.hasSecondaryDimensions);
  writeNotNull(
      'SecondaryDimensionUniqueId', instance.secondaryDimensionUniqueId);
  writeNotNull(
      'SecondaryDimensionDescription', instance.secondaryDimensionDescription);
  writeNotNull('SecondaryDimensionShipWeightLbs',
      instance.secondaryDimensionShipWeightLbs);
  writeNotNull('SecondaryDimensionShipWeightOz',
      instance.secondaryDimensionShipWeightOz);
  writeNotNull('SecondaryDimensionWeightInCaseLbs',
      instance.secondaryDimensionWeightInCaseLbs);
  writeNotNull('SecondaryDimensionWeightInCaseOz',
      instance.secondaryDimensionWeightInCaseOz);
  writeNotNull('SecondaryDimensionWidthFt', instance.secondaryDimensionWidthFt);
  writeNotNull('SecondaryDimensionWidthIn', instance.secondaryDimensionWidthIn);
  writeNotNull(
      'SecondaryDimensionHeightFt', instance.secondaryDimensionHeightFt);
  writeNotNull(
      'SecondaryDimensionHeightIn', instance.secondaryDimensionHeightIn);
  writeNotNull(
      'SecondaryDimensionLengthFt', instance.secondaryDimensionLengthFt);
  writeNotNull(
      'SecondaryDimensionLengthIn', instance.secondaryDimensionLengthIn);
  writeNotNull('SecondaryDimensionShipWeightKg',
      instance.secondaryDimensionShipWeightKg);
  writeNotNull(
      'SecondaryDimensionShipWeightG', instance.secondaryDimensionShipWeightG);
  writeNotNull('SecondaryDimensionWeightInCaseKg',
      instance.secondaryDimensionWeightInCaseKg);
  writeNotNull('SecondaryDimensionWeightInCaseG',
      instance.secondaryDimensionWeightInCaseG);
  writeNotNull('SecondaryDimensionWidthM', instance.secondaryDimensionWidthM);
  writeNotNull('SecondaryDimensionWidthCm', instance.secondaryDimensionWidthCm);
  writeNotNull('SecondaryDimensionHeightM', instance.secondaryDimensionHeightM);
  writeNotNull(
      'SecondaryDimensionHeightCm', instance.secondaryDimensionHeightCm);
  writeNotNull('SecondaryDimensionLengthM', instance.secondaryDimensionLengthM);
  writeNotNull(
      'SecondaryDimensionLengthCm', instance.secondaryDimensionLengthCm);
  writeNotNull('CountryOfOriginId', instance.countryOfOriginId);
  writeNotNull('CountryOfOrigin', instance.countryOfOrigin);
  writeNotNull('DisplayInSummaryModeWhenRateIsZero',
      instance.displayInSummaryModeWhenRateIsZero);
  writeNotNull('QcRequired', instance.qcRequired);
  writeNotNull('QcTime', instance.qcTime);
  writeNotNull('CopyAttributesAsNote', instance.copyAttributesAsNote);
  writeNotNull('TrackAssetUsage', instance.trackAssetUsage);
  writeNotNull('TrackLampUsage', instance.trackLampUsage);
  writeNotNull('TrackStrikes', instance.trackStrikes);
  writeNotNull('TrackCandles', instance.trackCandles);
  writeNotNull('LampCount', instance.lampCount);
  writeNotNull('MinimumFootCandles', instance.minimumFootCandles);
  writeNotNull('TrackSoftware', instance.trackSoftware);
  writeNotNull('SoftwareVersion', instance.softwareVersion);
  writeNotNull('SoftwareEffectiveDate', instance.softwareEffectiveDate);
  writeNotNull('WarehouseSpecificPackage', instance.warehouseSpecificPackage);
  writeNotNull('CompletePackagePrice', instance.completePackagePrice);
  writeNotNull('KitPackagePrice', instance.kitPackagePrice);
  writeNotNull(
      'SeparatePackageOnQuoteOrder', instance.separatePackageOnQuoteOrder);
  writeNotNull('ContainerId', instance.containerId);
  writeNotNull(
      'ContainerScannableInventoryId', instance.containerScannableInventoryId);
  writeNotNull('ContainerScannableICode', instance.containerScannableICode);
  writeNotNull(
      'ContainerScannableDescription', instance.containerScannableDescription);
  writeNotNull('AutomaticallyRebuildContainerAtCheckIn',
      instance.automaticallyRebuildContainerAtCheckIn);
  writeNotNull('AutomaticallyRebuildContainerAtTransferIn',
      instance.automaticallyRebuildContainerAtTransferIn);
  writeNotNull('ContainerStagingRule', instance.containerStagingRule);
  writeNotNull('ExcludeContainedItemsFromAvailability',
      instance.excludeContainedItemsFromAvailability);
  writeNotNull('UseContainerNumber', instance.useContainerNumber);
  writeNotNull(
      'ContainerPackingListBehavior', instance.containerPackingListBehavior);
  writeNotNull('InventoryTypeIsWardrobe', instance.inventoryTypeIsWardrobe);
  writeNotNull('InventoryTypeIsSets', instance.inventoryTypeIsSets);
  writeNotNull('PatternId', instance.patternId);
  writeNotNull('Pattern', instance.pattern);
  writeNotNull('PeriodId', instance.periodId);
  writeNotNull('Period', instance.period);
  writeNotNull('MaterialId', instance.materialId);
  writeNotNull('Material', instance.material);
  writeNotNull('GenderId', instance.genderId);
  writeNotNull('Gender', instance.gender);
  writeNotNull('LabelId', instance.labelId);
  writeNotNull('Label', instance.label);
  writeNotNull('WardrobeSize', instance.wardrobeSize);
  writeNotNull('WardrobePieceCount', instance.wardrobePieceCount);
  writeNotNull('Dyed', instance.dyed);
  writeNotNull('WardrobeSourceId', instance.wardrobeSourceId);
  writeNotNull('WardrobeSource', instance.wardrobeSource);
  writeNotNull('WardrobeCareId', instance.wardrobeCareId);
  writeNotNull('WardrobeCare', instance.wardrobeCare);
  writeNotNull('CleaningFeeAmount', instance.cleaningFeeAmount);
  writeNotNull(
      'WardrobeDetailedDescription', instance.wardrobeDetailedDescription);
  writeNotNull('WebDetailedDescription', instance.webDetailedDescription);
  writeNotNull('OverrideSystemDefaultRevenueAllocationBehavior',
      instance.overrideSystemDefaultRevenueAllocationBehavior);
  writeNotNull(
      'AllocateRevenueForAccessories', instance.allocateRevenueForAccessories);
  writeNotNull('PackageRevenueCalculationFormula',
      instance.packageRevenueCalculationFormula);
  writeNotNull('IsHazardousMaterial', instance.isHazardousMaterial);
  writeNotNull('DescriptionWithAkas', instance.descriptionWithAkas);
  writeNotNull('CostCalculation', instance.costCalculation);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('QuantityIn', instance.quantityIn);
  writeNotNull('QuantityStaged', instance.quantityStaged);
  writeNotNull('QuantityOut', instance.quantityOut);
  writeNotNull('QuantityInContainer', instance.quantityInContainer);
  writeNotNull('QuantityInRepair', instance.quantityInRepair);
  writeNotNull('QuantityInTransit', instance.quantityInTransit);
  writeNotNull('QuantityOnTruck', instance.quantityOnTruck);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('AvailFor', instance.availFor);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('SubCategoryCount', instance.subCategoryCount);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('SubCategory', instance.subCategory);
  writeNotNull('Classification', instance.classification);
  writeNotNull('ClassificationDescription', instance.classificationDescription);
  writeNotNull('ClassificationColor', instance.classificationColor);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('Unit', instance.unit);
  writeNotNull('UnitType', instance.unitType);
  writeNotNull('NonDiscountable', instance.nonDiscountable);
  writeNotNull(
      'OverrideProfitAndLossCategory', instance.overrideProfitAndLossCategory);
  writeNotNull('ProfitAndLossCategoryId', instance.profitAndLossCategoryId);
  writeNotNull('ProfitAndLossCategory', instance.profitAndLossCategory);
  writeNotNull('AutoCopyNotesToQuoteOrder', instance.autoCopyNotesToQuoteOrder);
  writeNotNull('Note', instance.note);
  writeNotNull('PrintNoteOnInContract', instance.printNoteOnInContract);
  writeNotNull('PrintNoteOnOutContract', instance.printNoteOnOutContract);
  writeNotNull(
      'PrintNoteOnReceiveContract', instance.printNoteOnReceiveContract);
  writeNotNull('PrintNoteOnReturnContract', instance.printNoteOnReturnContract);
  writeNotNull('PrintNoteOnInvoice', instance.printNoteOnInvoice);
  writeNotNull('PrintNoteOnOrder', instance.printNoteOnOrder);
  writeNotNull('PrintNoteOnPickList', instance.printNoteOnPickList);
  writeNotNull('PrintNoteOnPO', instance.printNoteOnPO);
  writeNotNull('PrintNoteOnQuote', instance.printNoteOnQuote);
  writeNotNull('PrintNoteOnReturnList', instance.printNoteOnReturnList);
  writeNotNull('PrintNoteOnPoReceiveList', instance.printNoteOnPoReceiveList);
  writeNotNull('PrintNoteOnPoReturnList', instance.printNoteOnPoReturnList);
  writeNotNull('AssetAccountId', instance.assetAccountId);
  writeNotNull('AssetAccountNo', instance.assetAccountNo);
  writeNotNull('AssetAccountDescription', instance.assetAccountDescription);
  writeNotNull('IncomeAccountId', instance.incomeAccountId);
  writeNotNull('IncomeAccountNo', instance.incomeAccountNo);
  writeNotNull('IncomeAccountDescription', instance.incomeAccountDescription);
  writeNotNull('SubIncomeAccountId', instance.subIncomeAccountId);
  writeNotNull('SubIncomeAccountNo', instance.subIncomeAccountNo);
  writeNotNull(
      'SubIncomeAccountDescription', instance.subIncomeAccountDescription);
  writeNotNull(
      'ConsignmentIncomeAccountId', instance.consignmentIncomeAccountId);
  writeNotNull(
      'ConsignmentIncomeAccountNo', instance.consignmentIncomeAccountNo);
  writeNotNull('ConsignmentIncomeAccountDescription',
      instance.consignmentIncomeAccountDescription);
  writeNotNull('LdIncomeAccountId', instance.ldIncomeAccountId);
  writeNotNull('LdIncomeAccountNo', instance.ldIncomeAccountNo);
  writeNotNull(
      'LdIncomeAccountDescription', instance.ldIncomeAccountDescription);
  writeNotNull(
      'EquipmentSaleIncomeAccountId', instance.equipmentSaleIncomeAccountId);
  writeNotNull(
      'EquipmentSaleIncomeAccountNo', instance.equipmentSaleIncomeAccountNo);
  writeNotNull('EquipmentSaleIncomeAccountDescription',
      instance.equipmentSaleIncomeAccountDescription);
  writeNotNull('ExpenseAccountId', instance.expenseAccountId);
  writeNotNull('ExpenseAccountNo', instance.expenseAccountNo);
  writeNotNull('ExpenseAccountDescription', instance.expenseAccountDescription);
  writeNotNull('CostOfGoodsSoldExpenseAccountId',
      instance.costOfGoodsSoldExpenseAccountId);
  writeNotNull('CostOfGoodsSoldExpenseAccountNo',
      instance.costOfGoodsSoldExpenseAccountNo);
  writeNotNull('CostOfGoodsSoldExpenseAccountDescription',
      instance.costOfGoodsSoldExpenseAccountDescription);
  writeNotNull('CostOfGoodsRentedExpenseAccountId',
      instance.costOfGoodsRentedExpenseAccountId);
  writeNotNull('CostOfGoodsRentedExpenseAccountNo',
      instance.costOfGoodsRentedExpenseAccountNo);
  writeNotNull('CostOfGoodsRentedExpenseAccountDescription',
      instance.costOfGoodsRentedExpenseAccountDescription);
  writeNotNull(
      'DepreciationExpenseAccountId', instance.depreciationExpenseAccountId);
  writeNotNull(
      'DepreciationExpenseAccountNo', instance.depreciationExpenseAccountNo);
  writeNotNull('DepreciationExpenseAccountDescription',
      instance.depreciationExpenseAccountDescription);
  writeNotNull('AccumulatedDepreciationExpenseAccountId',
      instance.accumulatedDepreciationExpenseAccountId);
  writeNotNull('AccumulatedDepreciationExpenseAccountNo',
      instance.accumulatedDepreciationExpenseAccountNo);
  writeNotNull('AccumulatedDepreciationExpenseAccountDescription',
      instance.accumulatedDepreciationExpenseAccountDescription);
  writeNotNull('OriginalShowId', instance.originalShowId);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('ManifestShippingContainer', instance.manifestShippingContainer);
  writeNotNull('ManifestStandAloneItem', instance.manifestStandAloneItem);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryRentalInventoryRentalInventoryDetailResponse
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDetailResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRentalInventoryRentalInventoryDetailResponse(
          excludeFromReturnOnAsset: json['ExcludeFromReturnOnAsset'] as bool?,
          isFixedAsset: json['IsFixedAsset'] as bool?,
          multiAssignRFIDs: json['MultiAssignRFIDs'] as bool?,
          minimumDaysPerWeek: (json['MinimumDaysPerWeek'] as num?)?.toDouble(),
          setOpeningId: json['SetOpeningId'] as String?,
          setOpening: json['SetOpening'] as String?,
          wallTypeId: json['WallTypeId'] as String?,
          wallType: json['WallType'] as String?,
          setSurfaceId: json['SetSurfaceId'] as String?,
          setSurface: json['SetSurface'] as String?,
          wallWidthFt: json['WallWidthFt'] as int?,
          wallWidthIn: json['WallWidthIn'] as int?,
          wallHeightFt: json['WallHeightFt'] as int?,
          wallHeightIn: json['WallHeightIn'] as int?,
          wallLengthFt: json['WallLengthFt'] as int?,
          wallLengthIn: json['WallLengthIn'] as int?,
          treatConsignedQtyAsOwned: json['TreatConsignedQtyAsOwned'] as bool?,
          dailyRate: (json['DailyRate'] as num?)?.toDouble(),
          weeklyRate: (json['WeeklyRate'] as num?)?.toDouble(),
          week2Rate: (json['Week2Rate'] as num?)?.toDouble(),
          week3Rate: (json['Week3Rate'] as num?)?.toDouble(),
          week4Rate: (json['Week4Rate'] as num?)?.toDouble(),
          monthlyRate: (json['MonthlyRate'] as num?)?.toDouble(),
          unitValue: (json['UnitValue'] as num?)?.toDouble(),
          replacementCost: (json['ReplacementCost'] as num?)?.toDouble(),
          inventoryId: json['InventoryId'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          availableFrom: json['AvailableFrom'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          confirmTrackedBy: json['ConfirmTrackedBy'] as String?,
          rank: json['Rank'] as String?,
          manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
          manufacturerId: json['ManufacturerId'] as String?,
          manufacturer: json['Manufacturer'] as String?,
          manufacturerUrl: json['ManufacturerUrl'] as String?,
          excludeImageFromQuoteOrderPrint:
              json['ExcludeImageFromQuoteOrderPrint'] as bool?,
          noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
          availabilityManuallyResolveConflicts:
              json['AvailabilityManuallyResolveConflicts'] as bool?,
          sendAvailabilityAlert: json['SendAvailabilityAlert'] as bool?,
          primaryDimensionUniqueId: json['PrimaryDimensionUniqueId'] as String?,
          defaultImperialMetric: json['DefaultImperialMetric'] as String?,
          primaryDimensionDescription:
              json['PrimaryDimensionDescription'] as String?,
          primaryDimensionShipWeightLbs:
              json['PrimaryDimensionShipWeightLbs'] as int?,
          primaryDimensionShipWeightOz:
              json['PrimaryDimensionShipWeightOz'] as int?,
          primaryDimensionWeightInCaseLbs:
              json['PrimaryDimensionWeightInCaseLbs'] as int?,
          primaryDimensionWeightInCaseOz:
              json['PrimaryDimensionWeightInCaseOz'] as int?,
          primaryDimensionWidthFt: json['PrimaryDimensionWidthFt'] as int?,
          primaryDimensionWidthIn: json['PrimaryDimensionWidthIn'] as int?,
          primaryDimensionHeightFt: json['PrimaryDimensionHeightFt'] as int?,
          primaryDimensionHeightIn: json['PrimaryDimensionHeightIn'] as int?,
          primaryDimensionLengthFt: json['PrimaryDimensionLengthFt'] as int?,
          primaryDimensionLengthIn: json['PrimaryDimensionLengthIn'] as int?,
          primaryDimensionShipWeightKg:
              json['PrimaryDimensionShipWeightKg'] as int?,
          primaryDimensionShipWeightG:
              json['PrimaryDimensionShipWeightG'] as int?,
          primaryDimensionWeightInCaseKg:
              json['PrimaryDimensionWeightInCaseKg'] as int?,
          primaryDimensionWeightInCaseG:
              json['PrimaryDimensionWeightInCaseG'] as int?,
          primaryDimensionWidthM: json['PrimaryDimensionWidthM'] as int?,
          primaryDimensionWidthCm: json['PrimaryDimensionWidthCm'] as int?,
          primaryDimensionHeightM: json['PrimaryDimensionHeightM'] as int?,
          primaryDimensionHeightCm: json['PrimaryDimensionHeightCm'] as int?,
          primaryDimensionLengthM: json['PrimaryDimensionLengthM'] as int?,
          primaryDimensionLengthCm: json['PrimaryDimensionLengthCm'] as int?,
          hasSecondaryDimensions: json['HasSecondaryDimensions'] as bool?,
          secondaryDimensionUniqueId:
              json['SecondaryDimensionUniqueId'] as String?,
          secondaryDimensionDescription:
              json['SecondaryDimensionDescription'] as String?,
          secondaryDimensionShipWeightLbs:
              json['SecondaryDimensionShipWeightLbs'] as int?,
          secondaryDimensionShipWeightOz:
              json['SecondaryDimensionShipWeightOz'] as int?,
          secondaryDimensionWeightInCaseLbs:
              json['SecondaryDimensionWeightInCaseLbs'] as int?,
          secondaryDimensionWeightInCaseOz:
              json['SecondaryDimensionWeightInCaseOz'] as int?,
          secondaryDimensionWidthFt: json['SecondaryDimensionWidthFt'] as int?,
          secondaryDimensionWidthIn: json['SecondaryDimensionWidthIn'] as int?,
          secondaryDimensionHeightFt:
              json['SecondaryDimensionHeightFt'] as int?,
          secondaryDimensionHeightIn:
              json['SecondaryDimensionHeightIn'] as int?,
          secondaryDimensionLengthFt:
              json['SecondaryDimensionLengthFt'] as int?,
          secondaryDimensionLengthIn:
              json['SecondaryDimensionLengthIn'] as int?,
          secondaryDimensionShipWeightKg:
              json['SecondaryDimensionShipWeightKg'] as int?,
          secondaryDimensionShipWeightG:
              json['SecondaryDimensionShipWeightG'] as int?,
          secondaryDimensionWeightInCaseKg:
              json['SecondaryDimensionWeightInCaseKg'] as int?,
          secondaryDimensionWeightInCaseG:
              json['SecondaryDimensionWeightInCaseG'] as int?,
          secondaryDimensionWidthM: json['SecondaryDimensionWidthM'] as int?,
          secondaryDimensionWidthCm: json['SecondaryDimensionWidthCm'] as int?,
          secondaryDimensionHeightM: json['SecondaryDimensionHeightM'] as int?,
          secondaryDimensionHeightCm:
              json['SecondaryDimensionHeightCm'] as int?,
          secondaryDimensionLengthM: json['SecondaryDimensionLengthM'] as int?,
          secondaryDimensionLengthCm:
              json['SecondaryDimensionLengthCm'] as int?,
          countryOfOriginId: json['CountryOfOriginId'] as String?,
          countryOfOrigin: json['CountryOfOrigin'] as String?,
          displayInSummaryModeWhenRateIsZero:
              json['DisplayInSummaryModeWhenRateIsZero'] as bool?,
          qcRequired: json['QcRequired'] as bool?,
          qcTime: json['QcTime'] as String?,
          copyAttributesAsNote: json['CopyAttributesAsNote'] as bool?,
          trackAssetUsage: json['TrackAssetUsage'] as bool?,
          trackLampUsage: json['TrackLampUsage'] as bool?,
          trackStrikes: json['TrackStrikes'] as bool?,
          trackCandles: json['TrackCandles'] as bool?,
          lampCount: json['LampCount'] as int?,
          minimumFootCandles: json['MinimumFootCandles'] as int?,
          trackSoftware: json['TrackSoftware'] as bool?,
          softwareVersion: json['SoftwareVersion'] as String?,
          softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
          warehouseSpecificPackage: json['WarehouseSpecificPackage'] as bool?,
          completePackagePrice: json['CompletePackagePrice'] as String?,
          kitPackagePrice: json['KitPackagePrice'] as String?,
          separatePackageOnQuoteOrder:
              json['SeparatePackageOnQuoteOrder'] as bool?,
          containerId: json['ContainerId'] as String?,
          containerScannableInventoryId:
              json['ContainerScannableInventoryId'] as String?,
          containerScannableICode: json['ContainerScannableICode'] as String?,
          containerScannableDescription:
              json['ContainerScannableDescription'] as String?,
          automaticallyRebuildContainerAtCheckIn:
              json['AutomaticallyRebuildContainerAtCheckIn'] as bool?,
          automaticallyRebuildContainerAtTransferIn:
              json['AutomaticallyRebuildContainerAtTransferIn'] as bool?,
          containerStagingRule: json['ContainerStagingRule'] as String?,
          excludeContainedItemsFromAvailability:
              json['ExcludeContainedItemsFromAvailability'] as bool?,
          useContainerNumber: json['UseContainerNumber'] as bool?,
          containerPackingListBehavior:
              json['ContainerPackingListBehavior'] as String?,
          inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
          inventoryTypeIsSets: json['InventoryTypeIsSets'] as bool?,
          patternId: json['PatternId'] as String?,
          pattern: json['Pattern'] as String?,
          periodId: json['PeriodId'] as String?,
          period: json['Period'] as String?,
          materialId: json['MaterialId'] as String?,
          material: json['Material'] as String?,
          genderId: json['GenderId'] as String?,
          gender: json['Gender'] as String?,
          labelId: json['LabelId'] as String?,
          label: json['Label'] as String?,
          wardrobeSize: json['WardrobeSize'] as String?,
          wardrobePieceCount: json['WardrobePieceCount'] as int?,
          dyed: json['Dyed'] as bool?,
          wardrobeSourceId: json['WardrobeSourceId'] as String?,
          wardrobeSource: json['WardrobeSource'] as String?,
          wardrobeCareId: json['WardrobeCareId'] as String?,
          wardrobeCare: json['WardrobeCare'] as String?,
          cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
          wardrobeDetailedDescription:
              json['WardrobeDetailedDescription'] as String?,
          webDetailedDescription: json['WebDetailedDescription'] as String?,
          overrideSystemDefaultRevenueAllocationBehavior:
              json['OverrideSystemDefaultRevenueAllocationBehavior'] as bool?,
          allocateRevenueForAccessories:
              json['AllocateRevenueForAccessories'] as bool?,
          packageRevenueCalculationFormula:
              json['PackageRevenueCalculationFormula'] as String?,
          isHazardousMaterial: json['IsHazardousMaterial'] as bool?,
          descriptionWithAkas: json['DescriptionWithAkas'] as String?,
          costCalculation: json['CostCalculation'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          quantityIn: (json['QuantityIn'] as num?)?.toDouble(),
          quantityStaged: (json['QuantityStaged'] as num?)?.toDouble(),
          quantityOut: (json['QuantityOut'] as num?)?.toDouble(),
          quantityInContainer:
              (json['QuantityInContainer'] as num?)?.toDouble(),
          quantityInRepair: (json['QuantityInRepair'] as num?)?.toDouble(),
          quantityInTransit: (json['QuantityInTransit'] as num?)?.toDouble(),
          quantityOnTruck: (json['QuantityOnTruck'] as num?)?.toDouble(),
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          taxable: json['Taxable'] as bool?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          availFor: json['AvailFor'] as String?,
          categoryId: json['CategoryId'] as String?,
          category: json['Category'] as String?,
          subCategoryCount: json['SubCategoryCount'] as int?,
          subCategoryId: json['SubCategoryId'] as String?,
          subCategory: json['SubCategory'] as String?,
          classification: json['Classification'] as String?,
          classificationDescription:
              json['ClassificationDescription'] as String?,
          classificationColor: json['ClassificationColor'] as String?,
          unitId: json['UnitId'] as String?,
          unit: json['Unit'] as String?,
          unitType: json['UnitType'] as String?,
          nonDiscountable: json['NonDiscountable'] as bool?,
          overrideProfitAndLossCategory:
              json['OverrideProfitAndLossCategory'] as bool?,
          profitAndLossCategoryId: json['ProfitAndLossCategoryId'] as String?,
          profitAndLossCategory: json['ProfitAndLossCategory'] as String?,
          autoCopyNotesToQuoteOrder: json['AutoCopyNotesToQuoteOrder'] as bool?,
          note: json['Note'] as String?,
          printNoteOnInContract: json['PrintNoteOnInContract'] as bool?,
          printNoteOnOutContract: json['PrintNoteOnOutContract'] as bool?,
          printNoteOnReceiveContract:
              json['PrintNoteOnReceiveContract'] as bool?,
          printNoteOnReturnContract: json['PrintNoteOnReturnContract'] as bool?,
          printNoteOnInvoice: json['PrintNoteOnInvoice'] as bool?,
          printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
          printNoteOnPickList: json['PrintNoteOnPickList'] as bool?,
          printNoteOnPO: json['PrintNoteOnPO'] as bool?,
          printNoteOnQuote: json['PrintNoteOnQuote'] as bool?,
          printNoteOnReturnList: json['PrintNoteOnReturnList'] as bool?,
          printNoteOnPoReceiveList: json['PrintNoteOnPoReceiveList'] as bool?,
          printNoteOnPoReturnList: json['PrintNoteOnPoReturnList'] as bool?,
          assetAccountId: json['AssetAccountId'] as String?,
          assetAccountNo: json['AssetAccountNo'] as String?,
          assetAccountDescription: json['AssetAccountDescription'] as String?,
          incomeAccountId: json['IncomeAccountId'] as String?,
          incomeAccountNo: json['IncomeAccountNo'] as String?,
          incomeAccountDescription: json['IncomeAccountDescription'] as String?,
          subIncomeAccountId: json['SubIncomeAccountId'] as String?,
          subIncomeAccountNo: json['SubIncomeAccountNo'] as String?,
          subIncomeAccountDescription:
              json['SubIncomeAccountDescription'] as String?,
          consignmentIncomeAccountId:
              json['ConsignmentIncomeAccountId'] as String?,
          consignmentIncomeAccountNo:
              json['ConsignmentIncomeAccountNo'] as String?,
          consignmentIncomeAccountDescription:
              json['ConsignmentIncomeAccountDescription'] as String?,
          ldIncomeAccountId: json['LdIncomeAccountId'] as String?,
          ldIncomeAccountNo: json['LdIncomeAccountNo'] as String?,
          ldIncomeAccountDescription:
              json['LdIncomeAccountDescription'] as String?,
          equipmentSaleIncomeAccountId:
              json['EquipmentSaleIncomeAccountId'] as String?,
          equipmentSaleIncomeAccountNo:
              json['EquipmentSaleIncomeAccountNo'] as String?,
          equipmentSaleIncomeAccountDescription:
              json['EquipmentSaleIncomeAccountDescription'] as String?,
          expenseAccountId: json['ExpenseAccountId'] as String?,
          expenseAccountNo: json['ExpenseAccountNo'] as String?,
          expenseAccountDescription:
              json['ExpenseAccountDescription'] as String?,
          costOfGoodsSoldExpenseAccountId:
              json['CostOfGoodsSoldExpenseAccountId'] as String?,
          costOfGoodsSoldExpenseAccountNo:
              json['CostOfGoodsSoldExpenseAccountNo'] as String?,
          costOfGoodsSoldExpenseAccountDescription:
              json['CostOfGoodsSoldExpenseAccountDescription'] as String?,
          costOfGoodsRentedExpenseAccountId:
              json['CostOfGoodsRentedExpenseAccountId'] as String?,
          costOfGoodsRentedExpenseAccountNo:
              json['CostOfGoodsRentedExpenseAccountNo'] as String?,
          costOfGoodsRentedExpenseAccountDescription:
              json['CostOfGoodsRentedExpenseAccountDescription'] as String?,
          depreciationExpenseAccountId:
              json['DepreciationExpenseAccountId'] as String?,
          depreciationExpenseAccountNo:
              json['DepreciationExpenseAccountNo'] as String?,
          depreciationExpenseAccountDescription:
              json['DepreciationExpenseAccountDescription'] as String?,
          accumulatedDepreciationExpenseAccountId:
              json['AccumulatedDepreciationExpenseAccountId'] as String?,
          accumulatedDepreciationExpenseAccountNo:
              json['AccumulatedDepreciationExpenseAccountNo'] as String?,
          accumulatedDepreciationExpenseAccountDescription:
              json['AccumulatedDepreciationExpenseAccountDescription']
                  as String?,
          originalShowId: json['OriginalShowId'] as String?,
          inputDate: json['InputDate'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          manifestShippingContainer: json['ManifestShippingContainer'] as bool?,
          manifestStandAloneItem: json['ManifestStandAloneItem'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          warehouses: (json['Warehouses'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsInventoryWarehouseInventoryWarehouse
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDetailResponseToJson(
        WebApiModulesInventoryRentalInventoryRentalInventoryDetailResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ExcludeFromReturnOnAsset', instance.excludeFromReturnOnAsset);
  writeNotNull('IsFixedAsset', instance.isFixedAsset);
  writeNotNull('MultiAssignRFIDs', instance.multiAssignRFIDs);
  writeNotNull('MinimumDaysPerWeek', instance.minimumDaysPerWeek);
  writeNotNull('SetOpeningId', instance.setOpeningId);
  writeNotNull('SetOpening', instance.setOpening);
  writeNotNull('WallTypeId', instance.wallTypeId);
  writeNotNull('WallType', instance.wallType);
  writeNotNull('SetSurfaceId', instance.setSurfaceId);
  writeNotNull('SetSurface', instance.setSurface);
  writeNotNull('WallWidthFt', instance.wallWidthFt);
  writeNotNull('WallWidthIn', instance.wallWidthIn);
  writeNotNull('WallHeightFt', instance.wallHeightFt);
  writeNotNull('WallHeightIn', instance.wallHeightIn);
  writeNotNull('WallLengthFt', instance.wallLengthFt);
  writeNotNull('WallLengthIn', instance.wallLengthIn);
  writeNotNull('TreatConsignedQtyAsOwned', instance.treatConsignedQtyAsOwned);
  writeNotNull('DailyRate', instance.dailyRate);
  writeNotNull('WeeklyRate', instance.weeklyRate);
  writeNotNull('Week2Rate', instance.week2Rate);
  writeNotNull('Week3Rate', instance.week3Rate);
  writeNotNull('Week4Rate', instance.week4Rate);
  writeNotNull('MonthlyRate', instance.monthlyRate);
  writeNotNull('UnitValue', instance.unitValue);
  writeNotNull('ReplacementCost', instance.replacementCost);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('AvailableFrom', instance.availableFrom);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('ConfirmTrackedBy', instance.confirmTrackedBy);
  writeNotNull('Rank', instance.rank);
  writeNotNull('ManufacturerPartNumber', instance.manufacturerPartNumber);
  writeNotNull('ManufacturerId', instance.manufacturerId);
  writeNotNull('Manufacturer', instance.manufacturer);
  writeNotNull('ManufacturerUrl', instance.manufacturerUrl);
  writeNotNull('ExcludeImageFromQuoteOrderPrint',
      instance.excludeImageFromQuoteOrderPrint);
  writeNotNull('NoAvailabilityCheck', instance.noAvailabilityCheck);
  writeNotNull('AvailabilityManuallyResolveConflicts',
      instance.availabilityManuallyResolveConflicts);
  writeNotNull('SendAvailabilityAlert', instance.sendAvailabilityAlert);
  writeNotNull('PrimaryDimensionUniqueId', instance.primaryDimensionUniqueId);
  writeNotNull('DefaultImperialMetric', instance.defaultImperialMetric);
  writeNotNull(
      'PrimaryDimensionDescription', instance.primaryDimensionDescription);
  writeNotNull(
      'PrimaryDimensionShipWeightLbs', instance.primaryDimensionShipWeightLbs);
  writeNotNull(
      'PrimaryDimensionShipWeightOz', instance.primaryDimensionShipWeightOz);
  writeNotNull('PrimaryDimensionWeightInCaseLbs',
      instance.primaryDimensionWeightInCaseLbs);
  writeNotNull('PrimaryDimensionWeightInCaseOz',
      instance.primaryDimensionWeightInCaseOz);
  writeNotNull('PrimaryDimensionWidthFt', instance.primaryDimensionWidthFt);
  writeNotNull('PrimaryDimensionWidthIn', instance.primaryDimensionWidthIn);
  writeNotNull('PrimaryDimensionHeightFt', instance.primaryDimensionHeightFt);
  writeNotNull('PrimaryDimensionHeightIn', instance.primaryDimensionHeightIn);
  writeNotNull('PrimaryDimensionLengthFt', instance.primaryDimensionLengthFt);
  writeNotNull('PrimaryDimensionLengthIn', instance.primaryDimensionLengthIn);
  writeNotNull(
      'PrimaryDimensionShipWeightKg', instance.primaryDimensionShipWeightKg);
  writeNotNull(
      'PrimaryDimensionShipWeightG', instance.primaryDimensionShipWeightG);
  writeNotNull('PrimaryDimensionWeightInCaseKg',
      instance.primaryDimensionWeightInCaseKg);
  writeNotNull(
      'PrimaryDimensionWeightInCaseG', instance.primaryDimensionWeightInCaseG);
  writeNotNull('PrimaryDimensionWidthM', instance.primaryDimensionWidthM);
  writeNotNull('PrimaryDimensionWidthCm', instance.primaryDimensionWidthCm);
  writeNotNull('PrimaryDimensionHeightM', instance.primaryDimensionHeightM);
  writeNotNull('PrimaryDimensionHeightCm', instance.primaryDimensionHeightCm);
  writeNotNull('PrimaryDimensionLengthM', instance.primaryDimensionLengthM);
  writeNotNull('PrimaryDimensionLengthCm', instance.primaryDimensionLengthCm);
  writeNotNull('HasSecondaryDimensions', instance.hasSecondaryDimensions);
  writeNotNull(
      'SecondaryDimensionUniqueId', instance.secondaryDimensionUniqueId);
  writeNotNull(
      'SecondaryDimensionDescription', instance.secondaryDimensionDescription);
  writeNotNull('SecondaryDimensionShipWeightLbs',
      instance.secondaryDimensionShipWeightLbs);
  writeNotNull('SecondaryDimensionShipWeightOz',
      instance.secondaryDimensionShipWeightOz);
  writeNotNull('SecondaryDimensionWeightInCaseLbs',
      instance.secondaryDimensionWeightInCaseLbs);
  writeNotNull('SecondaryDimensionWeightInCaseOz',
      instance.secondaryDimensionWeightInCaseOz);
  writeNotNull('SecondaryDimensionWidthFt', instance.secondaryDimensionWidthFt);
  writeNotNull('SecondaryDimensionWidthIn', instance.secondaryDimensionWidthIn);
  writeNotNull(
      'SecondaryDimensionHeightFt', instance.secondaryDimensionHeightFt);
  writeNotNull(
      'SecondaryDimensionHeightIn', instance.secondaryDimensionHeightIn);
  writeNotNull(
      'SecondaryDimensionLengthFt', instance.secondaryDimensionLengthFt);
  writeNotNull(
      'SecondaryDimensionLengthIn', instance.secondaryDimensionLengthIn);
  writeNotNull('SecondaryDimensionShipWeightKg',
      instance.secondaryDimensionShipWeightKg);
  writeNotNull(
      'SecondaryDimensionShipWeightG', instance.secondaryDimensionShipWeightG);
  writeNotNull('SecondaryDimensionWeightInCaseKg',
      instance.secondaryDimensionWeightInCaseKg);
  writeNotNull('SecondaryDimensionWeightInCaseG',
      instance.secondaryDimensionWeightInCaseG);
  writeNotNull('SecondaryDimensionWidthM', instance.secondaryDimensionWidthM);
  writeNotNull('SecondaryDimensionWidthCm', instance.secondaryDimensionWidthCm);
  writeNotNull('SecondaryDimensionHeightM', instance.secondaryDimensionHeightM);
  writeNotNull(
      'SecondaryDimensionHeightCm', instance.secondaryDimensionHeightCm);
  writeNotNull('SecondaryDimensionLengthM', instance.secondaryDimensionLengthM);
  writeNotNull(
      'SecondaryDimensionLengthCm', instance.secondaryDimensionLengthCm);
  writeNotNull('CountryOfOriginId', instance.countryOfOriginId);
  writeNotNull('CountryOfOrigin', instance.countryOfOrigin);
  writeNotNull('DisplayInSummaryModeWhenRateIsZero',
      instance.displayInSummaryModeWhenRateIsZero);
  writeNotNull('QcRequired', instance.qcRequired);
  writeNotNull('QcTime', instance.qcTime);
  writeNotNull('CopyAttributesAsNote', instance.copyAttributesAsNote);
  writeNotNull('TrackAssetUsage', instance.trackAssetUsage);
  writeNotNull('TrackLampUsage', instance.trackLampUsage);
  writeNotNull('TrackStrikes', instance.trackStrikes);
  writeNotNull('TrackCandles', instance.trackCandles);
  writeNotNull('LampCount', instance.lampCount);
  writeNotNull('MinimumFootCandles', instance.minimumFootCandles);
  writeNotNull('TrackSoftware', instance.trackSoftware);
  writeNotNull('SoftwareVersion', instance.softwareVersion);
  writeNotNull('SoftwareEffectiveDate', instance.softwareEffectiveDate);
  writeNotNull('WarehouseSpecificPackage', instance.warehouseSpecificPackage);
  writeNotNull('CompletePackagePrice', instance.completePackagePrice);
  writeNotNull('KitPackagePrice', instance.kitPackagePrice);
  writeNotNull(
      'SeparatePackageOnQuoteOrder', instance.separatePackageOnQuoteOrder);
  writeNotNull('ContainerId', instance.containerId);
  writeNotNull(
      'ContainerScannableInventoryId', instance.containerScannableInventoryId);
  writeNotNull('ContainerScannableICode', instance.containerScannableICode);
  writeNotNull(
      'ContainerScannableDescription', instance.containerScannableDescription);
  writeNotNull('AutomaticallyRebuildContainerAtCheckIn',
      instance.automaticallyRebuildContainerAtCheckIn);
  writeNotNull('AutomaticallyRebuildContainerAtTransferIn',
      instance.automaticallyRebuildContainerAtTransferIn);
  writeNotNull('ContainerStagingRule', instance.containerStagingRule);
  writeNotNull('ExcludeContainedItemsFromAvailability',
      instance.excludeContainedItemsFromAvailability);
  writeNotNull('UseContainerNumber', instance.useContainerNumber);
  writeNotNull(
      'ContainerPackingListBehavior', instance.containerPackingListBehavior);
  writeNotNull('InventoryTypeIsWardrobe', instance.inventoryTypeIsWardrobe);
  writeNotNull('InventoryTypeIsSets', instance.inventoryTypeIsSets);
  writeNotNull('PatternId', instance.patternId);
  writeNotNull('Pattern', instance.pattern);
  writeNotNull('PeriodId', instance.periodId);
  writeNotNull('Period', instance.period);
  writeNotNull('MaterialId', instance.materialId);
  writeNotNull('Material', instance.material);
  writeNotNull('GenderId', instance.genderId);
  writeNotNull('Gender', instance.gender);
  writeNotNull('LabelId', instance.labelId);
  writeNotNull('Label', instance.label);
  writeNotNull('WardrobeSize', instance.wardrobeSize);
  writeNotNull('WardrobePieceCount', instance.wardrobePieceCount);
  writeNotNull('Dyed', instance.dyed);
  writeNotNull('WardrobeSourceId', instance.wardrobeSourceId);
  writeNotNull('WardrobeSource', instance.wardrobeSource);
  writeNotNull('WardrobeCareId', instance.wardrobeCareId);
  writeNotNull('WardrobeCare', instance.wardrobeCare);
  writeNotNull('CleaningFeeAmount', instance.cleaningFeeAmount);
  writeNotNull(
      'WardrobeDetailedDescription', instance.wardrobeDetailedDescription);
  writeNotNull('WebDetailedDescription', instance.webDetailedDescription);
  writeNotNull('OverrideSystemDefaultRevenueAllocationBehavior',
      instance.overrideSystemDefaultRevenueAllocationBehavior);
  writeNotNull(
      'AllocateRevenueForAccessories', instance.allocateRevenueForAccessories);
  writeNotNull('PackageRevenueCalculationFormula',
      instance.packageRevenueCalculationFormula);
  writeNotNull('IsHazardousMaterial', instance.isHazardousMaterial);
  writeNotNull('DescriptionWithAkas', instance.descriptionWithAkas);
  writeNotNull('CostCalculation', instance.costCalculation);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('QuantityIn', instance.quantityIn);
  writeNotNull('QuantityStaged', instance.quantityStaged);
  writeNotNull('QuantityOut', instance.quantityOut);
  writeNotNull('QuantityInContainer', instance.quantityInContainer);
  writeNotNull('QuantityInRepair', instance.quantityInRepair);
  writeNotNull('QuantityInTransit', instance.quantityInTransit);
  writeNotNull('QuantityOnTruck', instance.quantityOnTruck);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('AvailFor', instance.availFor);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('SubCategoryCount', instance.subCategoryCount);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('SubCategory', instance.subCategory);
  writeNotNull('Classification', instance.classification);
  writeNotNull('ClassificationDescription', instance.classificationDescription);
  writeNotNull('ClassificationColor', instance.classificationColor);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('Unit', instance.unit);
  writeNotNull('UnitType', instance.unitType);
  writeNotNull('NonDiscountable', instance.nonDiscountable);
  writeNotNull(
      'OverrideProfitAndLossCategory', instance.overrideProfitAndLossCategory);
  writeNotNull('ProfitAndLossCategoryId', instance.profitAndLossCategoryId);
  writeNotNull('ProfitAndLossCategory', instance.profitAndLossCategory);
  writeNotNull('AutoCopyNotesToQuoteOrder', instance.autoCopyNotesToQuoteOrder);
  writeNotNull('Note', instance.note);
  writeNotNull('PrintNoteOnInContract', instance.printNoteOnInContract);
  writeNotNull('PrintNoteOnOutContract', instance.printNoteOnOutContract);
  writeNotNull(
      'PrintNoteOnReceiveContract', instance.printNoteOnReceiveContract);
  writeNotNull('PrintNoteOnReturnContract', instance.printNoteOnReturnContract);
  writeNotNull('PrintNoteOnInvoice', instance.printNoteOnInvoice);
  writeNotNull('PrintNoteOnOrder', instance.printNoteOnOrder);
  writeNotNull('PrintNoteOnPickList', instance.printNoteOnPickList);
  writeNotNull('PrintNoteOnPO', instance.printNoteOnPO);
  writeNotNull('PrintNoteOnQuote', instance.printNoteOnQuote);
  writeNotNull('PrintNoteOnReturnList', instance.printNoteOnReturnList);
  writeNotNull('PrintNoteOnPoReceiveList', instance.printNoteOnPoReceiveList);
  writeNotNull('PrintNoteOnPoReturnList', instance.printNoteOnPoReturnList);
  writeNotNull('AssetAccountId', instance.assetAccountId);
  writeNotNull('AssetAccountNo', instance.assetAccountNo);
  writeNotNull('AssetAccountDescription', instance.assetAccountDescription);
  writeNotNull('IncomeAccountId', instance.incomeAccountId);
  writeNotNull('IncomeAccountNo', instance.incomeAccountNo);
  writeNotNull('IncomeAccountDescription', instance.incomeAccountDescription);
  writeNotNull('SubIncomeAccountId', instance.subIncomeAccountId);
  writeNotNull('SubIncomeAccountNo', instance.subIncomeAccountNo);
  writeNotNull(
      'SubIncomeAccountDescription', instance.subIncomeAccountDescription);
  writeNotNull(
      'ConsignmentIncomeAccountId', instance.consignmentIncomeAccountId);
  writeNotNull(
      'ConsignmentIncomeAccountNo', instance.consignmentIncomeAccountNo);
  writeNotNull('ConsignmentIncomeAccountDescription',
      instance.consignmentIncomeAccountDescription);
  writeNotNull('LdIncomeAccountId', instance.ldIncomeAccountId);
  writeNotNull('LdIncomeAccountNo', instance.ldIncomeAccountNo);
  writeNotNull(
      'LdIncomeAccountDescription', instance.ldIncomeAccountDescription);
  writeNotNull(
      'EquipmentSaleIncomeAccountId', instance.equipmentSaleIncomeAccountId);
  writeNotNull(
      'EquipmentSaleIncomeAccountNo', instance.equipmentSaleIncomeAccountNo);
  writeNotNull('EquipmentSaleIncomeAccountDescription',
      instance.equipmentSaleIncomeAccountDescription);
  writeNotNull('ExpenseAccountId', instance.expenseAccountId);
  writeNotNull('ExpenseAccountNo', instance.expenseAccountNo);
  writeNotNull('ExpenseAccountDescription', instance.expenseAccountDescription);
  writeNotNull('CostOfGoodsSoldExpenseAccountId',
      instance.costOfGoodsSoldExpenseAccountId);
  writeNotNull('CostOfGoodsSoldExpenseAccountNo',
      instance.costOfGoodsSoldExpenseAccountNo);
  writeNotNull('CostOfGoodsSoldExpenseAccountDescription',
      instance.costOfGoodsSoldExpenseAccountDescription);
  writeNotNull('CostOfGoodsRentedExpenseAccountId',
      instance.costOfGoodsRentedExpenseAccountId);
  writeNotNull('CostOfGoodsRentedExpenseAccountNo',
      instance.costOfGoodsRentedExpenseAccountNo);
  writeNotNull('CostOfGoodsRentedExpenseAccountDescription',
      instance.costOfGoodsRentedExpenseAccountDescription);
  writeNotNull(
      'DepreciationExpenseAccountId', instance.depreciationExpenseAccountId);
  writeNotNull(
      'DepreciationExpenseAccountNo', instance.depreciationExpenseAccountNo);
  writeNotNull('DepreciationExpenseAccountDescription',
      instance.depreciationExpenseAccountDescription);
  writeNotNull('AccumulatedDepreciationExpenseAccountId',
      instance.accumulatedDepreciationExpenseAccountId);
  writeNotNull('AccumulatedDepreciationExpenseAccountNo',
      instance.accumulatedDepreciationExpenseAccountNo);
  writeNotNull('AccumulatedDepreciationExpenseAccountDescription',
      instance.accumulatedDepreciationExpenseAccountDescription);
  writeNotNull('OriginalShowId', instance.originalShowId);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('ManifestShippingContainer', instance.manifestShippingContainer);
  writeNotNull('ManifestStandAloneItem', instance.manifestStandAloneItem);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull(
      'Warehouses', instance.warehouses?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryRentalInventoryRentalInventoryDocument
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRentalInventoryRentalInventoryDocument(
          inventoryId: json['InventoryId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentToJson(
        WebApiModulesInventoryRentalInventoryRentalInventoryDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPostRequest
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPostRequest(
          inventoryId: json['InventoryId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPostRequestToJson(
        WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPostRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPutRequest
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPutRequest(
          inventoryId: json['InventoryId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPutRequestToJson(
        WebApiModulesInventoryRentalInventoryRentalInventoryDocumentPutRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesInventoryRepairRepair _$WebApiModulesInventoryRepairRepairFromJson(
        Map<String, dynamic> json) =>
    WebApiModulesInventoryRepairRepair(
      repairId: json['RepairId'] as String?,
      locationId: json['LocationId'] as String?,
      location: json['Location'] as String?,
      billingLocationId: json['BillingLocationId'] as String?,
      billingLocation: json['BillingLocation'] as String?,
      warehouseId: json['WarehouseId'] as String?,
      itemWarehouseId: json['ItemWarehouseId'] as String?,
      warehouse: json['Warehouse'] as String?,
      warehouseCode: json['WarehouseCode'] as String?,
      billingWarehouseId: json['BillingWarehouseId'] as String?,
      billingWarehouse: json['BillingWarehouse'] as String?,
      departmentId: json['DepartmentId'] as String?,
      department: json['Department'] as String?,
      inventoryTypeId: json['InventoryTypeId'] as String?,
      inventoryType: json['InventoryType'] as String?,
      pendingRepair: json['PendingRepair'] as bool?,
      repairNumber: json['RepairNumber'] as String?,
      repairNumberColor: json['RepairNumberColor'] as String?,
      repairDate: json['RepairDate'] as String?,
      outsideRepair: json['OutsideRepair'] as bool?,
      outsideRepairPoNumber: json['OutsideRepairPoNumber'] as String?,
      itemId: json['ItemId'] as String?,
      barCode: json['BarCode'] as String?,
      serialNumber: json['SerialNumber'] as String?,
      rfId: json['RfId'] as String?,
      barCodeColor: json['BarCodeColor'] as String?,
      inventoryId: json['InventoryId'] as String?,
      availFor: json['AvailFor'] as String?,
      availForDisplay: json['AvailForDisplay'] as String?,
      iCode: json['ICode'] as String?,
      iCodeColor: json['ICodeColor'] as String?,
      itemDescription: json['ItemDescription'] as String?,
      quantity: json['Quantity'] as int?,
      quantityColor: json['QuantityColor'] as String?,
      damageDealId: json['DamageDealId'] as String?,
      damageDeal: json['DamageDeal'] as String?,
      damageDealColor: json['DamageDealColor'] as String?,
      damageOrderId: json['DamageOrderId'] as String?,
      damageOrderNumber: json['DamageOrderNumber'] as String?,
      damageOrderDescription: json['DamageOrderDescription'] as String?,
      damageContractId: json['DamageContractId'] as String?,
      damageContractNumber: json['DamageContractNumber'] as String?,
      damageContractDate: json['DamageContractDate'] as String?,
      damageScannedById: json['DamageScannedById'] as String?,
      damageScannedBy: json['DamageScannedBy'] as String?,
      lossAndDamageOrderId: json['LossAndDamageOrderId'] as String?,
      lossAndDamageOrderNumber: json['LossAndDamageOrderNumber'] as String?,
      lossAndDamageOrderDescription:
          json['LossAndDamageOrderDescription'] as String?,
      chargeOrderId: json['ChargeOrderId'] as String?,
      chargeOrderNumber: json['ChargeOrderNumber'] as String?,
      chargeOrderDescription: json['ChargeOrderDescription'] as String?,
      chargeInvoiceId: json['ChargeInvoiceId'] as String?,
      chargeInvoiceNumber: json['ChargeInvoiceNumber'] as String?,
      chargeInvoiceDescription: json['ChargeInvoiceDescription'] as String?,
      taxOptionId: json['TaxOptionId'] as String?,
      taxOption: json['TaxOption'] as String?,
      taxId: json['TaxId'] as String?,
      rentalTaxRate1: (json['RentalTaxRate1'] as num?)?.toDouble(),
      salesTaxRate1: (json['SalesTaxRate1'] as num?)?.toDouble(),
      laborTaxRate1: (json['LaborTaxRate1'] as num?)?.toDouble(),
      rentalTaxRate2: (json['RentalTaxRate2'] as num?)?.toDouble(),
      salesTaxRate2: (json['SalesTaxRate2'] as num?)?.toDouble(),
      laborTaxRate2: (json['LaborTaxRate2'] as num?)?.toDouble(),
      status: json['Status'] as String?,
      statusColor: json['StatusColor'] as String?,
      statusDate: json['StatusDate'] as String?,
      billable: json['Billable'] as bool?,
      billableDisplay: json['BillableDisplay'] as String?,
      notBilled: json['NotBilled'] as bool?,
      priority: json['Priority'] as String?,
      priorityDescription: json['PriorityDescription'] as String?,
      priorityColor: json['PriorityColor'] as String?,
      repairType: json['RepairType'] as String?,
      poPending: json['PoPending'] as bool?,
      poNumber: json['PoNumber'] as String?,
      damage: json['Damage'] as String?,
      correction: json['Correction'] as String?,
      released: json['Released'] as bool?,
      releasedQuantity: (json['ReleasedQuantity'] as num?)?.toDouble(),
      transferId: json['TransferId'] as String?,
      transferredFromWarehouseId: json['TransferredFromWarehouseId'] as String?,
      dueDate: json['DueDate'] as String?,
      estimateByUserId: json['EstimateByUserId'] as String?,
      estimateBy: json['EstimateBy'] as String?,
      estimateDate: json['EstimateDate'] as String?,
      completeByUserId: json['CompleteByUserId'] as String?,
      completeBy: json['CompleteBy'] as String?,
      completeDate: json['CompleteDate'] as String?,
      inputDate: json['InputDate'] as String?,
      inputByUserId: json['InputByUserId'] as String?,
      repairItemStatusId: json['RepairItemStatusId'] as String?,
      repairItemStatus: json['RepairItemStatus'] as String?,
      currencyId: json['CurrencyId'] as String?,
      officeLocationDefaultCurrencyId:
          json['OfficeLocationDefaultCurrencyId'] as String?,
      currencyCode: json['CurrencyCode'] as String?,
      currencySymbol: json['CurrencySymbol'] as String?,
      currencyColor: json['CurrencyColor'] as String?,
      notes: json['Notes'] as String?,
      inactive: json['Inactive'] as bool?,
      qcRequired: json['QcRequired'] as bool?,
      autoCompleteQC: json['AutoCompleteQC'] as bool?,
      qcNote: json['QcNote'] as String?,
      conditionId: json['ConditionId'] as String?,
      condition: json['Condition'] as String?,
      costExtended: (json['CostExtended'] as num?)?.toDouble(),
      costTax: (json['CostTax'] as num?)?.toDouble(),
      costTotal: (json['CostTotal'] as num?)?.toDouble(),
      partsExtended: (json['PartsExtended'] as num?)?.toDouble(),
      partsTax: (json['PartsTax'] as num?)?.toDouble(),
      partsTotal: (json['PartsTotal'] as num?)?.toDouble(),
      totalRepairExtended: (json['TotalRepairExtended'] as num?)?.toDouble(),
      totalRepairTax: (json['TotalRepairTax'] as num?)?.toDouble(),
      totalRepairTotal: (json['TotalRepairTotal'] as num?)?.toDouble(),
      dateStamp: json['DateStamp'] as String?,
      auditNote: json['AuditNote'] as String?,
      recordTitle: json['RecordTitle'] as String?,
      fields: (json['_Fields'] as List<dynamic>?)
              ?.map((e) => FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                  .fromJson(e as Map<String, dynamic>))
              .toList() ??
          [],
      custom: (json['_Custom'] as List<dynamic>?)
              ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                  e as Map<String, dynamic>))
              .toList() ??
          [],
      defaultFieldAttributes:
          (json['_DefaultFieldAttributes'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
    );

Map<String, dynamic> _$WebApiModulesInventoryRepairRepairToJson(
    WebApiModulesInventoryRepairRepair instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('RepairId', instance.repairId);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('Location', instance.location);
  writeNotNull('BillingLocationId', instance.billingLocationId);
  writeNotNull('BillingLocation', instance.billingLocation);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('ItemWarehouseId', instance.itemWarehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('BillingWarehouseId', instance.billingWarehouseId);
  writeNotNull('BillingWarehouse', instance.billingWarehouse);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('PendingRepair', instance.pendingRepair);
  writeNotNull('RepairNumber', instance.repairNumber);
  writeNotNull('RepairNumberColor', instance.repairNumberColor);
  writeNotNull('RepairDate', instance.repairDate);
  writeNotNull('OutsideRepair', instance.outsideRepair);
  writeNotNull('OutsideRepairPoNumber', instance.outsideRepairPoNumber);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('RfId', instance.rfId);
  writeNotNull('BarCodeColor', instance.barCodeColor);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('AvailFor', instance.availFor);
  writeNotNull('AvailForDisplay', instance.availForDisplay);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeColor', instance.iCodeColor);
  writeNotNull('ItemDescription', instance.itemDescription);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('QuantityColor', instance.quantityColor);
  writeNotNull('DamageDealId', instance.damageDealId);
  writeNotNull('DamageDeal', instance.damageDeal);
  writeNotNull('DamageDealColor', instance.damageDealColor);
  writeNotNull('DamageOrderId', instance.damageOrderId);
  writeNotNull('DamageOrderNumber', instance.damageOrderNumber);
  writeNotNull('DamageOrderDescription', instance.damageOrderDescription);
  writeNotNull('DamageContractId', instance.damageContractId);
  writeNotNull('DamageContractNumber', instance.damageContractNumber);
  writeNotNull('DamageContractDate', instance.damageContractDate);
  writeNotNull('DamageScannedById', instance.damageScannedById);
  writeNotNull('DamageScannedBy', instance.damageScannedBy);
  writeNotNull('LossAndDamageOrderId', instance.lossAndDamageOrderId);
  writeNotNull('LossAndDamageOrderNumber', instance.lossAndDamageOrderNumber);
  writeNotNull(
      'LossAndDamageOrderDescription', instance.lossAndDamageOrderDescription);
  writeNotNull('ChargeOrderId', instance.chargeOrderId);
  writeNotNull('ChargeOrderNumber', instance.chargeOrderNumber);
  writeNotNull('ChargeOrderDescription', instance.chargeOrderDescription);
  writeNotNull('ChargeInvoiceId', instance.chargeInvoiceId);
  writeNotNull('ChargeInvoiceNumber', instance.chargeInvoiceNumber);
  writeNotNull('ChargeInvoiceDescription', instance.chargeInvoiceDescription);
  writeNotNull('TaxOptionId', instance.taxOptionId);
  writeNotNull('TaxOption', instance.taxOption);
  writeNotNull('TaxId', instance.taxId);
  writeNotNull('RentalTaxRate1', instance.rentalTaxRate1);
  writeNotNull('SalesTaxRate1', instance.salesTaxRate1);
  writeNotNull('LaborTaxRate1', instance.laborTaxRate1);
  writeNotNull('RentalTaxRate2', instance.rentalTaxRate2);
  writeNotNull('SalesTaxRate2', instance.salesTaxRate2);
  writeNotNull('LaborTaxRate2', instance.laborTaxRate2);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusColor', instance.statusColor);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('Billable', instance.billable);
  writeNotNull('BillableDisplay', instance.billableDisplay);
  writeNotNull('NotBilled', instance.notBilled);
  writeNotNull('Priority', instance.priority);
  writeNotNull('PriorityDescription', instance.priorityDescription);
  writeNotNull('PriorityColor', instance.priorityColor);
  writeNotNull('RepairType', instance.repairType);
  writeNotNull('PoPending', instance.poPending);
  writeNotNull('PoNumber', instance.poNumber);
  writeNotNull('Damage', instance.damage);
  writeNotNull('Correction', instance.correction);
  writeNotNull('Released', instance.released);
  writeNotNull('ReleasedQuantity', instance.releasedQuantity);
  writeNotNull('TransferId', instance.transferId);
  writeNotNull(
      'TransferredFromWarehouseId', instance.transferredFromWarehouseId);
  writeNotNull('DueDate', instance.dueDate);
  writeNotNull('EstimateByUserId', instance.estimateByUserId);
  writeNotNull('EstimateBy', instance.estimateBy);
  writeNotNull('EstimateDate', instance.estimateDate);
  writeNotNull('CompleteByUserId', instance.completeByUserId);
  writeNotNull('CompleteBy', instance.completeBy);
  writeNotNull('CompleteDate', instance.completeDate);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('InputByUserId', instance.inputByUserId);
  writeNotNull('RepairItemStatusId', instance.repairItemStatusId);
  writeNotNull('RepairItemStatus', instance.repairItemStatus);
  writeNotNull('CurrencyId', instance.currencyId);
  writeNotNull('OfficeLocationDefaultCurrencyId',
      instance.officeLocationDefaultCurrencyId);
  writeNotNull('CurrencyCode', instance.currencyCode);
  writeNotNull('CurrencySymbol', instance.currencySymbol);
  writeNotNull('CurrencyColor', instance.currencyColor);
  writeNotNull('Notes', instance.notes);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('QcRequired', instance.qcRequired);
  writeNotNull('AutoCompleteQC', instance.autoCompleteQC);
  writeNotNull('QcNote', instance.qcNote);
  writeNotNull('ConditionId', instance.conditionId);
  writeNotNull('Condition', instance.condition);
  writeNotNull('CostExtended', instance.costExtended);
  writeNotNull('CostTax', instance.costTax);
  writeNotNull('CostTotal', instance.costTotal);
  writeNotNull('PartsExtended', instance.partsExtended);
  writeNotNull('PartsTax', instance.partsTax);
  writeNotNull('PartsTotal', instance.partsTotal);
  writeNotNull('TotalRepairExtended', instance.totalRepairExtended);
  writeNotNull('TotalRepairTax', instance.totalRepairTax);
  writeNotNull('TotalRepairTotal', instance.totalRepairTotal);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryRepairRepairDocument
    _$WebApiModulesInventoryRepairRepairDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRepairRepairDocument(
          repairId: json['RepairId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesInventoryRepairRepairDocumentToJson(
    WebApiModulesInventoryRepairRepairDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('RepairId', instance.repairId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventoryRepairRepairDocumentPostRequest
    _$WebApiModulesInventoryRepairRepairDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRepairRepairDocumentPostRequest(
          repairId: json['RepairId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryRepairRepairDocumentPostRequestToJson(
        WebApiModulesInventoryRepairRepairDocumentPostRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('RepairId', instance.repairId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesInventoryRepairRepairDocumentPutRequest
    _$WebApiModulesInventoryRepairRepairDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRepairRepairDocumentPutRequest(
          repairId: json['RepairId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryRepairRepairDocumentPutRequestToJson(
        WebApiModulesInventoryRepairRepairDocumentPutRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('RepairId', instance.repairId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesInventoryRepairRepairReleaseItemsResponse
    _$WebApiModulesInventoryRepairRepairReleaseItemsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRepairRepairReleaseItemsResponse(
          repair: json['repair'] == null
              ? null
              : WebApiModulesInventoryRepairRepair.fromJson(
                  json['repair'] as Map<String, dynamic>),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryRepairRepairReleaseItemsResponseToJson(
        WebApiModulesInventoryRepairRepairReleaseItemsResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('repair', instance.repair?.toJson());
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryRepairToggleRepairCompleteResponse
    _$WebApiModulesInventoryRepairToggleRepairCompleteResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRepairToggleRepairCompleteResponse(
          repair: json['repair'] == null
              ? null
              : WebApiModulesInventoryRepairRepair.fromJson(
                  json['repair'] as Map<String, dynamic>),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryRepairToggleRepairCompleteResponseToJson(
        WebApiModulesInventoryRepairToggleRepairCompleteResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('repair', instance.repair?.toJson());
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryRepairToggleRepairEstimateResponse
    _$WebApiModulesInventoryRepairToggleRepairEstimateResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRepairToggleRepairEstimateResponse(
          repair: json['repair'] == null
              ? null
              : WebApiModulesInventoryRepairRepair.fromJson(
                  json['repair'] as Map<String, dynamic>),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventoryRepairToggleRepairEstimateResponseToJson(
        WebApiModulesInventoryRepairToggleRepairEstimateResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('repair', instance.repair?.toJson());
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryRepairVoidRepairResponse
    _$WebApiModulesInventoryRepairVoidRepairResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventoryRepairVoidRepairResponse(
          repair: json['repair'] == null
              ? null
              : WebApiModulesInventoryRepairRepair.fromJson(
                  json['repair'] as Map<String, dynamic>),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic> _$WebApiModulesInventoryRepairVoidRepairResponseToJson(
    WebApiModulesInventoryRepairVoidRepairResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('repair', instance.repair?.toJson());
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesInventoryRetiredRetired
    _$WebApiModulesInventoryRetiredRetiredFromJson(Map<String, dynamic> json) =>
        WebApiModulesInventoryRetiredRetired(
          retiredId: json['RetiredId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          barCode: json['BarCode'] as String?,
          itemId: json['ItemId'] as String?,
          serialNumber: json['SerialNumber'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          agreementNumber: json['AgreementNumber'] as String?,
          retiredDate: json['RetiredDate'] as String?,
          retiredReason: json['RetiredReason'] as String?,
          retiredReasonType: json['RetiredReasonType'] as String?,
          retiredBy: json['RetiredBy'] as String?,
          retiredReasonId: json['RetiredReasonId'] as String?,
          retiredByUserId: json['RetiredByUserId'] as String?,
          retiredNotes: json['RetiredNotes'] as String?,
          retiredQuantity: (json['RetiredQuantity'] as num?)?.toDouble(),
          unretiredQuantity: (json['UnretiredQuantity'] as num?)?.toDouble(),
          lostOrderId: json['LostOrderId'] as String?,
          lostOrderNumber: json['LostOrderNumber'] as String?,
          lostName: json['LostName'] as String?,
          lostAddress1: json['LostAddress1'] as String?,
          lostAddress2: json['LostAddress2'] as String?,
          lostCity: json['LostCity'] as String?,
          lostState: json['LostState'] as String?,
          lostZipCode: json['LostZipCode'] as String?,
          lostPhone: json['LostPhone'] as String?,
          lostCountryId: json['LostCountryId'] as String?,
          lostCountry: json['LostCountry'] as String?,
          soldToOrderId: json['SoldToOrderId'] as String?,
          soldToOrderItemId: json['SoldToOrderItemId'] as String?,
          soldToOrderNumber: json['SoldToOrderNumber'] as String?,
          soldDate: json['SoldDate'] as String?,
          soldAmount: (json['SoldAmount'] as num?)?.toDouble(),
          soldToName: json['SoldToName'] as String?,
          soldToAddress1: json['SoldToAddress1'] as String?,
          soldToAddress2: json['SoldToAddress2'] as String?,
          soldToCity: json['SoldToCity'] as String?,
          soldToState: json['SoldToState'] as String?,
          soldToZipCode: json['SoldToZipCode'] as String?,
          soldToPhone: json['SoldToPhone'] as String?,
          soldToCountryId: json['SoldToCountryId'] as String?,
          soldToCountry: json['SoldToCountry'] as String?,
          soldCurrencyId: json['SoldCurrencyId'] as String?,
          soldCurrency: json['SoldCurrency'] as String?,
          soldCurrencyCode: json['SoldCurrencyCode'] as String?,
          soldCurrencySymbol: json['SoldCurrencySymbol'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          replacementInventoryId: json['ReplacementInventoryId'] as String?,
          replacementItemId: json['ReplacementItemId'] as String?,
          changeICode: json['ChangeICode'] as bool?,
          donatedOrderId: json['DonatedOrderId'] as String?,
          donatedOrderNumber: json['DonatedOrderNumber'] as String?,
          donatedDate: json['DonatedDate'] as String?,
          donatedToName: json['DonatedToName'] as String?,
          donatedToAddress1: json['DonatedToAddress1'] as String?,
          donatedToAddress2: json['DonatedToAddress2'] as String?,
          donatedToCity: json['DonatedToCity'] as String?,
          donatedToState: json['DonatedToState'] as String?,
          donatedToZipCode: json['DonatedToZipCode'] as String?,
          donatedToPhone: json['DonatedToPhone'] as String?,
          donatedToCountryId: json['DonatedToCountryId'] as String?,
          donatedToCountry: json['DonatedToCountry'] as String?,
          donatedCurrencyId: json['DonatedCurrencyId'] as String?,
          donatedCurrency: json['DonatedCurrency'] as String?,
          donatedCurrencyCode: json['DonatedCurrencyCode'] as String?,
          donatedCurrencySymbol: json['DonatedCurrencySymbol'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesInventoryRetiredRetiredToJson(
    WebApiModulesInventoryRetiredRetired instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('RetiredId', instance.retiredId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('BarCode', instance.barCode);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('AgreementNumber', instance.agreementNumber);
  writeNotNull('RetiredDate', instance.retiredDate);
  writeNotNull('RetiredReason', instance.retiredReason);
  writeNotNull('RetiredReasonType', instance.retiredReasonType);
  writeNotNull('RetiredBy', instance.retiredBy);
  writeNotNull('RetiredReasonId', instance.retiredReasonId);
  writeNotNull('RetiredByUserId', instance.retiredByUserId);
  writeNotNull('RetiredNotes', instance.retiredNotes);
  writeNotNull('RetiredQuantity', instance.retiredQuantity);
  writeNotNull('UnretiredQuantity', instance.unretiredQuantity);
  writeNotNull('LostOrderId', instance.lostOrderId);
  writeNotNull('LostOrderNumber', instance.lostOrderNumber);
  writeNotNull('LostName', instance.lostName);
  writeNotNull('LostAddress1', instance.lostAddress1);
  writeNotNull('LostAddress2', instance.lostAddress2);
  writeNotNull('LostCity', instance.lostCity);
  writeNotNull('LostState', instance.lostState);
  writeNotNull('LostZipCode', instance.lostZipCode);
  writeNotNull('LostPhone', instance.lostPhone);
  writeNotNull('LostCountryId', instance.lostCountryId);
  writeNotNull('LostCountry', instance.lostCountry);
  writeNotNull('SoldToOrderId', instance.soldToOrderId);
  writeNotNull('SoldToOrderItemId', instance.soldToOrderItemId);
  writeNotNull('SoldToOrderNumber', instance.soldToOrderNumber);
  writeNotNull('SoldDate', instance.soldDate);
  writeNotNull('SoldAmount', instance.soldAmount);
  writeNotNull('SoldToName', instance.soldToName);
  writeNotNull('SoldToAddress1', instance.soldToAddress1);
  writeNotNull('SoldToAddress2', instance.soldToAddress2);
  writeNotNull('SoldToCity', instance.soldToCity);
  writeNotNull('SoldToState', instance.soldToState);
  writeNotNull('SoldToZipCode', instance.soldToZipCode);
  writeNotNull('SoldToPhone', instance.soldToPhone);
  writeNotNull('SoldToCountryId', instance.soldToCountryId);
  writeNotNull('SoldToCountry', instance.soldToCountry);
  writeNotNull('SoldCurrencyId', instance.soldCurrencyId);
  writeNotNull('SoldCurrency', instance.soldCurrency);
  writeNotNull('SoldCurrencyCode', instance.soldCurrencyCode);
  writeNotNull('SoldCurrencySymbol', instance.soldCurrencySymbol);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('ReplacementInventoryId', instance.replacementInventoryId);
  writeNotNull('ReplacementItemId', instance.replacementItemId);
  writeNotNull('ChangeICode', instance.changeICode);
  writeNotNull('DonatedOrderId', instance.donatedOrderId);
  writeNotNull('DonatedOrderNumber', instance.donatedOrderNumber);
  writeNotNull('DonatedDate', instance.donatedDate);
  writeNotNull('DonatedToName', instance.donatedToName);
  writeNotNull('DonatedToAddress1', instance.donatedToAddress1);
  writeNotNull('DonatedToAddress2', instance.donatedToAddress2);
  writeNotNull('DonatedToCity', instance.donatedToCity);
  writeNotNull('DonatedToState', instance.donatedToState);
  writeNotNull('DonatedToZipCode', instance.donatedToZipCode);
  writeNotNull('DonatedToPhone', instance.donatedToPhone);
  writeNotNull('DonatedToCountryId', instance.donatedToCountryId);
  writeNotNull('DonatedToCountry', instance.donatedToCountry);
  writeNotNull('DonatedCurrencyId', instance.donatedCurrencyId);
  writeNotNull('DonatedCurrency', instance.donatedCurrency);
  writeNotNull('DonatedCurrencyCode', instance.donatedCurrencyCode);
  writeNotNull('DonatedCurrencySymbol', instance.donatedCurrencySymbol);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventorySalesInventorySalesInventory
    _$WebApiModulesInventorySalesInventorySalesInventoryFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventorySalesInventorySalesInventory(
          price: (json['Price'] as num?)?.toDouble(),
          defaultCost: (json['DefaultCost'] as num?)?.toDouble(),
          averageCost: (json['AverageCost'] as num?)?.toDouble(),
          inventoryId: json['InventoryId'] as String?,
          inventoryTypeId: json['InventoryTypeId'] as String?,
          inventoryType: json['InventoryType'] as String?,
          availableFrom: json['AvailableFrom'] as String?,
          trackedBy: json['TrackedBy'] as String?,
          confirmTrackedBy: json['ConfirmTrackedBy'] as String?,
          rank: json['Rank'] as String?,
          manufacturerPartNumber: json['ManufacturerPartNumber'] as String?,
          manufacturerId: json['ManufacturerId'] as String?,
          manufacturer: json['Manufacturer'] as String?,
          manufacturerUrl: json['ManufacturerUrl'] as String?,
          excludeImageFromQuoteOrderPrint:
              json['ExcludeImageFromQuoteOrderPrint'] as bool?,
          noAvailabilityCheck: json['NoAvailabilityCheck'] as bool?,
          availabilityManuallyResolveConflicts:
              json['AvailabilityManuallyResolveConflicts'] as bool?,
          sendAvailabilityAlert: json['SendAvailabilityAlert'] as bool?,
          primaryDimensionUniqueId: json['PrimaryDimensionUniqueId'] as String?,
          defaultImperialMetric: json['DefaultImperialMetric'] as String?,
          primaryDimensionDescription:
              json['PrimaryDimensionDescription'] as String?,
          primaryDimensionShipWeightLbs:
              json['PrimaryDimensionShipWeightLbs'] as int?,
          primaryDimensionShipWeightOz:
              json['PrimaryDimensionShipWeightOz'] as int?,
          primaryDimensionWeightInCaseLbs:
              json['PrimaryDimensionWeightInCaseLbs'] as int?,
          primaryDimensionWeightInCaseOz:
              json['PrimaryDimensionWeightInCaseOz'] as int?,
          primaryDimensionWidthFt: json['PrimaryDimensionWidthFt'] as int?,
          primaryDimensionWidthIn: json['PrimaryDimensionWidthIn'] as int?,
          primaryDimensionHeightFt: json['PrimaryDimensionHeightFt'] as int?,
          primaryDimensionHeightIn: json['PrimaryDimensionHeightIn'] as int?,
          primaryDimensionLengthFt: json['PrimaryDimensionLengthFt'] as int?,
          primaryDimensionLengthIn: json['PrimaryDimensionLengthIn'] as int?,
          primaryDimensionShipWeightKg:
              json['PrimaryDimensionShipWeightKg'] as int?,
          primaryDimensionShipWeightG:
              json['PrimaryDimensionShipWeightG'] as int?,
          primaryDimensionWeightInCaseKg:
              json['PrimaryDimensionWeightInCaseKg'] as int?,
          primaryDimensionWeightInCaseG:
              json['PrimaryDimensionWeightInCaseG'] as int?,
          primaryDimensionWidthM: json['PrimaryDimensionWidthM'] as int?,
          primaryDimensionWidthCm: json['PrimaryDimensionWidthCm'] as int?,
          primaryDimensionHeightM: json['PrimaryDimensionHeightM'] as int?,
          primaryDimensionHeightCm: json['PrimaryDimensionHeightCm'] as int?,
          primaryDimensionLengthM: json['PrimaryDimensionLengthM'] as int?,
          primaryDimensionLengthCm: json['PrimaryDimensionLengthCm'] as int?,
          hasSecondaryDimensions: json['HasSecondaryDimensions'] as bool?,
          secondaryDimensionUniqueId:
              json['SecondaryDimensionUniqueId'] as String?,
          secondaryDimensionDescription:
              json['SecondaryDimensionDescription'] as String?,
          secondaryDimensionShipWeightLbs:
              json['SecondaryDimensionShipWeightLbs'] as int?,
          secondaryDimensionShipWeightOz:
              json['SecondaryDimensionShipWeightOz'] as int?,
          secondaryDimensionWeightInCaseLbs:
              json['SecondaryDimensionWeightInCaseLbs'] as int?,
          secondaryDimensionWeightInCaseOz:
              json['SecondaryDimensionWeightInCaseOz'] as int?,
          secondaryDimensionWidthFt: json['SecondaryDimensionWidthFt'] as int?,
          secondaryDimensionWidthIn: json['SecondaryDimensionWidthIn'] as int?,
          secondaryDimensionHeightFt:
              json['SecondaryDimensionHeightFt'] as int?,
          secondaryDimensionHeightIn:
              json['SecondaryDimensionHeightIn'] as int?,
          secondaryDimensionLengthFt:
              json['SecondaryDimensionLengthFt'] as int?,
          secondaryDimensionLengthIn:
              json['SecondaryDimensionLengthIn'] as int?,
          secondaryDimensionShipWeightKg:
              json['SecondaryDimensionShipWeightKg'] as int?,
          secondaryDimensionShipWeightG:
              json['SecondaryDimensionShipWeightG'] as int?,
          secondaryDimensionWeightInCaseKg:
              json['SecondaryDimensionWeightInCaseKg'] as int?,
          secondaryDimensionWeightInCaseG:
              json['SecondaryDimensionWeightInCaseG'] as int?,
          secondaryDimensionWidthM: json['SecondaryDimensionWidthM'] as int?,
          secondaryDimensionWidthCm: json['SecondaryDimensionWidthCm'] as int?,
          secondaryDimensionHeightM: json['SecondaryDimensionHeightM'] as int?,
          secondaryDimensionHeightCm:
              json['SecondaryDimensionHeightCm'] as int?,
          secondaryDimensionLengthM: json['SecondaryDimensionLengthM'] as int?,
          secondaryDimensionLengthCm:
              json['SecondaryDimensionLengthCm'] as int?,
          countryOfOriginId: json['CountryOfOriginId'] as String?,
          countryOfOrigin: json['CountryOfOrigin'] as String?,
          displayInSummaryModeWhenRateIsZero:
              json['DisplayInSummaryModeWhenRateIsZero'] as bool?,
          qcRequired: json['QcRequired'] as bool?,
          qcTime: json['QcTime'] as String?,
          copyAttributesAsNote: json['CopyAttributesAsNote'] as bool?,
          trackAssetUsage: json['TrackAssetUsage'] as bool?,
          trackLampUsage: json['TrackLampUsage'] as bool?,
          trackStrikes: json['TrackStrikes'] as bool?,
          trackCandles: json['TrackCandles'] as bool?,
          lampCount: json['LampCount'] as int?,
          minimumFootCandles: json['MinimumFootCandles'] as int?,
          trackSoftware: json['TrackSoftware'] as bool?,
          softwareVersion: json['SoftwareVersion'] as String?,
          softwareEffectiveDate: json['SoftwareEffectiveDate'] as String?,
          warehouseSpecificPackage: json['WarehouseSpecificPackage'] as bool?,
          completePackagePrice: json['CompletePackagePrice'] as String?,
          kitPackagePrice: json['KitPackagePrice'] as String?,
          separatePackageOnQuoteOrder:
              json['SeparatePackageOnQuoteOrder'] as bool?,
          containerId: json['ContainerId'] as String?,
          containerScannableInventoryId:
              json['ContainerScannableInventoryId'] as String?,
          containerScannableICode: json['ContainerScannableICode'] as String?,
          containerScannableDescription:
              json['ContainerScannableDescription'] as String?,
          automaticallyRebuildContainerAtCheckIn:
              json['AutomaticallyRebuildContainerAtCheckIn'] as bool?,
          automaticallyRebuildContainerAtTransferIn:
              json['AutomaticallyRebuildContainerAtTransferIn'] as bool?,
          containerStagingRule: json['ContainerStagingRule'] as String?,
          excludeContainedItemsFromAvailability:
              json['ExcludeContainedItemsFromAvailability'] as bool?,
          useContainerNumber: json['UseContainerNumber'] as bool?,
          containerPackingListBehavior:
              json['ContainerPackingListBehavior'] as String?,
          inventoryTypeIsWardrobe: json['InventoryTypeIsWardrobe'] as bool?,
          inventoryTypeIsSets: json['InventoryTypeIsSets'] as bool?,
          patternId: json['PatternId'] as String?,
          pattern: json['Pattern'] as String?,
          periodId: json['PeriodId'] as String?,
          period: json['Period'] as String?,
          materialId: json['MaterialId'] as String?,
          material: json['Material'] as String?,
          genderId: json['GenderId'] as String?,
          gender: json['Gender'] as String?,
          labelId: json['LabelId'] as String?,
          label: json['Label'] as String?,
          wardrobeSize: json['WardrobeSize'] as String?,
          wardrobePieceCount: json['WardrobePieceCount'] as int?,
          dyed: json['Dyed'] as bool?,
          wardrobeSourceId: json['WardrobeSourceId'] as String?,
          wardrobeSource: json['WardrobeSource'] as String?,
          wardrobeCareId: json['WardrobeCareId'] as String?,
          wardrobeCare: json['WardrobeCare'] as String?,
          cleaningFeeAmount: (json['CleaningFeeAmount'] as num?)?.toDouble(),
          wardrobeDetailedDescription:
              json['WardrobeDetailedDescription'] as String?,
          webDetailedDescription: json['WebDetailedDescription'] as String?,
          overrideSystemDefaultRevenueAllocationBehavior:
              json['OverrideSystemDefaultRevenueAllocationBehavior'] as bool?,
          allocateRevenueForAccessories:
              json['AllocateRevenueForAccessories'] as bool?,
          packageRevenueCalculationFormula:
              json['PackageRevenueCalculationFormula'] as String?,
          isHazardousMaterial: json['IsHazardousMaterial'] as bool?,
          descriptionWithAkas: json['DescriptionWithAkas'] as String?,
          costCalculation: json['CostCalculation'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
          quantityIn: (json['QuantityIn'] as num?)?.toDouble(),
          quantityStaged: (json['QuantityStaged'] as num?)?.toDouble(),
          quantityOut: (json['QuantityOut'] as num?)?.toDouble(),
          quantityInContainer:
              (json['QuantityInContainer'] as num?)?.toDouble(),
          quantityInRepair: (json['QuantityInRepair'] as num?)?.toDouble(),
          quantityInTransit: (json['QuantityInTransit'] as num?)?.toDouble(),
          quantityOnTruck: (json['QuantityOnTruck'] as num?)?.toDouble(),
          aisleLocation: json['AisleLocation'] as String?,
          shelfLocation: json['ShelfLocation'] as String?,
          taxable: json['Taxable'] as bool?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          availFor: json['AvailFor'] as String?,
          categoryId: json['CategoryId'] as String?,
          category: json['Category'] as String?,
          subCategoryCount: json['SubCategoryCount'] as int?,
          subCategoryId: json['SubCategoryId'] as String?,
          subCategory: json['SubCategory'] as String?,
          classification: json['Classification'] as String?,
          classificationDescription:
              json['ClassificationDescription'] as String?,
          classificationColor: json['ClassificationColor'] as String?,
          unitId: json['UnitId'] as String?,
          unit: json['Unit'] as String?,
          unitType: json['UnitType'] as String?,
          nonDiscountable: json['NonDiscountable'] as bool?,
          overrideProfitAndLossCategory:
              json['OverrideProfitAndLossCategory'] as bool?,
          profitAndLossCategoryId: json['ProfitAndLossCategoryId'] as String?,
          profitAndLossCategory: json['ProfitAndLossCategory'] as String?,
          autoCopyNotesToQuoteOrder: json['AutoCopyNotesToQuoteOrder'] as bool?,
          note: json['Note'] as String?,
          printNoteOnInContract: json['PrintNoteOnInContract'] as bool?,
          printNoteOnOutContract: json['PrintNoteOnOutContract'] as bool?,
          printNoteOnReceiveContract:
              json['PrintNoteOnReceiveContract'] as bool?,
          printNoteOnReturnContract: json['PrintNoteOnReturnContract'] as bool?,
          printNoteOnInvoice: json['PrintNoteOnInvoice'] as bool?,
          printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
          printNoteOnPickList: json['PrintNoteOnPickList'] as bool?,
          printNoteOnPO: json['PrintNoteOnPO'] as bool?,
          printNoteOnQuote: json['PrintNoteOnQuote'] as bool?,
          printNoteOnReturnList: json['PrintNoteOnReturnList'] as bool?,
          printNoteOnPoReceiveList: json['PrintNoteOnPoReceiveList'] as bool?,
          printNoteOnPoReturnList: json['PrintNoteOnPoReturnList'] as bool?,
          assetAccountId: json['AssetAccountId'] as String?,
          assetAccountNo: json['AssetAccountNo'] as String?,
          assetAccountDescription: json['AssetAccountDescription'] as String?,
          incomeAccountId: json['IncomeAccountId'] as String?,
          incomeAccountNo: json['IncomeAccountNo'] as String?,
          incomeAccountDescription: json['IncomeAccountDescription'] as String?,
          subIncomeAccountId: json['SubIncomeAccountId'] as String?,
          subIncomeAccountNo: json['SubIncomeAccountNo'] as String?,
          subIncomeAccountDescription:
              json['SubIncomeAccountDescription'] as String?,
          consignmentIncomeAccountId:
              json['ConsignmentIncomeAccountId'] as String?,
          consignmentIncomeAccountNo:
              json['ConsignmentIncomeAccountNo'] as String?,
          consignmentIncomeAccountDescription:
              json['ConsignmentIncomeAccountDescription'] as String?,
          ldIncomeAccountId: json['LdIncomeAccountId'] as String?,
          ldIncomeAccountNo: json['LdIncomeAccountNo'] as String?,
          ldIncomeAccountDescription:
              json['LdIncomeAccountDescription'] as String?,
          equipmentSaleIncomeAccountId:
              json['EquipmentSaleIncomeAccountId'] as String?,
          equipmentSaleIncomeAccountNo:
              json['EquipmentSaleIncomeAccountNo'] as String?,
          equipmentSaleIncomeAccountDescription:
              json['EquipmentSaleIncomeAccountDescription'] as String?,
          expenseAccountId: json['ExpenseAccountId'] as String?,
          expenseAccountNo: json['ExpenseAccountNo'] as String?,
          expenseAccountDescription:
              json['ExpenseAccountDescription'] as String?,
          costOfGoodsSoldExpenseAccountId:
              json['CostOfGoodsSoldExpenseAccountId'] as String?,
          costOfGoodsSoldExpenseAccountNo:
              json['CostOfGoodsSoldExpenseAccountNo'] as String?,
          costOfGoodsSoldExpenseAccountDescription:
              json['CostOfGoodsSoldExpenseAccountDescription'] as String?,
          costOfGoodsRentedExpenseAccountId:
              json['CostOfGoodsRentedExpenseAccountId'] as String?,
          costOfGoodsRentedExpenseAccountNo:
              json['CostOfGoodsRentedExpenseAccountNo'] as String?,
          costOfGoodsRentedExpenseAccountDescription:
              json['CostOfGoodsRentedExpenseAccountDescription'] as String?,
          depreciationExpenseAccountId:
              json['DepreciationExpenseAccountId'] as String?,
          depreciationExpenseAccountNo:
              json['DepreciationExpenseAccountNo'] as String?,
          depreciationExpenseAccountDescription:
              json['DepreciationExpenseAccountDescription'] as String?,
          accumulatedDepreciationExpenseAccountId:
              json['AccumulatedDepreciationExpenseAccountId'] as String?,
          accumulatedDepreciationExpenseAccountNo:
              json['AccumulatedDepreciationExpenseAccountNo'] as String?,
          accumulatedDepreciationExpenseAccountDescription:
              json['AccumulatedDepreciationExpenseAccountDescription']
                  as String?,
          originalShowId: json['OriginalShowId'] as String?,
          inputDate: json['InputDate'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          manifestShippingContainer: json['ManifestShippingContainer'] as bool?,
          manifestStandAloneItem: json['ManifestStandAloneItem'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesInventorySalesInventorySalesInventoryToJson(
    WebApiModulesInventorySalesInventorySalesInventory instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Price', instance.price);
  writeNotNull('DefaultCost', instance.defaultCost);
  writeNotNull('AverageCost', instance.averageCost);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('InventoryTypeId', instance.inventoryTypeId);
  writeNotNull('InventoryType', instance.inventoryType);
  writeNotNull('AvailableFrom', instance.availableFrom);
  writeNotNull('TrackedBy', instance.trackedBy);
  writeNotNull('ConfirmTrackedBy', instance.confirmTrackedBy);
  writeNotNull('Rank', instance.rank);
  writeNotNull('ManufacturerPartNumber', instance.manufacturerPartNumber);
  writeNotNull('ManufacturerId', instance.manufacturerId);
  writeNotNull('Manufacturer', instance.manufacturer);
  writeNotNull('ManufacturerUrl', instance.manufacturerUrl);
  writeNotNull('ExcludeImageFromQuoteOrderPrint',
      instance.excludeImageFromQuoteOrderPrint);
  writeNotNull('NoAvailabilityCheck', instance.noAvailabilityCheck);
  writeNotNull('AvailabilityManuallyResolveConflicts',
      instance.availabilityManuallyResolveConflicts);
  writeNotNull('SendAvailabilityAlert', instance.sendAvailabilityAlert);
  writeNotNull('PrimaryDimensionUniqueId', instance.primaryDimensionUniqueId);
  writeNotNull('DefaultImperialMetric', instance.defaultImperialMetric);
  writeNotNull(
      'PrimaryDimensionDescription', instance.primaryDimensionDescription);
  writeNotNull(
      'PrimaryDimensionShipWeightLbs', instance.primaryDimensionShipWeightLbs);
  writeNotNull(
      'PrimaryDimensionShipWeightOz', instance.primaryDimensionShipWeightOz);
  writeNotNull('PrimaryDimensionWeightInCaseLbs',
      instance.primaryDimensionWeightInCaseLbs);
  writeNotNull('PrimaryDimensionWeightInCaseOz',
      instance.primaryDimensionWeightInCaseOz);
  writeNotNull('PrimaryDimensionWidthFt', instance.primaryDimensionWidthFt);
  writeNotNull('PrimaryDimensionWidthIn', instance.primaryDimensionWidthIn);
  writeNotNull('PrimaryDimensionHeightFt', instance.primaryDimensionHeightFt);
  writeNotNull('PrimaryDimensionHeightIn', instance.primaryDimensionHeightIn);
  writeNotNull('PrimaryDimensionLengthFt', instance.primaryDimensionLengthFt);
  writeNotNull('PrimaryDimensionLengthIn', instance.primaryDimensionLengthIn);
  writeNotNull(
      'PrimaryDimensionShipWeightKg', instance.primaryDimensionShipWeightKg);
  writeNotNull(
      'PrimaryDimensionShipWeightG', instance.primaryDimensionShipWeightG);
  writeNotNull('PrimaryDimensionWeightInCaseKg',
      instance.primaryDimensionWeightInCaseKg);
  writeNotNull(
      'PrimaryDimensionWeightInCaseG', instance.primaryDimensionWeightInCaseG);
  writeNotNull('PrimaryDimensionWidthM', instance.primaryDimensionWidthM);
  writeNotNull('PrimaryDimensionWidthCm', instance.primaryDimensionWidthCm);
  writeNotNull('PrimaryDimensionHeightM', instance.primaryDimensionHeightM);
  writeNotNull('PrimaryDimensionHeightCm', instance.primaryDimensionHeightCm);
  writeNotNull('PrimaryDimensionLengthM', instance.primaryDimensionLengthM);
  writeNotNull('PrimaryDimensionLengthCm', instance.primaryDimensionLengthCm);
  writeNotNull('HasSecondaryDimensions', instance.hasSecondaryDimensions);
  writeNotNull(
      'SecondaryDimensionUniqueId', instance.secondaryDimensionUniqueId);
  writeNotNull(
      'SecondaryDimensionDescription', instance.secondaryDimensionDescription);
  writeNotNull('SecondaryDimensionShipWeightLbs',
      instance.secondaryDimensionShipWeightLbs);
  writeNotNull('SecondaryDimensionShipWeightOz',
      instance.secondaryDimensionShipWeightOz);
  writeNotNull('SecondaryDimensionWeightInCaseLbs',
      instance.secondaryDimensionWeightInCaseLbs);
  writeNotNull('SecondaryDimensionWeightInCaseOz',
      instance.secondaryDimensionWeightInCaseOz);
  writeNotNull('SecondaryDimensionWidthFt', instance.secondaryDimensionWidthFt);
  writeNotNull('SecondaryDimensionWidthIn', instance.secondaryDimensionWidthIn);
  writeNotNull(
      'SecondaryDimensionHeightFt', instance.secondaryDimensionHeightFt);
  writeNotNull(
      'SecondaryDimensionHeightIn', instance.secondaryDimensionHeightIn);
  writeNotNull(
      'SecondaryDimensionLengthFt', instance.secondaryDimensionLengthFt);
  writeNotNull(
      'SecondaryDimensionLengthIn', instance.secondaryDimensionLengthIn);
  writeNotNull('SecondaryDimensionShipWeightKg',
      instance.secondaryDimensionShipWeightKg);
  writeNotNull(
      'SecondaryDimensionShipWeightG', instance.secondaryDimensionShipWeightG);
  writeNotNull('SecondaryDimensionWeightInCaseKg',
      instance.secondaryDimensionWeightInCaseKg);
  writeNotNull('SecondaryDimensionWeightInCaseG',
      instance.secondaryDimensionWeightInCaseG);
  writeNotNull('SecondaryDimensionWidthM', instance.secondaryDimensionWidthM);
  writeNotNull('SecondaryDimensionWidthCm', instance.secondaryDimensionWidthCm);
  writeNotNull('SecondaryDimensionHeightM', instance.secondaryDimensionHeightM);
  writeNotNull(
      'SecondaryDimensionHeightCm', instance.secondaryDimensionHeightCm);
  writeNotNull('SecondaryDimensionLengthM', instance.secondaryDimensionLengthM);
  writeNotNull(
      'SecondaryDimensionLengthCm', instance.secondaryDimensionLengthCm);
  writeNotNull('CountryOfOriginId', instance.countryOfOriginId);
  writeNotNull('CountryOfOrigin', instance.countryOfOrigin);
  writeNotNull('DisplayInSummaryModeWhenRateIsZero',
      instance.displayInSummaryModeWhenRateIsZero);
  writeNotNull('QcRequired', instance.qcRequired);
  writeNotNull('QcTime', instance.qcTime);
  writeNotNull('CopyAttributesAsNote', instance.copyAttributesAsNote);
  writeNotNull('TrackAssetUsage', instance.trackAssetUsage);
  writeNotNull('TrackLampUsage', instance.trackLampUsage);
  writeNotNull('TrackStrikes', instance.trackStrikes);
  writeNotNull('TrackCandles', instance.trackCandles);
  writeNotNull('LampCount', instance.lampCount);
  writeNotNull('MinimumFootCandles', instance.minimumFootCandles);
  writeNotNull('TrackSoftware', instance.trackSoftware);
  writeNotNull('SoftwareVersion', instance.softwareVersion);
  writeNotNull('SoftwareEffectiveDate', instance.softwareEffectiveDate);
  writeNotNull('WarehouseSpecificPackage', instance.warehouseSpecificPackage);
  writeNotNull('CompletePackagePrice', instance.completePackagePrice);
  writeNotNull('KitPackagePrice', instance.kitPackagePrice);
  writeNotNull(
      'SeparatePackageOnQuoteOrder', instance.separatePackageOnQuoteOrder);
  writeNotNull('ContainerId', instance.containerId);
  writeNotNull(
      'ContainerScannableInventoryId', instance.containerScannableInventoryId);
  writeNotNull('ContainerScannableICode', instance.containerScannableICode);
  writeNotNull(
      'ContainerScannableDescription', instance.containerScannableDescription);
  writeNotNull('AutomaticallyRebuildContainerAtCheckIn',
      instance.automaticallyRebuildContainerAtCheckIn);
  writeNotNull('AutomaticallyRebuildContainerAtTransferIn',
      instance.automaticallyRebuildContainerAtTransferIn);
  writeNotNull('ContainerStagingRule', instance.containerStagingRule);
  writeNotNull('ExcludeContainedItemsFromAvailability',
      instance.excludeContainedItemsFromAvailability);
  writeNotNull('UseContainerNumber', instance.useContainerNumber);
  writeNotNull(
      'ContainerPackingListBehavior', instance.containerPackingListBehavior);
  writeNotNull('InventoryTypeIsWardrobe', instance.inventoryTypeIsWardrobe);
  writeNotNull('InventoryTypeIsSets', instance.inventoryTypeIsSets);
  writeNotNull('PatternId', instance.patternId);
  writeNotNull('Pattern', instance.pattern);
  writeNotNull('PeriodId', instance.periodId);
  writeNotNull('Period', instance.period);
  writeNotNull('MaterialId', instance.materialId);
  writeNotNull('Material', instance.material);
  writeNotNull('GenderId', instance.genderId);
  writeNotNull('Gender', instance.gender);
  writeNotNull('LabelId', instance.labelId);
  writeNotNull('Label', instance.label);
  writeNotNull('WardrobeSize', instance.wardrobeSize);
  writeNotNull('WardrobePieceCount', instance.wardrobePieceCount);
  writeNotNull('Dyed', instance.dyed);
  writeNotNull('WardrobeSourceId', instance.wardrobeSourceId);
  writeNotNull('WardrobeSource', instance.wardrobeSource);
  writeNotNull('WardrobeCareId', instance.wardrobeCareId);
  writeNotNull('WardrobeCare', instance.wardrobeCare);
  writeNotNull('CleaningFeeAmount', instance.cleaningFeeAmount);
  writeNotNull(
      'WardrobeDetailedDescription', instance.wardrobeDetailedDescription);
  writeNotNull('WebDetailedDescription', instance.webDetailedDescription);
  writeNotNull('OverrideSystemDefaultRevenueAllocationBehavior',
      instance.overrideSystemDefaultRevenueAllocationBehavior);
  writeNotNull(
      'AllocateRevenueForAccessories', instance.allocateRevenueForAccessories);
  writeNotNull('PackageRevenueCalculationFormula',
      instance.packageRevenueCalculationFormula);
  writeNotNull('IsHazardousMaterial', instance.isHazardousMaterial);
  writeNotNull('DescriptionWithAkas', instance.descriptionWithAkas);
  writeNotNull('CostCalculation', instance.costCalculation);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('QuantityIn', instance.quantityIn);
  writeNotNull('QuantityStaged', instance.quantityStaged);
  writeNotNull('QuantityOut', instance.quantityOut);
  writeNotNull('QuantityInContainer', instance.quantityInContainer);
  writeNotNull('QuantityInRepair', instance.quantityInRepair);
  writeNotNull('QuantityInTransit', instance.quantityInTransit);
  writeNotNull('QuantityOnTruck', instance.quantityOnTruck);
  writeNotNull('AisleLocation', instance.aisleLocation);
  writeNotNull('ShelfLocation', instance.shelfLocation);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('AvailFor', instance.availFor);
  writeNotNull('CategoryId', instance.categoryId);
  writeNotNull('Category', instance.category);
  writeNotNull('SubCategoryCount', instance.subCategoryCount);
  writeNotNull('SubCategoryId', instance.subCategoryId);
  writeNotNull('SubCategory', instance.subCategory);
  writeNotNull('Classification', instance.classification);
  writeNotNull('ClassificationDescription', instance.classificationDescription);
  writeNotNull('ClassificationColor', instance.classificationColor);
  writeNotNull('UnitId', instance.unitId);
  writeNotNull('Unit', instance.unit);
  writeNotNull('UnitType', instance.unitType);
  writeNotNull('NonDiscountable', instance.nonDiscountable);
  writeNotNull(
      'OverrideProfitAndLossCategory', instance.overrideProfitAndLossCategory);
  writeNotNull('ProfitAndLossCategoryId', instance.profitAndLossCategoryId);
  writeNotNull('ProfitAndLossCategory', instance.profitAndLossCategory);
  writeNotNull('AutoCopyNotesToQuoteOrder', instance.autoCopyNotesToQuoteOrder);
  writeNotNull('Note', instance.note);
  writeNotNull('PrintNoteOnInContract', instance.printNoteOnInContract);
  writeNotNull('PrintNoteOnOutContract', instance.printNoteOnOutContract);
  writeNotNull(
      'PrintNoteOnReceiveContract', instance.printNoteOnReceiveContract);
  writeNotNull('PrintNoteOnReturnContract', instance.printNoteOnReturnContract);
  writeNotNull('PrintNoteOnInvoice', instance.printNoteOnInvoice);
  writeNotNull('PrintNoteOnOrder', instance.printNoteOnOrder);
  writeNotNull('PrintNoteOnPickList', instance.printNoteOnPickList);
  writeNotNull('PrintNoteOnPO', instance.printNoteOnPO);
  writeNotNull('PrintNoteOnQuote', instance.printNoteOnQuote);
  writeNotNull('PrintNoteOnReturnList', instance.printNoteOnReturnList);
  writeNotNull('PrintNoteOnPoReceiveList', instance.printNoteOnPoReceiveList);
  writeNotNull('PrintNoteOnPoReturnList', instance.printNoteOnPoReturnList);
  writeNotNull('AssetAccountId', instance.assetAccountId);
  writeNotNull('AssetAccountNo', instance.assetAccountNo);
  writeNotNull('AssetAccountDescription', instance.assetAccountDescription);
  writeNotNull('IncomeAccountId', instance.incomeAccountId);
  writeNotNull('IncomeAccountNo', instance.incomeAccountNo);
  writeNotNull('IncomeAccountDescription', instance.incomeAccountDescription);
  writeNotNull('SubIncomeAccountId', instance.subIncomeAccountId);
  writeNotNull('SubIncomeAccountNo', instance.subIncomeAccountNo);
  writeNotNull(
      'SubIncomeAccountDescription', instance.subIncomeAccountDescription);
  writeNotNull(
      'ConsignmentIncomeAccountId', instance.consignmentIncomeAccountId);
  writeNotNull(
      'ConsignmentIncomeAccountNo', instance.consignmentIncomeAccountNo);
  writeNotNull('ConsignmentIncomeAccountDescription',
      instance.consignmentIncomeAccountDescription);
  writeNotNull('LdIncomeAccountId', instance.ldIncomeAccountId);
  writeNotNull('LdIncomeAccountNo', instance.ldIncomeAccountNo);
  writeNotNull(
      'LdIncomeAccountDescription', instance.ldIncomeAccountDescription);
  writeNotNull(
      'EquipmentSaleIncomeAccountId', instance.equipmentSaleIncomeAccountId);
  writeNotNull(
      'EquipmentSaleIncomeAccountNo', instance.equipmentSaleIncomeAccountNo);
  writeNotNull('EquipmentSaleIncomeAccountDescription',
      instance.equipmentSaleIncomeAccountDescription);
  writeNotNull('ExpenseAccountId', instance.expenseAccountId);
  writeNotNull('ExpenseAccountNo', instance.expenseAccountNo);
  writeNotNull('ExpenseAccountDescription', instance.expenseAccountDescription);
  writeNotNull('CostOfGoodsSoldExpenseAccountId',
      instance.costOfGoodsSoldExpenseAccountId);
  writeNotNull('CostOfGoodsSoldExpenseAccountNo',
      instance.costOfGoodsSoldExpenseAccountNo);
  writeNotNull('CostOfGoodsSoldExpenseAccountDescription',
      instance.costOfGoodsSoldExpenseAccountDescription);
  writeNotNull('CostOfGoodsRentedExpenseAccountId',
      instance.costOfGoodsRentedExpenseAccountId);
  writeNotNull('CostOfGoodsRentedExpenseAccountNo',
      instance.costOfGoodsRentedExpenseAccountNo);
  writeNotNull('CostOfGoodsRentedExpenseAccountDescription',
      instance.costOfGoodsRentedExpenseAccountDescription);
  writeNotNull(
      'DepreciationExpenseAccountId', instance.depreciationExpenseAccountId);
  writeNotNull(
      'DepreciationExpenseAccountNo', instance.depreciationExpenseAccountNo);
  writeNotNull('DepreciationExpenseAccountDescription',
      instance.depreciationExpenseAccountDescription);
  writeNotNull('AccumulatedDepreciationExpenseAccountId',
      instance.accumulatedDepreciationExpenseAccountId);
  writeNotNull('AccumulatedDepreciationExpenseAccountNo',
      instance.accumulatedDepreciationExpenseAccountNo);
  writeNotNull('AccumulatedDepreciationExpenseAccountDescription',
      instance.accumulatedDepreciationExpenseAccountDescription);
  writeNotNull('OriginalShowId', instance.originalShowId);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('ManifestShippingContainer', instance.manifestShippingContainer);
  writeNotNull('ManifestStandAloneItem', instance.manifestStandAloneItem);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventorySalesInventorySalesInventoryDocument
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventorySalesInventorySalesInventoryDocument(
          inventoryId: json['InventoryId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentToJson(
        WebApiModulesInventorySalesInventorySalesInventoryDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesInventorySalesInventorySalesInventoryDocumentPostRequest
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventorySalesInventorySalesInventoryDocumentPostRequest(
          inventoryId: json['InventoryId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentPostRequestToJson(
        WebApiModulesInventorySalesInventorySalesInventoryDocumentPostRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesInventorySalesInventorySalesInventoryDocumentPutRequest
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesInventorySalesInventorySalesInventoryDocumentPutRequest(
          inventoryId: json['InventoryId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesInventorySalesInventorySalesInventoryDocumentPutRequestToJson(
        WebApiModulesInventorySalesInventorySalesInventoryDocumentPutRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesSettingsDepartmentLocationDepartmentLocation
    _$WebApiModulesSettingsDepartmentLocationDepartmentLocationFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesSettingsDepartmentLocationDepartmentLocation(
          departmentId: json['DepartmentId'] as String?,
          locationId: json['LocationId'] as String?,
          department: json['Department'] as String?,
          location: json['Location'] as String?,
          defaultOrderTypeId: json['DefaultOrderTypeId'] as String?,
          defaultOrderType: json['DefaultOrderType'] as String?,
          inactive: json['Inactive'] as bool?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesSettingsDepartmentLocationDepartmentLocationToJson(
        WebApiModulesSettingsDepartmentLocationDepartmentLocation instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('Department', instance.department);
  writeNotNull('Location', instance.location);
  writeNotNull('DefaultOrderTypeId', instance.defaultOrderTypeId);
  writeNotNull('DefaultOrderType', instance.defaultOrderType);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatus
    _$WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatus(
          inventoryStatusId: json['InventoryStatusId'] as String?,
          inventoryStatus: json['InventoryStatus'] as String?,
          statusType: json['StatusType'] as String?,
          color: json['Color'] as String?,
          textColor: json['TextColor'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatusToJson(
        WebApiModulesSettingsInventorySettingsInventoryStatusInventoryStatus
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryStatusId', instance.inventoryStatusId);
  writeNotNull('InventoryStatus', instance.inventoryStatus);
  writeNotNull('StatusType', instance.statusType);
  writeNotNull('Color', instance.color);
  writeNotNull('TextColor', instance.textColor);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel
    _$WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModelFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel(
          locationId: json['LocationId'] as String?,
          location: json['Location'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModelToJson(
        WebApiModulesSettingsOfficeLocationSettingsOfficeLocationGetManyOfficeLocationModel
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('LocationId', instance.locationId);
  writeNotNull('Location', instance.location);
  return val;
}

WebApiModulesSettingsOfficeLocationSettingsOfficeLocationOfficeLocation
    _$WebApiModulesSettingsOfficeLocationSettingsOfficeLocationOfficeLocationFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesSettingsOfficeLocationSettingsOfficeLocationOfficeLocation(
          locationId: json['LocationId'] as String?,
          location: json['Location'] as String?,
          locationCode: json['LocationCode'] as String?,
          companyName: json['CompanyName'] as String?,
          federalId: json['FederalId'] as String?,
          address1: json['Address1'] as String?,
          address2: json['Address2'] as String?,
          city: json['City'] as String?,
          zipCode: json['ZipCode'] as String?,
          state: json['State'] as String?,
          countryId: json['CountryId'] as String?,
          country: json['Country'] as String?,
          phone: json['Phone'] as String?,
          fax: json['Fax'] as String?,
          email: json['Email'] as String?,
          webAddress: json['WebAddress'] as String?,
          remitToCompanyName: json['RemitToCompanyName'] as String?,
          remitToAddress1: json['RemitToAddress1'] as String?,
          remitToAddress2: json['RemitToAddress2'] as String?,
          remitToCity: json['RemitToCity'] as String?,
          remitToZip: json['RemitToZip'] as String?,
          remitToState: json['RemitToState'] as String?,
          remitToCountryId: json['RemitToCountryId'] as String?,
          remitToCountry: json['RemitToCountry'] as String?,
          remitToPhone: json['RemitToPhone'] as String?,
          remitToFax: json['RemitToFax'] as String?,
          remitToEmail: json['RemitToEmail'] as String?,
          rateType: json['RateType'] as String?,
          rateTypeDisplay: json['RateTypeDisplay'] as String?,
          color: json['Color'] as String?,
          defaultPurchasePoTypeId: json['DefaultPurchasePoTypeId'] as String?,
          defaultPurchasePoType: json['DefaultPurchasePoType'] as String?,
          glPrefix: json['GlPrefix'] as String?,
          glSuffix: json['GlSuffix'] as String?,
          useNumberPrefix: json['UseNumberPrefix'] as bool?,
          numberPrefix: json['NumberPrefix'] as String?,
          useRequisitionNumbers: json['UseRequisitionNumbers'] as bool?,
          useSameNumberForQuoteAndOrder:
              json['UseSameNumberForQuoteAndOrder'] as bool?,
          useSameNumberForAllExportBatches:
              json['UseSameNumberForAllExportBatches'] as bool?,
          userOrderNumberAndSuffixForInvoice:
              json['UserOrderNumberAndSuffixForInvoice'] as bool?,
          useHInHiatusInvoiceNumbers:
              json['UseHInHiatusInvoiceNumbers'] as bool?,
          defaultCurrencyId: json['DefaultCurrencyId'] as String?,
          defaultCurrencyCode: json['DefaultCurrencyCode'] as String?,
          defaultCurrency: json['DefaultCurrency'] as String?,
          defaultCurrencySymbol: json['DefaultCurrencySymbol'] as String?,
          tax1ReferenceName: json['Tax1ReferenceName'] as String?,
          tax1ReferenceNumber: json['Tax1ReferenceNumber'] as String?,
          tax2ReferenceName: json['Tax2ReferenceName'] as String?,
          tax2ReferenceNumber: json['Tax2ReferenceNumber'] as String?,
          disableCreditStatusMessages:
              json['DisableCreditStatusMessages'] as bool?,
          disableCreditThroughDateMessages:
              json['DisableCreditThroughDateMessages'] as bool?,
          disableInsuranceStatusMessages:
              json['DisableInsuranceStatusMessages'] as bool?,
          disableInsuranceThroughDateMessages:
              json['DisableInsuranceThroughDateMessages'] as bool?,
          warnIfTermsAndConditionsNotOnFile:
              json['WarnIfTermsAndConditionsNotOnFile'] as bool?,
          autoApplyDepletingDepositToInvoice:
              json['AutoApplyDepletingDepositToInvoice'] as bool?,
          depositReplacmentValuePercent:
              (json['DepositReplacmentValuePercent'] as num?)?.toDouble(),
          invoiceMessage: json['InvoiceMessage'] as String?,
          taxable: json['Taxable'] as bool?,
          useOrderLocationByDefault: json['UseOrderLocationByDefault'] as bool?,
          defaultTaxOptionId: json['DefaultTaxOptionId'] as String?,
          defaultTaxOption: json['DefaultTaxOption'] as String?,
          hoursOffset: json['HoursOffset'] as int?,
          currentServerTime: json['CurrentServerTime'] as String?,
          currentLocationTime: json['CurrentLocationTime'] as String?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesSettingsOfficeLocationSettingsOfficeLocationOfficeLocationToJson(
        WebApiModulesSettingsOfficeLocationSettingsOfficeLocationOfficeLocation
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('LocationId', instance.locationId);
  writeNotNull('Location', instance.location);
  writeNotNull('LocationCode', instance.locationCode);
  writeNotNull('CompanyName', instance.companyName);
  writeNotNull('FederalId', instance.federalId);
  writeNotNull('Address1', instance.address1);
  writeNotNull('Address2', instance.address2);
  writeNotNull('City', instance.city);
  writeNotNull('ZipCode', instance.zipCode);
  writeNotNull('State', instance.state);
  writeNotNull('CountryId', instance.countryId);
  writeNotNull('Country', instance.country);
  writeNotNull('Phone', instance.phone);
  writeNotNull('Fax', instance.fax);
  writeNotNull('Email', instance.email);
  writeNotNull('WebAddress', instance.webAddress);
  writeNotNull('RemitToCompanyName', instance.remitToCompanyName);
  writeNotNull('RemitToAddress1', instance.remitToAddress1);
  writeNotNull('RemitToAddress2', instance.remitToAddress2);
  writeNotNull('RemitToCity', instance.remitToCity);
  writeNotNull('RemitToZip', instance.remitToZip);
  writeNotNull('RemitToState', instance.remitToState);
  writeNotNull('RemitToCountryId', instance.remitToCountryId);
  writeNotNull('RemitToCountry', instance.remitToCountry);
  writeNotNull('RemitToPhone', instance.remitToPhone);
  writeNotNull('RemitToFax', instance.remitToFax);
  writeNotNull('RemitToEmail', instance.remitToEmail);
  writeNotNull('RateType', instance.rateType);
  writeNotNull('RateTypeDisplay', instance.rateTypeDisplay);
  writeNotNull('Color', instance.color);
  writeNotNull('DefaultPurchasePoTypeId', instance.defaultPurchasePoTypeId);
  writeNotNull('DefaultPurchasePoType', instance.defaultPurchasePoType);
  writeNotNull('GlPrefix', instance.glPrefix);
  writeNotNull('GlSuffix', instance.glSuffix);
  writeNotNull('UseNumberPrefix', instance.useNumberPrefix);
  writeNotNull('NumberPrefix', instance.numberPrefix);
  writeNotNull('UseRequisitionNumbers', instance.useRequisitionNumbers);
  writeNotNull(
      'UseSameNumberForQuoteAndOrder', instance.useSameNumberForQuoteAndOrder);
  writeNotNull('UseSameNumberForAllExportBatches',
      instance.useSameNumberForAllExportBatches);
  writeNotNull('UserOrderNumberAndSuffixForInvoice',
      instance.userOrderNumberAndSuffixForInvoice);
  writeNotNull(
      'UseHInHiatusInvoiceNumbers', instance.useHInHiatusInvoiceNumbers);
  writeNotNull('DefaultCurrencyId', instance.defaultCurrencyId);
  writeNotNull('DefaultCurrencyCode', instance.defaultCurrencyCode);
  writeNotNull('DefaultCurrency', instance.defaultCurrency);
  writeNotNull('DefaultCurrencySymbol', instance.defaultCurrencySymbol);
  writeNotNull('Tax1ReferenceName', instance.tax1ReferenceName);
  writeNotNull('Tax1ReferenceNumber', instance.tax1ReferenceNumber);
  writeNotNull('Tax2ReferenceName', instance.tax2ReferenceName);
  writeNotNull('Tax2ReferenceNumber', instance.tax2ReferenceNumber);
  writeNotNull(
      'DisableCreditStatusMessages', instance.disableCreditStatusMessages);
  writeNotNull('DisableCreditThroughDateMessages',
      instance.disableCreditThroughDateMessages);
  writeNotNull('DisableInsuranceStatusMessages',
      instance.disableInsuranceStatusMessages);
  writeNotNull('DisableInsuranceThroughDateMessages',
      instance.disableInsuranceThroughDateMessages);
  writeNotNull('WarnIfTermsAndConditionsNotOnFile',
      instance.warnIfTermsAndConditionsNotOnFile);
  writeNotNull('AutoApplyDepletingDepositToInvoice',
      instance.autoApplyDepletingDepositToInvoice);
  writeNotNull(
      'DepositReplacmentValuePercent', instance.depositReplacmentValuePercent);
  writeNotNull('InvoiceMessage', instance.invoiceMessage);
  writeNotNull('Taxable', instance.taxable);
  writeNotNull('UseOrderLocationByDefault', instance.useOrderLocationByDefault);
  writeNotNull('DefaultTaxOptionId', instance.defaultTaxOptionId);
  writeNotNull('DefaultTaxOption', instance.defaultTaxOption);
  writeNotNull('HoursOffset', instance.hoursOffset);
  writeNotNull('CurrentServerTime', instance.currentServerTime);
  writeNotNull('CurrentLocationTime', instance.currentLocationTime);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesSettingsOrderSettingsOrderTypeOrderType
    _$WebApiModulesSettingsOrderSettingsOrderTypeOrderTypeFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesSettingsOrderSettingsOrderTypeOrderType(
          orderTypeId: json['OrderTypeId'] as String?,
          orderType: json['OrderType'] as String?,
          ordType: json['OrdType'] as String?,
          defaultPickTime: json['DefaultPickTime'] as String?,
          defaultFromTime: json['DefaultFromTime'] as String?,
          defaultToTime: json['DefaultToTime'] as String?,
          dailyScheduleDefaultStartTime:
              json['DailyScheduleDefaultStartTime'] as String?,
          dailyScheduleDefaultStopTime:
              json['DailyScheduleDefaultStopTime'] as String?,
          isMasterSubOrderType: json['IsMasterSubOrderType'] as bool?,
          combineActivityTabs: json['CombineActivityTabs'] as bool?,
          defaultManualSort: json['DefaultManualSort'] as bool?,
          determineQuantitiesToBillBasedOn:
              json['DetermineQuantitiesToBillBasedOn'] as String?,
          useEstimatedDatesForBilling:
              json['UseEstimatedDatesForBilling'] as bool?,
          allowNesting: json['AllowNesting'] as bool?,
          rentalShowICode: json['RentalShowICode'] as bool?,
          rentalICodeWidth: json['RentalICodeWidth'] as int?,
          rentalShowDescription: json['RentalShowDescription'] as bool?,
          rentalDescriptionWidth: json['RentalDescriptionWidth'] as int?,
          rentalShowPickDate: json['RentalShowPickDate'] as bool?,
          rentalShowPickTime: json['RentalShowPickTime'] as bool?,
          rentalShowFromDate: json['RentalShowFromDate'] as bool?,
          rentalShowFromTime: json['RentalShowFromTime'] as bool?,
          rentalShowToDate: json['RentalShowToDate'] as bool?,
          rentalShowToTime: json['RentalShowToTime'] as bool?,
          rentalShowBillablePeriods: json['RentalShowBillablePeriods'] as bool?,
          rentalShowEpisodes: json['RentalShowEpisodes'] as bool?,
          rentalShowSubQuantity: json['RentalShowSubQuantity'] as bool?,
          rentalShowAvailableQuantity:
              json['RentalShowAvailableQuantity'] as bool?,
          rentalShowConflictDate: json['RentalShowConflictDate'] as bool?,
          rentalShowAvailableQuantityRegion:
              json['RentalShowAvailableQuantityRegion'] as bool?,
          rentalShowConflictDateRegion:
              json['RentalShowConflictDateRegion'] as bool?,
          rentalShowAvailableQuantityAllWarehouses:
              json['RentalShowAvailableQuantityAllWarehouses'] as bool?,
          rentalShowConflictDateAllWarehouses:
              json['RentalShowConflictDateAllWarehouses'] as bool?,
          rentalShowReservedItems: json['RentalShowReservedItems'] as bool?,
          rentalShowConsignmentQuantity:
              json['RentalShowConsignmentQuantity'] as bool?,
          rentalShowConsignmentAvailableQuantity:
              json['RentalShowConsignmentAvailableQuantity'] as bool?,
          rentalShowConsignmentConflictDate:
              json['RentalShowConsignmentConflictDate'] as bool?,
          rentalShowRate: json['RentalShowRate'] as bool?,
          rentalShowDaysPerWeek: json['RentalShowDaysPerWeek'] as bool?,
          rentalShowPremiumPercent: json['RentalShowPremiumPercent'] as bool?,
          rentalShowUnit: json['RentalShowUnit'] as bool?,
          rentalShowCost: json['RentalShowCost'] as bool?,
          rentalShowPeriodCostExtended:
              json['RentalShowPeriodCostExtended'] as bool?,
          rentalShowDiscountPercent: json['RentalShowDiscountPercent'] as bool?,
          rentalShowMarkupPercent: json['RentalShowMarkupPercent'] as bool?,
          rentalShowMarginPercent: json['RentalShowMarginPercent'] as bool?,
          rentalShowUnitDiscountAmount:
              json['RentalShowUnitDiscountAmount'] as bool?,
          rentalShowUnitExtended: json['RentalShowUnitExtended'] as bool?,
          rentalShowWeeklyDiscountAmount:
              json['RentalShowWeeklyDiscountAmount'] as bool?,
          rentalShowWeeklyExtended: json['RentalShowWeeklyExtended'] as bool?,
          rentalShowEpisodeExtended: json['RentalShowEpisodeExtended'] as bool?,
          rentalShowEpisodeDiscountAmount:
              json['RentalShowEpisodeDiscountAmount'] as bool?,
          rentalShowMonthlyDiscountAmount:
              json['RentalShowMonthlyDiscountAmount'] as bool?,
          rentalShowMonthlyExtended: json['RentalShowMonthlyExtended'] as bool?,
          rentalShowPeriodDiscountAmount:
              json['RentalShowPeriodDiscountAmount'] as bool?,
          rentalShowPeriodExtended: json['RentalShowPeriodExtended'] as bool?,
          rentalShowWarehouse: json['RentalShowWarehouse'] as bool?,
          rentalShowTaxable: json['RentalShowTaxable'] as bool?,
          rentalShowNotes: json['RentalShowNotes'] as bool?,
          rentalShowReturnToWarehouse:
              json['RentalShowReturnToWarehouse'] as bool?,
          rentalShowConsignor: json['RentalShowConsignor'] as bool?,
          rentalDateStamp: json['RentalDateStamp'] as String?,
          allowRoundTripRentals: json['AllowRoundTripRentals'] as bool?,
          salesShowICode: json['SalesShowICode'] as bool?,
          salesICodeWidth: json['SalesICodeWidth'] as int?,
          salesShowDescription: json['SalesShowDescription'] as bool?,
          salesDescriptionWidth: json['SalesDescriptionWidth'] as int?,
          salesShowManufacturerPartNumber:
              json['SalesShowManufacturerPartNumber'] as bool?,
          salesManufacturerPartNumberWidth:
              json['SalesManufacturerPartNumberWidth'] as int?,
          salesShowPickDate: json['SalesShowPickDate'] as bool?,
          salesShowPickTime: json['SalesShowPickTime'] as bool?,
          salesShowFromDate: json['SalesShowFromDate'] as bool?,
          salesShowFromTime: json['SalesShowFromTime'] as bool?,
          salesShowSubQuantity: json['SalesShowSubQuantity'] as bool?,
          salesShowCost: json['SalesShowCost'] as bool?,
          salesShowRate: json['SalesShowRate'] as bool?,
          salesShowAvailableQuantity:
              json['SalesShowAvailableQuantity'] as bool?,
          salesShowConflictDate: json['SalesShowConflictDate'] as bool?,
          salesShowAvailableQuantityRegion:
              json['SalesShowAvailableQuantityRegion'] as bool?,
          salesShowConflictDateRegion:
              json['SalesShowConflictDateRegion'] as bool?,
          salesShowAvailableQuantityAllWarehouses:
              json['SalesShowAvailableQuantityAllWarehouses'] as bool?,
          salesShowConflictDateAllWarehouses:
              json['SalesShowConflictDateAllWarehouses'] as bool?,
          salesShowMarkupPercent: json['SalesShowMarkupPercent'] as bool?,
          salesShowMarginPercent: json['SalesShowMarginPercent'] as bool?,
          salesShowUnit: json['SalesShowUnit'] as bool?,
          salesShowPeriodCostExtended:
              json['SalesShowPeriodCostExtended'] as bool?,
          salesShowDiscountPercent: json['SalesShowDiscountPercent'] as bool?,
          salesShowUnitDiscountAmount:
              json['SalesShowUnitDiscountAmount'] as bool?,
          salesShowUnitExtended: json['SalesShowUnitExtended'] as bool?,
          salesShowPeriodDiscountAmount:
              json['SalesShowPeriodDiscountAmount'] as bool?,
          salesShowPeriodExtended: json['SalesShowPeriodExtended'] as bool?,
          salesShowVariancePercent: json['SalesShowVariancePercent'] as bool?,
          salesShowVarianceExtended: json['SalesShowVarianceExtended'] as bool?,
          salesShowWarehouse: json['SalesShowWarehouse'] as bool?,
          salesShowTaxable: json['SalesShowTaxable'] as bool?,
          salesShowNotes: json['SalesShowNotes'] as bool?,
          salesShowConsignor: json['SalesShowConsignor'] as bool?,
          salesDateStamp: json['SalesDateStamp'] as String?,
          salesInventoryPrice: json['SalesInventoryPrice'] as String?,
          salesInventoryCost: json['SalesInventoryCost'] as String?,
          facilityShowDescription: json['FacilityShowDescription'] as bool?,
          facilityDescriptionWidth: json['FacilityDescriptionWidth'] as int?,
          facilityShowFromDate: json['FacilityShowFromDate'] as bool?,
          facilityShowFromTime: json['FacilityShowFromTime'] as bool?,
          facilityShowToDate: json['FacilityShowToDate'] as bool?,
          facilityShowToTime: json['FacilityShowToTime'] as bool?,
          facilityShowWeeksAndDays: json['FacilityShowWeeksAndDays'] as bool?,
          facilityShowMonthsAndDays: json['FacilityShowMonthsAndDays'] as bool?,
          facilityShowBillablePeriods:
              json['FacilityShowBillablePeriods'] as bool?,
          facilityShowRate: json['FacilityShowRate'] as bool?,
          facilityShowDaysPerWeek: json['FacilityShowDaysPerWeek'] as bool?,
          facilityShowDiscountPercent:
              json['FacilityShowDiscountPercent'] as bool?,
          facilityShowSplit: json['FacilityShowSplit'] as bool?,
          facilityShowUnit: json['FacilityShowUnit'] as bool?,
          facilityShowUnitDiscountAmount:
              json['FacilityShowUnitDiscountAmount'] as bool?,
          facilityShowUnitExtended: json['FacilityShowUnitExtended'] as bool?,
          facilityShowWeeklyDiscountAmount:
              json['FacilityShowWeeklyDiscountAmount'] as bool?,
          facilityShowWeeklyExtended:
              json['FacilityShowWeeklyExtended'] as bool?,
          facilityShowMonthlyDiscountAmount:
              json['FacilityShowMonthlyDiscountAmount'] as bool?,
          facilityShowMonthlyExtended:
              json['FacilityShowMonthlyExtended'] as bool?,
          facilityShowPeriodDiscountAmount:
              json['FacilityShowPeriodDiscountAmount'] as bool?,
          facilityShowPeriodExtended:
              json['FacilityShowPeriodExtended'] as bool?,
          facilityShowTaxable: json['FacilityShowTaxable'] as bool?,
          facilityShowNotes: json['FacilityShowNotes'] as bool?,
          facilityDateStamp: json['FacilityDateStamp'] as String?,
          facilityDescription: json['FacilityDescription'] as String?,
          vehicleShowDescription: json['VehicleShowDescription'] as bool?,
          vehicleDescriptionWidth: json['VehicleDescriptionWidth'] as int?,
          vehicleShowVehicleNumber: json['VehicleShowVehicleNumber'] as bool?,
          vehicleShowPickDate: json['VehicleShowPickDate'] as bool?,
          vehicleShowPickTime: json['VehicleShowPickTime'] as bool?,
          vehicleShowFromDate: json['VehicleShowFromDate'] as bool?,
          vehicleShowFromTime: json['VehicleShowFromTime'] as bool?,
          vehicleShowToDate: json['VehicleShowToDate'] as bool?,
          vehicleShowToTime: json['VehicleShowToTime'] as bool?,
          vehicleShowBillablePeriods:
              json['VehicleShowBillablePeriods'] as bool?,
          vehicleShowSubQuantity: json['VehicleShowSubQuantity'] as bool?,
          vehicleShowAvailableQuantity:
              json['VehicleShowAvailableQuantity'] as bool?,
          vehicleShowConflictDate: json['VehicleShowConflictDate'] as bool?,
          vehicleShowUnit: json['VehicleShowUnit'] as bool?,
          vehicleShowRate: json['VehicleShowRate'] as bool?,
          vehicleShowDaysPerWeek: json['VehicleShowDaysPerWeek'] as bool?,
          vehicleShowCost: json['VehicleShowCost'] as bool?,
          vehicleShowWeeklyCostExtended:
              json['VehicleShowWeeklyCostExtended'] as bool?,
          vehicleShowMonthlyCostExtended:
              json['VehicleShowMonthlyCostExtended'] as bool?,
          vehicleShowPeriodCostExtended:
              json['VehicleShowPeriodCostExtended'] as bool?,
          vehicleShowDiscountPercent:
              json['VehicleShowDiscountPercent'] as bool?,
          vehicleShowUnitDiscountAmount:
              json['VehicleShowUnitDiscountAmount'] as bool?,
          vehicleShowUnitExtended: json['VehicleShowUnitExtended'] as bool?,
          vehicleShowWeeklyDiscountAmount:
              json['VehicleShowWeeklyDiscountAmount'] as bool?,
          vehicleShowWeeklyExtended: json['VehicleShowWeeklyExtended'] as bool?,
          vehicleShowMonthlyDiscountAmount:
              json['VehicleShowMonthlyDiscountAmount'] as bool?,
          vehicleShowMonthlyExtended:
              json['VehicleShowMonthlyExtended'] as bool?,
          vehicleShowPeriodDiscountAmount:
              json['VehicleShowPeriodDiscountAmount'] as bool?,
          vehicleShowPeriodExtended: json['VehicleShowPeriodExtended'] as bool?,
          vehicleShowWarehouse: json['VehicleShowWarehouse'] as bool?,
          vehicleShowReturnToWarehouse:
              json['VehicleShowReturnToWarehouse'] as bool?,
          vehicleShowTaxable: json['VehicleShowTaxable'] as bool?,
          vehicleShowNotes: json['VehicleShowNotes'] as bool?,
          vehicleDateStamp: json['VehicleDateStamp'] as String?,
          laborShowICode: json['LaborShowICode'] as bool?,
          laborICodeWidth: json['LaborICodeWidth'] as int?,
          laborShowDescription: json['LaborShowDescription'] as bool?,
          laborDescriptionWidth: json['LaborDescriptionWidth'] as int?,
          laborShowOrderActivity: json['LaborShowOrderActivity'] as bool?,
          laborShowCrewName: json['LaborShowCrewName'] as bool?,
          laborShowFromDate: json['LaborShowFromDate'] as bool?,
          laborShowFromTime: json['LaborShowFromTime'] as bool?,
          laborShowToDate: json['LaborShowToDate'] as bool?,
          laborShowToTime: json['LaborShowToTime'] as bool?,
          laborShowBillablePeriods: json['LaborShowBillablePeriods'] as bool?,
          laborShowHours: json['LaborShowHours'] as bool?,
          laborShowSubQuantity: json['LaborShowSubQuantity'] as bool?,
          laborShowCost: json['LaborShowCost'] as bool?,
          laborShowRate: json['LaborShowRate'] as bool?,
          laborShowPeriodCostExtended:
              json['LaborShowPeriodCostExtended'] as bool?,
          laborShowDiscountPercent: json['LaborShowDiscountPercent'] as bool?,
          laborShowUnit: json['LaborShowUnit'] as bool?,
          laborShowUnitDiscountAmount:
              json['LaborShowUnitDiscountAmount'] as bool?,
          laborShowUnitExtended: json['LaborShowUnitExtended'] as bool?,
          laborShowWeeklyDiscountAmount:
              json['LaborShowWeeklyDiscountAmount'] as bool?,
          laborShowWeeklyExtended: json['LaborShowWeeklyExtended'] as bool?,
          laborShowMonthlyDiscountAmount:
              json['LaborShowMonthlyDiscountAmount'] as bool?,
          laborShowMonthlyExtended: json['LaborShowMonthlyExtended'] as bool?,
          laborShowPeriodDiscountAmount:
              json['LaborShowPeriodDiscountAmount'] as bool?,
          laborShowPeriodExtended: json['LaborShowPeriodExtended'] as bool?,
          laborShowWarehouse: json['LaborShowWarehouse'] as bool?,
          laborShowTaxable: json['LaborShowTaxable'] as bool?,
          laborShowNotes: json['LaborShowNotes'] as bool?,
          laborDateStamp: json['LaborDateStamp'] as String?,
          hideCrewBreaks: json['HideCrewBreaks'] as bool?,
          break1Paid: json['Break1Paid'] as bool?,
          break2Paid: json['Break2Paid'] as bool?,
          break3Paid: json['Break3Paid'] as bool?,
          miscShowICode: json['MiscShowICode'] as bool?,
          miscICodeWidth: json['MiscICodeWidth'] as int?,
          miscShowDescription: json['MiscShowDescription'] as bool?,
          miscDescriptionWidth: json['MiscDescriptionWidth'] as int?,
          miscShowFromDate: json['MiscShowFromDate'] as bool?,
          miscShowFromTime: json['MiscShowFromTime'] as bool?,
          miscShowToDate: json['MiscShowToDate'] as bool?,
          miscShowToTime: json['MiscShowToTime'] as bool?,
          miscShowBillablePeriods: json['MiscShowBillablePeriods'] as bool?,
          miscShowSubQuantity: json['MiscShowSubQuantity'] as bool?,
          miscShowWeeksAndDays: json['MiscShowWeeksAndDays'] as bool?,
          miscShowMonthsAndDays: json['MiscShowMonthsAndDays'] as bool?,
          miscShowUnit: json['MiscShowUnit'] as bool?,
          miscShowRate: json['MiscShowRate'] as bool?,
          miscShowCost: json['MiscShowCost'] as bool?,
          miscShowPeriodCostExtended:
              json['MiscShowPeriodCostExtended'] as bool?,
          miscShowDiscountPercent: json['MiscShowDiscountPercent'] as bool?,
          miscShowUnitDiscountAmount:
              json['MiscShowUnitDiscountAmount'] as bool?,
          miscShowUnitExtended: json['MiscShowUnitExtended'] as bool?,
          miscShowWeeklyDiscountAmount:
              json['MiscShowWeeklyDiscountAmount'] as bool?,
          miscShowWeeklyExtended: json['MiscShowWeeklyExtended'] as bool?,
          miscShowMonthlyDiscountAmount:
              json['MiscShowMonthlyDiscountAmount'] as bool?,
          miscShowMonthlyExtended: json['MiscShowMonthlyExtended'] as bool?,
          miscShowPeriodDiscountAmount:
              json['MiscShowPeriodDiscountAmount'] as bool?,
          miscShowPeriodExtended: json['MiscShowPeriodExtended'] as bool?,
          miscShowWarehouse: json['MiscShowWarehouse'] as bool?,
          miscShowTaxable: json['MiscShowTaxable'] as bool?,
          miscShowNotes: json['MiscShowNotes'] as bool?,
          miscDateStamp: json['MiscDateStamp'] as String?,
          rentalSaleShowBarCode: json['RentalSaleShowBarCode'] as bool?,
          rentalSaleShowSerialNumber:
              json['RentalSaleShowSerialNumber'] as bool?,
          rentalSaleShowICode: json['RentalSaleShowICode'] as bool?,
          rentalSaleICodeWidth: json['RentalSaleICodeWidth'] as int?,
          rentalSaleShowDescription: json['RentalSaleShowDescription'] as bool?,
          rentalSaleDescriptionWidth:
              json['RentalSaleDescriptionWidth'] as int?,
          rentalSaleShowPickDate: json['RentalSaleShowPickDate'] as bool?,
          rentalSaleShowPickTime: json['RentalSaleShowPickTime'] as bool?,
          rentalSaleShowAvailableQuantity:
              json['RentalSaleShowAvailableQuantity'] as bool?,
          rentalSaleShowConflictDate:
              json['RentalSaleShowConflictDate'] as bool?,
          rentalSaleShowUnit: json['RentalSaleShowUnit'] as bool?,
          rentalSaleShowRate: json['RentalSaleShowRate'] as bool?,
          rentalSaleShowCost: json['RentalSaleShowCost'] as bool?,
          rentalSaleShowPeriodCostExtended:
              json['RentalSaleShowPeriodCostExtended'] as bool?,
          rentalSaleShowDiscountPercent:
              json['RentalSaleShowDiscountPercent'] as bool?,
          rentalSaleShowUnitDiscountAmount:
              json['RentalSaleShowUnitDiscountAmount'] as bool?,
          rentalSaleShowUnitExtended:
              json['RentalSaleShowUnitExtended'] as bool?,
          rentalSaleShowPeriodDiscountAmount:
              json['RentalSaleShowPeriodDiscountAmount'] as bool?,
          rentalSaleShowPeriodExtended:
              json['RentalSaleShowPeriodExtended'] as bool?,
          rentalSaleShowWarehouse: json['RentalSaleShowWarehouse'] as bool?,
          rentalSaleShowTaxable: json['RentalSaleShowTaxable'] as bool?,
          rentalSaleShowNotes: json['RentalSaleShowNotes'] as bool?,
          rentalSaleDateStamp: json['RentalSaleDateStamp'] as String?,
          lossAndDamageShowOrderNumber:
              json['LossAndDamageShowOrderNumber'] as bool?,
          lossAndDamageShowRepairOrderNumber:
              json['LossAndDamageShowRepairOrderNumber'] as bool?,
          lossAndDamageShowBarCode: json['LossAndDamageShowBarCode'] as bool?,
          lossAndDamageShowSerialNumber:
              json['LossAndDamageShowSerialNumber'] as bool?,
          lossAndDamageShowICode: json['LossAndDamageShowICode'] as bool?,
          lossAndDamageICodeWidth: json['LossAndDamageICodeWidth'] as int?,
          lossAndDamageShowDescription:
              json['LossAndDamageShowDescription'] as bool?,
          lossAndDamageDescriptionWidth:
              json['LossAndDamageDescriptionWidth'] as int?,
          lossAndDamageShowUnit: json['LossAndDamageShowUnit'] as bool?,
          lossAndDamageShowRate: json['LossAndDamageShowRate'] as bool?,
          lossAndDamageShowCost: json['LossAndDamageShowCost'] as bool?,
          lossAndDamageShowDiscountPercent:
              json['LossAndDamageShowDiscountPercent'] as bool?,
          lossAndDamageShowUnitDiscountAmount:
              json['LossAndDamageShowUnitDiscountAmount'] as bool?,
          lossAndDamageShowUnitExtended:
              json['LossAndDamageShowUnitExtended'] as bool?,
          lossAndDamageShowPeriodDiscountAmount:
              json['LossAndDamageShowPeriodDiscountAmount'] as bool?,
          lossAndDamageShowPeriodExtended:
              json['LossAndDamageShowPeriodExtended'] as bool?,
          lossAndDamageShowWarehouse:
              json['LossAndDamageShowWarehouse'] as bool?,
          lossAndDamageShowTaxable: json['LossAndDamageShowTaxable'] as bool?,
          lossAndDamageShowNotes: json['LossAndDamageShowNotes'] as bool?,
          lossAndDamageDateStamp: json['LossAndDamageDateStamp'] as String?,
          addInstallationAndStrikeFee:
              json['AddInstallationAndStrikeFee'] as bool?,
          installationAndStrikeFeeRateId:
              json['InstallationAndStrikeFeeRateId'] as String?,
          installationAndStrikeFeeICode:
              json['InstallationAndStrikeFeeICode'] as String?,
          installationAndStrikeFeeDescription:
              json['InstallationAndStrikeFeeDescription'] as String?,
          installationAndStrikeFeePercent:
              (json['InstallationAndStrikeFeePercent'] as num?)?.toDouble(),
          installationAndStrikeFeeBasedOn:
              json['InstallationAndStrikeFeeBasedOn'] as String?,
          addManagementAndServiceFee:
              json['AddManagementAndServiceFee'] as bool?,
          managementAndServiceFeeRateId:
              json['ManagementAndServiceFeeRateId'] as String?,
          managementAndServiceFeeICode:
              json['ManagementAndServiceFeeICode'] as String?,
          managementAndServiceFeeDescription:
              json['ManagementAndServiceFeeDescription'] as String?,
          managementAndServiceFeePercent:
              (json['ManagementAndServiceFeePercent'] as num?)?.toDouble(),
          managementAndServiceFeeBasedOn:
              json['ManagementAndServiceFeeBasedOn'] as String?,
          defaultRentalSalePrice: json['DefaultRentalSalePrice'] as String?,
          quikPayDiscount: json['QuikPayDiscount'] as bool?,
          quikPayDiscountType: json['QuikPayDiscountType'] as String?,
          quikPayDiscountDays: json['QuikPayDiscountDays'] as int?,
          quikPayDiscountPercent:
              (json['QuikPayDiscountPercent'] as num?)?.toDouble(),
          quikPayDiscountExcludeSubs:
              json['QuikPayDiscountExcludeSubs'] as bool?,
          quikConfirmDiscount: json['QuikConfirmDiscount'] as bool?,
          quikConfirmDiscountPercent:
              (json['QuikConfirmDiscountPercent'] as num?)?.toDouble(),
          quikConfirmDiscountDays: json['QuikConfirmDiscountDays'] as int?,
          disableCostGl: json['DisableCostGl'] as bool?,
          excludeFromTopSalesDashboard:
              json['ExcludeFromTopSalesDashboard'] as bool?,
          separatePackageOnQuoteOrder:
              json['SeparatePackageOnQuoteOrder'] as bool?,
          orderby: (json['Orderby'] as num?)?.toDouble(),
          subAllShortagesSubMiscellaneous:
              json['SubAllShortagesSubMiscellaneous'] as bool?,
          inactive: json['Inactive'] as bool?,
          combinedShowFields: (json['CombinedShowFields'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
          rentalShowFields: (json['RentalShowFields'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
          salesShowFields: (json['SalesShowFields'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
          miscShowFields: (json['MiscShowFields'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
          laborShowFields: (json['LaborShowFields'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
          rentalSaleShowFields: (json['RentalSaleShowFields'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
          lossAndDamageShowFields:
              (json['LossAndDamageShowFields'] as List<dynamic>?)
                      ?.map((e) => e as String)
                      .toList() ??
                  [],
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesSettingsOrderSettingsOrderTypeOrderTypeToJson(
        WebApiModulesSettingsOrderSettingsOrderTypeOrderType instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderTypeId', instance.orderTypeId);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull('OrdType', instance.ordType);
  writeNotNull('DefaultPickTime', instance.defaultPickTime);
  writeNotNull('DefaultFromTime', instance.defaultFromTime);
  writeNotNull('DefaultToTime', instance.defaultToTime);
  writeNotNull(
      'DailyScheduleDefaultStartTime', instance.dailyScheduleDefaultStartTime);
  writeNotNull(
      'DailyScheduleDefaultStopTime', instance.dailyScheduleDefaultStopTime);
  writeNotNull('IsMasterSubOrderType', instance.isMasterSubOrderType);
  writeNotNull('CombineActivityTabs', instance.combineActivityTabs);
  writeNotNull('DefaultManualSort', instance.defaultManualSort);
  writeNotNull('DetermineQuantitiesToBillBasedOn',
      instance.determineQuantitiesToBillBasedOn);
  writeNotNull(
      'UseEstimatedDatesForBilling', instance.useEstimatedDatesForBilling);
  writeNotNull('AllowNesting', instance.allowNesting);
  writeNotNull('RentalShowICode', instance.rentalShowICode);
  writeNotNull('RentalICodeWidth', instance.rentalICodeWidth);
  writeNotNull('RentalShowDescription', instance.rentalShowDescription);
  writeNotNull('RentalDescriptionWidth', instance.rentalDescriptionWidth);
  writeNotNull('RentalShowPickDate', instance.rentalShowPickDate);
  writeNotNull('RentalShowPickTime', instance.rentalShowPickTime);
  writeNotNull('RentalShowFromDate', instance.rentalShowFromDate);
  writeNotNull('RentalShowFromTime', instance.rentalShowFromTime);
  writeNotNull('RentalShowToDate', instance.rentalShowToDate);
  writeNotNull('RentalShowToTime', instance.rentalShowToTime);
  writeNotNull('RentalShowBillablePeriods', instance.rentalShowBillablePeriods);
  writeNotNull('RentalShowEpisodes', instance.rentalShowEpisodes);
  writeNotNull('RentalShowSubQuantity', instance.rentalShowSubQuantity);
  writeNotNull(
      'RentalShowAvailableQuantity', instance.rentalShowAvailableQuantity);
  writeNotNull('RentalShowConflictDate', instance.rentalShowConflictDate);
  writeNotNull('RentalShowAvailableQuantityRegion',
      instance.rentalShowAvailableQuantityRegion);
  writeNotNull(
      'RentalShowConflictDateRegion', instance.rentalShowConflictDateRegion);
  writeNotNull('RentalShowAvailableQuantityAllWarehouses',
      instance.rentalShowAvailableQuantityAllWarehouses);
  writeNotNull('RentalShowConflictDateAllWarehouses',
      instance.rentalShowConflictDateAllWarehouses);
  writeNotNull('RentalShowReservedItems', instance.rentalShowReservedItems);
  writeNotNull(
      'RentalShowConsignmentQuantity', instance.rentalShowConsignmentQuantity);
  writeNotNull('RentalShowConsignmentAvailableQuantity',
      instance.rentalShowConsignmentAvailableQuantity);
  writeNotNull('RentalShowConsignmentConflictDate',
      instance.rentalShowConsignmentConflictDate);
  writeNotNull('RentalShowRate', instance.rentalShowRate);
  writeNotNull('RentalShowDaysPerWeek', instance.rentalShowDaysPerWeek);
  writeNotNull('RentalShowPremiumPercent', instance.rentalShowPremiumPercent);
  writeNotNull('RentalShowUnit', instance.rentalShowUnit);
  writeNotNull('RentalShowCost', instance.rentalShowCost);
  writeNotNull(
      'RentalShowPeriodCostExtended', instance.rentalShowPeriodCostExtended);
  writeNotNull('RentalShowDiscountPercent', instance.rentalShowDiscountPercent);
  writeNotNull('RentalShowMarkupPercent', instance.rentalShowMarkupPercent);
  writeNotNull('RentalShowMarginPercent', instance.rentalShowMarginPercent);
  writeNotNull(
      'RentalShowUnitDiscountAmount', instance.rentalShowUnitDiscountAmount);
  writeNotNull('RentalShowUnitExtended', instance.rentalShowUnitExtended);
  writeNotNull('RentalShowWeeklyDiscountAmount',
      instance.rentalShowWeeklyDiscountAmount);
  writeNotNull('RentalShowWeeklyExtended', instance.rentalShowWeeklyExtended);
  writeNotNull('RentalShowEpisodeExtended', instance.rentalShowEpisodeExtended);
  writeNotNull('RentalShowEpisodeDiscountAmount',
      instance.rentalShowEpisodeDiscountAmount);
  writeNotNull('RentalShowMonthlyDiscountAmount',
      instance.rentalShowMonthlyDiscountAmount);
  writeNotNull('RentalShowMonthlyExtended', instance.rentalShowMonthlyExtended);
  writeNotNull('RentalShowPeriodDiscountAmount',
      instance.rentalShowPeriodDiscountAmount);
  writeNotNull('RentalShowPeriodExtended', instance.rentalShowPeriodExtended);
  writeNotNull('RentalShowWarehouse', instance.rentalShowWarehouse);
  writeNotNull('RentalShowTaxable', instance.rentalShowTaxable);
  writeNotNull('RentalShowNotes', instance.rentalShowNotes);
  writeNotNull(
      'RentalShowReturnToWarehouse', instance.rentalShowReturnToWarehouse);
  writeNotNull('RentalShowConsignor', instance.rentalShowConsignor);
  writeNotNull('RentalDateStamp', instance.rentalDateStamp);
  writeNotNull('AllowRoundTripRentals', instance.allowRoundTripRentals);
  writeNotNull('SalesShowICode', instance.salesShowICode);
  writeNotNull('SalesICodeWidth', instance.salesICodeWidth);
  writeNotNull('SalesShowDescription', instance.salesShowDescription);
  writeNotNull('SalesDescriptionWidth', instance.salesDescriptionWidth);
  writeNotNull('SalesShowManufacturerPartNumber',
      instance.salesShowManufacturerPartNumber);
  writeNotNull('SalesManufacturerPartNumberWidth',
      instance.salesManufacturerPartNumberWidth);
  writeNotNull('SalesShowPickDate', instance.salesShowPickDate);
  writeNotNull('SalesShowPickTime', instance.salesShowPickTime);
  writeNotNull('SalesShowFromDate', instance.salesShowFromDate);
  writeNotNull('SalesShowFromTime', instance.salesShowFromTime);
  writeNotNull('SalesShowSubQuantity', instance.salesShowSubQuantity);
  writeNotNull('SalesShowCost', instance.salesShowCost);
  writeNotNull('SalesShowRate', instance.salesShowRate);
  writeNotNull(
      'SalesShowAvailableQuantity', instance.salesShowAvailableQuantity);
  writeNotNull('SalesShowConflictDate', instance.salesShowConflictDate);
  writeNotNull('SalesShowAvailableQuantityRegion',
      instance.salesShowAvailableQuantityRegion);
  writeNotNull(
      'SalesShowConflictDateRegion', instance.salesShowConflictDateRegion);
  writeNotNull('SalesShowAvailableQuantityAllWarehouses',
      instance.salesShowAvailableQuantityAllWarehouses);
  writeNotNull('SalesShowConflictDateAllWarehouses',
      instance.salesShowConflictDateAllWarehouses);
  writeNotNull('SalesShowMarkupPercent', instance.salesShowMarkupPercent);
  writeNotNull('SalesShowMarginPercent', instance.salesShowMarginPercent);
  writeNotNull('SalesShowUnit', instance.salesShowUnit);
  writeNotNull(
      'SalesShowPeriodCostExtended', instance.salesShowPeriodCostExtended);
  writeNotNull('SalesShowDiscountPercent', instance.salesShowDiscountPercent);
  writeNotNull(
      'SalesShowUnitDiscountAmount', instance.salesShowUnitDiscountAmount);
  writeNotNull('SalesShowUnitExtended', instance.salesShowUnitExtended);
  writeNotNull(
      'SalesShowPeriodDiscountAmount', instance.salesShowPeriodDiscountAmount);
  writeNotNull('SalesShowPeriodExtended', instance.salesShowPeriodExtended);
  writeNotNull('SalesShowVariancePercent', instance.salesShowVariancePercent);
  writeNotNull('SalesShowVarianceExtended', instance.salesShowVarianceExtended);
  writeNotNull('SalesShowWarehouse', instance.salesShowWarehouse);
  writeNotNull('SalesShowTaxable', instance.salesShowTaxable);
  writeNotNull('SalesShowNotes', instance.salesShowNotes);
  writeNotNull('SalesShowConsignor', instance.salesShowConsignor);
  writeNotNull('SalesDateStamp', instance.salesDateStamp);
  writeNotNull('SalesInventoryPrice', instance.salesInventoryPrice);
  writeNotNull('SalesInventoryCost', instance.salesInventoryCost);
  writeNotNull('FacilityShowDescription', instance.facilityShowDescription);
  writeNotNull('FacilityDescriptionWidth', instance.facilityDescriptionWidth);
  writeNotNull('FacilityShowFromDate', instance.facilityShowFromDate);
  writeNotNull('FacilityShowFromTime', instance.facilityShowFromTime);
  writeNotNull('FacilityShowToDate', instance.facilityShowToDate);
  writeNotNull('FacilityShowToTime', instance.facilityShowToTime);
  writeNotNull('FacilityShowWeeksAndDays', instance.facilityShowWeeksAndDays);
  writeNotNull('FacilityShowMonthsAndDays', instance.facilityShowMonthsAndDays);
  writeNotNull(
      'FacilityShowBillablePeriods', instance.facilityShowBillablePeriods);
  writeNotNull('FacilityShowRate', instance.facilityShowRate);
  writeNotNull('FacilityShowDaysPerWeek', instance.facilityShowDaysPerWeek);
  writeNotNull(
      'FacilityShowDiscountPercent', instance.facilityShowDiscountPercent);
  writeNotNull('FacilityShowSplit', instance.facilityShowSplit);
  writeNotNull('FacilityShowUnit', instance.facilityShowUnit);
  writeNotNull('FacilityShowUnitDiscountAmount',
      instance.facilityShowUnitDiscountAmount);
  writeNotNull('FacilityShowUnitExtended', instance.facilityShowUnitExtended);
  writeNotNull('FacilityShowWeeklyDiscountAmount',
      instance.facilityShowWeeklyDiscountAmount);
  writeNotNull(
      'FacilityShowWeeklyExtended', instance.facilityShowWeeklyExtended);
  writeNotNull('FacilityShowMonthlyDiscountAmount',
      instance.facilityShowMonthlyDiscountAmount);
  writeNotNull(
      'FacilityShowMonthlyExtended', instance.facilityShowMonthlyExtended);
  writeNotNull('FacilityShowPeriodDiscountAmount',
      instance.facilityShowPeriodDiscountAmount);
  writeNotNull(
      'FacilityShowPeriodExtended', instance.facilityShowPeriodExtended);
  writeNotNull('FacilityShowTaxable', instance.facilityShowTaxable);
  writeNotNull('FacilityShowNotes', instance.facilityShowNotes);
  writeNotNull('FacilityDateStamp', instance.facilityDateStamp);
  writeNotNull('FacilityDescription', instance.facilityDescription);
  writeNotNull('VehicleShowDescription', instance.vehicleShowDescription);
  writeNotNull('VehicleDescriptionWidth', instance.vehicleDescriptionWidth);
  writeNotNull('VehicleShowVehicleNumber', instance.vehicleShowVehicleNumber);
  writeNotNull('VehicleShowPickDate', instance.vehicleShowPickDate);
  writeNotNull('VehicleShowPickTime', instance.vehicleShowPickTime);
  writeNotNull('VehicleShowFromDate', instance.vehicleShowFromDate);
  writeNotNull('VehicleShowFromTime', instance.vehicleShowFromTime);
  writeNotNull('VehicleShowToDate', instance.vehicleShowToDate);
  writeNotNull('VehicleShowToTime', instance.vehicleShowToTime);
  writeNotNull(
      'VehicleShowBillablePeriods', instance.vehicleShowBillablePeriods);
  writeNotNull('VehicleShowSubQuantity', instance.vehicleShowSubQuantity);
  writeNotNull(
      'VehicleShowAvailableQuantity', instance.vehicleShowAvailableQuantity);
  writeNotNull('VehicleShowConflictDate', instance.vehicleShowConflictDate);
  writeNotNull('VehicleShowUnit', instance.vehicleShowUnit);
  writeNotNull('VehicleShowRate', instance.vehicleShowRate);
  writeNotNull('VehicleShowDaysPerWeek', instance.vehicleShowDaysPerWeek);
  writeNotNull('VehicleShowCost', instance.vehicleShowCost);
  writeNotNull(
      'VehicleShowWeeklyCostExtended', instance.vehicleShowWeeklyCostExtended);
  writeNotNull('VehicleShowMonthlyCostExtended',
      instance.vehicleShowMonthlyCostExtended);
  writeNotNull(
      'VehicleShowPeriodCostExtended', instance.vehicleShowPeriodCostExtended);
  writeNotNull(
      'VehicleShowDiscountPercent', instance.vehicleShowDiscountPercent);
  writeNotNull(
      'VehicleShowUnitDiscountAmount', instance.vehicleShowUnitDiscountAmount);
  writeNotNull('VehicleShowUnitExtended', instance.vehicleShowUnitExtended);
  writeNotNull('VehicleShowWeeklyDiscountAmount',
      instance.vehicleShowWeeklyDiscountAmount);
  writeNotNull('VehicleShowWeeklyExtended', instance.vehicleShowWeeklyExtended);
  writeNotNull('VehicleShowMonthlyDiscountAmount',
      instance.vehicleShowMonthlyDiscountAmount);
  writeNotNull(
      'VehicleShowMonthlyExtended', instance.vehicleShowMonthlyExtended);
  writeNotNull('VehicleShowPeriodDiscountAmount',
      instance.vehicleShowPeriodDiscountAmount);
  writeNotNull('VehicleShowPeriodExtended', instance.vehicleShowPeriodExtended);
  writeNotNull('VehicleShowWarehouse', instance.vehicleShowWarehouse);
  writeNotNull(
      'VehicleShowReturnToWarehouse', instance.vehicleShowReturnToWarehouse);
  writeNotNull('VehicleShowTaxable', instance.vehicleShowTaxable);
  writeNotNull('VehicleShowNotes', instance.vehicleShowNotes);
  writeNotNull('VehicleDateStamp', instance.vehicleDateStamp);
  writeNotNull('LaborShowICode', instance.laborShowICode);
  writeNotNull('LaborICodeWidth', instance.laborICodeWidth);
  writeNotNull('LaborShowDescription', instance.laborShowDescription);
  writeNotNull('LaborDescriptionWidth', instance.laborDescriptionWidth);
  writeNotNull('LaborShowOrderActivity', instance.laborShowOrderActivity);
  writeNotNull('LaborShowCrewName', instance.laborShowCrewName);
  writeNotNull('LaborShowFromDate', instance.laborShowFromDate);
  writeNotNull('LaborShowFromTime', instance.laborShowFromTime);
  writeNotNull('LaborShowToDate', instance.laborShowToDate);
  writeNotNull('LaborShowToTime', instance.laborShowToTime);
  writeNotNull('LaborShowBillablePeriods', instance.laborShowBillablePeriods);
  writeNotNull('LaborShowHours', instance.laborShowHours);
  writeNotNull('LaborShowSubQuantity', instance.laborShowSubQuantity);
  writeNotNull('LaborShowCost', instance.laborShowCost);
  writeNotNull('LaborShowRate', instance.laborShowRate);
  writeNotNull(
      'LaborShowPeriodCostExtended', instance.laborShowPeriodCostExtended);
  writeNotNull('LaborShowDiscountPercent', instance.laborShowDiscountPercent);
  writeNotNull('LaborShowUnit', instance.laborShowUnit);
  writeNotNull(
      'LaborShowUnitDiscountAmount', instance.laborShowUnitDiscountAmount);
  writeNotNull('LaborShowUnitExtended', instance.laborShowUnitExtended);
  writeNotNull(
      'LaborShowWeeklyDiscountAmount', instance.laborShowWeeklyDiscountAmount);
  writeNotNull('LaborShowWeeklyExtended', instance.laborShowWeeklyExtended);
  writeNotNull('LaborShowMonthlyDiscountAmount',
      instance.laborShowMonthlyDiscountAmount);
  writeNotNull('LaborShowMonthlyExtended', instance.laborShowMonthlyExtended);
  writeNotNull(
      'LaborShowPeriodDiscountAmount', instance.laborShowPeriodDiscountAmount);
  writeNotNull('LaborShowPeriodExtended', instance.laborShowPeriodExtended);
  writeNotNull('LaborShowWarehouse', instance.laborShowWarehouse);
  writeNotNull('LaborShowTaxable', instance.laborShowTaxable);
  writeNotNull('LaborShowNotes', instance.laborShowNotes);
  writeNotNull('LaborDateStamp', instance.laborDateStamp);
  writeNotNull('HideCrewBreaks', instance.hideCrewBreaks);
  writeNotNull('Break1Paid', instance.break1Paid);
  writeNotNull('Break2Paid', instance.break2Paid);
  writeNotNull('Break3Paid', instance.break3Paid);
  writeNotNull('MiscShowICode', instance.miscShowICode);
  writeNotNull('MiscICodeWidth', instance.miscICodeWidth);
  writeNotNull('MiscShowDescription', instance.miscShowDescription);
  writeNotNull('MiscDescriptionWidth', instance.miscDescriptionWidth);
  writeNotNull('MiscShowFromDate', instance.miscShowFromDate);
  writeNotNull('MiscShowFromTime', instance.miscShowFromTime);
  writeNotNull('MiscShowToDate', instance.miscShowToDate);
  writeNotNull('MiscShowToTime', instance.miscShowToTime);
  writeNotNull('MiscShowBillablePeriods', instance.miscShowBillablePeriods);
  writeNotNull('MiscShowSubQuantity', instance.miscShowSubQuantity);
  writeNotNull('MiscShowWeeksAndDays', instance.miscShowWeeksAndDays);
  writeNotNull('MiscShowMonthsAndDays', instance.miscShowMonthsAndDays);
  writeNotNull('MiscShowUnit', instance.miscShowUnit);
  writeNotNull('MiscShowRate', instance.miscShowRate);
  writeNotNull('MiscShowCost', instance.miscShowCost);
  writeNotNull(
      'MiscShowPeriodCostExtended', instance.miscShowPeriodCostExtended);
  writeNotNull('MiscShowDiscountPercent', instance.miscShowDiscountPercent);
  writeNotNull(
      'MiscShowUnitDiscountAmount', instance.miscShowUnitDiscountAmount);
  writeNotNull('MiscShowUnitExtended', instance.miscShowUnitExtended);
  writeNotNull(
      'MiscShowWeeklyDiscountAmount', instance.miscShowWeeklyDiscountAmount);
  writeNotNull('MiscShowWeeklyExtended', instance.miscShowWeeklyExtended);
  writeNotNull(
      'MiscShowMonthlyDiscountAmount', instance.miscShowMonthlyDiscountAmount);
  writeNotNull('MiscShowMonthlyExtended', instance.miscShowMonthlyExtended);
  writeNotNull(
      'MiscShowPeriodDiscountAmount', instance.miscShowPeriodDiscountAmount);
  writeNotNull('MiscShowPeriodExtended', instance.miscShowPeriodExtended);
  writeNotNull('MiscShowWarehouse', instance.miscShowWarehouse);
  writeNotNull('MiscShowTaxable', instance.miscShowTaxable);
  writeNotNull('MiscShowNotes', instance.miscShowNotes);
  writeNotNull('MiscDateStamp', instance.miscDateStamp);
  writeNotNull('RentalSaleShowBarCode', instance.rentalSaleShowBarCode);
  writeNotNull(
      'RentalSaleShowSerialNumber', instance.rentalSaleShowSerialNumber);
  writeNotNull('RentalSaleShowICode', instance.rentalSaleShowICode);
  writeNotNull('RentalSaleICodeWidth', instance.rentalSaleICodeWidth);
  writeNotNull('RentalSaleShowDescription', instance.rentalSaleShowDescription);
  writeNotNull(
      'RentalSaleDescriptionWidth', instance.rentalSaleDescriptionWidth);
  writeNotNull('RentalSaleShowPickDate', instance.rentalSaleShowPickDate);
  writeNotNull('RentalSaleShowPickTime', instance.rentalSaleShowPickTime);
  writeNotNull('RentalSaleShowAvailableQuantity',
      instance.rentalSaleShowAvailableQuantity);
  writeNotNull(
      'RentalSaleShowConflictDate', instance.rentalSaleShowConflictDate);
  writeNotNull('RentalSaleShowUnit', instance.rentalSaleShowUnit);
  writeNotNull('RentalSaleShowRate', instance.rentalSaleShowRate);
  writeNotNull('RentalSaleShowCost', instance.rentalSaleShowCost);
  writeNotNull('RentalSaleShowPeriodCostExtended',
      instance.rentalSaleShowPeriodCostExtended);
  writeNotNull(
      'RentalSaleShowDiscountPercent', instance.rentalSaleShowDiscountPercent);
  writeNotNull('RentalSaleShowUnitDiscountAmount',
      instance.rentalSaleShowUnitDiscountAmount);
  writeNotNull(
      'RentalSaleShowUnitExtended', instance.rentalSaleShowUnitExtended);
  writeNotNull('RentalSaleShowPeriodDiscountAmount',
      instance.rentalSaleShowPeriodDiscountAmount);
  writeNotNull(
      'RentalSaleShowPeriodExtended', instance.rentalSaleShowPeriodExtended);
  writeNotNull('RentalSaleShowWarehouse', instance.rentalSaleShowWarehouse);
  writeNotNull('RentalSaleShowTaxable', instance.rentalSaleShowTaxable);
  writeNotNull('RentalSaleShowNotes', instance.rentalSaleShowNotes);
  writeNotNull('RentalSaleDateStamp', instance.rentalSaleDateStamp);
  writeNotNull(
      'LossAndDamageShowOrderNumber', instance.lossAndDamageShowOrderNumber);
  writeNotNull('LossAndDamageShowRepairOrderNumber',
      instance.lossAndDamageShowRepairOrderNumber);
  writeNotNull('LossAndDamageShowBarCode', instance.lossAndDamageShowBarCode);
  writeNotNull(
      'LossAndDamageShowSerialNumber', instance.lossAndDamageShowSerialNumber);
  writeNotNull('LossAndDamageShowICode', instance.lossAndDamageShowICode);
  writeNotNull('LossAndDamageICodeWidth', instance.lossAndDamageICodeWidth);
  writeNotNull(
      'LossAndDamageShowDescription', instance.lossAndDamageShowDescription);
  writeNotNull(
      'LossAndDamageDescriptionWidth', instance.lossAndDamageDescriptionWidth);
  writeNotNull('LossAndDamageShowUnit', instance.lossAndDamageShowUnit);
  writeNotNull('LossAndDamageShowRate', instance.lossAndDamageShowRate);
  writeNotNull('LossAndDamageShowCost', instance.lossAndDamageShowCost);
  writeNotNull('LossAndDamageShowDiscountPercent',
      instance.lossAndDamageShowDiscountPercent);
  writeNotNull('LossAndDamageShowUnitDiscountAmount',
      instance.lossAndDamageShowUnitDiscountAmount);
  writeNotNull(
      'LossAndDamageShowUnitExtended', instance.lossAndDamageShowUnitExtended);
  writeNotNull('LossAndDamageShowPeriodDiscountAmount',
      instance.lossAndDamageShowPeriodDiscountAmount);
  writeNotNull('LossAndDamageShowPeriodExtended',
      instance.lossAndDamageShowPeriodExtended);
  writeNotNull(
      'LossAndDamageShowWarehouse', instance.lossAndDamageShowWarehouse);
  writeNotNull('LossAndDamageShowTaxable', instance.lossAndDamageShowTaxable);
  writeNotNull('LossAndDamageShowNotes', instance.lossAndDamageShowNotes);
  writeNotNull('LossAndDamageDateStamp', instance.lossAndDamageDateStamp);
  writeNotNull(
      'AddInstallationAndStrikeFee', instance.addInstallationAndStrikeFee);
  writeNotNull('InstallationAndStrikeFeeRateId',
      instance.installationAndStrikeFeeRateId);
  writeNotNull(
      'InstallationAndStrikeFeeICode', instance.installationAndStrikeFeeICode);
  writeNotNull('InstallationAndStrikeFeeDescription',
      instance.installationAndStrikeFeeDescription);
  writeNotNull('InstallationAndStrikeFeePercent',
      instance.installationAndStrikeFeePercent);
  writeNotNull('InstallationAndStrikeFeeBasedOn',
      instance.installationAndStrikeFeeBasedOn);
  writeNotNull(
      'AddManagementAndServiceFee', instance.addManagementAndServiceFee);
  writeNotNull(
      'ManagementAndServiceFeeRateId', instance.managementAndServiceFeeRateId);
  writeNotNull(
      'ManagementAndServiceFeeICode', instance.managementAndServiceFeeICode);
  writeNotNull('ManagementAndServiceFeeDescription',
      instance.managementAndServiceFeeDescription);
  writeNotNull('ManagementAndServiceFeePercent',
      instance.managementAndServiceFeePercent);
  writeNotNull('ManagementAndServiceFeeBasedOn',
      instance.managementAndServiceFeeBasedOn);
  writeNotNull('DefaultRentalSalePrice', instance.defaultRentalSalePrice);
  writeNotNull('QuikPayDiscount', instance.quikPayDiscount);
  writeNotNull('QuikPayDiscountType', instance.quikPayDiscountType);
  writeNotNull('QuikPayDiscountDays', instance.quikPayDiscountDays);
  writeNotNull('QuikPayDiscountPercent', instance.quikPayDiscountPercent);
  writeNotNull(
      'QuikPayDiscountExcludeSubs', instance.quikPayDiscountExcludeSubs);
  writeNotNull('QuikConfirmDiscount', instance.quikConfirmDiscount);
  writeNotNull(
      'QuikConfirmDiscountPercent', instance.quikConfirmDiscountPercent);
  writeNotNull('QuikConfirmDiscountDays', instance.quikConfirmDiscountDays);
  writeNotNull('DisableCostGl', instance.disableCostGl);
  writeNotNull(
      'ExcludeFromTopSalesDashboard', instance.excludeFromTopSalesDashboard);
  writeNotNull(
      'SeparatePackageOnQuoteOrder', instance.separatePackageOnQuoteOrder);
  writeNotNull('Orderby', instance.orderby);
  writeNotNull('SubAllShortagesSubMiscellaneous',
      instance.subAllShortagesSubMiscellaneous);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('CombinedShowFields', instance.combinedShowFields);
  writeNotNull('RentalShowFields', instance.rentalShowFields);
  writeNotNull('SalesShowFields', instance.salesShowFields);
  writeNotNull('MiscShowFields', instance.miscShowFields);
  writeNotNull('LaborShowFields', instance.laborShowFields);
  writeNotNull('RentalSaleShowFields', instance.rentalSaleShowFields);
  writeNotNull('LossAndDamageShowFields', instance.lossAndDamageShowFields);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesSharedControlsHomeControlsOrderItemCostOrderItemsRequest
    _$WebApiModulesSharedControlsHomeControlsOrderItemCostOrderItemsRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesSharedControlsHomeControlsOrderItemCostOrderItemsRequest(
          orderId: json['OrderId'] as String?,
          costOrderId: json['CostOrderId'] as String?,
          orderItemIds: (json['OrderItemIds'] as List<dynamic>?)
                  ?.map((e) => e as String)
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesSharedControlsHomeControlsOrderItemCostOrderItemsRequestToJson(
        WebApiModulesSharedControlsHomeControlsOrderItemCostOrderItemsRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('CostOrderId', instance.costOrderId);
  writeNotNull('OrderItemIds', instance.orderItemIds);
  return val;
}

WebApiModulesSharedControlsHomeControlsOrderItemCostOrderItemsResponse
    _$WebApiModulesSharedControlsHomeControlsOrderItemCostOrderItemsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesSharedControlsHomeControlsOrderItemCostOrderItemsResponse(
          status: json['Status'] as int?,
          message: json['Message'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesSharedControlsHomeControlsOrderItemCostOrderItemsResponseToJson(
        WebApiModulesSharedControlsHomeControlsOrderItemCostOrderItemsResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Status', instance.status);
  writeNotNull('Message', instance.message);
  return val;
}

WebApiModulesTransfersTransferOrderToggleTransferOrderResponse
    _$WebApiModulesTransfersTransferOrderToggleTransferOrderResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesTransfersTransferOrderToggleTransferOrderResponse(
          transfer: json['transfer'] == null
              ? null
              : WebApiModulesTransfersTransferOrderTransferOrder.fromJson(
                  json['transfer'] as Map<String, dynamic>),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesTransfersTransferOrderToggleTransferOrderResponseToJson(
        WebApiModulesTransfersTransferOrderToggleTransferOrderResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('transfer', instance.transfer?.toJson());
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesTransfersTransferOrderTransferOrder
    _$WebApiModulesTransfersTransferOrderTransferOrderFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesTransfersTransferOrderTransferOrder(
          transferId: json['TransferId'] as String?,
          transferNumber: json['TransferNumber'] as String?,
          transferDate: json['TransferDate'] as String?,
          description: json['Description'] as String?,
          status: json['Status'] as String?,
          statusDate: json['StatusDate'] as String?,
          fromWarehouseId: json['FromWarehouseId'] as String?,
          fromWarehouse: json['FromWarehouse'] as String?,
          fromWarehouseCode: json['FromWarehouseCode'] as String?,
          toWarehouseId: json['ToWarehouseId'] as String?,
          toWarehouse: json['ToWarehouse'] as String?,
          toWarehouseCode: json['ToWarehouseCode'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          rental: json['Rental'] as bool?,
          sales: json['Sales'] as bool?,
          hasRentalItem: json['HasRentalItem'] as bool?,
          hasSalesItem: json['HasSalesItem'] as bool?,
          agentId: json['AgentId'] as String?,
          agent: json['Agent'] as String?,
          fixedAssetTransferFutureDepreciation:
              json['FixedAssetTransferFutureDepreciation'] as bool?,
          relatedToOrderId: json['RelatedToOrderId'] as String?,
          relatedToOrderNumber: json['RelatedToOrderNumber'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          officeLocation: json['OfficeLocation'] as String?,
          isReturnTransferOrder: json['IsReturnTransferOrder'] as bool?,
          pickDate: json['PickDate'] as String?,
          pickTime: json['PickTime'] as String?,
          shipDate: json['ShipDate'] as String?,
          shipTime: json['ShipTime'] as String?,
          requiredDate: json['RequiredDate'] as String?,
          requiredTime: json['RequiredTime'] as String?,
          outDeliveryId: json['OutDeliveryId'] as String?,
          outDeliveryDeliveryType: json['OutDeliveryDeliveryType'] as String?,
          outDeliveryRequiredDate: json['OutDeliveryRequiredDate'] as String?,
          outDeliveryRequiredTime: json['OutDeliveryRequiredTime'] as String?,
          outDeliveryTargetShipDate:
              json['OutDeliveryTargetShipDate'] as String?,
          outDeliveryTargetShipTime:
              json['OutDeliveryTargetShipTime'] as String?,
          outDeliveryDirection: json['OutDeliveryDirection'] as String?,
          outDeliveryAddressType: json['OutDeliveryAddressType'] as String?,
          outDeliveryFromLocation: json['OutDeliveryFromLocation'] as String?,
          outDeliveryFromContact: json['OutDeliveryFromContact'] as String?,
          outDeliveryFromContactPhone:
              json['OutDeliveryFromContactPhone'] as String?,
          outDeliveryFromAlternateContact:
              json['OutDeliveryFromAlternateContact'] as String?,
          outDeliveryFromAlternateContactPhone:
              json['OutDeliveryFromAlternateContactPhone'] as String?,
          outDeliveryFromAttention: json['OutDeliveryFromAttention'] as String?,
          outDeliveryFromAddress1: json['OutDeliveryFromAddress1'] as String?,
          outDeliveryFromAdd2ress: json['OutDeliveryFromAdd2ress'] as String?,
          outDeliveryFromCity: json['OutDeliveryFromCity'] as String?,
          outDeliveryFromState: json['OutDeliveryFromState'] as String?,
          outDeliveryFromZipCode: json['OutDeliveryFromZipCode'] as String?,
          outDeliveryFromCountry: json['OutDeliveryFromCountry'] as String?,
          outDeliveryFromCountryId: json['OutDeliveryFromCountryId'] as String?,
          outDeliveryFromCrossStreets:
              json['OutDeliveryFromCrossStreets'] as String?,
          outDeliveryToLocation: json['OutDeliveryToLocation'] as String?,
          outDeliveryToContact: json['OutDeliveryToContact'] as String?,
          outDeliveryToContactPhone:
              json['OutDeliveryToContactPhone'] as String?,
          outDeliveryToAlternateContact:
              json['OutDeliveryToAlternateContact'] as String?,
          outDeliveryToAlternateContactPhone:
              json['OutDeliveryToAlternateContactPhone'] as String?,
          outDeliveryToAttention: json['OutDeliveryToAttention'] as String?,
          outDeliveryToAddress1: json['OutDeliveryToAddress1'] as String?,
          outDeliveryToAddress2: json['OutDeliveryToAddress2'] as String?,
          outDeliveryToCity: json['OutDeliveryToCity'] as String?,
          outDeliveryToState: json['OutDeliveryToState'] as String?,
          outDeliveryToZipCode: json['OutDeliveryToZipCode'] as String?,
          outDeliveryToCountryId: json['OutDeliveryToCountryId'] as String?,
          outDeliveryToCountry: json['OutDeliveryToCountry'] as String?,
          outDeliveryToContactFax: json['OutDeliveryToContactFax'] as String?,
          outDeliveryToCrossStreets:
              json['OutDeliveryToCrossStreets'] as String?,
          outDeliveryDeliveryNotes: json['OutDeliveryDeliveryNotes'] as String?,
          outDeliveryCarrierId: json['OutDeliveryCarrierId'] as String?,
          outDeliveryCarrier: json['OutDeliveryCarrier'] as String?,
          outDeliveryCarrierAccount:
              json['OutDeliveryCarrierAccount'] as String?,
          outDeliveryShipViaId: json['OutDeliveryShipViaId'] as String?,
          outDeliveryShipVia: json['OutDeliveryShipVia'] as String?,
          outDeliveryInvoiceId: json['OutDeliveryInvoiceId'] as String?,
          outDeliveryVendorInvoiceId:
              json['OutDeliveryVendorInvoiceId'] as String?,
          outDeliveryEstimatedFreight:
              (json['OutDeliveryEstimatedFreight'] as num?)?.toDouble(),
          outDeliveryFreightInvoiceAmount:
              (json['OutDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
          outDeliveryChargeType: json['OutDeliveryChargeType'] as String?,
          outDeliveryFreightTrackingNumber:
              json['OutDeliveryFreightTrackingNumber'] as String?,
          outDeliveryDropShip: json['OutDeliveryDropShip'] as bool?,
          outDeliveryPackageCode: json['OutDeliveryPackageCode'] as String?,
          outDeliveryBillPoFreightOnOrder:
              json['OutDeliveryBillPoFreightOnOrder'] as bool?,
          outDeliveryOnlineOrderNumber:
              json['OutDeliveryOnlineOrderNumber'] as String?,
          outDeliveryDateStamp: json['OutDeliveryDateStamp'] as String?,
          inDeliveryId: json['InDeliveryId'] as String?,
          inDeliveryDeliveryType: json['InDeliveryDeliveryType'] as String?,
          inDeliveryRequiredDate: json['InDeliveryRequiredDate'] as String?,
          inDeliveryRequiredTime: json['InDeliveryRequiredTime'] as String?,
          inDeliveryTargetShipDate: json['InDeliveryTargetShipDate'] as String?,
          inDeliveryTargetShipTime: json['InDeliveryTargetShipTime'] as String?,
          inDeliveryDirection: json['InDeliveryDirection'] as String?,
          inDeliveryAddressType: json['InDeliveryAddressType'] as String?,
          inDeliveryFromLocation: json['InDeliveryFromLocation'] as String?,
          inDeliveryFromContact: json['InDeliveryFromContact'] as String?,
          inDeliveryFromContactPhone:
              json['InDeliveryFromContactPhone'] as String?,
          inDeliveryFromAlternateContact:
              json['InDeliveryFromAlternateContact'] as String?,
          inDeliveryFromAlternateContactPhone:
              json['InDeliveryFromAlternateContactPhone'] as String?,
          inDeliveryFromAttention: json['InDeliveryFromAttention'] as String?,
          inDeliveryFromAddress1: json['InDeliveryFromAddress1'] as String?,
          inDeliveryFromAdd2ress: json['InDeliveryFromAdd2ress'] as String?,
          inDeliveryFromCity: json['InDeliveryFromCity'] as String?,
          inDeliveryFromState: json['InDeliveryFromState'] as String?,
          inDeliveryFromZipCode: json['InDeliveryFromZipCode'] as String?,
          inDeliveryFromCountry: json['InDeliveryFromCountry'] as String?,
          inDeliveryFromCountryId: json['InDeliveryFromCountryId'] as String?,
          inDeliveryFromCrossStreets:
              json['InDeliveryFromCrossStreets'] as String?,
          inDeliveryToLocation: json['InDeliveryToLocation'] as String?,
          inDeliveryToContact: json['InDeliveryToContact'] as String?,
          inDeliveryToContactPhone: json['InDeliveryToContactPhone'] as String?,
          inDeliveryToAlternateContact:
              json['InDeliveryToAlternateContact'] as String?,
          inDeliveryToAlternateContactPhone:
              json['InDeliveryToAlternateContactPhone'] as String?,
          inDeliveryToAttention: json['InDeliveryToAttention'] as String?,
          inDeliveryToAddress1: json['InDeliveryToAddress1'] as String?,
          inDeliveryToAddress2: json['InDeliveryToAddress2'] as String?,
          inDeliveryToCity: json['InDeliveryToCity'] as String?,
          inDeliveryToState: json['InDeliveryToState'] as String?,
          inDeliveryToZipCode: json['InDeliveryToZipCode'] as String?,
          inDeliveryToCountryId: json['InDeliveryToCountryId'] as String?,
          inDeliveryToCountry: json['InDeliveryToCountry'] as String?,
          inDeliveryToContactFax: json['InDeliveryToContactFax'] as String?,
          inDeliveryToCrossStreets: json['InDeliveryToCrossStreets'] as String?,
          inDeliveryDeliveryNotes: json['InDeliveryDeliveryNotes'] as String?,
          inDeliveryCarrierId: json['InDeliveryCarrierId'] as String?,
          inDeliveryCarrier: json['InDeliveryCarrier'] as String?,
          inDeliveryCarrierAccount: json['InDeliveryCarrierAccount'] as String?,
          inDeliveryShipViaId: json['InDeliveryShipViaId'] as String?,
          inDeliveryShipVia: json['InDeliveryShipVia'] as String?,
          inDeliveryInvoiceId: json['InDeliveryInvoiceId'] as String?,
          inDeliveryVendorInvoiceId:
              json['InDeliveryVendorInvoiceId'] as String?,
          inDeliveryEstimatedFreight:
              (json['InDeliveryEstimatedFreight'] as num?)?.toDouble(),
          inDeliveryFreightInvoiceAmount:
              (json['InDeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
          inDeliveryChargeType: json['InDeliveryChargeType'] as String?,
          inDeliveryFreightTrackingNumber:
              json['InDeliveryFreightTrackingNumber'] as String?,
          inDeliveryDropShip: json['InDeliveryDropShip'] as bool?,
          inDeliveryPackageCode: json['InDeliveryPackageCode'] as String?,
          inDeliveryBillPoFreightOnOrder:
              json['InDeliveryBillPoFreightOnOrder'] as bool?,
          inDeliveryOnlineOrderNumber:
              json['InDeliveryOnlineOrderNumber'] as String?,
          inDeliveryOnlineOrderStatus:
              json['InDeliveryOnlineOrderStatus'] as String?,
          inDeliveryDateStamp: json['InDeliveryDateStamp'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesTransfersTransferOrderTransferOrderToJson(
    WebApiModulesTransfersTransferOrderTransferOrder instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('TransferId', instance.transferId);
  writeNotNull('TransferNumber', instance.transferNumber);
  writeNotNull('TransferDate', instance.transferDate);
  writeNotNull('Description', instance.description);
  writeNotNull('Status', instance.status);
  writeNotNull('StatusDate', instance.statusDate);
  writeNotNull('FromWarehouseId', instance.fromWarehouseId);
  writeNotNull('FromWarehouse', instance.fromWarehouse);
  writeNotNull('FromWarehouseCode', instance.fromWarehouseCode);
  writeNotNull('ToWarehouseId', instance.toWarehouseId);
  writeNotNull('ToWarehouse', instance.toWarehouse);
  writeNotNull('ToWarehouseCode', instance.toWarehouseCode);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('HasRentalItem', instance.hasRentalItem);
  writeNotNull('HasSalesItem', instance.hasSalesItem);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('FixedAssetTransferFutureDepreciation',
      instance.fixedAssetTransferFutureDepreciation);
  writeNotNull('RelatedToOrderId', instance.relatedToOrderId);
  writeNotNull('RelatedToOrderNumber', instance.relatedToOrderNumber);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('OfficeLocation', instance.officeLocation);
  writeNotNull('IsReturnTransferOrder', instance.isReturnTransferOrder);
  writeNotNull('PickDate', instance.pickDate);
  writeNotNull('PickTime', instance.pickTime);
  writeNotNull('ShipDate', instance.shipDate);
  writeNotNull('ShipTime', instance.shipTime);
  writeNotNull('RequiredDate', instance.requiredDate);
  writeNotNull('RequiredTime', instance.requiredTime);
  writeNotNull('OutDeliveryId', instance.outDeliveryId);
  writeNotNull('OutDeliveryDeliveryType', instance.outDeliveryDeliveryType);
  writeNotNull('OutDeliveryRequiredDate', instance.outDeliveryRequiredDate);
  writeNotNull('OutDeliveryRequiredTime', instance.outDeliveryRequiredTime);
  writeNotNull('OutDeliveryTargetShipDate', instance.outDeliveryTargetShipDate);
  writeNotNull('OutDeliveryTargetShipTime', instance.outDeliveryTargetShipTime);
  writeNotNull('OutDeliveryDirection', instance.outDeliveryDirection);
  writeNotNull('OutDeliveryAddressType', instance.outDeliveryAddressType);
  writeNotNull('OutDeliveryFromLocation', instance.outDeliveryFromLocation);
  writeNotNull('OutDeliveryFromContact', instance.outDeliveryFromContact);
  writeNotNull(
      'OutDeliveryFromContactPhone', instance.outDeliveryFromContactPhone);
  writeNotNull('OutDeliveryFromAlternateContact',
      instance.outDeliveryFromAlternateContact);
  writeNotNull('OutDeliveryFromAlternateContactPhone',
      instance.outDeliveryFromAlternateContactPhone);
  writeNotNull('OutDeliveryFromAttention', instance.outDeliveryFromAttention);
  writeNotNull('OutDeliveryFromAddress1', instance.outDeliveryFromAddress1);
  writeNotNull('OutDeliveryFromAdd2ress', instance.outDeliveryFromAdd2ress);
  writeNotNull('OutDeliveryFromCity', instance.outDeliveryFromCity);
  writeNotNull('OutDeliveryFromState', instance.outDeliveryFromState);
  writeNotNull('OutDeliveryFromZipCode', instance.outDeliveryFromZipCode);
  writeNotNull('OutDeliveryFromCountry', instance.outDeliveryFromCountry);
  writeNotNull('OutDeliveryFromCountryId', instance.outDeliveryFromCountryId);
  writeNotNull(
      'OutDeliveryFromCrossStreets', instance.outDeliveryFromCrossStreets);
  writeNotNull('OutDeliveryToLocation', instance.outDeliveryToLocation);
  writeNotNull('OutDeliveryToContact', instance.outDeliveryToContact);
  writeNotNull('OutDeliveryToContactPhone', instance.outDeliveryToContactPhone);
  writeNotNull(
      'OutDeliveryToAlternateContact', instance.outDeliveryToAlternateContact);
  writeNotNull('OutDeliveryToAlternateContactPhone',
      instance.outDeliveryToAlternateContactPhone);
  writeNotNull('OutDeliveryToAttention', instance.outDeliveryToAttention);
  writeNotNull('OutDeliveryToAddress1', instance.outDeliveryToAddress1);
  writeNotNull('OutDeliveryToAddress2', instance.outDeliveryToAddress2);
  writeNotNull('OutDeliveryToCity', instance.outDeliveryToCity);
  writeNotNull('OutDeliveryToState', instance.outDeliveryToState);
  writeNotNull('OutDeliveryToZipCode', instance.outDeliveryToZipCode);
  writeNotNull('OutDeliveryToCountryId', instance.outDeliveryToCountryId);
  writeNotNull('OutDeliveryToCountry', instance.outDeliveryToCountry);
  writeNotNull('OutDeliveryToContactFax', instance.outDeliveryToContactFax);
  writeNotNull('OutDeliveryToCrossStreets', instance.outDeliveryToCrossStreets);
  writeNotNull('OutDeliveryDeliveryNotes', instance.outDeliveryDeliveryNotes);
  writeNotNull('OutDeliveryCarrierId', instance.outDeliveryCarrierId);
  writeNotNull('OutDeliveryCarrier', instance.outDeliveryCarrier);
  writeNotNull('OutDeliveryCarrierAccount', instance.outDeliveryCarrierAccount);
  writeNotNull('OutDeliveryShipViaId', instance.outDeliveryShipViaId);
  writeNotNull('OutDeliveryShipVia', instance.outDeliveryShipVia);
  writeNotNull('OutDeliveryInvoiceId', instance.outDeliveryInvoiceId);
  writeNotNull(
      'OutDeliveryVendorInvoiceId', instance.outDeliveryVendorInvoiceId);
  writeNotNull(
      'OutDeliveryEstimatedFreight', instance.outDeliveryEstimatedFreight);
  writeNotNull('OutDeliveryFreightInvoiceAmount',
      instance.outDeliveryFreightInvoiceAmount);
  writeNotNull('OutDeliveryChargeType', instance.outDeliveryChargeType);
  writeNotNull('OutDeliveryFreightTrackingNumber',
      instance.outDeliveryFreightTrackingNumber);
  writeNotNull('OutDeliveryDropShip', instance.outDeliveryDropShip);
  writeNotNull('OutDeliveryPackageCode', instance.outDeliveryPackageCode);
  writeNotNull('OutDeliveryBillPoFreightOnOrder',
      instance.outDeliveryBillPoFreightOnOrder);
  writeNotNull(
      'OutDeliveryOnlineOrderNumber', instance.outDeliveryOnlineOrderNumber);
  writeNotNull('OutDeliveryDateStamp', instance.outDeliveryDateStamp);
  writeNotNull('InDeliveryId', instance.inDeliveryId);
  writeNotNull('InDeliveryDeliveryType', instance.inDeliveryDeliveryType);
  writeNotNull('InDeliveryRequiredDate', instance.inDeliveryRequiredDate);
  writeNotNull('InDeliveryRequiredTime', instance.inDeliveryRequiredTime);
  writeNotNull('InDeliveryTargetShipDate', instance.inDeliveryTargetShipDate);
  writeNotNull('InDeliveryTargetShipTime', instance.inDeliveryTargetShipTime);
  writeNotNull('InDeliveryDirection', instance.inDeliveryDirection);
  writeNotNull('InDeliveryAddressType', instance.inDeliveryAddressType);
  writeNotNull('InDeliveryFromLocation', instance.inDeliveryFromLocation);
  writeNotNull('InDeliveryFromContact', instance.inDeliveryFromContact);
  writeNotNull(
      'InDeliveryFromContactPhone', instance.inDeliveryFromContactPhone);
  writeNotNull('InDeliveryFromAlternateContact',
      instance.inDeliveryFromAlternateContact);
  writeNotNull('InDeliveryFromAlternateContactPhone',
      instance.inDeliveryFromAlternateContactPhone);
  writeNotNull('InDeliveryFromAttention', instance.inDeliveryFromAttention);
  writeNotNull('InDeliveryFromAddress1', instance.inDeliveryFromAddress1);
  writeNotNull('InDeliveryFromAdd2ress', instance.inDeliveryFromAdd2ress);
  writeNotNull('InDeliveryFromCity', instance.inDeliveryFromCity);
  writeNotNull('InDeliveryFromState', instance.inDeliveryFromState);
  writeNotNull('InDeliveryFromZipCode', instance.inDeliveryFromZipCode);
  writeNotNull('InDeliveryFromCountry', instance.inDeliveryFromCountry);
  writeNotNull('InDeliveryFromCountryId', instance.inDeliveryFromCountryId);
  writeNotNull(
      'InDeliveryFromCrossStreets', instance.inDeliveryFromCrossStreets);
  writeNotNull('InDeliveryToLocation', instance.inDeliveryToLocation);
  writeNotNull('InDeliveryToContact', instance.inDeliveryToContact);
  writeNotNull('InDeliveryToContactPhone', instance.inDeliveryToContactPhone);
  writeNotNull(
      'InDeliveryToAlternateContact', instance.inDeliveryToAlternateContact);
  writeNotNull('InDeliveryToAlternateContactPhone',
      instance.inDeliveryToAlternateContactPhone);
  writeNotNull('InDeliveryToAttention', instance.inDeliveryToAttention);
  writeNotNull('InDeliveryToAddress1', instance.inDeliveryToAddress1);
  writeNotNull('InDeliveryToAddress2', instance.inDeliveryToAddress2);
  writeNotNull('InDeliveryToCity', instance.inDeliveryToCity);
  writeNotNull('InDeliveryToState', instance.inDeliveryToState);
  writeNotNull('InDeliveryToZipCode', instance.inDeliveryToZipCode);
  writeNotNull('InDeliveryToCountryId', instance.inDeliveryToCountryId);
  writeNotNull('InDeliveryToCountry', instance.inDeliveryToCountry);
  writeNotNull('InDeliveryToContactFax', instance.inDeliveryToContactFax);
  writeNotNull('InDeliveryToCrossStreets', instance.inDeliveryToCrossStreets);
  writeNotNull('InDeliveryDeliveryNotes', instance.inDeliveryDeliveryNotes);
  writeNotNull('InDeliveryCarrierId', instance.inDeliveryCarrierId);
  writeNotNull('InDeliveryCarrier', instance.inDeliveryCarrier);
  writeNotNull('InDeliveryCarrierAccount', instance.inDeliveryCarrierAccount);
  writeNotNull('InDeliveryShipViaId', instance.inDeliveryShipViaId);
  writeNotNull('InDeliveryShipVia', instance.inDeliveryShipVia);
  writeNotNull('InDeliveryInvoiceId', instance.inDeliveryInvoiceId);
  writeNotNull('InDeliveryVendorInvoiceId', instance.inDeliveryVendorInvoiceId);
  writeNotNull(
      'InDeliveryEstimatedFreight', instance.inDeliveryEstimatedFreight);
  writeNotNull('InDeliveryFreightInvoiceAmount',
      instance.inDeliveryFreightInvoiceAmount);
  writeNotNull('InDeliveryChargeType', instance.inDeliveryChargeType);
  writeNotNull('InDeliveryFreightTrackingNumber',
      instance.inDeliveryFreightTrackingNumber);
  writeNotNull('InDeliveryDropShip', instance.inDeliveryDropShip);
  writeNotNull('InDeliveryPackageCode', instance.inDeliveryPackageCode);
  writeNotNull('InDeliveryBillPoFreightOnOrder',
      instance.inDeliveryBillPoFreightOnOrder);
  writeNotNull(
      'InDeliveryOnlineOrderNumber', instance.inDeliveryOnlineOrderNumber);
  writeNotNull(
      'InDeliveryOnlineOrderStatus', instance.inDeliveryOnlineOrderStatus);
  writeNotNull('InDeliveryDateStamp', instance.inDeliveryDateStamp);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesUtilitiesGLDistributionRefreshGLHistoryRequest
    _$WebApiModulesUtilitiesGLDistributionRefreshGLHistoryRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesUtilitiesGLDistributionRefreshGLHistoryRequest(
          fromDate: json['FromDate'] == null
              ? null
              : DateTime.parse(json['FromDate'] as String),
          toDate: json['ToDate'] == null
              ? null
              : DateTime.parse(json['ToDate'] as String),
        );

Map<String, dynamic>
    _$WebApiModulesUtilitiesGLDistributionRefreshGLHistoryRequestToJson(
        WebApiModulesUtilitiesGLDistributionRefreshGLHistoryRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('FromDate', instance.fromDate?.toIso8601String());
  writeNotNull('ToDate', instance.toDate?.toIso8601String());
  return val;
}

WebApiModulesUtilitiesGLDistributionRefreshGLHistoryResponse
    _$WebApiModulesUtilitiesGLDistributionRefreshGLHistoryResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesUtilitiesGLDistributionRefreshGLHistoryResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesUtilitiesGLDistributionRefreshGLHistoryResponseToJson(
        WebApiModulesUtilitiesGLDistributionRefreshGLHistoryResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesWarehouseCheckInCancelCheckInItemRequest
    _$WebApiModulesWarehouseCheckInCancelCheckInItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckInCancelCheckInItemRequest(
          orderTranId: json['OrderTranId'] as int?,
          internalChar: json['InternalChar'] as String?,
          contractId: json['ContractId'] as String?,
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          vendorId: json['VendorId'] as String?,
          description: json['Description'] as String?,
          quantity: json['Quantity'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckInCancelCheckInItemRequestToJson(
        WebApiModulesWarehouseCheckInCancelCheckInItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderTranId', instance.orderTranId);
  writeNotNull('InternalChar', instance.internalChar);
  writeNotNull('ContractId', instance.contractId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Description', instance.description);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesWarehouseCheckInCancelCheckInItemResponse
    _$WebApiModulesWarehouseCheckInCancelCheckInItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckInCancelCheckInItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckInCancelCheckInItemResponseToJson(
        WebApiModulesWarehouseCheckInCancelCheckInItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesWarehouseCheckInCheckInContractRequest
    _$WebApiModulesWarehouseCheckInCheckInContractRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckInCheckInContractRequest(
          orderId: json['OrderId'] as String?,
          dealId: json['DealId'] as String?,
          departmentId: json['DepartmentId'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckInCheckInContractRequestToJson(
        WebApiModulesWarehouseCheckInCheckInContractRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesWarehouseCheckInCheckInContractResponse
    _$WebApiModulesWarehouseCheckInCheckInContractResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckInCheckInContractResponse(
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckInCheckInContractResponseToJson(
        WebApiModulesWarehouseCheckInCheckInContractResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesWarehouseCheckInCheckInItemRequest
    _$WebApiModulesWarehouseCheckInCheckInItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckInCheckInItemRequest(
          moduleType: json['ModuleType'] as String?,
          contractId: json['ContractId'] as String?,
          code: json['Code'] as String?,
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          vendorId: json['VendorId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          quantity: json['Quantity'] as int?,
          addOrderToContract: json['AddOrderToContract'] as bool?,
          swapItem: json['SwapItem'] as bool?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckInCheckInItemRequestToJson(
    WebApiModulesWarehouseCheckInCheckInItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ModuleType', instance.moduleType);
  writeNotNull('ContractId', instance.contractId);
  writeNotNull('Code', instance.code);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('AddOrderToContract', instance.addOrderToContract);
  writeNotNull('SwapItem', instance.swapItem);
  return val;
}

WebApiModulesWarehouseCheckInHasQuikReceiptRequest
    _$WebApiModulesWarehouseCheckInHasQuikReceiptRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckInHasQuikReceiptRequest(
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckInHasQuikReceiptRequestToJson(
    WebApiModulesWarehouseCheckInHasQuikReceiptRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesWarehouseCheckInOrderInventoryStatusCheckIn
    _$WebApiModulesWarehouseCheckInOrderInventoryStatusCheckInFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckInOrderInventoryStatusCheckIn(
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          quantityOrdered: json['QuantityOrdered'] as int?,
          quantitySub: json['QuantitySub'] as int?,
          quantityStaged: json['QuantityStaged'] as int?,
          quantityOut: json['QuantityOut'] as int?,
          quantityIn: json['QuantityIn'] as int?,
          quantityRemaining: json['QuantityRemaining'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckInOrderInventoryStatusCheckInToJson(
        WebApiModulesWarehouseCheckInOrderInventoryStatusCheckIn instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('QuantitySub', instance.quantitySub);
  writeNotNull('QuantityStaged', instance.quantityStaged);
  writeNotNull('QuantityOut', instance.quantityOut);
  writeNotNull('QuantityIn', instance.quantityIn);
  writeNotNull('QuantityRemaining', instance.quantityRemaining);
  return val;
}

WebApiModulesWarehouseCheckInTCheckInItemResponse
    _$WebApiModulesWarehouseCheckInTCheckInItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckInTCheckInItemResponse(
          contractId: json['ContractId'] as String?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          inventoryId: json['InventoryId'] as String?,
          inventoryClass: json['InventoryClass'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          vendorId: json['VendorId'] as String?,
          inventoryStatus: json['InventoryStatus'] == null
              ? null
              : WebApiModulesWarehouseCheckInOrderInventoryStatusCheckIn
                  .fromJson(json['InventoryStatus'] as Map<String, dynamic>),
          showNewOrder: json['ShowNewOrder'] as bool?,
          showSwap: json['ShowSwap'] as bool?,
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckInTCheckInItemResponseToJson(
    WebApiModulesWarehouseCheckInTCheckInItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('InventoryClass', instance.inventoryClass);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('InventoryStatus', instance.inventoryStatus?.toJson());
  writeNotNull('ShowNewOrder', instance.showNewOrder);
  writeNotNull('ShowSwap', instance.showSwap);
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesWarehouseCheckOutCheckOutAllStagedRequest
    _$WebApiModulesWarehouseCheckOutCheckOutAllStagedRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutCheckOutAllStagedRequest(
          orderId: json['OrderId'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutCheckOutAllStagedRequestToJson(
        WebApiModulesWarehouseCheckOutCheckOutAllStagedRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesWarehouseCheckOutCheckOutAllStagedResponse
    _$WebApiModulesWarehouseCheckOutCheckOutAllStagedResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutCheckOutAllStagedResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutCheckOutAllStagedResponseToJson(
        WebApiModulesWarehouseCheckOutCheckOutAllStagedResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesWarehouseCheckOutCreateOutContractRequest
    _$WebApiModulesWarehouseCheckOutCreateOutContractRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutCreateOutContractRequest(
          orderId: json['OrderId'] as String?,
          officeLocationId: json['OfficeLocationId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutCreateOutContractRequestToJson(
        WebApiModulesWarehouseCheckOutCreateOutContractRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesWarehouseCheckOutCreateOutContractResponse
    _$WebApiModulesWarehouseCheckOutCreateOutContractResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutCreateOutContractResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutCreateOutContractResponseToJson(
        WebApiModulesWarehouseCheckOutCreateOutContractResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesWarehouseCheckOutDecreaseOrderQuantityRequest
    _$WebApiModulesWarehouseCheckOutDecreaseOrderQuantityRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutDecreaseOrderQuantityRequest(
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          quantity: json['Quantity'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutDecreaseOrderQuantityRequestToJson(
        WebApiModulesWarehouseCheckOutDecreaseOrderQuantityRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesWarehouseCheckOutDecreaseOrderQuantityResponse
    _$WebApiModulesWarehouseCheckOutDecreaseOrderQuantityResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutDecreaseOrderQuantityResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutDecreaseOrderQuantityResponseToJson(
        WebApiModulesWarehouseCheckOutDecreaseOrderQuantityResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesWarehouseCheckOutGetPickupLocationsRequest
    _$WebApiModulesWarehouseCheckOutGetPickupLocationsRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutGetPickupLocationsRequest(
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutGetPickupLocationsRequestToJson(
        WebApiModulesWarehouseCheckOutGetPickupLocationsRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesWarehouseCheckOutGetPickupLocationsResponse
    _$WebApiModulesWarehouseCheckOutGetPickupLocationsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutGetPickupLocationsResponse(
          pickupLocations: (json['PickupLocations'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesWarehouseCheckOutPickupLocation.fromJson(
                          e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutGetPickupLocationsResponseToJson(
        WebApiModulesWarehouseCheckOutGetPickupLocationsResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PickupLocations',
      instance.pickupLocations?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseCheckOutIsValidStorageContainerRequest
    _$WebApiModulesWarehouseCheckOutIsValidStorageContainerRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutIsValidStorageContainerRequest(
          barcode: json['Barcode'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          orderId: json['OrderId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutIsValidStorageContainerRequestToJson(
        WebApiModulesWarehouseCheckOutIsValidStorageContainerRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Barcode', instance.barcode);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('OrderId', instance.orderId);
  return val;
}

WebApiModulesWarehouseCheckOutIsValidStorageContainerResponse
    _$WebApiModulesWarehouseCheckOutIsValidStorageContainerResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutIsValidStorageContainerResponse(
          barcode: json['Barcode'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          storageContainerItemId: json['StorageContainerItemId'] as int?,
          status: json['Status'] as int?,
          message: json['Message'] as String?,
          description: json['Description'] as String?,
          pickupLocationDescription:
              json['PickupLocationDescription'] as String?,
          pickupLocationId: json['PickupLocationId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutIsValidStorageContainerResponseToJson(
        WebApiModulesWarehouseCheckOutIsValidStorageContainerResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Barcode', instance.barcode);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('StorageContainerItemId', instance.storageContainerItemId);
  writeNotNull('Status', instance.status);
  writeNotNull('Message', instance.message);
  writeNotNull('Description', instance.description);
  writeNotNull('PickupLocationDescription', instance.pickupLocationDescription);
  writeNotNull('PickupLocationId', instance.pickupLocationId);
  return val;
}

WebApiModulesWarehouseCheckOutMoveStagedItemRequest
    _$WebApiModulesWarehouseCheckOutMoveStagedItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutMoveStagedItemRequest(
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          vendorId: json['VendorId'] as String?,
          contractId: json['ContractId'] as String?,
          code: json['Code'] as String?,
          quantity: (json['Quantity'] as num?)?.toDouble(),
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutMoveStagedItemRequestToJson(
        WebApiModulesWarehouseCheckOutMoveStagedItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('ContractId', instance.contractId);
  writeNotNull('Code', instance.code);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesWarehouseCheckOutMoveStagedItemResponse
    _$WebApiModulesWarehouseCheckOutMoveStagedItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutMoveStagedItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutMoveStagedItemResponseToJson(
        WebApiModulesWarehouseCheckOutMoveStagedItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesWarehouseCheckOutOrderHasStorageContainerRequest
    _$WebApiModulesWarehouseCheckOutOrderHasStorageContainerRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutOrderHasStorageContainerRequest(
          orderId: json['OrderId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutOrderHasStorageContainerRequestToJson(
        WebApiModulesWarehouseCheckOutOrderHasStorageContainerRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  return val;
}

WebApiModulesWarehouseCheckOutOrderHasStorageContainerResponse
    _$WebApiModulesWarehouseCheckOutOrderHasStorageContainerResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutOrderHasStorageContainerResponse(
          orderHasStorageContainer: json['OrderHasStorageContainer'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutOrderHasStorageContainerResponseToJson(
        WebApiModulesWarehouseCheckOutOrderHasStorageContainerResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderHasStorageContainer', instance.orderHasStorageContainer);
  return val;
}

WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOut
    _$WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOutFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOut(
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          classification: json['Classification'] as String?,
          quantityOrdered: json['QuantityOrdered'] as int?,
          quantitySub: json['QuantitySub'] as int?,
          quantityStaged: json['QuantityStaged'] as int?,
          quantityOut: json['QuantityOut'] as int?,
          quantityIn: json['QuantityIn'] as int?,
          quantityRemaining: json['QuantityRemaining'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOutToJson(
        WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOut instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('Classification', instance.classification);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('QuantitySub', instance.quantitySub);
  writeNotNull('QuantityStaged', instance.quantityStaged);
  writeNotNull('QuantityOut', instance.quantityOut);
  writeNotNull('QuantityIn', instance.quantityIn);
  writeNotNull('QuantityRemaining', instance.quantityRemaining);
  return val;
}

WebApiModulesWarehouseCheckOutPickupLocation
    _$WebApiModulesWarehouseCheckOutPickupLocationFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutPickupLocation(
          pickupLocationId: json['PickupLocationId'] as int?,
          description: json['Description'] as String?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutPickupLocationToJson(
    WebApiModulesWarehouseCheckOutPickupLocation instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PickupLocationId', instance.pickupLocationId);
  writeNotNull('Description', instance.description);
  return val;
}

WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemRequest
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemRequest(
          orderId: json['OrderId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemRequestToJson(
        WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemResponse
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemResponseToJson(
        WebApiModulesWarehouseCheckOutSelectAllNoneStageHoldingItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemRequest
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemRequest(
          orderId: json['OrderId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemRequestToJson(
        WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemResponse
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemResponseToJson(
        WebApiModulesWarehouseCheckOutSelectAllNoneStageQuantityItemResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesWarehouseCheckOutStageItemRequest
    _$WebApiModulesWarehouseCheckOutStageItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStageItemRequest(
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          vendorId: json['VendorId'] as String?,
          code: json['Code'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          quantity: json['Quantity'] as int?,
          unstageItem: json['UnstageItem'] as bool?,
          addItemToOrder: json['AddItemToOrder'] as bool?,
          addCompleteToOrder: json['AddCompleteToOrder'] as bool?,
          stageIncompleteContainer: json['StageIncompleteContainer'] as bool?,
          transferRepair: json['TransferRepair'] as bool?,
          releaseFromRepair: json['ReleaseFromRepair'] as bool?,
          consignorId: json['ConsignorId'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutStageItemRequestToJson(
    WebApiModulesWarehouseCheckOutStageItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Code', instance.code);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('UnstageItem', instance.unstageItem);
  writeNotNull('AddItemToOrder', instance.addItemToOrder);
  writeNotNull('AddCompleteToOrder', instance.addCompleteToOrder);
  writeNotNull('StageIncompleteContainer', instance.stageIncompleteContainer);
  writeNotNull('TransferRepair', instance.transferRepair);
  writeNotNull('ReleaseFromRepair', instance.releaseFromRepair);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  return val;
}

WebApiModulesWarehouseCheckOutStageItemResponse
    _$WebApiModulesWarehouseCheckOutStageItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStageItemResponse(
          inventoryStatus: json['InventoryStatus'] == null
              ? null
              : WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOut
                  .fromJson(json['InventoryStatus'] as Map<String, dynamic>),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          inventoryId: json['InventoryId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          quantityStaged: json['QuantityStaged'] as int?,
          showAddItemToOrder: json['ShowAddItemToOrder'] as bool?,
          showTransferRepair: json['ShowTransferRepair'] as bool?,
          showAddCompleteToOrder: json['ShowAddCompleteToOrder'] as bool?,
          showUnstage: json['ShowUnstage'] as bool?,
          showStageIncompleteContainer:
              json['ShowStageIncompleteContainer'] as bool?,
          showReleaseFromRepair: json['ShowReleaseFromRepair'] as bool?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutStageItemResponseToJson(
    WebApiModulesWarehouseCheckOutStageItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryStatus', instance.inventoryStatus?.toJson());
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('QuantityStaged', instance.quantityStaged);
  writeNotNull('ShowAddItemToOrder', instance.showAddItemToOrder);
  writeNotNull('ShowTransferRepair', instance.showTransferRepair);
  writeNotNull('ShowAddCompleteToOrder', instance.showAddCompleteToOrder);
  writeNotNull('ShowUnstage', instance.showUnstage);
  writeNotNull(
      'ShowStageIncompleteContainer', instance.showStageIncompleteContainer);
  writeNotNull('ShowReleaseFromRepair', instance.showReleaseFromRepair);
  return val;
}

WebApiModulesWarehouseCheckOutStageSerialNumber
    _$WebApiModulesWarehouseCheckOutStageSerialNumberFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStageSerialNumber(
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          inventoryId: json['InventoryId'] as String?,
          rentalItemId: json['RentalItemId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          serialNumber: json['SerialNumber'] as String?,
          currentMeter: (json['CurrentMeter'] as num?)?.toDouble(),
          inventoryStatus: json['InventoryStatus'] as String?,
          statusType: json['StatusType'] as String?,
          isStaged: json['IsStaged'] as bool?,
          color: json['Color'] as String?,
          textColor: json['TextColor'] as String?,
          ownership: json['Ownership'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
          consignorColor: json['ConsignorColor'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          consignorAgreementNumber: json['ConsignorAgreementNumber'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutStageSerialNumberToJson(
    WebApiModulesWarehouseCheckOutStageSerialNumber instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('RentalItemId', instance.rentalItemId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('SerialNumber', instance.serialNumber);
  writeNotNull('CurrentMeter', instance.currentMeter);
  writeNotNull('InventoryStatus', instance.inventoryStatus);
  writeNotNull('StatusType', instance.statusType);
  writeNotNull('IsStaged', instance.isStaged);
  writeNotNull('Color', instance.color);
  writeNotNull('TextColor', instance.textColor);
  writeNotNull('Ownership', instance.ownership);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  writeNotNull('ConsignorColor', instance.consignorColor);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('ConsignorAgreementNumber', instance.consignorAgreementNumber);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionRequest
    _$WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionRequest(
          sessionId: json['SessionId'] as String?,
          code: json['Code'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          quantity: json['Quantity'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionRequestToJson(
        WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('Code', instance.code);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionResponse
    _$WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionResponseToJson(
        WebApiModulesWarehouseCheckOutStagingAddSubstituteItemToSessionResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  return val;
}

WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionRequest
    _$WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionRequest(
          sessionId: json['SessionId'] as String?,
          quantity: json['Quantity'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionRequestToJson(
        WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionResponse
    _$WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionResponseToJson(
        WebApiModulesWarehouseCheckOutStagingApplySubstituteSessionResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionRequest
    _$WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionRequest(
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionRequestToJson(
        WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  return val;
}

WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionResponse
    _$WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          sessionId: json['SessionId'] as String?,
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          iCode: json['ICode'] as String?,
          description: json['Description'] as String?,
          quantityOrdered: (json['QuantityOrdered'] as num?)?.toDouble(),
          quantityRemaining: (json['QuantityRemaining'] as num?)?.toDouble(),
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionResponseToJson(
        WebApiModulesWarehouseCheckOutStagingStartSubstituteSessionResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('Description', instance.description);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('QuantityRemaining', instance.quantityRemaining);
  return val;
}

WebApiModulesWarehouseCheckOutStagingTabsResponse
    _$WebApiModulesWarehouseCheckOutStagingTabsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStagingTabsResponse(
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          quantityTab: json['QuantityTab'] as bool?,
          holdingTab: json['HoldingTab'] as bool?,
          serialTab: json['SerialTab'] as bool?,
          usageTab: json['UsageTab'] as bool?,
          consignmentTab: json['ConsignmentTab'] as bool?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutStagingTabsResponseToJson(
    WebApiModulesWarehouseCheckOutStagingTabsResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('QuantityTab', instance.quantityTab);
  writeNotNull('HoldingTab', instance.holdingTab);
  writeNotNull('SerialTab', instance.serialTab);
  writeNotNull('UsageTab', instance.usageTab);
  writeNotNull('ConsignmentTab', instance.consignmentTab);
  return val;
}

WebApiModulesWarehouseCheckOutStorageContainerGrid
    _$WebApiModulesWarehouseCheckOutStorageContainerGridFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStorageContainerGrid(
          storageContainerId: json['StorageContainerId'] as int?,
          storageContainerItemId: json['StorageContainerItemId'] as int?,
          description: json['Description'] as String?,
          pickUpLocation: json['PickUpLocation'] as String?,
          storageContainerBarcode: json['StorageContainerBarcode'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutStorageContainerGridToJson(
    WebApiModulesWarehouseCheckOutStorageContainerGrid instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StorageContainerId', instance.storageContainerId);
  writeNotNull('StorageContainerItemId', instance.storageContainerItemId);
  writeNotNull('Description', instance.description);
  writeNotNull('PickUpLocation', instance.pickUpLocation);
  writeNotNull('StorageContainerBarcode', instance.storageContainerBarcode);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseCheckOutStorageContainerItemsGrid
    _$WebApiModulesWarehouseCheckOutStorageContainerItemsGridFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStorageContainerItemsGrid(
          storageContainerItemId: json['StorageContainerItemId'] as int?,
          iCode: json['ICode'] as String?,
          stagedBarcode: json['StagedBarcode'] as String?,
          quantityOrdered: json['QuantityOrdered'] as int?,
          staged: json['Staged'] as int?,
          orderBy: json['OrderBy'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStorageContainerItemsGridToJson(
        WebApiModulesWarehouseCheckOutStorageContainerItemsGrid instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StorageContainerItemId', instance.storageContainerItemId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('StagedBarcode', instance.stagedBarcode);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('Staged', instance.staged);
  writeNotNull('OrderBy', instance.orderBy);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseCheckOutStorageContainerStagedItemModel
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemModelFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStorageContainerStagedItemModel(
          storageContainerBarcode: json['StorageContainerBarcode'] as String?,
          storageContainerDescription:
              json['StorageContainerDescription'] as String?,
          pickupLocation: json['PickupLocation'] as String?,
          iCode: json['ICode'] as String?,
          iCodeDescription: json['ICodeDescription'] as String?,
          stagedBarcode: json['StagedBarcode'] as String?,
          ordered: (json['Ordered'] as num?)?.toDouble(),
          staged: (json['Staged'] as num?)?.toDouble(),
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemModelToJson(
        WebApiModulesWarehouseCheckOutStorageContainerStagedItemModel
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StorageContainerBarcode', instance.storageContainerBarcode);
  writeNotNull(
      'StorageContainerDescription', instance.storageContainerDescription);
  writeNotNull('PickupLocation', instance.pickupLocation);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('ICodeDescription', instance.iCodeDescription);
  writeNotNull('StagedBarcode', instance.stagedBarcode);
  writeNotNull('Ordered', instance.ordered);
  writeNotNull('Staged', instance.staged);
  return val;
}

WebApiModulesWarehouseCheckOutStorageContainerStagedItemsRequest
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemsRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStorageContainerStagedItemsRequest(
          orderId: json['OrderId'] as String?,
          storageContainerBarcodesOnly:
              json['StorageContainerBarcodesOnly'] as bool?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemsRequestToJson(
        WebApiModulesWarehouseCheckOutStorageContainerStagedItemsRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull(
      'StorageContainerBarcodesOnly', instance.storageContainerBarcodesOnly);
  return val;
}

WebApiModulesWarehouseCheckOutStorageContainerStagedItemsResponse
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutStorageContainerStagedItemsResponse(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesWarehouseCheckOutStorageContainerStagedItemModel
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutStorageContainerStagedItemsResponseToJson(
        WebApiModulesWarehouseCheckOutStorageContainerStagedItemsResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseCheckOutUnstageItemRequest
    _$WebApiModulesWarehouseCheckOutUnstageItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutUnstageItemRequest(
          orderId: json['OrderId'] as String?,
          orderItemId: json['OrderItemId'] as String?,
          vendorId: json['VendorId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
          code: json['Code'] as String?,
          quantity: json['Quantity'] as int?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutUnstageItemRequestToJson(
    WebApiModulesWarehouseCheckOutUnstageItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderItemId', instance.orderItemId);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  writeNotNull('Code', instance.code);
  writeNotNull('Quantity', instance.quantity);
  return val;
}

WebApiModulesWarehouseCheckOutUnstageItemResponse
    _$WebApiModulesWarehouseCheckOutUnstageItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutUnstageItemResponse(
          inventoryStatus: json['InventoryStatus'] == null
              ? null
              : WebApiModulesWarehouseCheckOutOrderInventoryStatusCheckOut
                  .fromJson(json['InventoryStatus'] as Map<String, dynamic>),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
          inventoryId: json['InventoryId'] as String?,
          itemId: json['ItemId'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignorAgreementId: json['ConsignorAgreementId'] as String?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseCheckOutUnstageItemResponseToJson(
    WebApiModulesWarehouseCheckOutUnstageItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryStatus', instance.inventoryStatus?.toJson());
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ItemId', instance.itemId);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('ConsignorAgreementId', instance.consignorAgreementId);
  return val;
}

WebApiModulesWarehouseCheckOutUpdatePickupLocationRequest
    _$WebApiModulesWarehouseCheckOutUpdatePickupLocationRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutUpdatePickupLocationRequest(
          storageContainerItemId: json['StorageContainerItemId'] as String?,
          pickupLocationId: json['PickupLocationId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutUpdatePickupLocationRequestToJson(
        WebApiModulesWarehouseCheckOutUpdatePickupLocationRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StorageContainerItemId', instance.storageContainerItemId);
  writeNotNull('PickupLocationId', instance.pickupLocationId);
  return val;
}

WebApiModulesWarehouseCheckOutUpdatePickupLocationResponse
    _$WebApiModulesWarehouseCheckOutUpdatePickupLocationResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseCheckOutUpdatePickupLocationResponse(
          message: json['Message'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseCheckOutUpdatePickupLocationResponseToJson(
        WebApiModulesWarehouseCheckOutUpdatePickupLocationResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Message', instance.message);
  return val;
}

WebApiModulesWarehouseContractCancelContractRequest
    _$WebApiModulesWarehouseContractCancelContractRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseContractCancelContractRequest(
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseContractCancelContractRequestToJson(
        WebApiModulesWarehouseContractCancelContractRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesWarehouseContractContract
    _$WebApiModulesWarehouseContractContractFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseContractContract(
          contractId: json['ContractId'] as String?,
          contractNumber: json['ContractNumber'] as String?,
          contractType: json['ContractType'] as String?,
          contractDate: json['ContractDate'] as String?,
          contractTime: json['ContractTime'] as String?,
          locationId: json['LocationId'] as String?,
          locationCode: json['LocationCode'] as String?,
          location: json['Location'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          customerId: json['CustomerId'] as String?,
          customer: json['Customer'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
          requisitionNumber: json['RequisitionNumber'] as String?,
          vendorId: json['VendorId'] as String?,
          vendor: json['Vendor'] as String?,
          isMigrated: json['IsMigrated'] as bool?,
          needReconcile: json['NeedReconcile'] as bool?,
          pendingExchange: json['PendingExchange'] as bool?,
          exchangeContractId: json['ExchangeContractId'] as String?,
          rental: json['Rental'] as bool?,
          sales: json['Sales'] as bool?,
          exchange: json['Exchange'] as bool?,
          inputByUserId: json['InputByUserId'] as String?,
          inputByUser: json['InputByUser'] as String?,
          dealInactive: json['DealInactive'] as bool?,
          truck: json['Truck'] as bool?,
          billingDate: json['BillingDate'] as String?,
          billingDateChangeReason: json['BillingDateChangeReason'] as String?,
          lastBillingDateChangeReason:
              json['LastBillingDateChangeReason'] as String?,
          billingDateAdjusted: json['BillingDateAdjusted'] as bool?,
          hasVoId: json['HasVoId'] as bool?,
          sessionId: json['SessionId'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          poOrderDescription: json['PoOrderDescription'] as String?,
          deliveryId: json['DeliveryId'] as String?,
          deliveryDeliveryType: json['DeliveryDeliveryType'] as String?,
          deliveryRequiredDate: json['DeliveryRequiredDate'] as String?,
          deliveryRequiredTime: json['DeliveryRequiredTime'] as String?,
          deliveryTargetShipDate: json['DeliveryTargetShipDate'] as String?,
          deliveryTargetShipTime: json['DeliveryTargetShipTime'] as String?,
          deliveryDirection: json['DeliveryDirection'] as String?,
          deliveryAddressType: json['DeliveryAddressType'] as String?,
          deliveryFromLocation: json['DeliveryFromLocation'] as String?,
          deliveryFromContact: json['DeliveryFromContact'] as String?,
          deliveryFromContactPhone: json['DeliveryFromContactPhone'] as String?,
          deliveryFromAlternateContact:
              json['DeliveryFromAlternateContact'] as String?,
          deliveryFromAlternateContactPhone:
              json['DeliveryFromAlternateContactPhone'] as String?,
          deliveryFromAttention: json['DeliveryFromAttention'] as String?,
          deliveryFromAddress1: json['DeliveryFromAddress1'] as String?,
          deliveryFromAdd2ress: json['DeliveryFromAdd2ress'] as String?,
          deliveryFromCity: json['DeliveryFromCity'] as String?,
          deliveryFromState: json['DeliveryFromState'] as String?,
          deliveryFromZipCode: json['DeliveryFromZipCode'] as String?,
          deliveryFromCountry: json['DeliveryFromCountry'] as String?,
          deliveryFromCountryId: json['DeliveryFromCountryId'] as String?,
          deliveryFromCrossStreets: json['DeliveryFromCrossStreets'] as String?,
          deliveryToLocation: json['DeliveryToLocation'] as String?,
          deliveryToContact: json['DeliveryToContact'] as String?,
          deliveryToContactPhone: json['DeliveryToContactPhone'] as String?,
          deliveryToAlternateContact:
              json['DeliveryToAlternateContact'] as String?,
          deliveryToAlternateContactPhone:
              json['DeliveryToAlternateContactPhone'] as String?,
          deliveryToAttention: json['DeliveryToAttention'] as String?,
          deliveryToAddress1: json['DeliveryToAddress1'] as String?,
          deliveryToAddress2: json['DeliveryToAddress2'] as String?,
          deliveryToCity: json['DeliveryToCity'] as String?,
          deliveryToState: json['DeliveryToState'] as String?,
          deliveryToZipCode: json['DeliveryToZipCode'] as String?,
          deliveryToCountryId: json['DeliveryToCountryId'] as String?,
          deliveryToCountry: json['DeliveryToCountry'] as String?,
          deliveryToContactFax: json['DeliveryToContactFax'] as String?,
          deliveryToCrossStreets: json['DeliveryToCrossStreets'] as String?,
          deliveryDeliveryNotes: json['DeliveryDeliveryNotes'] as String?,
          deliveryCarrierId: json['DeliveryCarrierId'] as String?,
          deliveryCarrier: json['DeliveryCarrier'] as String?,
          deliveryCarrierAccount: json['DeliveryCarrierAccount'] as String?,
          deliveryShipViaId: json['DeliveryShipViaId'] as String?,
          deliveryShipVia: json['DeliveryShipVia'] as String?,
          deliveryInvoiceId: json['DeliveryInvoiceId'] as String?,
          deliveryVendorInvoiceId: json['DeliveryVendorInvoiceId'] as String?,
          deliveryEstimatedFreight:
              (json['DeliveryEstimatedFreight'] as num?)?.toDouble(),
          deliveryFreightInvoiceAmount:
              (json['DeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
          deliveryChargeType: json['DeliveryChargeType'] as String?,
          deliveryFreightTrackingNumber:
              json['DeliveryFreightTrackingNumber'] as String?,
          deliveryFreightTrackingUrl:
              json['DeliveryFreightTrackingUrl'] as String?,
          deliveryDropShip: json['DeliveryDropShip'] as bool?,
          deliveryPackageCode: json['DeliveryPackageCode'] as String?,
          deliveryBillPoFreightOnOrder:
              json['DeliveryBillPoFreightOnOrder'] as bool?,
          deliveryOnlineOrderNumber:
              json['DeliveryOnlineOrderNumber'] as String?,
          deliveryOnlineOrderStatus:
              json['DeliveryOnlineOrderStatus'] as String?,
          deliveryToVenue: json['DeliveryToVenue'] as String?,
          deliveryToVenueId: json['DeliveryToVenueId'] as String?,
          deliveryDateStamp: json['DeliveryDateStamp'] as String?,
          note: json['Note'] as String?,
          printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
          termsConditionsId: json['TermsConditionsId'] as String?,
          quikReceiptTermsConditionsId:
              json['QuikReceiptTermsConditionsId'] as String?,
          quikReceiptTermsConditions:
              json['QuikReceiptTermsConditions'] as String?,
          termsConditions: json['TermsConditions'] as String?,
          containerId: json['ContainerId'] as String?,
          containerItemId: json['ContainerItemId'] as String?,
          containerDescription: json['ContainerDescription'] as String?,
          containerScannableBarCode:
              json['ContainerScannableBarCode'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesWarehouseContractContractToJson(
    WebApiModulesWarehouseContractContract instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('ContractNumber', instance.contractNumber);
  writeNotNull('ContractType', instance.contractType);
  writeNotNull('ContractDate', instance.contractDate);
  writeNotNull('ContractTime', instance.contractTime);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('LocationCode', instance.locationCode);
  writeNotNull('Location', instance.location);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderNumber', instance.purchaseOrderNumber);
  writeNotNull('RequisitionNumber', instance.requisitionNumber);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('IsMigrated', instance.isMigrated);
  writeNotNull('NeedReconcile', instance.needReconcile);
  writeNotNull('PendingExchange', instance.pendingExchange);
  writeNotNull('ExchangeContractId', instance.exchangeContractId);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('Exchange', instance.exchange);
  writeNotNull('InputByUserId', instance.inputByUserId);
  writeNotNull('InputByUser', instance.inputByUser);
  writeNotNull('DealInactive', instance.dealInactive);
  writeNotNull('Truck', instance.truck);
  writeNotNull('BillingDate', instance.billingDate);
  writeNotNull('BillingDateChangeReason', instance.billingDateChangeReason);
  writeNotNull(
      'LastBillingDateChangeReason', instance.lastBillingDateChangeReason);
  writeNotNull('BillingDateAdjusted', instance.billingDateAdjusted);
  writeNotNull('HasVoId', instance.hasVoId);
  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('PoOrderDescription', instance.poOrderDescription);
  writeNotNull('DeliveryId', instance.deliveryId);
  writeNotNull('DeliveryDeliveryType', instance.deliveryDeliveryType);
  writeNotNull('DeliveryRequiredDate', instance.deliveryRequiredDate);
  writeNotNull('DeliveryRequiredTime', instance.deliveryRequiredTime);
  writeNotNull('DeliveryTargetShipDate', instance.deliveryTargetShipDate);
  writeNotNull('DeliveryTargetShipTime', instance.deliveryTargetShipTime);
  writeNotNull('DeliveryDirection', instance.deliveryDirection);
  writeNotNull('DeliveryAddressType', instance.deliveryAddressType);
  writeNotNull('DeliveryFromLocation', instance.deliveryFromLocation);
  writeNotNull('DeliveryFromContact', instance.deliveryFromContact);
  writeNotNull('DeliveryFromContactPhone', instance.deliveryFromContactPhone);
  writeNotNull(
      'DeliveryFromAlternateContact', instance.deliveryFromAlternateContact);
  writeNotNull('DeliveryFromAlternateContactPhone',
      instance.deliveryFromAlternateContactPhone);
  writeNotNull('DeliveryFromAttention', instance.deliveryFromAttention);
  writeNotNull('DeliveryFromAddress1', instance.deliveryFromAddress1);
  writeNotNull('DeliveryFromAdd2ress', instance.deliveryFromAdd2ress);
  writeNotNull('DeliveryFromCity', instance.deliveryFromCity);
  writeNotNull('DeliveryFromState', instance.deliveryFromState);
  writeNotNull('DeliveryFromZipCode', instance.deliveryFromZipCode);
  writeNotNull('DeliveryFromCountry', instance.deliveryFromCountry);
  writeNotNull('DeliveryFromCountryId', instance.deliveryFromCountryId);
  writeNotNull('DeliveryFromCrossStreets', instance.deliveryFromCrossStreets);
  writeNotNull('DeliveryToLocation', instance.deliveryToLocation);
  writeNotNull('DeliveryToContact', instance.deliveryToContact);
  writeNotNull('DeliveryToContactPhone', instance.deliveryToContactPhone);
  writeNotNull(
      'DeliveryToAlternateContact', instance.deliveryToAlternateContact);
  writeNotNull('DeliveryToAlternateContactPhone',
      instance.deliveryToAlternateContactPhone);
  writeNotNull('DeliveryToAttention', instance.deliveryToAttention);
  writeNotNull('DeliveryToAddress1', instance.deliveryToAddress1);
  writeNotNull('DeliveryToAddress2', instance.deliveryToAddress2);
  writeNotNull('DeliveryToCity', instance.deliveryToCity);
  writeNotNull('DeliveryToState', instance.deliveryToState);
  writeNotNull('DeliveryToZipCode', instance.deliveryToZipCode);
  writeNotNull('DeliveryToCountryId', instance.deliveryToCountryId);
  writeNotNull('DeliveryToCountry', instance.deliveryToCountry);
  writeNotNull('DeliveryToContactFax', instance.deliveryToContactFax);
  writeNotNull('DeliveryToCrossStreets', instance.deliveryToCrossStreets);
  writeNotNull('DeliveryDeliveryNotes', instance.deliveryDeliveryNotes);
  writeNotNull('DeliveryCarrierId', instance.deliveryCarrierId);
  writeNotNull('DeliveryCarrier', instance.deliveryCarrier);
  writeNotNull('DeliveryCarrierAccount', instance.deliveryCarrierAccount);
  writeNotNull('DeliveryShipViaId', instance.deliveryShipViaId);
  writeNotNull('DeliveryShipVia', instance.deliveryShipVia);
  writeNotNull('DeliveryInvoiceId', instance.deliveryInvoiceId);
  writeNotNull('DeliveryVendorInvoiceId', instance.deliveryVendorInvoiceId);
  writeNotNull('DeliveryEstimatedFreight', instance.deliveryEstimatedFreight);
  writeNotNull(
      'DeliveryFreightInvoiceAmount', instance.deliveryFreightInvoiceAmount);
  writeNotNull('DeliveryChargeType', instance.deliveryChargeType);
  writeNotNull(
      'DeliveryFreightTrackingNumber', instance.deliveryFreightTrackingNumber);
  writeNotNull(
      'DeliveryFreightTrackingUrl', instance.deliveryFreightTrackingUrl);
  writeNotNull('DeliveryDropShip', instance.deliveryDropShip);
  writeNotNull('DeliveryPackageCode', instance.deliveryPackageCode);
  writeNotNull(
      'DeliveryBillPoFreightOnOrder', instance.deliveryBillPoFreightOnOrder);
  writeNotNull('DeliveryOnlineOrderNumber', instance.deliveryOnlineOrderNumber);
  writeNotNull('DeliveryOnlineOrderStatus', instance.deliveryOnlineOrderStatus);
  writeNotNull('DeliveryToVenue', instance.deliveryToVenue);
  writeNotNull('DeliveryToVenueId', instance.deliveryToVenueId);
  writeNotNull('DeliveryDateStamp', instance.deliveryDateStamp);
  writeNotNull('Note', instance.note);
  writeNotNull('PrintNoteOnOrder', instance.printNoteOnOrder);
  writeNotNull('TermsConditionsId', instance.termsConditionsId);
  writeNotNull(
      'QuikReceiptTermsConditionsId', instance.quikReceiptTermsConditionsId);
  writeNotNull(
      'QuikReceiptTermsConditions', instance.quikReceiptTermsConditions);
  writeNotNull('TermsConditions', instance.termsConditions);
  writeNotNull('ContainerId', instance.containerId);
  writeNotNull('ContainerItemId', instance.containerItemId);
  writeNotNull('ContainerDescription', instance.containerDescription);
  writeNotNull('ContainerScannableBarCode', instance.containerScannableBarCode);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseContractContractDetailResponse
    _$WebApiModulesWarehouseContractContractDetailResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseContractContractDetailResponse(
          contractId: json['ContractId'] as String?,
          contractNumber: json['ContractNumber'] as String?,
          contractType: json['ContractType'] as String?,
          contractDate: json['ContractDate'] as String?,
          contractTime: json['ContractTime'] as String?,
          locationId: json['LocationId'] as String?,
          locationCode: json['LocationCode'] as String?,
          location: json['Location'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          customerId: json['CustomerId'] as String?,
          customer: json['Customer'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
          requisitionNumber: json['RequisitionNumber'] as String?,
          vendorId: json['VendorId'] as String?,
          vendor: json['Vendor'] as String?,
          isMigrated: json['IsMigrated'] as bool?,
          needReconcile: json['NeedReconcile'] as bool?,
          pendingExchange: json['PendingExchange'] as bool?,
          exchangeContractId: json['ExchangeContractId'] as String?,
          rental: json['Rental'] as bool?,
          sales: json['Sales'] as bool?,
          exchange: json['Exchange'] as bool?,
          inputByUserId: json['InputByUserId'] as String?,
          inputByUser: json['InputByUser'] as String?,
          dealInactive: json['DealInactive'] as bool?,
          truck: json['Truck'] as bool?,
          billingDate: json['BillingDate'] as String?,
          billingDateChangeReason: json['BillingDateChangeReason'] as String?,
          lastBillingDateChangeReason:
              json['LastBillingDateChangeReason'] as String?,
          billingDateAdjusted: json['BillingDateAdjusted'] as bool?,
          hasVoId: json['HasVoId'] as bool?,
          sessionId: json['SessionId'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          poOrderDescription: json['PoOrderDescription'] as String?,
          deliveryId: json['DeliveryId'] as String?,
          deliveryDeliveryType: json['DeliveryDeliveryType'] as String?,
          deliveryRequiredDate: json['DeliveryRequiredDate'] as String?,
          deliveryRequiredTime: json['DeliveryRequiredTime'] as String?,
          deliveryTargetShipDate: json['DeliveryTargetShipDate'] as String?,
          deliveryTargetShipTime: json['DeliveryTargetShipTime'] as String?,
          deliveryDirection: json['DeliveryDirection'] as String?,
          deliveryAddressType: json['DeliveryAddressType'] as String?,
          deliveryFromLocation: json['DeliveryFromLocation'] as String?,
          deliveryFromContact: json['DeliveryFromContact'] as String?,
          deliveryFromContactPhone: json['DeliveryFromContactPhone'] as String?,
          deliveryFromAlternateContact:
              json['DeliveryFromAlternateContact'] as String?,
          deliveryFromAlternateContactPhone:
              json['DeliveryFromAlternateContactPhone'] as String?,
          deliveryFromAttention: json['DeliveryFromAttention'] as String?,
          deliveryFromAddress1: json['DeliveryFromAddress1'] as String?,
          deliveryFromAdd2ress: json['DeliveryFromAdd2ress'] as String?,
          deliveryFromCity: json['DeliveryFromCity'] as String?,
          deliveryFromState: json['DeliveryFromState'] as String?,
          deliveryFromZipCode: json['DeliveryFromZipCode'] as String?,
          deliveryFromCountry: json['DeliveryFromCountry'] as String?,
          deliveryFromCountryId: json['DeliveryFromCountryId'] as String?,
          deliveryFromCrossStreets: json['DeliveryFromCrossStreets'] as String?,
          deliveryToLocation: json['DeliveryToLocation'] as String?,
          deliveryToContact: json['DeliveryToContact'] as String?,
          deliveryToContactPhone: json['DeliveryToContactPhone'] as String?,
          deliveryToAlternateContact:
              json['DeliveryToAlternateContact'] as String?,
          deliveryToAlternateContactPhone:
              json['DeliveryToAlternateContactPhone'] as String?,
          deliveryToAttention: json['DeliveryToAttention'] as String?,
          deliveryToAddress1: json['DeliveryToAddress1'] as String?,
          deliveryToAddress2: json['DeliveryToAddress2'] as String?,
          deliveryToCity: json['DeliveryToCity'] as String?,
          deliveryToState: json['DeliveryToState'] as String?,
          deliveryToZipCode: json['DeliveryToZipCode'] as String?,
          deliveryToCountryId: json['DeliveryToCountryId'] as String?,
          deliveryToCountry: json['DeliveryToCountry'] as String?,
          deliveryToContactFax: json['DeliveryToContactFax'] as String?,
          deliveryToCrossStreets: json['DeliveryToCrossStreets'] as String?,
          deliveryDeliveryNotes: json['DeliveryDeliveryNotes'] as String?,
          deliveryCarrierId: json['DeliveryCarrierId'] as String?,
          deliveryCarrier: json['DeliveryCarrier'] as String?,
          deliveryCarrierAccount: json['DeliveryCarrierAccount'] as String?,
          deliveryShipViaId: json['DeliveryShipViaId'] as String?,
          deliveryShipVia: json['DeliveryShipVia'] as String?,
          deliveryInvoiceId: json['DeliveryInvoiceId'] as String?,
          deliveryVendorInvoiceId: json['DeliveryVendorInvoiceId'] as String?,
          deliveryEstimatedFreight:
              (json['DeliveryEstimatedFreight'] as num?)?.toDouble(),
          deliveryFreightInvoiceAmount:
              (json['DeliveryFreightInvoiceAmount'] as num?)?.toDouble(),
          deliveryChargeType: json['DeliveryChargeType'] as String?,
          deliveryFreightTrackingNumber:
              json['DeliveryFreightTrackingNumber'] as String?,
          deliveryFreightTrackingUrl:
              json['DeliveryFreightTrackingUrl'] as String?,
          deliveryDropShip: json['DeliveryDropShip'] as bool?,
          deliveryPackageCode: json['DeliveryPackageCode'] as String?,
          deliveryBillPoFreightOnOrder:
              json['DeliveryBillPoFreightOnOrder'] as bool?,
          deliveryOnlineOrderNumber:
              json['DeliveryOnlineOrderNumber'] as String?,
          deliveryOnlineOrderStatus:
              json['DeliveryOnlineOrderStatus'] as String?,
          deliveryToVenue: json['DeliveryToVenue'] as String?,
          deliveryToVenueId: json['DeliveryToVenueId'] as String?,
          deliveryDateStamp: json['DeliveryDateStamp'] as String?,
          note: json['Note'] as String?,
          printNoteOnOrder: json['PrintNoteOnOrder'] as bool?,
          termsConditionsId: json['TermsConditionsId'] as String?,
          quikReceiptTermsConditionsId:
              json['QuikReceiptTermsConditionsId'] as String?,
          quikReceiptTermsConditions:
              json['QuikReceiptTermsConditions'] as String?,
          termsConditions: json['TermsConditions'] as String?,
          containerId: json['ContainerId'] as String?,
          containerItemId: json['ContainerItemId'] as String?,
          containerDescription: json['ContainerDescription'] as String?,
          containerScannableBarCode:
              json['ContainerScannableBarCode'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesHomeControlsContractItemDetailContractItemDetail
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseContractContractDetailResponseToJson(
        WebApiModulesWarehouseContractContractDetailResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('ContractNumber', instance.contractNumber);
  writeNotNull('ContractType', instance.contractType);
  writeNotNull('ContractDate', instance.contractDate);
  writeNotNull('ContractTime', instance.contractTime);
  writeNotNull('LocationId', instance.locationId);
  writeNotNull('LocationCode', instance.locationCode);
  writeNotNull('Location', instance.location);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('CustomerId', instance.customerId);
  writeNotNull('Customer', instance.customer);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderNumber', instance.purchaseOrderNumber);
  writeNotNull('RequisitionNumber', instance.requisitionNumber);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('IsMigrated', instance.isMigrated);
  writeNotNull('NeedReconcile', instance.needReconcile);
  writeNotNull('PendingExchange', instance.pendingExchange);
  writeNotNull('ExchangeContractId', instance.exchangeContractId);
  writeNotNull('Rental', instance.rental);
  writeNotNull('Sales', instance.sales);
  writeNotNull('Exchange', instance.exchange);
  writeNotNull('InputByUserId', instance.inputByUserId);
  writeNotNull('InputByUser', instance.inputByUser);
  writeNotNull('DealInactive', instance.dealInactive);
  writeNotNull('Truck', instance.truck);
  writeNotNull('BillingDate', instance.billingDate);
  writeNotNull('BillingDateChangeReason', instance.billingDateChangeReason);
  writeNotNull(
      'LastBillingDateChangeReason', instance.lastBillingDateChangeReason);
  writeNotNull('BillingDateAdjusted', instance.billingDateAdjusted);
  writeNotNull('HasVoId', instance.hasVoId);
  writeNotNull('SessionId', instance.sessionId);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('PoOrderDescription', instance.poOrderDescription);
  writeNotNull('DeliveryId', instance.deliveryId);
  writeNotNull('DeliveryDeliveryType', instance.deliveryDeliveryType);
  writeNotNull('DeliveryRequiredDate', instance.deliveryRequiredDate);
  writeNotNull('DeliveryRequiredTime', instance.deliveryRequiredTime);
  writeNotNull('DeliveryTargetShipDate', instance.deliveryTargetShipDate);
  writeNotNull('DeliveryTargetShipTime', instance.deliveryTargetShipTime);
  writeNotNull('DeliveryDirection', instance.deliveryDirection);
  writeNotNull('DeliveryAddressType', instance.deliveryAddressType);
  writeNotNull('DeliveryFromLocation', instance.deliveryFromLocation);
  writeNotNull('DeliveryFromContact', instance.deliveryFromContact);
  writeNotNull('DeliveryFromContactPhone', instance.deliveryFromContactPhone);
  writeNotNull(
      'DeliveryFromAlternateContact', instance.deliveryFromAlternateContact);
  writeNotNull('DeliveryFromAlternateContactPhone',
      instance.deliveryFromAlternateContactPhone);
  writeNotNull('DeliveryFromAttention', instance.deliveryFromAttention);
  writeNotNull('DeliveryFromAddress1', instance.deliveryFromAddress1);
  writeNotNull('DeliveryFromAdd2ress', instance.deliveryFromAdd2ress);
  writeNotNull('DeliveryFromCity', instance.deliveryFromCity);
  writeNotNull('DeliveryFromState', instance.deliveryFromState);
  writeNotNull('DeliveryFromZipCode', instance.deliveryFromZipCode);
  writeNotNull('DeliveryFromCountry', instance.deliveryFromCountry);
  writeNotNull('DeliveryFromCountryId', instance.deliveryFromCountryId);
  writeNotNull('DeliveryFromCrossStreets', instance.deliveryFromCrossStreets);
  writeNotNull('DeliveryToLocation', instance.deliveryToLocation);
  writeNotNull('DeliveryToContact', instance.deliveryToContact);
  writeNotNull('DeliveryToContactPhone', instance.deliveryToContactPhone);
  writeNotNull(
      'DeliveryToAlternateContact', instance.deliveryToAlternateContact);
  writeNotNull('DeliveryToAlternateContactPhone',
      instance.deliveryToAlternateContactPhone);
  writeNotNull('DeliveryToAttention', instance.deliveryToAttention);
  writeNotNull('DeliveryToAddress1', instance.deliveryToAddress1);
  writeNotNull('DeliveryToAddress2', instance.deliveryToAddress2);
  writeNotNull('DeliveryToCity', instance.deliveryToCity);
  writeNotNull('DeliveryToState', instance.deliveryToState);
  writeNotNull('DeliveryToZipCode', instance.deliveryToZipCode);
  writeNotNull('DeliveryToCountryId', instance.deliveryToCountryId);
  writeNotNull('DeliveryToCountry', instance.deliveryToCountry);
  writeNotNull('DeliveryToContactFax', instance.deliveryToContactFax);
  writeNotNull('DeliveryToCrossStreets', instance.deliveryToCrossStreets);
  writeNotNull('DeliveryDeliveryNotes', instance.deliveryDeliveryNotes);
  writeNotNull('DeliveryCarrierId', instance.deliveryCarrierId);
  writeNotNull('DeliveryCarrier', instance.deliveryCarrier);
  writeNotNull('DeliveryCarrierAccount', instance.deliveryCarrierAccount);
  writeNotNull('DeliveryShipViaId', instance.deliveryShipViaId);
  writeNotNull('DeliveryShipVia', instance.deliveryShipVia);
  writeNotNull('DeliveryInvoiceId', instance.deliveryInvoiceId);
  writeNotNull('DeliveryVendorInvoiceId', instance.deliveryVendorInvoiceId);
  writeNotNull('DeliveryEstimatedFreight', instance.deliveryEstimatedFreight);
  writeNotNull(
      'DeliveryFreightInvoiceAmount', instance.deliveryFreightInvoiceAmount);
  writeNotNull('DeliveryChargeType', instance.deliveryChargeType);
  writeNotNull(
      'DeliveryFreightTrackingNumber', instance.deliveryFreightTrackingNumber);
  writeNotNull(
      'DeliveryFreightTrackingUrl', instance.deliveryFreightTrackingUrl);
  writeNotNull('DeliveryDropShip', instance.deliveryDropShip);
  writeNotNull('DeliveryPackageCode', instance.deliveryPackageCode);
  writeNotNull(
      'DeliveryBillPoFreightOnOrder', instance.deliveryBillPoFreightOnOrder);
  writeNotNull('DeliveryOnlineOrderNumber', instance.deliveryOnlineOrderNumber);
  writeNotNull('DeliveryOnlineOrderStatus', instance.deliveryOnlineOrderStatus);
  writeNotNull('DeliveryToVenue', instance.deliveryToVenue);
  writeNotNull('DeliveryToVenueId', instance.deliveryToVenueId);
  writeNotNull('DeliveryDateStamp', instance.deliveryDateStamp);
  writeNotNull('Note', instance.note);
  writeNotNull('PrintNoteOnOrder', instance.printNoteOnOrder);
  writeNotNull('TermsConditionsId', instance.termsConditionsId);
  writeNotNull(
      'QuikReceiptTermsConditionsId', instance.quikReceiptTermsConditionsId);
  writeNotNull(
      'QuikReceiptTermsConditions', instance.quikReceiptTermsConditions);
  writeNotNull('TermsConditions', instance.termsConditions);
  writeNotNull('ContainerId', instance.containerId);
  writeNotNull('ContainerItemId', instance.containerItemId);
  writeNotNull('ContainerDescription', instance.containerDescription);
  writeNotNull('ContainerScannableBarCode', instance.containerScannableBarCode);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseContractContractDocument
    _$WebApiModulesWarehouseContractContractDocumentFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseContractContractDocument(
          contractId: json['ContractId'] as String?,
          copying: json['copying'] as bool?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          uniqueId1: json['UniqueId1'] as String?,
          uniqueId2: json['UniqueId2'] as String?,
          uniqueId1Int: json['UniqueId1Int'] as int?,
          description: json['Description'] as String?,
          inputByUsersId: json['InputByUsersId'] as String?,
          attachDate: json['AttachDate'] as String?,
          attachTime: json['AttachTime'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          dateStamp: json['DateStamp'] as String?,
          extension: json['Extension'] as String?,
          documentType: json['DocumentType'] as String?,
          inputBy: json['InputBy'] as String?,
          hasImage: json['HasImage'] as bool?,
          hasFile: json['HasFile'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesWarehouseContractContractDocumentToJson(
    WebApiModulesWarehouseContractContractDocument instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('copying', instance.copying);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('UniqueId1', instance.uniqueId1);
  writeNotNull('UniqueId2', instance.uniqueId2);
  writeNotNull('UniqueId1Int', instance.uniqueId1Int);
  writeNotNull('Description', instance.description);
  writeNotNull('InputByUsersId', instance.inputByUsersId);
  writeNotNull('AttachDate', instance.attachDate);
  writeNotNull('AttachTime', instance.attachTime);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('Extension', instance.extension);
  writeNotNull('DocumentType', instance.documentType);
  writeNotNull('InputBy', instance.inputBy);
  writeNotNull('HasImage', instance.hasImage);
  writeNotNull('HasFile', instance.hasFile);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseContractContractDocumentPostRequest
    _$WebApiModulesWarehouseContractContractDocumentPostRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseContractContractDocumentPostRequest(
          contractId: json['ContractId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseContractContractDocumentPostRequestToJson(
        WebApiModulesWarehouseContractContractDocumentPostRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesWarehouseContractContractDocumentPutRequest
    _$WebApiModulesWarehouseContractContractDocumentPutRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseContractContractDocumentPutRequest(
          contractId: json['ContractId'] as String?,
          documentId: json['DocumentId'] as String?,
          documentTypeId: json['DocumentTypeId'] as String?,
          description: json['Description'] as String?,
          attachToEmail: json['AttachToEmail'] as bool?,
          inactive: json['Inactive'] as bool?,
          fileIsModified: json['FileIsModified'] as bool?,
          fileDataUrl: json['FileDataUrl'] as String?,
          filePath: json['FilePath'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseContractContractDocumentPutRequestToJson(
        WebApiModulesWarehouseContractContractDocumentPutRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('DocumentId', instance.documentId);
  writeNotNull('DocumentTypeId', instance.documentTypeId);
  writeNotNull('Description', instance.description);
  writeNotNull('AttachToEmail', instance.attachToEmail);
  writeNotNull('Inactive', instance.inactive);
  writeNotNull('FileIsModified', instance.fileIsModified);
  writeNotNull('FileDataUrl', instance.fileDataUrl);
  writeNotNull('FilePath', instance.filePath);
  return val;
}

WebApiModulesWarehouseContractHasQuikReceiptRequest
    _$WebApiModulesWarehouseContractHasQuikReceiptRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseContractHasQuikReceiptRequest(
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseContractHasQuikReceiptRequestToJson(
        WebApiModulesWarehouseContractHasQuikReceiptRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesWarehouseContractVoidContractRequest
    _$WebApiModulesWarehouseContractVoidContractRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseContractVoidContractRequest(
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseContractVoidContractRequestToJson(
    WebApiModulesWarehouseContractVoidContractRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesWarehouseExchangeExchangeContractRequest
    _$WebApiModulesWarehouseExchangeExchangeContractRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseExchangeExchangeContractRequest(
          orderId: json['OrderId'] as String?,
          dealId: json['DealId'] as String?,
          departmentId: json['DepartmentId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseExchangeExchangeContractRequestToJson(
        WebApiModulesWarehouseExchangeExchangeContractRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesWarehouseExchangeExchangeContractResponse
    _$WebApiModulesWarehouseExchangeExchangeContractResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseExchangeExchangeContractResponse(
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseExchangeExchangeContractResponseToJson(
        WebApiModulesWarehouseExchangeExchangeContractResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesWarehouseExchangeExchangeItemInResponse
    _$WebApiModulesWarehouseExchangeExchangeItemInResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseExchangeExchangeItemInResponse(
          contractId: json['ContractId'] as String?,
          inCode: json['InCode'] as String?,
          quantity: json['Quantity'] as int?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          departmentId: json['DepartmentId'] as String?,
          itemStatus: json['ItemStatus'] == null
              ? null
              : WebApiModulesWarehouseExchangeExchangeItemStatus.fromJson(
                  json['ItemStatus'] as Map<String, dynamic>),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseExchangeExchangeItemInResponseToJson(
        WebApiModulesWarehouseExchangeExchangeItemInResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('InCode', instance.inCode);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('ItemStatus', instance.itemStatus?.toJson());
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesWarehouseExchangeExchangeItemOutResponse
    _$WebApiModulesWarehouseExchangeExchangeItemOutResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseExchangeExchangeItemOutResponse(
          contractId: json['ContractId'] as String?,
          inCode: json['InCode'] as String?,
          quantity: json['Quantity'] as int?,
          outCode: json['OutCode'] as String?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          departmentId: json['DepartmentId'] as String?,
          itemStatus: json['ItemStatus'] == null
              ? null
              : WebApiModulesWarehouseExchangeExchangeItemStatus.fromJson(
                  json['ItemStatus'] as Map<String, dynamic>),
          status: json['status'] as int?,
          success: json['success'] as bool?,
          msg: json['msg'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseExchangeExchangeItemOutResponseToJson(
        WebApiModulesWarehouseExchangeExchangeItemOutResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('InCode', instance.inCode);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('OutCode', instance.outCode);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('ItemStatus', instance.itemStatus?.toJson());
  writeNotNull('status', instance.status);
  writeNotNull('success', instance.success);
  writeNotNull('msg', instance.msg);
  return val;
}

WebApiModulesWarehouseExchangeExchangeItemRequest
    _$WebApiModulesWarehouseExchangeExchangeItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseExchangeExchangeItemRequest(
          contractId: json['ContractId'] as String?,
          orderId: json['OrderId'] as String?,
          dealId: json['DealId'] as String?,
          departmentId: json['DepartmentId'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          inCode: json['InCode'] as String?,
          quantity: json['Quantity'] as int?,
          outCode: json['OutCode'] as String?,
          allowCrossICode: json['AllowCrossICode'] as bool?,
          completingPending: json['CompletingPending'] as bool?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseExchangeExchangeItemRequestToJson(
    WebApiModulesWarehouseExchangeExchangeItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('ContractId', instance.contractId);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('InCode', instance.inCode);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('OutCode', instance.outCode);
  writeNotNull('AllowCrossICode', instance.allowCrossICode);
  writeNotNull('CompletingPending', instance.completingPending);
  return val;
}

WebApiModulesWarehouseExchangeExchangeItemStatus
    _$WebApiModulesWarehouseExchangeExchangeItemStatusFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseExchangeExchangeItemStatus(
          inventoryId: json['InventoryId'] as String?,
          iCode: json['ICode'] as String?,
          availableFor: json['AvailableFor'] as String?,
          inventoryClass: json['InventoryClass'] as String?,
          description: json['Description'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouse: json['Warehouse'] as String?,
          vendorId: json['VendorId'] as String?,
          vendor: json['Vendor'] as String?,
          purchaseOrderId: json['PurchaseOrderId'] as String?,
          purchaseOrderNumber: json['PurchaseOrderNumber'] as String?,
          consignorId: json['ConsignorId'] as String?,
          consignor: json['Consignor'] as String?,
        );

Map<String, dynamic> _$WebApiModulesWarehouseExchangeExchangeItemStatusToJson(
    WebApiModulesWarehouseExchangeExchangeItemStatus instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('InventoryId', instance.inventoryId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('AvailableFor', instance.availableFor);
  writeNotNull('InventoryClass', instance.inventoryClass);
  writeNotNull('Description', instance.description);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('VendorId', instance.vendorId);
  writeNotNull('Vendor', instance.vendor);
  writeNotNull('PurchaseOrderId', instance.purchaseOrderId);
  writeNotNull('PurchaseOrderNumber', instance.purchaseOrderNumber);
  writeNotNull('ConsignorId', instance.consignorId);
  writeNotNull('Consignor', instance.consignor);
  return val;
}

WebApiModulesWarehouseOrderStatusStorageContainerGrid
    _$WebApiModulesWarehouseOrderStatusStorageContainerGridFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseOrderStatusStorageContainerGrid(
          storageContainerId: json['StorageContainerId'] as int?,
          storageContainerItemId: json['StorageContainerItemId'] as int?,
          description: json['Description'] as String?,
          pickUpLocation: json['PickUpLocation'] as String?,
          storageContainerBarcode: json['StorageContainerBarcode'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseOrderStatusStorageContainerGridToJson(
        WebApiModulesWarehouseOrderStatusStorageContainerGrid instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StorageContainerId', instance.storageContainerId);
  writeNotNull('StorageContainerItemId', instance.storageContainerItemId);
  writeNotNull('Description', instance.description);
  writeNotNull('PickUpLocation', instance.pickUpLocation);
  writeNotNull('StorageContainerBarcode', instance.storageContainerBarcode);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseOrderStatusStorageContainerItemsGrid
    _$WebApiModulesWarehouseOrderStatusStorageContainerItemsGridFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseOrderStatusStorageContainerItemsGrid(
          storageContainerItemId: json['StorageContainerItemId'] as int?,
          iCode: json['ICode'] as String?,
          stagedBarcode: json['StagedBarcode'] as String?,
          quantityOrdered: json['QuantityOrdered'] as int?,
          staged: json['Staged'] as int?,
          orderBy: json['OrderBy'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseOrderStatusStorageContainerItemsGridToJson(
        WebApiModulesWarehouseOrderStatusStorageContainerItemsGrid instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('StorageContainerItemId', instance.storageContainerItemId);
  writeNotNull('ICode', instance.iCode);
  writeNotNull('StagedBarcode', instance.stagedBarcode);
  writeNotNull('QuantityOrdered', instance.quantityOrdered);
  writeNotNull('Staged', instance.staged);
  writeNotNull('OrderBy', instance.orderBy);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehousePickListPickList
    _$WebApiModulesWarehousePickListPickListFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehousePickListPickList(
          pickListId: json['PickListId'] as String?,
          pickListNumber: json['PickListNumber'] as String?,
          pickType: json['PickType'] as String?,
          pickDate: json['PickDate'] as String?,
          pickTime: json['PickTime'] as String?,
          status: json['Status'] as String?,
          completed: json['Completed'] as bool?,
          officeLocationId: json['OfficeLocationId'] as String?,
          departmentId: json['DepartmentId'] as String?,
          department: json['Department'] as String?,
          warehouseId: json['WarehouseId'] as String?,
          warehouseCode: json['WarehouseCode'] as String?,
          warehouse: json['Warehouse'] as String?,
          deliverType: json['DeliverType'] as String?,
          deliverDate: json['DeliverDate'] as String?,
          deliverTime: json['DeliverTime'] as String?,
          orderId: json['OrderId'] as String?,
          orderNumber: json['OrderNumber'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          orderType: json['OrderType'] as String?,
          submittedDate: json['SubmittedDate'] as String?,
          submittedTime: json['SubmittedTime'] as String?,
          submittedDateTime: json['SubmittedDateTime'] as String?,
          orderedBy: json['OrderedBy'] as String?,
          orderedById: json['OrderedById'] as String?,
          requestedBy: json['RequestedBy'] as String?,
          inputDate: json['InputDate'] as String?,
          inputTime: json['InputTime'] as String?,
          inputDateTime: json['InputDateTime'] as String?,
          totalItemQuantity: json['TotalItemQuantity'] as int?,
          dealId: json['DealId'] as String?,
          deal: json['Deal'] as String?,
          agentId: json['AgentId'] as String?,
          agent: json['Agent'] as String?,
          assignedToId: json['AssignedToId'] as String?,
          assignedTo: json['AssignedTo'] as String?,
          dueDate: json['DueDate'] as String?,
          dueTime: json['DueTime'] as String?,
          note: json['Note'] as String?,
          dateStamp: json['DateStamp'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesWarehousePickListPickListToJson(
    WebApiModulesWarehousePickListPickList instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('PickListId', instance.pickListId);
  writeNotNull('PickListNumber', instance.pickListNumber);
  writeNotNull('PickType', instance.pickType);
  writeNotNull('PickDate', instance.pickDate);
  writeNotNull('PickTime', instance.pickTime);
  writeNotNull('Status', instance.status);
  writeNotNull('Completed', instance.completed);
  writeNotNull('OfficeLocationId', instance.officeLocationId);
  writeNotNull('DepartmentId', instance.departmentId);
  writeNotNull('Department', instance.department);
  writeNotNull('WarehouseId', instance.warehouseId);
  writeNotNull('WarehouseCode', instance.warehouseCode);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('DeliverType', instance.deliverType);
  writeNotNull('DeliverDate', instance.deliverDate);
  writeNotNull('DeliverTime', instance.deliverTime);
  writeNotNull('OrderId', instance.orderId);
  writeNotNull('OrderNumber', instance.orderNumber);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('OrderType', instance.orderType);
  writeNotNull('SubmittedDate', instance.submittedDate);
  writeNotNull('SubmittedTime', instance.submittedTime);
  writeNotNull('SubmittedDateTime', instance.submittedDateTime);
  writeNotNull('OrderedBy', instance.orderedBy);
  writeNotNull('OrderedById', instance.orderedById);
  writeNotNull('RequestedBy', instance.requestedBy);
  writeNotNull('InputDate', instance.inputDate);
  writeNotNull('InputTime', instance.inputTime);
  writeNotNull('InputDateTime', instance.inputDateTime);
  writeNotNull('TotalItemQuantity', instance.totalItemQuantity);
  writeNotNull('DealId', instance.dealId);
  writeNotNull('Deal', instance.deal);
  writeNotNull('AgentId', instance.agentId);
  writeNotNull('Agent', instance.agent);
  writeNotNull('AssignedToId', instance.assignedToId);
  writeNotNull('AssignedTo', instance.assignedTo);
  writeNotNull('DueDate', instance.dueDate);
  writeNotNull('DueTime', instance.dueTime);
  writeNotNull('Note', instance.note);
  writeNotNull('DateStamp', instance.dateStamp);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptGrid
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptGridFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptGrid(
          quikReceiptId: json['QuikReceiptId'] as int?,
          receiptNumber: json['ReceiptNumber'] as String?,
          receiptStatus: json['ReceiptStatus'] as String?,
          receiptAsOfDate: json['ReceiptAsOfDate'] == null
              ? null
              : FwStandardSqlServerFwDateTime.fromJson(
                  json['ReceiptAsOfDate'] as Map<String, dynamic>),
          receiptAsOfTime: json['ReceiptAsOfTime'] as String?,
          note: json['Note'] as String?,
          auditNote: json['AuditNote'] as String?,
          recordTitle: json['RecordTitle'] as String?,
          fields: (json['_Fields'] as List<dynamic>?)
                  ?.map((e) =>
                      FwStandardBusinessLogicFwBusinessLogicFieldDefinition
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
          custom: (json['_Custom'] as List<dynamic>?)
                  ?.map((e) => FwStandardDataFwCustomValue.fromJson(
                      e as Map<String, dynamic>))
                  .toList() ??
              [],
          defaultFieldAttributes:
              (json['_DefaultFieldAttributes'] as List<dynamic>?)
                      ?.map((e) => FwStandardDataFwDefaultAttribute.fromJson(
                          e as Map<String, dynamic>))
                      .toList() ??
                  [],
        );

Map<String, dynamic> _$WebApiModulesWarehouseQuikReceiptQuikReceiptGridToJson(
    WebApiModulesWarehouseQuikReceiptQuikReceiptGrid instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuikReceiptId', instance.quikReceiptId);
  writeNotNull('ReceiptNumber', instance.receiptNumber);
  writeNotNull('ReceiptStatus', instance.receiptStatus);
  writeNotNull('ReceiptAsOfDate', instance.receiptAsOfDate?.toJson());
  writeNotNull('ReceiptAsOfTime', instance.receiptAsOfTime);
  writeNotNull('Note', instance.note);
  writeNotNull('AuditNote', instance.auditNote);
  writeNotNull('RecordTitle', instance.recordTitle);
  writeNotNull('_Fields', instance.fields?.map((e) => e.toJson()).toList());
  writeNotNull('_Custom', instance.custom?.map((e) => e.toJson()).toList());
  writeNotNull('_DefaultFieldAttributes',
      instance.defaultFieldAttributes?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecord
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecordFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecord(
          quikReceiptItemId: json['QuikReceiptItemId'] as String?,
          description: json['Description'] as String?,
          quantity: json['Quantity'] as String?,
          originalValue: json['OriginalValue'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecordToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecord instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuikReceiptItemId', instance.quikReceiptItemId);
  writeNotNull('Description', instance.description);
  writeNotNull('Quantity', instance.quantity);
  writeNotNull('OriginalValue', instance.originalValue);
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptItemRequest
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptItemRequest(
          quikReceiptId: json['QuikReceiptId'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemRequestToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptItemRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuikReceiptId', instance.quikReceiptId);
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptItemResponse
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptItemResponse(
          items: (json['Items'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecord
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptItemResponseToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptItemResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Items', instance.items?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptSaveRequest
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSaveRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptSaveRequest(
          quikReceiptId: json['QuikReceiptId'] as int?,
          note: json['Note'] as String?,
          personPrintName: json['PersonPrintName'] as String?,
          quikReceiptItems: (json['QuikReceiptItems'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesWarehouseQuikReceiptQuikReceiptItemRecord
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSaveRequestToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSaveRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuikReceiptId', instance.quikReceiptId);
  writeNotNull('Note', instance.note);
  writeNotNull('PersonPrintName', instance.personPrintName);
  writeNotNull('QuikReceiptItems',
      instance.quikReceiptItems?.map((e) => e.toJson()).toList());
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptSaveResponse
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSaveResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptSaveResponse(
          status: json['Status'] as int?,
          message: json['Message'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSaveResponseToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSaveResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Status', instance.status);
  writeNotNull('Message', instance.message);
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptSessionRequest
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptSessionRequest(
          barcode: json['Barcode'] as String?,
          sessionJoinNew: json['SessionJoinNew'] as String?,
          contractId: json['ContractId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSessionRequestToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSessionRequest instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Barcode', instance.barcode);
  writeNotNull('SessionJoinNew', instance.sessionJoinNew);
  writeNotNull('ContractId', instance.contractId);
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptSessionResponse
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSessionResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptSessionResponse(
          orderId: json['OrderId'] as String?,
          orderdescription: json['Orderdescription'] as String?,
          contractId: json['ContractId'] as String?,
          inSessionNumber: json['InSessionNumber'] as int?,
          qrSessionNumber: json['QrSessionNumber'] as int?,
          quikReceiptId: json['QuikReceiptId'] as int?,
          status: json['Status'] as int?,
          message: json['Message'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSessionResponseToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSessionResponse instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('Orderdescription', instance.orderdescription);
  writeNotNull('ContractId', instance.contractId);
  writeNotNull('InSessionNumber', instance.inSessionNumber);
  writeNotNull('QrSessionNumber', instance.qrSessionNumber);
  writeNotNull('QuikReceiptId', instance.quikReceiptId);
  writeNotNull('Status', instance.status);
  writeNotNull('Message', instance.message);
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveRequest
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveRequest(
          quikReceiptId: json['QuikReceiptId'] as String?,
          signatureImage: json['SignatureImage'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveRequestToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('QuikReceiptId', instance.quikReceiptId);
  writeNotNull('SignatureImage', instance.signatureImage);
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveResponse
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveResponse(
          appImageId: json['AppImageId'] as String?,
          status: json['Status'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveResponseToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSignatureSaveResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('AppImageId', instance.appImageId);
  writeNotNull('Status', instance.status);
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecord
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecordFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecord(
          orderNo: json['OrderNo'] as String?,
          deal: json['Deal'] as String?,
          warehouse: json['Warehouse'] as String?,
          receiptNumber: json['ReceiptNumber'] as int?,
          receiptStatus: json['ReceiptStatus'] as String?,
          contractId: json['ContractId'] as String?,
          checkinSessionDate: json['CheckinSessionDate'] as String?,
          asOfDate: json['AsOfDate'] as String?,
          asOfTime: json['AsOfTime'] as String?,
          checkinSessionStatus: json['CheckinSessionStatus'] as String?,
          checkinSessionNo: json['CheckinSessionNo'] as int?,
          owner: json['Owner'] as String?,
          orderDescription: json['OrderDescription'] as String?,
          note: json['Note'] as String?,
          quikReceiptId: json['QuikReceiptId'] as int?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecordToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecord
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderNo', instance.orderNo);
  writeNotNull('Deal', instance.deal);
  writeNotNull('Warehouse', instance.warehouse);
  writeNotNull('ReceiptNumber', instance.receiptNumber);
  writeNotNull('ReceiptStatus', instance.receiptStatus);
  writeNotNull('ContractId', instance.contractId);
  writeNotNull('CheckinSessionDate', instance.checkinSessionDate);
  writeNotNull('AsOfDate', instance.asOfDate);
  writeNotNull('AsOfTime', instance.asOfTime);
  writeNotNull('CheckinSessionStatus', instance.checkinSessionStatus);
  writeNotNull('CheckinSessionNo', instance.checkinSessionNo);
  writeNotNull('Owner', instance.owner);
  writeNotNull('OrderDescription', instance.orderDescription);
  writeNotNull('Note', instance.note);
  writeNotNull('QuikReceiptId', instance.quikReceiptId);
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRequest
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRequestFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRequest(
          orderId: json['OrderId'] as String?,
          receiptsOnly: json['ReceiptsOnly'] as bool?,
          warehouseId: json['WarehouseId'] as String?,
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRequestToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRequest
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('OrderId', instance.orderId);
  writeNotNull('ReceiptsOnly', instance.receiptsOnly);
  writeNotNull('WarehouseId', instance.warehouseId);
  return val;
}

WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionsResponse
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionsResponseFromJson(
            Map<String, dynamic> json) =>
        WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionsResponse(
          sessions: (json['Sessions'] as List<dynamic>?)
                  ?.map((e) =>
                      WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionRecord
                          .fromJson(e as Map<String, dynamic>))
                  .toList() ??
              [],
        );

Map<String, dynamic>
    _$WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionsResponseToJson(
        WebApiModulesWarehouseQuikReceiptQuikReceiptSuspendedSessionsResponse
            instance) {
  final val = <String, dynamic>{};

  void writeNotNull(String key, dynamic value) {
    if (value != null) {
      val[key] = value;
    }
  }

  writeNotNull('Sessions', instance.sessions?.map((e) => e.toJson()).toList());
  return val;
}
